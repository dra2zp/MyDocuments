DIGEST d2a90978e673f29cdf5e34e06c466112
FLF.Imp
R908:920 Coq.Bool.Bool <> <> lib
R938:952 Coq.Arith.Arith <> <> lib
R970:984 Coq.Arith.EqNat <> <> lib
R1002:1016 Coq.omega.Omega <> <> lib
R1034:1047 Coq.Lists.List <> <> lib
R1065:1079 Coq.omega.Omega <> <> lib
R1128:1131 LF.Maps <> <> lib
mod 1632:1635 <> AExp
ind 1752:1755 AExp aexp
constr 1771:1774 AExp ANum
constr 1794:1798 AExp APlus
constr 1827:1832 AExp AMinus
constr 1861:1865 AExp AMult
R1781:1784 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1785:1788 LF.Imp <> aexp ind
R1778:1780 Coq.Init.Datatypes <> nat ind
R1806:1809 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1814:1817 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1818:1821 LF.Imp <> aexp ind
R1810:1813 LF.Imp <> aexp ind
R1802:1805 LF.Imp <> aexp ind
R1840:1843 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1848:1851 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1852:1855 LF.Imp <> aexp ind
R1844:1847 LF.Imp <> aexp ind
R1836:1839 LF.Imp <> aexp ind
R1873:1876 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1881:1884 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1885:1888 LF.Imp <> aexp ind
R1877:1880 LF.Imp <> aexp ind
R1869:1872 LF.Imp <> aexp ind
ind 1902:1905 AExp bexp
constr 1921:1925 AExp BTrue
constr 1938:1943 AExp BFalse
constr 1956:1958 AExp BEq
constr 1987:1989 AExp BLe
constr 2018:2021 AExp BNot
constr 2042:2045 AExp BAnd
R1929:1932 LF.Imp <> bexp ind
R1947:1950 LF.Imp <> bexp ind
R1966:1969 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1974:1977 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1978:1981 LF.Imp <> bexp ind
R1970:1973 LF.Imp AExp aexp ind
R1962:1965 LF.Imp AExp aexp ind
R1997:2000 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2005:2008 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2009:2012 LF.Imp <> bexp ind
R2001:2004 LF.Imp AExp aexp ind
R1993:1996 LF.Imp AExp aexp ind
R2029:2032 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2033:2036 LF.Imp <> bexp ind
R2025:2028 LF.Imp <> bexp ind
R2053:2056 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2061:2064 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2065:2068 LF.Imp <> bexp ind
R2057:2060 LF.Imp <> bexp ind
R2049:2052 LF.Imp <> bexp ind
def 4735:4739 AExp aeval
R4746:4749 LF.Imp AExp aexp ind
R4754:4756 Coq.Init.Datatypes <> nat ind
R4769:4769 LF.Imp <> a var
R4780:4783 LF.Imp AExp ANum constr
R4796:4800 LF.Imp AExp APlus constr
R4811:4811 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4820:4824 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4833:4833 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4812:4816 LF.Imp <> aeval def
R4825:4829 LF.Imp <> aeval def
R4839:4844 LF.Imp AExp AMinus constr
R4856:4856 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4865:4869 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4878:4878 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4857:4861 LF.Imp <> aeval def
R4870:4874 LF.Imp <> aeval def
R4884:4888 LF.Imp AExp AMult constr
R4899:4899 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4908:4912 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4921:4921 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4900:4904 LF.Imp <> aeval def
R4913:4917 LF.Imp <> aeval def
def 4939:4949 AExp test_aeval1
R4985:4987 Coq.Init.Logic <> :type_scope:x_'='_x not
R4954:4958 LF.Imp AExp aeval def
R4961:4965 LF.Imp AExp APlus constr
R4977:4980 LF.Imp AExp ANum constr
R4968:4971 LF.Imp AExp ANum constr
def 5095:5099 AExp beval
R5106:5109 LF.Imp AExp bexp ind
R5114:5117 Coq.Init.Datatypes <> bool ind
R5130:5130 LF.Imp <> b var
R5141:5145 LF.Imp AExp BTrue constr
R5156:5159 Coq.Init.Datatypes <> true constr
R5165:5170 LF.Imp AExp BFalse constr
R5180:5184 Coq.Init.Datatypes <> false constr
R5190:5192 LF.Imp AExp BEq constr
R5205:5211 Coq.Arith.EqNat <> beq_nat syndef
R5225:5229 LF.Imp AExp aeval def
R5214:5218 LF.Imp AExp aeval def
R5239:5241 LF.Imp AExp BLe constr
R5254:5256 Coq.Arith.Compare_dec <> leb syndef
R5270:5274 LF.Imp AExp aeval def
R5259:5263 LF.Imp AExp aeval def
R5284:5287 LF.Imp AExp BNot constr
R5299:5302 Coq.Init.Datatypes <> negb def
R5305:5309 LF.Imp <> beval def
R5319:5322 LF.Imp AExp BAnd constr
R5334:5337 Coq.Init.Datatypes <> andb def
R5351:5355 LF.Imp <> beval def
R5340:5344 LF.Imp <> beval def
def 5764:5777 AExp optimize_0plus
R5782:5785 LF.Imp AExp aexp ind
R5790:5793 LF.Imp AExp aexp ind
R5806:5806 LF.Imp <> a var
R5817:5820 LF.Imp AExp ANum constr
R5833:5836 LF.Imp AExp ANum constr
R5844:5848 LF.Imp AExp APlus constr
R5851:5854 LF.Imp AExp ANum constr
R5871:5884 LF.Imp <> optimize_0plus def
R5893:5897 LF.Imp AExp APlus constr
R5914:5918 LF.Imp AExp APlus constr
R5941:5954 LF.Imp <> optimize_0plus def
R5921:5934 LF.Imp <> optimize_0plus def
R5964:5969 LF.Imp AExp AMinus constr
R5986:5991 LF.Imp AExp AMinus constr
R6014:6027 LF.Imp <> optimize_0plus def
R5994:6007 LF.Imp <> optimize_0plus def
R6037:6041 LF.Imp AExp AMult constr
R6058:6062 LF.Imp AExp AMult constr
R6085:6098 LF.Imp <> optimize_0plus def
R6065:6078 LF.Imp <> optimize_0plus def
def 6251:6269 AExp test_optimize_0plus
R6403:6407 Coq.Init.Logic <> :type_scope:x_'='_x not
R6274:6287 LF.Imp AExp optimize_0plus def
R6290:6294 LF.Imp AExp APlus constr
R6330:6334 LF.Imp AExp APlus constr
R6377:6381 LF.Imp AExp APlus constr
R6393:6396 LF.Imp AExp ANum constr
R6384:6387 LF.Imp AExp ANum constr
R6337:6340 LF.Imp AExp ANum constr
R6297:6300 LF.Imp AExp ANum constr
R6408:6412 LF.Imp AExp APlus constr
R6424:6427 LF.Imp AExp ANum constr
R6415:6418 LF.Imp AExp ANum constr
prf 6647:6666 AExp optimize_0plus_sound
R6705:6707 Coq.Init.Logic <> :type_scope:x_'='_x not
R6681:6685 LF.Imp AExp aeval def
R6688:6701 LF.Imp AExp optimize_0plus def
R6703:6703 LF.Imp <> a var
R6708:6712 LF.Imp AExp aeval def
R6714:6714 LF.Imp <> a var
prf 8839:8844 AExp silly1
R8867:8869 Coq.Init.Logic <> :type_scope:x_'='_x not
R8859:8863 LF.Imp AExp aeval def
R8865:8866 LF.Imp <> ae var
R8870:8874 LF.Imp AExp aeval def
R8876:8877 LF.Imp <> ae var
prf 8953:8958 AExp silly2
R8982:8985 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8986:8986 LF.Imp <> P var
R8981:8981 LF.Imp <> P var
prf 9725:9727 AExp foo
R9748:9750 Coq.Init.Logic <> :type_scope:x_'='_x not
R9741:9743 Coq.Arith.Compare_dec <> leb syndef
R9747:9747 LF.Imp <> n var
R9751:9754 Coq.Init.Datatypes <> true constr
prf 10001:10004 AExp foo'
R10025:10027 Coq.Init.Logic <> :type_scope:x_'='_x not
R10018:10020 Coq.Arith.Compare_dec <> leb syndef
R10024:10024 LF.Imp <> n var
R10028:10031 Coq.Init.Datatypes <> true constr
prf 10368:10388 AExp optimize_0plus_sound'
R10427:10429 Coq.Init.Logic <> :type_scope:x_'='_x not
R10403:10407 LF.Imp AExp aeval def
R10410:10423 LF.Imp AExp optimize_0plus def
R10425:10425 LF.Imp <> a var
R10430:10434 LF.Imp AExp aeval def
R10436:10436 LF.Imp <> a var
prf 13254:13275 AExp optimize_0plus_sound''
R13314:13316 Coq.Init.Logic <> :type_scope:x_'='_x not
R13290:13294 LF.Imp AExp aeval def
R13297:13310 LF.Imp AExp optimize_0plus def
R13312:13312 LF.Imp <> a var
R13317:13321 LF.Imp AExp aeval def
R13323:13323 LF.Imp <> a var
prf 14684:14687 AExp In10
R14691:14692 Coq.Lists.List <> In def
R14697:14697 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14699:14699 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14701:14701 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14703:14703 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14705:14705 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14707:14707 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14709:14709 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14711:14711 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14713:14713 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14715:14715 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14718:14718 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
prf 14983:14987 AExp In10'
R14991:14992 Coq.Lists.List <> In def
R14997:14997 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14999:14999 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15001:15001 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15003:15003 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15005:15005 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15007:15007 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15009:15009 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15011:15011 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15013:15013 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15015:15015 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15018:15018 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 16220:16235 AExp optimize_0plus_b
R16242:16245 LF.Imp AExp bexp ind
R16250:16253 LF.Imp AExp bexp ind
prf 16331:16352 AExp optimize_0plus_b_sound
R16394:16396 Coq.Init.Logic <> :type_scope:x_'='_x not
R16368:16372 LF.Imp AExp beval def
R16375:16390 LF.Imp AExp optimize_0plus_b prfax
R16392:16392 LF.Imp <> b var
R16397:16401 LF.Imp AExp beval def
R16403:16403 LF.Imp <> b var
def 19320:19343 AExp silly_presburger_example
R19396:19401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19403:19406 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19402:19402 LF.Imp <> m var
R19407:19407 LF.Imp <> p var
R19379:19382 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19370:19373 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19366:19368 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19365:19365 LF.Imp <> m var
R19369:19369 LF.Imp <> n var
R19375:19377 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19374:19374 LF.Imp <> n var
R19378:19378 LF.Imp <> o var
R19388:19390 Coq.Init.Logic <> :type_scope:x_'='_x not
R19384:19386 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19383:19383 LF.Imp <> o var
R19392:19394 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19391:19391 LF.Imp <> p var
mod 21308:21323 <> AExp.aevalR_first_try
ind 21337:21342 AExp.aevalR_first_try aevalR
constr 21373:21378 AExp.aevalR_first_try E_ANum
constr 21428:21434 AExp.aevalR_first_try E_APlus
constr 21558:21565 AExp.aevalR_first_try E_AMinus
constr 21689:21695 AExp.aevalR_first_try E_AMult
R21350:21353 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21357:21360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21354:21356 Coq.Init.Datatypes <> nat ind
R21346:21349 LF.Imp AExp aexp ind
R21394:21396 Coq.Init.Datatypes <> nat ind
R21406:21411 LF.Imp <> aevalR ind
R21422:21422 LF.Imp <> n var
R21414:21417 LF.Imp AExp ANum constr
R21419:21419 LF.Imp <> n var
R21453:21456 LF.Imp AExp aexp ind
R21467:21469 Coq.Init.Datatypes <> nat ind
R21491:21500 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21513:21522 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21523:21528 LF.Imp <> aevalR ind
R21547:21549 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21545:21546 LF.Imp <> n1 var
R21550:21551 LF.Imp <> n2 var
R21531:21535 LF.Imp AExp APlus constr
R21540:21541 LF.Imp <> e2 var
R21537:21538 LF.Imp <> e1 var
R21501:21506 LF.Imp <> aevalR ind
R21511:21512 LF.Imp <> n2 var
R21508:21509 LF.Imp <> e2 var
R21479:21484 LF.Imp <> aevalR ind
R21489:21490 LF.Imp <> n1 var
R21486:21487 LF.Imp <> e1 var
R21583:21586 LF.Imp AExp aexp ind
R21597:21599 Coq.Init.Datatypes <> nat ind
R21621:21630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21643:21652 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21653:21658 LF.Imp <> aevalR ind
R21678:21680 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R21676:21677 LF.Imp <> n1 var
R21681:21682 LF.Imp <> n2 var
R21661:21666 LF.Imp AExp AMinus constr
R21671:21672 LF.Imp <> e2 var
R21668:21669 LF.Imp <> e1 var
R21631:21636 LF.Imp <> aevalR ind
R21641:21642 LF.Imp <> n2 var
R21638:21639 LF.Imp <> e2 var
R21609:21614 LF.Imp <> aevalR ind
R21619:21620 LF.Imp <> n1 var
R21616:21617 LF.Imp <> e1 var
R21714:21717 LF.Imp AExp aexp ind
R21728:21730 Coq.Init.Datatypes <> nat ind
R21752:21761 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21774:21783 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21784:21789 LF.Imp <> aevalR ind
R21808:21810 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R21806:21807 LF.Imp <> n1 var
R21811:21812 LF.Imp <> n2 var
R21792:21796 LF.Imp AExp AMult constr
R21801:21802 LF.Imp <> e2 var
R21798:21799 LF.Imp <> e1 var
R21762:21767 LF.Imp <> aevalR ind
R21772:21773 LF.Imp <> n2 var
R21769:21770 LF.Imp <> e2 var
R21740:21745 LF.Imp <> aevalR ind
R21750:21751 LF.Imp <> n1 var
R21747:21748 LF.Imp <> e1 var
R22013:22018 LF.Imp AExp.aevalR_first_try aevalR ind
not 21989:21989 AExp.aevalR_first_try :type_scope:x_'\\'_x
R22099:22114 LF.Imp AExp.aevalR_first_try <> mod
ind 22645:22650 AExp aevalR
constr 22681:22686 AExp E_ANum
constr 22730:22736 AExp E_APlus
constr 22841:22848 AExp E_AMinus
constr 22954:22960 AExp E_AMult
R22658:22661 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22665:22668 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22662:22664 Coq.Init.Datatypes <> nat ind
R22654:22657 LF.Imp AExp aexp ind
R23086:23091 LF.Imp <> aevalR var
R22700:22702 Coq.Init.Datatypes <> nat ind
R22712:22712 LF.Imp AExp :type_scope:x_'\\'_x not
R22719:22723 LF.Imp AExp :type_scope:x_'\\'_x not
R22713:22716 LF.Imp AExp ANum constr
R22718:22718 LF.Imp <> n var
R22724:22724 LF.Imp <> n var
R22755:22758 LF.Imp AExp aexp ind
R22770:22772 Coq.Init.Datatypes <> nat ind
R22782:22782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22791:22795 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22796:22796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22805:22809 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22810:22810 LF.Imp AExp :type_scope:x_'\\'_x not
R22822:22827 LF.Imp AExp :type_scope:x_'\\'_x not
R22835:22835 LF.Imp AExp :type_scope:x_'\\'_x not
R22811:22815 LF.Imp AExp APlus constr
R22820:22821 LF.Imp <> e2 var
R22817:22818 LF.Imp <> e1 var
R22830:22832 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22828:22829 LF.Imp <> n1 var
R22833:22834 LF.Imp <> n2 var
R22799:22802 LF.Imp AExp :type_scope:x_'\\'_x not
R22797:22798 LF.Imp <> e2 var
R22803:22804 LF.Imp <> n2 var
R22785:22788 LF.Imp AExp :type_scope:x_'\\'_x not
R22783:22784 LF.Imp <> e1 var
R22789:22790 LF.Imp <> n1 var
R22867:22870 LF.Imp AExp aexp ind
R22882:22884 Coq.Init.Datatypes <> nat ind
R22894:22894 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22903:22907 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22908:22908 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22917:22921 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22922:22922 LF.Imp AExp :type_scope:x_'\\'_x not
R22935:22940 LF.Imp AExp :type_scope:x_'\\'_x not
R22948:22948 LF.Imp AExp :type_scope:x_'\\'_x not
R22923:22928 LF.Imp AExp AMinus constr
R22933:22934 LF.Imp <> e2 var
R22930:22931 LF.Imp <> e1 var
R22943:22945 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R22941:22942 LF.Imp <> n1 var
R22946:22947 LF.Imp <> n2 var
R22911:22914 LF.Imp AExp :type_scope:x_'\\'_x not
R22909:22910 LF.Imp <> e2 var
R22915:22916 LF.Imp <> n2 var
R22897:22900 LF.Imp AExp :type_scope:x_'\\'_x not
R22895:22896 LF.Imp <> e1 var
R22901:22902 LF.Imp <> n1 var
R22980:22983 LF.Imp AExp aexp ind
R22995:22997 Coq.Init.Datatypes <> nat ind
R23007:23007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23016:23020 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23021:23021 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23030:23034 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23035:23035 LF.Imp AExp :type_scope:x_'\\'_x not
R23047:23052 LF.Imp AExp :type_scope:x_'\\'_x not
R23060:23060 LF.Imp AExp :type_scope:x_'\\'_x not
R23036:23040 LF.Imp AExp AMult constr
R23045:23046 LF.Imp <> e2 var
R23042:23043 LF.Imp <> e1 var
R23055:23057 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23053:23054 LF.Imp <> n1 var
R23058:23059 LF.Imp <> n2 var
R23024:23027 LF.Imp AExp :type_scope:x_'\\'_x not
R23022:23023 LF.Imp <> e2 var
R23028:23029 LF.Imp <> n2 var
R23010:23013 LF.Imp AExp :type_scope:x_'\\'_x not
R23008:23009 LF.Imp <> e1 var
R23014:23015 LF.Imp <> n1 var
R23086:23091 LF.Imp AExp aevalR ind
not 23071:23071 AExp :type_scope:x_'\\'_x
prf 25963:25978 AExp aeval_iff_aevalR
R25996:25996 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26003:26008 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R25998:26001 LF.Imp AExp :type_scope:x_'\\'_x not
R25997:25997 LF.Imp <> a var
R26002:26002 LF.Imp <> n var
R26016:26018 Coq.Init.Logic <> :type_scope:x_'='_x not
R26009:26013 LF.Imp AExp aeval def
R26015:26015 LF.Imp <> a var
R26019:26019 LF.Imp <> n var
R26463:26468 LF.Imp AExp E_ANum constr
R26463:26468 LF.Imp AExp E_ANum constr
R26499:26505 LF.Imp AExp E_APlus constr
R26499:26505 LF.Imp AExp E_APlus constr
R26599:26606 LF.Imp AExp E_AMinus constr
R26599:26606 LF.Imp AExp E_AMinus constr
R26699:26705 LF.Imp AExp E_AMult constr
R26699:26705 LF.Imp AExp E_AMult constr
prf 26871:26887 AExp aeval_iff_aevalR'
R26905:26905 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26912:26917 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26907:26910 LF.Imp AExp :type_scope:x_'\\'_x not
R26906:26906 LF.Imp <> a var
R26911:26911 LF.Imp <> n var
R26925:26927 Coq.Init.Logic <> :type_scope:x_'='_x not
R26918:26922 LF.Imp AExp aeval def
R26924:26924 LF.Imp <> a var
R26928:26928 LF.Imp <> n var
ind 27345:27350 AExp bevalR
R27357:27360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27365:27368 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27361:27364 Coq.Init.Datatypes <> bool ind
R27353:27356 LF.Imp AExp bexp ind
prf 27405:27420 AExp beval_iff_bevalR
R27450:27454 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27439:27444 LF.Imp AExp bevalR ind
R27448:27449 LF.Imp <> bv var
R27446:27446 LF.Imp <> b var
R27462:27464 Coq.Init.Logic <> :type_scope:x_'='_x not
R27455:27459 LF.Imp AExp beval def
R27461:27461 LF.Imp <> b var
R27465:27466 LF.Imp <> bv var
R27522:27525 LF.Imp AExp <> mod
mod 27988:28002 <> aevalR_division
ind 28141:28144 aevalR_division aexp
constr 28160:28163 aevalR_division ANum
constr 28183:28187 aevalR_division APlus
constr 28216:28221 aevalR_division AMinus
constr 28250:28254 aevalR_division AMult
constr 28283:28286 aevalR_division ADiv
R28170:28173 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28174:28177 LF.Imp <> aexp ind
R28167:28169 Coq.Init.Datatypes <> nat ind
R28195:28198 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28203:28206 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28207:28210 LF.Imp <> aexp ind
R28199:28202 LF.Imp <> aexp ind
R28191:28194 LF.Imp <> aexp ind
R28229:28232 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28237:28240 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28241:28244 LF.Imp <> aexp ind
R28233:28236 LF.Imp <> aexp ind
R28225:28228 LF.Imp <> aexp ind
R28262:28265 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28270:28273 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28274:28277 LF.Imp <> aexp ind
R28266:28269 LF.Imp <> aexp ind
R28258:28261 LF.Imp <> aexp ind
R28294:28297 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28302:28305 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28306:28309 LF.Imp <> aexp ind
R28298:28301 LF.Imp <> aexp ind
R28290:28293 LF.Imp <> aexp ind
ind 28649:28654 aevalR_division aevalR
constr 28685:28690 aevalR_division E_ANum
constr 28734:28740 aevalR_division E_APlus
constr 28845:28852 aevalR_division E_AMinus
constr 28958:28964 aevalR_division E_AMult
constr 29070:29075 aevalR_division E_ADiv
R28662:28665 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28669:28672 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28666:28668 Coq.Init.Datatypes <> nat ind
R28658:28661 LF.Imp aevalR_division aexp ind
R29232:29237 LF.Imp <> aevalR var
R28704:28706 Coq.Init.Datatypes <> nat ind
R28716:28716 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R28723:28727 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R28717:28720 LF.Imp aevalR_division ANum constr
R28722:28722 LF.Imp <> n var
R28728:28728 LF.Imp <> n var
R28759:28762 LF.Imp aevalR_division aexp ind
R28774:28776 Coq.Init.Datatypes <> nat ind
R28786:28786 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28795:28799 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28800:28800 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28809:28813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28814:28814 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R28826:28831 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R28839:28839 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R28815:28819 LF.Imp aevalR_division APlus constr
R28824:28825 LF.Imp <> a2 var
R28821:28822 LF.Imp <> a1 var
R28834:28836 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28832:28833 LF.Imp <> n1 var
R28837:28838 LF.Imp <> n2 var
R28803:28806 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R28801:28802 LF.Imp <> a2 var
R28807:28808 LF.Imp <> n2 var
R28789:28792 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R28787:28788 LF.Imp <> a1 var
R28793:28794 LF.Imp <> n1 var
R28871:28874 LF.Imp aevalR_division aexp ind
R28886:28888 Coq.Init.Datatypes <> nat ind
R28898:28898 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28907:28911 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28912:28912 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28921:28925 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28926:28926 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R28939:28944 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R28952:28952 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R28927:28932 LF.Imp aevalR_division AMinus constr
R28937:28938 LF.Imp <> a2 var
R28934:28935 LF.Imp <> a1 var
R28947:28949 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R28945:28946 LF.Imp <> n1 var
R28950:28951 LF.Imp <> n2 var
R28915:28918 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R28913:28914 LF.Imp <> a2 var
R28919:28920 LF.Imp <> n2 var
R28901:28904 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R28899:28900 LF.Imp <> a1 var
R28905:28906 LF.Imp <> n1 var
R28984:28987 LF.Imp aevalR_division aexp ind
R28999:29001 Coq.Init.Datatypes <> nat ind
R29011:29011 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29020:29024 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29025:29025 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29034:29038 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29039:29039 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R29051:29056 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R29064:29064 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R29040:29044 LF.Imp aevalR_division AMult constr
R29049:29050 LF.Imp <> a2 var
R29046:29047 LF.Imp <> a1 var
R29059:29061 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29057:29058 LF.Imp <> n1 var
R29062:29063 LF.Imp <> n2 var
R29028:29031 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R29026:29027 LF.Imp <> a2 var
R29032:29033 LF.Imp <> n2 var
R29014:29017 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R29012:29013 LF.Imp <> a1 var
R29018:29019 LF.Imp <> n1 var
R29095:29098 LF.Imp aevalR_division aexp ind
R29112:29114 Coq.Init.Datatypes <> nat ind
R29124:29124 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29133:29137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29138:29138 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29147:29151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29152:29152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29159:29169 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29170:29170 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29186:29190 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29191:29191 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R29202:29206 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R29192:29195 LF.Imp aevalR_division ADiv constr
R29200:29201 LF.Imp <> a2 var
R29197:29198 LF.Imp <> a1 var
R29207:29208 LF.Imp <> n3 var
R29181:29183 Coq.Init.Logic <> :type_scope:x_'='_x not
R29171:29174 Coq.Init.Peano <> mult syndef
R29179:29180 LF.Imp <> n3 var
R29176:29177 LF.Imp <> n2 var
R29184:29185 LF.Imp <> n1 var
R29155:29157 Coq.Init.Peano <> :nat_scope:x_'>'_x not
R29153:29154 LF.Imp <> n2 var
R29141:29144 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R29139:29140 LF.Imp <> a2 var
R29145:29146 LF.Imp <> n2 var
R29127:29130 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R29125:29126 LF.Imp <> a1 var
R29131:29132 LF.Imp <> n1 var
R29232:29237 LF.Imp aevalR_division aevalR ind
not 29217:29217 aevalR_division :type_scope:x_'\\'_x
R29263:29277 LF.Imp aevalR_division <> mod
mod 29288:29302 <> aevalR_extended
ind 29770:29773 aevalR_extended aexp
constr 29789:29792 aevalR_extended AAny
constr 29839:29842 aevalR_extended ANum
constr 29862:29866 aevalR_extended APlus
constr 29895:29900 aevalR_extended AMinus
constr 29929:29933 aevalR_extended AMult
R29797:29800 LF.Imp <> aexp ind
R29849:29852 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29853:29856 LF.Imp <> aexp ind
R29846:29848 Coq.Init.Datatypes <> nat ind
R29874:29877 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29882:29885 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29886:29889 LF.Imp <> aexp ind
R29878:29881 LF.Imp <> aexp ind
R29870:29873 LF.Imp <> aexp ind
R29908:29911 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29916:29919 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29920:29923 LF.Imp <> aexp ind
R29912:29915 LF.Imp <> aexp ind
R29904:29907 LF.Imp <> aexp ind
R29941:29944 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29949:29952 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29953:29956 LF.Imp <> aexp ind
R29945:29948 LF.Imp <> aexp ind
R29937:29940 LF.Imp <> aexp ind
ind 30150:30155 aevalR_extended aevalR
constr 30186:30190 aevalR_extended E_Any
constr 30261:30266 aevalR_extended E_ANum
constr 30310:30316 aevalR_extended E_APlus
constr 30421:30428 aevalR_extended E_AMinus
constr 30534:30540 aevalR_extended E_AMult
R30163:30166 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30170:30173 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30167:30169 Coq.Init.Datatypes <> nat ind
R30159:30162 LF.Imp aevalR_extended aexp ind
R30664:30669 LF.Imp <> aevalR var
R30204:30206 Coq.Init.Datatypes <> nat ind
R30220:30223 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30216:30219 LF.Imp aevalR_extended AAny constr
R30224:30224 LF.Imp <> n var
R30280:30282 Coq.Init.Datatypes <> nat ind
R30292:30292 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30299:30303 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30293:30296 LF.Imp aevalR_extended ANum constr
R30298:30298 LF.Imp <> n var
R30304:30304 LF.Imp <> n var
R30335:30338 LF.Imp aevalR_extended aexp ind
R30350:30352 Coq.Init.Datatypes <> nat ind
R30362:30362 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30371:30375 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30376:30376 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30385:30389 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30390:30390 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30402:30407 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30415:30415 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30391:30395 LF.Imp aevalR_extended APlus constr
R30400:30401 LF.Imp <> a2 var
R30397:30398 LF.Imp <> a1 var
R30410:30412 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30408:30409 LF.Imp <> n1 var
R30413:30414 LF.Imp <> n2 var
R30379:30382 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30377:30378 LF.Imp <> a2 var
R30383:30384 LF.Imp <> n2 var
R30365:30368 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30363:30364 LF.Imp <> a1 var
R30369:30370 LF.Imp <> n1 var
R30447:30450 LF.Imp aevalR_extended aexp ind
R30462:30464 Coq.Init.Datatypes <> nat ind
R30474:30474 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30483:30487 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30488:30488 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30497:30501 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30502:30502 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30515:30520 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30528:30528 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30503:30508 LF.Imp aevalR_extended AMinus constr
R30513:30514 LF.Imp <> a2 var
R30510:30511 LF.Imp <> a1 var
R30523:30525 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R30521:30522 LF.Imp <> n1 var
R30526:30527 LF.Imp <> n2 var
R30491:30494 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30489:30490 LF.Imp <> a2 var
R30495:30496 LF.Imp <> n2 var
R30477:30480 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30475:30476 LF.Imp <> a1 var
R30481:30482 LF.Imp <> n1 var
R30560:30563 LF.Imp aevalR_extended aexp ind
R30575:30577 Coq.Init.Datatypes <> nat ind
R30587:30587 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30596:30600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30601:30601 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30610:30614 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30615:30615 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30627:30632 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30640:30640 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30616:30620 LF.Imp aevalR_extended AMult constr
R30625:30626 LF.Imp <> a2 var
R30622:30623 LF.Imp <> a1 var
R30635:30637 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R30633:30634 LF.Imp <> n1 var
R30638:30639 LF.Imp <> n2 var
R30604:30607 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30602:30603 LF.Imp <> a2 var
R30608:30609 LF.Imp <> n2 var
R30590:30593 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R30588:30589 LF.Imp <> a1 var
R30594:30595 LF.Imp <> n1 var
R30664:30669 LF.Imp aevalR_extended aevalR ind
not 30649:30649 aevalR_extended :type_scope:x_'\\'_x
R30695:30709 LF.Imp aevalR_extended <> mod
def 33478:33482 <> state
R33487:33495 LF.Maps <> total_map def
R33497:33499 Coq.Init.Datatypes <> nat ind
def 33514:33524 <> empty_state
R33528:33532 LF.Imp <> state def
R33539:33545 LF.Maps <> t_empty def
ind 33768:33771 <> aexp
constr 33787:33790 <> ANum
constr 33810:33812 <> AId
constr 33863:33867 <> APlus
constr 33896:33901 <> AMinus
constr 33930:33934 <> AMult
R33797:33800 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33801:33804 LF.Imp <> aexp ind
R33794:33796 Coq.Init.Datatypes <> nat ind
R33818:33821 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33822:33825 LF.Imp <> aexp ind
R33816:33817 LF.Maps <> id ind
R33875:33878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33883:33886 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33887:33890 LF.Imp <> aexp ind
R33879:33882 LF.Imp <> aexp ind
R33871:33874 LF.Imp <> aexp ind
R33909:33912 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33917:33920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33921:33924 LF.Imp <> aexp ind
R33913:33916 LF.Imp <> aexp ind
R33905:33908 LF.Imp <> aexp ind
R33942:33945 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33950:33953 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33954:33957 LF.Imp <> aexp ind
R33946:33949 LF.Imp <> aexp ind
R33938:33941 LF.Imp <> aexp ind
def 34074:34074 <> W
R34078:34079 LF.Maps <> id ind
R34084:34085 LF.Maps <> Id constr
def 34103:34103 <> X
R34107:34108 LF.Maps <> id ind
R34113:34114 LF.Maps <> Id constr
def 34132:34132 <> Y
R34136:34137 LF.Maps <> id ind
R34142:34143 LF.Maps <> Id constr
def 34161:34161 <> Z
R34165:34166 LF.Maps <> id ind
R34171:34172 LF.Maps <> Id constr
ind 34550:34553 <> bexp
constr 34569:34573 <> BTrue
constr 34586:34591 <> BFalse
constr 34604:34606 <> BEq
constr 34635:34637 <> BLe
constr 34666:34669 <> BNot
constr 34690:34693 <> BAnd
R34577:34580 LF.Imp <> bexp ind
R34595:34598 LF.Imp <> bexp ind
R34614:34617 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34622:34625 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34626:34629 LF.Imp <> bexp ind
R34618:34621 LF.Imp <> aexp ind
R34610:34613 LF.Imp <> aexp ind
R34645:34648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34653:34656 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34657:34660 LF.Imp <> bexp ind
R34649:34652 LF.Imp <> aexp ind
R34641:34644 LF.Imp <> aexp ind
R34677:34680 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34681:34684 LF.Imp <> bexp ind
R34673:34676 LF.Imp <> bexp ind
R34701:34704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34709:34712 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34713:34716 LF.Imp <> bexp ind
R34705:34708 LF.Imp <> bexp ind
R34697:34700 LF.Imp <> bexp ind
def 34962:34966 <> aeval
R34974:34978 LF.Imp <> state def
R34986:34989 LF.Imp <> aexp ind
R34994:34996 Coq.Init.Datatypes <> nat ind
R35009:35009 LF.Imp <> a var
R35020:35023 LF.Imp <> ANum constr
R35036:35038 LF.Imp <> AId constr
R35045:35046 LF.Imp <> st var
R35102:35106 LF.Imp <> APlus constr
R35117:35117 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35129:35133 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35145:35145 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35118:35122 LF.Imp <> aeval def
R35124:35125 LF.Imp <> st var
R35134:35138 LF.Imp <> aeval def
R35140:35141 LF.Imp <> st var
R35151:35156 LF.Imp <> AMinus constr
R35168:35168 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R35180:35184 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R35196:35196 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R35169:35173 LF.Imp <> aeval def
R35175:35176 LF.Imp <> st var
R35185:35189 LF.Imp <> aeval def
R35191:35192 LF.Imp <> st var
R35202:35206 LF.Imp <> AMult constr
R35217:35217 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R35229:35233 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R35245:35245 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R35218:35222 LF.Imp <> aeval def
R35224:35225 LF.Imp <> st var
R35234:35238 LF.Imp <> aeval def
R35240:35241 LF.Imp <> st var
def 35264:35268 <> beval
R35276:35280 LF.Imp <> state def
R35288:35291 LF.Imp <> bexp ind
R35296:35299 Coq.Init.Datatypes <> bool ind
R35312:35312 LF.Imp <> b var
R35323:35327 LF.Imp <> BTrue constr
R35338:35341 Coq.Init.Datatypes <> true constr
R35347:35352 LF.Imp <> BFalse constr
R35362:35366 Coq.Init.Datatypes <> false constr
R35372:35374 LF.Imp <> BEq constr
R35387:35393 Coq.Arith.EqNat <> beq_nat syndef
R35410:35414 LF.Imp <> aeval def
R35416:35417 LF.Imp <> st var
R35396:35400 LF.Imp <> aeval def
R35402:35403 LF.Imp <> st var
R35427:35429 LF.Imp <> BLe constr
R35442:35444 Coq.Arith.Compare_dec <> leb syndef
R35461:35465 LF.Imp <> aeval def
R35467:35468 LF.Imp <> st var
R35447:35451 LF.Imp <> aeval def
R35453:35454 LF.Imp <> st var
R35478:35481 LF.Imp <> BNot constr
R35493:35496 Coq.Init.Datatypes <> negb def
R35499:35503 LF.Imp <> beval def
R35505:35506 LF.Imp <> st var
R35516:35519 LF.Imp <> BAnd constr
R35531:35534 Coq.Init.Datatypes <> andb def
R35551:35555 LF.Imp <> beval def
R35557:35558 LF.Imp <> st var
R35537:35541 LF.Imp <> beval def
R35543:35544 LF.Imp <> st var
def 35580:35584 <> aexp1
R35672:35676 Coq.Init.Logic <> :type_scope:x_'='_x not
R35590:35594 LF.Imp <> aeval def
R35632:35636 LF.Imp <> APlus constr
R35648:35652 LF.Imp <> AMult constr
R35663:35666 LF.Imp <> ANum constr
R35655:35657 LF.Imp <> AId constr
R35659:35659 LF.Imp <> X def
R35639:35642 LF.Imp <> ANum constr
R35597:35604 LF.Maps <> t_update def
R35618:35618 LF.Imp <> X def
R35606:35616 LF.Imp <> empty_state def
def 35715:35719 <> bexp1
R35808:35812 Coq.Init.Logic <> :type_scope:x_'='_x not
R35725:35729 LF.Imp <> beval def
R35767:35770 LF.Imp <> BAnd constr
R35779:35782 LF.Imp <> BNot constr
R35785:35787 LF.Imp <> BLe constr
R35798:35801 LF.Imp <> ANum constr
R35790:35792 LF.Imp <> AId constr
R35794:35794 LF.Imp <> X def
R35772:35776 LF.Imp <> BTrue constr
R35732:35739 LF.Maps <> t_update def
R35753:35753 LF.Imp <> X def
R35741:35751 LF.Imp <> empty_state def
R35813:35816 Coq.Init.Datatypes <> true constr
ind 36903:36905 <> com
constr 36921:36925 <> CSkip
constr 36937:36940 <> CAss
constr 36966:36969 <> CSeq
constr 36995:36997 <> CIf
constr 37031:37036 <> CWhile
R36929:36931 LF.Imp <> com ind
R36946:36949 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36954:36957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36958:36960 LF.Imp <> com ind
R36950:36953 LF.Imp <> aexp ind
R36944:36945 LF.Maps <> id ind
R36976:36979 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36983:36986 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36987:36989 LF.Imp <> com ind
R36980:36982 LF.Imp <> com ind
R36973:36975 LF.Imp <> com ind
R37005:37008 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37012:37015 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37019:37022 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37023:37025 LF.Imp <> com ind
R37016:37018 LF.Imp <> com ind
R37009:37011 LF.Imp <> com ind
R37001:37004 LF.Imp <> bexp ind
R37044:37047 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37051:37054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37055:37057 LF.Imp <> com ind
R37048:37050 LF.Imp <> com ind
R37040:37043 LF.Imp <> bexp ind
R37415:37419 LF.Imp <> CSkip constr
not 37401:37401 <> ::'SKIP'
R37449:37452 LF.Imp <> CAss constr
not 37431:37431 <> ::x_'::='_x
R37500:37503 LF.Imp <> CSeq constr
not 37483:37483 <> ::x_';;'_x
R37588:37593 LF.Imp <> CWhile constr
not 37557:37557 <> ::'WHILE'_x_'DO'_x_'END'
R37687:37689 LF.Imp <> CIf constr
not 37645:37645 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 37851:37861 <> fact_in_coq
R37865:37867 LF.Imp <> com ind
R37885:37889 LF.Imp <> ::x_';;'_x not
R37875:37879 LF.Imp <> ::x_'::='_x not
R37874:37874 LF.Imp <> Z def
R37880:37882 LF.Imp <> AId constr
R37884:37884 LF.Imp <> X def
R37902:37906 LF.Imp <> ::x_';;'_x not
R37891:37895 LF.Imp <> ::x_'::='_x not
R37890:37890 LF.Imp <> Y def
R37896:37899 LF.Imp <> ANum constr
R37907:37912 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37940:37947 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38011:38016 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37913:37916 LF.Imp <> BNot constr
R37919:37921 LF.Imp <> BEq constr
R37932:37935 LF.Imp <> ANum constr
R37924:37926 LF.Imp <> AId constr
R37928:37928 LF.Imp <> Z def
R37975:37981 LF.Imp <> ::x_';;'_x not
R37949:37953 LF.Imp <> ::x_'::='_x not
R37948:37948 LF.Imp <> Y def
R37954:37958 LF.Imp <> AMult constr
R37969:37971 LF.Imp <> AId constr
R37973:37973 LF.Imp <> Z def
R37961:37963 LF.Imp <> AId constr
R37965:37965 LF.Imp <> Y def
R37983:37987 LF.Imp <> ::x_'::='_x not
R37982:37982 LF.Imp <> Z def
R37988:37993 LF.Imp <> AMinus constr
R38004:38007 LF.Imp <> ANum constr
R37996:37998 LF.Imp <> AId constr
R38000:38000 LF.Imp <> Z def
def 38148:38152 <> plus2
R38156:38158 LF.Imp <> com ind
R38166:38171 LF.Imp <> ::x_'::='_x not
R38194:38194 LF.Imp <> ::x_'::='_x not
R38165:38165 LF.Imp <> X def
R38172:38176 LF.Imp <> APlus constr
R38187:38190 LF.Imp <> ANum constr
R38179:38181 LF.Imp <> AId constr
R38183:38183 LF.Imp <> X def
def 38209:38218 <> XtimesYinZ
R38222:38224 LF.Imp <> com ind
R38232:38237 LF.Imp <> ::x_'::='_x not
R38259:38259 LF.Imp <> ::x_'::='_x not
R38231:38231 LF.Imp <> Z def
R38238:38242 LF.Imp <> AMult constr
R38253:38255 LF.Imp <> AId constr
R38257:38257 LF.Imp <> Y def
R38245:38247 LF.Imp <> AId constr
R38249:38249 LF.Imp <> X def
def 38274:38293 <> subtract_slowly_body
R38297:38299 LF.Imp <> com ind
R38335:38340 LF.Imp <> ::x_';;'_x not
R38307:38311 LF.Imp <> ::x_'::='_x not
R38306:38306 LF.Imp <> Z def
R38312:38317 LF.Imp <> AMinus constr
R38328:38331 LF.Imp <> ANum constr
R38320:38322 LF.Imp <> AId constr
R38324:38324 LF.Imp <> Z def
R38342:38346 LF.Imp <> ::x_'::='_x not
R38341:38341 LF.Imp <> X def
R38347:38352 LF.Imp <> AMinus constr
R38363:38366 LF.Imp <> ANum constr
R38355:38357 LF.Imp <> AId constr
R38359:38359 LF.Imp <> X def
def 38474:38488 <> subtract_slowly
R38492:38494 LF.Imp <> com ind
R38501:38506 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38534:38541 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38562:38567 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38507:38510 LF.Imp <> BNot constr
R38513:38515 LF.Imp <> BEq constr
R38526:38529 LF.Imp <> ANum constr
R38518:38520 LF.Imp <> AId constr
R38522:38522 LF.Imp <> X def
R38542:38561 LF.Imp <> subtract_slowly_body def
def 38582:38605 <> subtract_3_from_5_slowly
R38609:38611 LF.Imp <> com ind
R38630:38635 LF.Imp <> ::x_';;'_x not
R38619:38623 LF.Imp <> ::x_'::='_x not
R38618:38618 LF.Imp <> X def
R38624:38627 LF.Imp <> ANum constr
R38648:38653 LF.Imp <> ::x_';;'_x not
R38637:38641 LF.Imp <> ::x_'::='_x not
R38636:38636 LF.Imp <> Z def
R38642:38645 LF.Imp <> ANum constr
R38654:38668 LF.Imp <> subtract_slowly def
def 38785:38788 <> loop
R38792:38794 LF.Imp <> com ind
R38801:38806 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38812:38819 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38824:38829 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38807:38811 LF.Imp <> BTrue constr
R38820:38823 LF.Imp <> ::'SKIP' not
def 39360:39377 <> ceval_fun_no_while
R39385:39389 LF.Imp <> state def
R39397:39399 LF.Imp <> com ind
R39430:39434 LF.Imp <> state def
R39447:39447 LF.Imp <> c var
R39460:39463 LF.Imp <> ::'SKIP' not
R39476:39477 LF.Imp <> st var
R39486:39490 LF.Imp <> ::x_'::='_x not
R39505:39512 LF.Maps <> t_update def
R39520:39524 LF.Imp <> aeval def
R39526:39527 LF.Imp <> st var
R39514:39515 LF.Imp <> st var
R39541:39544 LF.Imp <> ::x_';;'_x not
R39570:39587 LF.Imp <> ceval_fun_no_while def
R39589:39590 LF.Imp <> st var
R39606:39623 LF.Imp <> ceval_fun_no_while def
R39625:39627 LF.Imp <> st' var
R39638:39641 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R39643:39648 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R39651:39656 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R39659:39661 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R39678:39682 LF.Imp <> beval def
R39684:39685 LF.Imp <> st var
R39745:39762 LF.Imp <> ceval_fun_no_while def
R39764:39765 LF.Imp <> st var
R39705:39722 LF.Imp <> ceval_fun_no_while def
R39724:39725 LF.Imp <> st var
R39776:39781 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39783:39786 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39788:39791 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39804:39805 LF.Imp <> st var
ind 43969:43973 <> ceval
constr 44014:44019 <> E_Skip
constr 44060:44064 <> E_Ass
constr 44159:44163 <> E_Seq
constr 44278:44285 <> E_IfTrue
constr 44412:44420 <> E_IfFalse
constr 44548:44559 <> E_WhileFalse
constr 44646:44656 <> E_WhileTrue
R43980:43983 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43989:43992 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43998:44001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43993:43997 LF.Imp <> state def
R43984:43988 LF.Imp <> state def
R43977:43979 LF.Imp <> com ind
R44848:44852 LF.Imp <> ceval var
R44044:44046 LF.Imp <> ::x_'/'_x_'\\'_x not
R44049:44052 LF.Imp <> ::x_'/'_x_'\\'_x not
R44040:44043 LF.Imp <> ::'SKIP' not
R44047:44048 LF.Imp <> st var
R44053:44054 LF.Imp <> st var
R44108:44117 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44118:44118 LF.Imp <> ::x_'/'_x_'\\'_x not
R44127:44130 LF.Imp <> ::x_'/'_x_'\\'_x not
R44133:44137 LF.Imp <> ::x_'/'_x_'\\'_x not
R44153:44153 LF.Imp <> ::x_'/'_x_'\\'_x not
R44120:44124 LF.Imp <> ::x_'::='_x not
R44119:44119 LF.Imp <> x var
R44125:44126 LF.Imp <> a1 var
R44131:44132 LF.Imp <> st var
R44138:44145 LF.Maps <> t_update def
R44152:44152 LF.Imp <> n var
R44150:44150 LF.Imp <> x var
R44147:44148 LF.Imp <> st var
R44104:44106 Coq.Init.Logic <> :type_scope:x_'='_x not
R44093:44097 LF.Imp <> aeval def
R44102:44103 LF.Imp <> a1 var
R44099:44100 LF.Imp <> st var
R44107:44107 LF.Imp <> n var
R44214:44223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44240:44249 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44250:44250 LF.Imp <> ::x_'/'_x_'\\'_x not
R44259:44262 LF.Imp <> ::x_'/'_x_'\\'_x not
R44265:44268 LF.Imp <> ::x_'/'_x_'\\'_x not
R44253:44256 LF.Imp <> ::x_';;'_x not
R44251:44252 LF.Imp <> c1 var
R44257:44258 LF.Imp <> c2 var
R44263:44264 LF.Imp <> st var
R44269:44272 LF.Imp <> st'' var
R44226:44228 LF.Imp <> ::x_'/'_x_'\\'_x not
R44232:44235 LF.Imp <> ::x_'/'_x_'\\'_x not
R44224:44225 LF.Imp <> c2 var
R44229:44231 LF.Imp <> st' var
R44236:44239 LF.Imp <> st'' var
R44201:44203 LF.Imp <> ::x_'/'_x_'\\'_x not
R44206:44210 LF.Imp <> ::x_'/'_x_'\\'_x not
R44199:44200 LF.Imp <> c1 var
R44204:44205 LF.Imp <> st var
R44211:44213 LF.Imp <> st' var
R44335:44344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44359:44368 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44369:44369 LF.Imp <> ::x_'/'_x_'\\'_x not
R44394:44397 LF.Imp <> ::x_'/'_x_'\\'_x not
R44400:44403 LF.Imp <> ::x_'/'_x_'\\'_x not
R44370:44373 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44375:44380 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44383:44388 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44391:44393 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44374:44374 LF.Imp <> b var
R44381:44382 LF.Imp <> c1 var
R44389:44390 LF.Imp <> c2 var
R44398:44399 LF.Imp <> st var
R44404:44406 LF.Imp <> st' var
R44347:44349 LF.Imp <> ::x_'/'_x_'\\'_x not
R44352:44355 LF.Imp <> ::x_'/'_x_'\\'_x not
R44345:44346 LF.Imp <> c1 var
R44350:44351 LF.Imp <> st var
R44356:44358 LF.Imp <> st' var
R44328:44330 Coq.Init.Logic <> :type_scope:x_'='_x not
R44318:44322 LF.Imp <> beval def
R44327:44327 LF.Imp <> b var
R44324:44325 LF.Imp <> st var
R44331:44334 Coq.Init.Datatypes <> true constr
R44471:44480 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44495:44504 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44505:44505 LF.Imp <> ::x_'/'_x_'\\'_x not
R44530:44533 LF.Imp <> ::x_'/'_x_'\\'_x not
R44536:44539 LF.Imp <> ::x_'/'_x_'\\'_x not
R44506:44509 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44511:44516 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44519:44524 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44527:44529 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44510:44510 LF.Imp <> b var
R44517:44518 LF.Imp <> c1 var
R44525:44526 LF.Imp <> c2 var
R44534:44535 LF.Imp <> st var
R44540:44542 LF.Imp <> st' var
R44483:44485 LF.Imp <> ::x_'/'_x_'\\'_x not
R44488:44491 LF.Imp <> ::x_'/'_x_'\\'_x not
R44481:44482 LF.Imp <> c2 var
R44486:44487 LF.Imp <> st var
R44492:44494 LF.Imp <> st' var
R44463:44465 Coq.Init.Logic <> :type_scope:x_'='_x not
R44453:44457 LF.Imp <> beval def
R44462:44462 LF.Imp <> b var
R44459:44460 LF.Imp <> st var
R44466:44470 Coq.Init.Datatypes <> false constr
R44602:44611 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44612:44612 LF.Imp <> ::x_'/'_x_'\\'_x not
R44629:44632 LF.Imp <> ::x_'/'_x_'\\'_x not
R44635:44638 LF.Imp <> ::x_'/'_x_'\\'_x not
R44613:44618 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44620:44623 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44625:44628 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44619:44619 LF.Imp <> b var
R44624:44624 LF.Imp <> c var
R44633:44634 LF.Imp <> st var
R44639:44640 LF.Imp <> st var
R44594:44596 Coq.Init.Logic <> :type_scope:x_'='_x not
R44584:44588 LF.Imp <> beval def
R44593:44593 LF.Imp <> b var
R44590:44591 LF.Imp <> st var
R44597:44601 Coq.Init.Datatypes <> false constr
R44707:44716 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44730:44739 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44772:44781 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44782:44782 LF.Imp <> ::x_'/'_x_'\\'_x not
R44799:44802 LF.Imp <> ::x_'/'_x_'\\'_x not
R44805:44808 LF.Imp <> ::x_'/'_x_'\\'_x not
R44783:44788 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44790:44793 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44795:44798 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44789:44789 LF.Imp <> b var
R44794:44794 LF.Imp <> c var
R44803:44804 LF.Imp <> st var
R44809:44812 LF.Imp <> st'' var
R44740:44740 LF.Imp <> ::x_'/'_x_'\\'_x not
R44757:44760 LF.Imp <> ::x_'/'_x_'\\'_x not
R44764:44767 LF.Imp <> ::x_'/'_x_'\\'_x not
R44741:44746 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44748:44751 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44753:44756 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44747:44747 LF.Imp <> b var
R44752:44752 LF.Imp <> c var
R44761:44763 LF.Imp <> st' var
R44768:44771 LF.Imp <> st'' var
R44718:44720 LF.Imp <> ::x_'/'_x_'\\'_x not
R44723:44726 LF.Imp <> ::x_'/'_x_'\\'_x not
R44717:44717 LF.Imp <> c var
R44721:44722 LF.Imp <> st var
R44727:44729 LF.Imp <> st' var
R44700:44702 Coq.Init.Logic <> :type_scope:x_'='_x not
R44690:44694 LF.Imp <> beval def
R44699:44699 LF.Imp <> b var
R44696:44697 LF.Imp <> st var
R44703:44706 Coq.Init.Datatypes <> true constr
R44848:44852 LF.Imp <> ceval ind
not 44823:44823 <> ::x_'/'_x_'\\'_x
def 45122:45135 <> ceval_example1
R45142:45142 LF.Imp <> ::x_'/'_x_'\\'_x not
R45245:45251 LF.Imp <> ::x_'/'_x_'\\'_x not
R45263:45270 LF.Imp <> ::x_'/'_x_'\\'_x not
R45310:45310 LF.Imp <> ::x_'/'_x_'\\'_x not
R45155:45162 LF.Imp <> ::x_';;'_x not
R45144:45148 LF.Imp <> ::x_'::='_x not
R45143:45143 LF.Imp <> X def
R45149:45152 LF.Imp <> ANum constr
R45163:45166 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45187:45199 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45212:45224 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45237:45244 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45167:45169 LF.Imp <> BLe constr
R45180:45183 LF.Imp <> ANum constr
R45172:45174 LF.Imp <> AId constr
R45176:45176 LF.Imp <> X def
R45201:45205 LF.Imp <> ::x_'::='_x not
R45200:45200 LF.Imp <> Y def
R45206:45209 LF.Imp <> ANum constr
R45226:45230 LF.Imp <> ::x_'::='_x not
R45225:45225 LF.Imp <> Z def
R45231:45234 LF.Imp <> ANum constr
R45252:45262 LF.Imp <> empty_state def
R45271:45278 LF.Maps <> t_update def
R45307:45307 LF.Imp <> Z def
R45281:45288 LF.Maps <> t_update def
R45302:45302 LF.Imp <> X def
R45290:45300 LF.Imp <> empty_state def
R45386:45393 LF.Maps <> t_update def
R45407:45407 LF.Imp <> X def
R45395:45405 LF.Imp <> empty_state def
R45374:45378 LF.Imp <> E_Seq constr
R45386:45393 LF.Maps <> t_update def
R45407:45407 LF.Imp <> X def
R45395:45405 LF.Imp <> empty_state def
R45374:45378 LF.Imp <> E_Seq constr
R45452:45456 LF.Imp <> E_Ass constr
R45452:45456 LF.Imp <> E_Ass constr
R45503:45511 LF.Imp <> E_IfFalse constr
R45503:45511 LF.Imp <> E_IfFalse constr
R45545:45549 LF.Imp <> E_Ass constr
R45545:45549 LF.Imp <> E_Ass constr
def 45628:45641 <> ceval_example2
R45648:45648 LF.Imp <> ::x_'/'_x_'\\'_x not
R45691:45694 LF.Imp <> ::x_'/'_x_'\\'_x not
R45706:45714 LF.Imp <> ::x_'/'_x_'\\'_x not
R45769:45769 LF.Imp <> ::x_'/'_x_'\\'_x not
R45661:45663 LF.Imp <> ::x_';;'_x not
R45650:45654 LF.Imp <> ::x_'::='_x not
R45649:45649 LF.Imp <> X def
R45655:45658 LF.Imp <> ANum constr
R45676:45678 LF.Imp <> ::x_';;'_x not
R45665:45669 LF.Imp <> ::x_'::='_x not
R45664:45664 LF.Imp <> Y def
R45670:45673 LF.Imp <> ANum constr
R45680:45684 LF.Imp <> ::x_'::='_x not
R45679:45679 LF.Imp <> Z def
R45685:45688 LF.Imp <> ANum constr
R45695:45705 LF.Imp <> empty_state def
R45715:45722 LF.Maps <> t_update def
R45766:45766 LF.Imp <> Z def
R45725:45732 LF.Maps <> t_update def
R45761:45761 LF.Imp <> Y def
R45735:45742 LF.Maps <> t_update def
R45756:45756 LF.Imp <> X def
R45744:45754 LF.Imp <> empty_state def
def 46113:46120 <> pup_to_n
R46124:46126 LF.Imp <> com ind
prf 46204:46217 <> pup_to_2_ceval
R46231:46234 LF.Imp <> ::x_'/'_x_'\\'_x not
R46259:46267 LF.Imp <> ::x_'/'_x_'\\'_x not
R46223:46230 LF.Imp <> pup_to_n prfax
R46235:46242 LF.Maps <> t_update def
R46256:46256 LF.Imp <> X def
R46244:46254 LF.Imp <> empty_state def
R46268:46275 LF.Maps <> t_update def
R46370:46370 LF.Imp <> X def
R46278:46285 LF.Maps <> t_update def
R46365:46365 LF.Imp <> Y def
R46288:46295 LF.Maps <> t_update def
R46360:46360 LF.Imp <> X def
R46298:46305 LF.Maps <> t_update def
R46355:46355 LF.Imp <> Y def
R46308:46315 LF.Maps <> t_update def
R46350:46350 LF.Imp <> Y def
R46318:46325 LF.Maps <> t_update def
R46345:46345 LF.Imp <> X def
R46327:46337 LF.Imp <> empty_state def
prf 47093:47111 <> ceval_deterministic
R47153:47162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47176:47184 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47188:47190 Coq.Init.Logic <> :type_scope:x_'='_x not
R47185:47187 LF.Imp <> st1 var
R47191:47193 LF.Imp <> st2 var
R47164:47166 LF.Imp <> ::x_'/'_x_'\\'_x not
R47169:47172 LF.Imp <> ::x_'/'_x_'\\'_x not
R47163:47163 LF.Imp <> c var
R47167:47168 LF.Imp <> st var
R47173:47175 LF.Imp <> st2 var
R47141:47143 LF.Imp <> ::x_'/'_x_'\\'_x not
R47146:47149 LF.Imp <> ::x_'/'_x_'\\'_x not
R47140:47140 LF.Imp <> c var
R47144:47145 LF.Imp <> st var
R47150:47152 LF.Imp <> st1 var
R47413:47415 Coq.Init.Logic <> :type_scope:x_'='_x not
R47413:47415 Coq.Init.Logic <> :type_scope:x_'='_x not
R48184:48186 Coq.Init.Logic <> :type_scope:x_'='_x not
R48184:48186 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 48666:48675 <> plus2_spec
R48706:48711 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48729:48734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48740:48742 Coq.Init.Logic <> :type_scope:x_'='_x not
R48735:48737 LF.Imp <> st' var
R48739:48739 LF.Imp <> X def
R48744:48746 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R48743:48743 LF.Imp <> n var
R48717:48719 LF.Imp <> ::x_'/'_x_'\\'_x not
R48722:48725 LF.Imp <> ::x_'/'_x_'\\'_x not
R48712:48716 LF.Imp <> plus2 def
R48720:48721 LF.Imp <> st var
R48726:48728 LF.Imp <> st' var
R48702:48704 Coq.Init.Logic <> :type_scope:x_'='_x not
R48698:48699 LF.Imp <> st var
R48701:48701 LF.Imp <> X def
R48705:48705 LF.Imp <> n var
R49072:49082 LF.Maps <> t_update_eq prfax
R49072:49082 LF.Maps <> t_update_eq prfax
prf 49312:49327 <> loop_never_stops
R49348:49349 Coq.Init.Logic <> :type_scope:'~'_x not
R49366:49366 Coq.Init.Logic <> :type_scope:'~'_x not
R49354:49356 LF.Imp <> ::x_'/'_x_'\\'_x not
R49359:49362 LF.Imp <> ::x_'/'_x_'\\'_x not
R49350:49353 LF.Imp <> loop def
R49357:49358 LF.Imp <> st var
R49363:49365 LF.Imp <> st' var
R49407:49410 LF.Imp <> loop def
R49435:49440 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49446:49449 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49454:49457 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49441:49445 LF.Imp <> BTrue constr
R49450:49453 LF.Imp <> ::'SKIP' not
R49435:49440 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49446:49449 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49454:49457 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49441:49445 LF.Imp <> BTrue constr
R49450:49453 LF.Imp <> ::'SKIP' not
def 49847:49855 <> no_whiles
R49862:49864 LF.Imp <> com ind
R49869:49872 Coq.Init.Datatypes <> bool ind
R49885:49885 LF.Imp <> c var
R49896:49899 LF.Imp <> ::'SKIP' not
R49910:49913 Coq.Init.Datatypes <> true constr
R49920:49924 LF.Imp <> ::x_'::='_x not
R49936:49939 Coq.Init.Datatypes <> true constr
R49947:49950 LF.Imp <> ::x_';;'_x not
R49963:49966 Coq.Init.Datatypes <> andb def
R49984:49992 LF.Imp <> no_whiles def
R49969:49977 LF.Imp <> no_whiles def
R50002:50005 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50007:50012 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50015:50020 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50023:50025 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50036:50039 Coq.Init.Datatypes <> andb def
R50057:50065 LF.Imp <> no_whiles def
R50042:50050 LF.Imp <> no_whiles def
R50075:50080 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50082:50085 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50087:50090 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50102:50106 Coq.Init.Datatypes <> false constr
ind 50402:50411 <> no_whilesR
R50417:50420 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50414:50416 LF.Imp <> com ind
prf 50460:50472 <> no_whiles_eqv
R50506:50510 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R50499:50501 Coq.Init.Logic <> :type_scope:x_'='_x not
R50488:50496 LF.Imp <> no_whiles def
R50498:50498 LF.Imp <> c var
R50502:50505 Coq.Init.Datatypes <> true constr
R50511:50520 LF.Imp <> no_whilesR ind
R50522:50522 LF.Imp <> c var
ind 52340:52345 <> sinstr
constr 52359:52363 <> SPush
constr 52383:52387 <> SLoad
constr 52406:52410 <> SPlus
constr 52423:52428 <> SMinus
constr 52441:52445 <> SMult
R52370:52373 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52374:52379 LF.Imp <> sinstr ind
R52367:52369 Coq.Init.Datatypes <> nat ind
R52393:52396 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52397:52402 LF.Imp <> sinstr ind
R52391:52392 LF.Maps <> id ind
R52414:52419 LF.Imp <> sinstr ind
R52432:52437 LF.Imp <> sinstr ind
R52449:52454 LF.Imp <> sinstr ind
def 53119:53127 <> s_execute
R53135:53139 LF.Imp <> state def
R53151:53154 Coq.Init.Datatypes <> list ind
R53156:53158 Coq.Init.Datatypes <> nat ind
R53188:53191 Coq.Init.Datatypes <> list ind
R53193:53198 LF.Imp <> sinstr ind
R53220:53223 Coq.Init.Datatypes <> list ind
R53225:53227 Coq.Init.Datatypes <> nat ind
def 53305:53314 <> s_execute1
R53390:53395 Coq.Init.Logic <> :type_scope:x_'='_x not
R53323:53331 LF.Imp <> s_execute prfax
R53355:53355 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53363:53364 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53372:53373 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53381:53382 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53389:53389 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53356:53360 LF.Imp <> SPush constr
R53383:53388 LF.Imp <> SMinus constr
R53374:53378 LF.Imp <> SPush constr
R53365:53369 LF.Imp <> SPush constr
R53345:53346 Coq.Lists.List ListNotations :list_scope:'['_']' not
R53333:53343 LF.Imp <> empty_state def
R53396:53396 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53398:53399 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53401:53401 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 53442:53451 <> s_execute2
R53542:53547 Coq.Init.Logic <> :type_scope:x_'='_x not
R53460:53468 LF.Imp <> s_execute prfax
R53510:53510 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53518:53519 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53527:53528 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53534:53535 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53541:53541 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53511:53515 LF.Imp <> SPush constr
R53536:53540 LF.Imp <> SPlus constr
R53529:53533 LF.Imp <> SMult constr
R53520:53524 LF.Imp <> SLoad constr
R53526:53526 LF.Imp <> X def
R53497:53497 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53499:53499 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53501:53501 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53471:53478 LF.Maps <> t_update def
R53492:53492 LF.Imp <> X def
R53480:53490 LF.Imp <> empty_state def
R53548:53548 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53551:53552 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R53554:53554 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 53795:53803 <> s_compile
R53810:53813 LF.Imp <> aexp ind
R53818:53821 Coq.Init.Datatypes <> list ind
R53823:53828 LF.Imp <> sinstr ind
def 53995:54004 <> s_compile1
R54063:54067 Coq.Init.Logic <> :type_scope:x_'='_x not
R54012:54020 LF.Imp <> s_compile prfax
R54023:54028 LF.Imp <> AMinus constr
R54039:54043 LF.Imp <> AMult constr
R54055:54057 LF.Imp <> AId constr
R54059:54059 LF.Imp <> Y def
R54046:54049 LF.Imp <> ANum constr
R54031:54033 LF.Imp <> AId constr
R54035:54035 LF.Imp <> X def
R54068:54068 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R54076:54077 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R54085:54086 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R54094:54095 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R54101:54102 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R54109:54109 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R54069:54073 LF.Imp <> SLoad constr
R54075:54075 LF.Imp <> X def
R54103:54108 LF.Imp <> SMinus constr
R54096:54100 LF.Imp <> SMult constr
R54087:54091 LF.Imp <> SLoad constr
R54093:54093 LF.Imp <> Y def
R54078:54082 LF.Imp <> SPush constr
prf 54830:54846 <> s_compile_correct
R54863:54867 LF.Imp <> state def
R54875:54878 LF.Imp <> aexp ind
R54913:54915 Coq.Init.Logic <> :type_scope:x_'='_x not
R54884:54892 LF.Imp <> s_execute prfax
R54901:54909 LF.Imp <> s_compile prfax
R54911:54911 LF.Imp <> e var
R54897:54898 Coq.Lists.List ListNotations :list_scope:'['_']' not
R54894:54895 LF.Imp <> st var
R54916:54917 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R54928:54929 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R54918:54922 LF.Imp <> aeval def
R54927:54927 LF.Imp <> e var
R54924:54925 LF.Imp <> st var
mod 55603:55610 <> BreakImp
ind 55952:55954 BreakImp com
constr 55970:55974 BreakImp CSkip
constr 55986:55991 BreakImp CBreak
constr 56031:56034 BreakImp CAss
constr 56060:56063 BreakImp CSeq
constr 56089:56091 BreakImp CIf
constr 56125:56130 BreakImp CWhile
R55978:55980 LF.Imp <> com ind
R55995:55997 LF.Imp <> com ind
R56040:56043 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56048:56051 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56052:56054 LF.Imp <> com ind
R56044:56047 LF.Imp <> aexp ind
R56038:56039 LF.Maps <> id ind
R56070:56073 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56077:56080 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56081:56083 LF.Imp <> com ind
R56074:56076 LF.Imp <> com ind
R56067:56069 LF.Imp <> com ind
R56099:56102 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56106:56109 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56113:56116 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56117:56119 LF.Imp <> com ind
R56110:56112 LF.Imp <> com ind
R56103:56105 LF.Imp <> com ind
R56095:56098 LF.Imp <> bexp ind
R56138:56141 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56145:56148 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56149:56151 LF.Imp <> com ind
R56142:56144 LF.Imp <> com ind
R56134:56137 LF.Imp <> bexp ind
R56178:56182 LF.Imp BreakImp CSkip constr
not 56164:56164 BreakImp ::'SKIP'
R56209:56214 LF.Imp BreakImp CBreak constr
not 56194:56194 BreakImp ::'BREAK'
R56244:56247 LF.Imp BreakImp CAss constr
not 56226:56226 BreakImp ::x_'::='_x
R56295:56298 LF.Imp BreakImp CSeq constr
not 56278:56278 BreakImp ::x_';;'_x
R56383:56388 LF.Imp BreakImp CWhile constr
not 56352:56352 BreakImp ::'WHILE'_x_'DO'_x_'END'
R56482:56484 LF.Imp BreakImp CIf constr
not 56440:56440 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 57585:57590 BreakImp result
constr 57606:57614 BreakImp SContinue
constr 57629:57634 BreakImp SBreak
R57618:57623 LF.Imp <> result ind
R57638:57643 LF.Imp <> result ind
ind 60032:60036 BreakImp ceval
constr 60087:60092 BreakImp E_Skip
R60043:60046 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60052:60055 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60062:60065 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60071:60074 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60066:60070 LF.Imp <> state def
R60056:60061 LF.Imp BreakImp result ind
R60047:60051 LF.Imp <> state def
R60040:60042 LF.Imp BreakImp com ind
R60203:60207 LF.Imp <> ceval var
R60118:60120 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60123:60126 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60136:60138 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60113:60117 LF.Imp BreakImp CSkip constr
R60121:60122 LF.Imp <> st var
R60127:60135 LF.Imp BreakImp SContinue constr
R60139:60140 LF.Imp <> st var
R60203:60207 LF.Imp BreakImp ceval ind
not 60172:60172 BreakImp ::x_'/'_x_'\\'_x_'/'_x
prf 60306:60317 BreakImp break_ignore
R60372:60380 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60383:60385 Coq.Init.Logic <> :type_scope:x_'='_x not
R60381:60382 LF.Imp <> st var
R60386:60388 LF.Imp <> st' var
R60345:60345 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60355:60358 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60361:60364 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60366:60368 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60351:60353 LF.Imp BreakImp ::x_';;'_x not
R60346:60350 LF.Imp BreakImp ::'BREAK' not
R60354:60354 LF.Imp <> c var
R60359:60360 LF.Imp <> st var
R60365:60365 LF.Imp <> s var
R60369:60371 LF.Imp <> st' var
prf 60438:60451 BreakImp while_continue
R60512:60517 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60519:60521 Coq.Init.Logic <> :type_scope:x_'='_x not
R60518:60518 LF.Imp <> s var
R60522:60530 LF.Imp BreakImp SContinue constr
R60478:60478 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60495:60498 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60501:60504 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60506:60508 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60479:60484 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R60486:60489 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R60491:60494 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R60485:60485 LF.Imp <> b var
R60490:60490 LF.Imp <> c var
R60499:60500 LF.Imp <> st var
R60505:60505 LF.Imp <> s var
R60509:60511 LF.Imp <> st' var
prf 60580:60599 BreakImp while_stops_on_break
R60641:60646 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60669:60674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60675:60675 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60692:60695 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60698:60701 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60711:60713 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60676:60681 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R60683:60686 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R60688:60691 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R60682:60682 LF.Imp <> b var
R60687:60687 LF.Imp <> c var
R60696:60697 LF.Imp <> st var
R60702:60710 LF.Imp BreakImp SContinue constr
R60714:60716 LF.Imp <> st' var
R60648:60650 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60653:60656 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60663:60665 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60647:60647 LF.Imp <> c var
R60651:60652 LF.Imp <> st var
R60657:60662 LF.Imp BreakImp SBreak constr
R60666:60668 LF.Imp <> st' var
R60634:60636 Coq.Init.Logic <> :type_scope:x_'='_x not
R60624:60628 LF.Imp <> beval def
R60633:60633 LF.Imp <> b var
R60630:60631 LF.Imp <> st var
R60637:60640 Coq.Init.Datatypes <> true constr
prf 60846:60861 BreakImp while_break_true
R60928:60933 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60952:60957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60958:60964 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60969:60970 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60972:60974 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60979:60982 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60989:60991 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60971:60971 LF.Imp <> c var
R60975:60978 LF.Imp <> st'' var
R60983:60988 LF.Imp BreakImp SBreak constr
R60992:60994 LF.Imp <> st' var
R60945:60947 Coq.Init.Logic <> :type_scope:x_'='_x not
R60934:60938 LF.Imp <> beval def
R60944:60944 LF.Imp <> b var
R60940:60942 LF.Imp <> st' var
R60948:60951 Coq.Init.Datatypes <> true constr
R60886:60886 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60903:60906 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60909:60912 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60922:60924 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R60887:60892 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R60894:60897 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R60899:60902 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R60893:60893 LF.Imp <> b var
R60898:60898 LF.Imp <> c var
R60907:60908 LF.Imp <> st var
R60913:60921 LF.Imp BreakImp SContinue constr
R60925:60927 LF.Imp <> st' var
prf 61125:61143 BreakImp ceval_deterministic
R61156:61158 LF.Imp BreakImp com ind
R61202:61211 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61230:61238 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61248:61251 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61242:61244 Coq.Init.Logic <> :type_scope:x_'='_x not
R61239:61241 LF.Imp <> st1 var
R61245:61247 LF.Imp <> st2 var
R61254:61256 Coq.Init.Logic <> :type_scope:x_'='_x not
R61252:61253 LF.Imp <> s1 var
R61257:61258 LF.Imp <> s2 var
R61213:61215 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R61218:61221 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R61224:61226 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R61212:61212 LF.Imp <> c var
R61216:61217 LF.Imp <> st var
R61222:61223 LF.Imp <> s2 var
R61227:61229 LF.Imp <> st2 var
R61185:61187 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R61190:61193 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R61196:61198 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R61184:61184 LF.Imp <> c var
R61188:61189 LF.Imp <> st var
R61194:61195 LF.Imp <> s1 var
R61199:61201 LF.Imp <> st1 var
R61314:61321 LF.Imp BreakImp <> mod

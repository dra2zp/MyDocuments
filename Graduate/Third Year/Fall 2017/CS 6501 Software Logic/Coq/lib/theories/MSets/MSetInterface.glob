DIGEST 05fcd32a12312c0bedcd70768effcdb7
FCoq.MSets.MSetInterface
R1472:1475 Coq.Bool.Bool <> <> lib
R1477:1486 Coq.Lists.SetoidList <> <> lib
R1488:1502 Coq.Classes.RelationClasses <> <> lib
R1504:1512 Coq.Classes.Morphisms <> <> lib
R1515:1527 Coq.Classes.RelationPairs <> <> lib
R1529:1538 Coq.Structures.Equalities <> <> lib
R1540:1545 Coq.Structures.Orders <> <> lib
R1547:1557 Coq.Structures.OrdersFacts <> <> lib
modtype 1620:1625 <> TypElt
ax 1640:1640 TypElt t
ax 1642:1644 TypElt elt
R1658:1663 Coq.MSets.MSetInterface TypElt <> modtype
R1697:1702 Coq.MSets.MSetInterface TypElt <> mod
modtype 1679:1685 <> HasWOps
ax 1719:1723 HasWOps empty
R1727:1727 Coq.MSets.MSetInterface T t defax
ax 1767:1774 HasWOps is_empty
R1779:1782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1783:1786 Coq.Init.Datatypes <> bool ind
R1778:1778 Coq.MSets.MSetInterface T t defax
ax 1847:1849 HasWOps mem
R1856:1859 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1861:1864 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1865:1868 Coq.Init.Datatypes <> bool ind
R1860:1860 Coq.MSets.MSetInterface T t defax
R1853:1855 Coq.MSets.MSetInterface T elt defax
ax 1945:1947 HasWOps add
R1954:1957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1959:1962 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1963:1963 Coq.MSets.MSetInterface T t defax
R1958:1958 Coq.MSets.MSetInterface T t defax
R1951:1953 Coq.MSets.MSetInterface T elt defax
ax 2110:2118 HasWOps singleton
R2125:2128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2129:2129 Coq.MSets.MSetInterface T t defax
R2122:2124 Coq.MSets.MSetInterface T elt defax
ax 2217:2222 HasWOps remove
R2229:2232 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2234:2237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2238:2238 Coq.MSets.MSetInterface T t defax
R2233:2233 Coq.MSets.MSetInterface T t defax
R2226:2228 Coq.MSets.MSetInterface T elt defax
ax 2386:2390 HasWOps union
R2395:2398 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2400:2403 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2404:2404 Coq.MSets.MSetInterface T t defax
R2399:2399 Coq.MSets.MSetInterface T t defax
R2394:2394 Coq.MSets.MSetInterface T t defax
ax 2440:2444 HasWOps inter
R2449:2452 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2454:2457 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2458:2458 Coq.MSets.MSetInterface T t defax
R2453:2453 Coq.MSets.MSetInterface T t defax
R2448:2448 Coq.MSets.MSetInterface T t defax
ax 2501:2504 HasWOps diff
R2509:2512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2514:2517 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2518:2518 Coq.MSets.MSetInterface T t defax
R2513:2513 Coq.MSets.MSetInterface T t defax
R2508:2508 Coq.MSets.MSetInterface T t defax
ax 2559:2563 HasWOps equal
R2568:2571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2573:2576 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2577:2580 Coq.Init.Datatypes <> bool ind
R2572:2572 Coq.MSets.MSetInterface T t defax
R2567:2567 Coq.MSets.MSetInterface T t defax
ax 2702:2707 HasWOps subset
R2712:2715 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2717:2720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2721:2724 Coq.Init.Datatypes <> bool ind
R2716:2716 Coq.MSets.MSetInterface T t defax
R2711:2711 Coq.MSets.MSetInterface T t defax
ax 2822:2825 HasWOps fold
R2846:2846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2860:2864 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2866:2869 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2871:2874 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2875:2875 Coq.MSets.MSetInterface <> A var
R2870:2870 Coq.MSets.MSetInterface <> A var
R2865:2865 Coq.MSets.MSetInterface T t defax
R2850:2853 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2855:2858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2859:2859 Coq.MSets.MSetInterface <> A var
R2854:2854 Coq.MSets.MSetInterface <> A var
R2847:2849 Coq.MSets.MSetInterface T elt defax
ax 3076:3082 HasWOps for_all
R3086:3086 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3098:3102 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3104:3107 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3108:3111 Coq.Init.Datatypes <> bool ind
R3103:3103 Coq.MSets.MSetInterface T t defax
R3090:3093 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3094:3097 Coq.Init.Datatypes <> bool ind
R3087:3089 Coq.MSets.MSetInterface T elt defax
ax 3213:3219 HasWOps exists_
R3223:3223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3235:3239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3241:3244 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3245:3248 Coq.Init.Datatypes <> bool ind
R3240:3240 Coq.MSets.MSetInterface T t defax
R3227:3230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3231:3234 Coq.Init.Datatypes <> bool ind
R3224:3226 Coq.MSets.MSetInterface T elt defax
ax 3359:3364 HasWOps filter
R3368:3368 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3380:3384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3386:3389 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3390:3390 Coq.MSets.MSetInterface T t defax
R3385:3385 Coq.MSets.MSetInterface T t defax
R3372:3375 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3376:3379 Coq.Init.Datatypes <> bool ind
R3369:3371 Coq.MSets.MSetInterface T elt defax
ax 3497:3505 HasWOps partition
R3509:3509 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3521:3525 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3527:3530 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3532:3534 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R3531:3531 Coq.MSets.MSetInterface T t defax
R3535:3535 Coq.MSets.MSetInterface T t defax
R3526:3526 Coq.MSets.MSetInterface T t defax
R3513:3516 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3517:3520 Coq.Init.Datatypes <> bool ind
R3510:3512 Coq.MSets.MSetInterface T elt defax
ax 3770:3777 HasWOps cardinal
R3782:3785 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3786:3788 Coq.Init.Datatypes <> nat ind
R3781:3781 Coq.MSets.MSetInterface T t defax
ax 3853:3860 HasWOps elements
R3865:3868 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3869:3872 Coq.Init.Datatypes <> list ind
R3874:3876 Coq.MSets.MSetInterface T elt defax
R3864:3864 Coq.MSets.MSetInterface T t defax
ax 3965:3970 HasWOps choose
R3975:3978 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3979:3984 Coq.Init.Datatypes <> option ind
R3986:3988 Coq.MSets.MSetInterface T elt defax
R3974:3974 Coq.MSets.MSetInterface T t defax
R4161:4167 Coq.MSets.MSetInterface HasWOps <> modtype
R4193:4205 Coq.Structures.Equalities DecidableType <> mod
modtype 4183:4186 <> WOps
def 4222:4224 WOps elt
R4229:4231 Coq.MSets.MSetInterface E t defax
ax 4246:4246 WOps t
R4299:4305 Coq.MSets.MSetInterface HasWOps <> mod
R4312:4315 Coq.MSets.MSetInterface WOps <> modtype
R4481:4493 Coq.Structures.Equalities DecidableType <> mod
modtype 4468:4474 <> WSetsOn
R4552:4555 Coq.MSets.MSetInterface WOps <> mod
R4557:4557 Coq.MSets.MSetInterface E <> modtype
ax 4601:4602 WSetsOn In
R4609:4612 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4614:4617 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4613:4613 Coq.MSets.MSetInterface WSetsOn t defax
R4606:4608 Coq.MSets.MSetInterface WSetsOn elt def
inst 4643:4651 WSetsOn In_compat
R4655:4660 Coq.Classes.Morphisms <> Proper class
R4680:4681 Coq.MSets.MSetInterface WSetsOn In defax
R4667:4669 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R4663:4666 Coq.MSets.MSetInterface E eq defax
R4672:4674 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R4670:4671 Coq.Init.Logic <> eq ind
R4675:4677 Coq.Init.Logic <> iff def
def 4698:4702 WSetsOn Equal
R4723:4725 Coq.MSets.MSetInterface WSetsOn elt def
R4734:4738 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4728:4729 Coq.MSets.MSetInterface WSetsOn In defax
R4733:4733 Coq.MSets.MSetInterface <> s var
R4731:4731 Coq.MSets.MSetInterface <> a var
R4739:4740 Coq.MSets.MSetInterface WSetsOn In defax
R4744:4745 Coq.MSets.MSetInterface <> s' var
R4742:4742 Coq.MSets.MSetInterface <> a var
def 4761:4766 WSetsOn Subset
R4787:4789 Coq.MSets.MSetInterface WSetsOn elt def
R4798:4801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4802:4803 Coq.MSets.MSetInterface WSetsOn In defax
R4807:4808 Coq.MSets.MSetInterface <> s' var
R4805:4805 Coq.MSets.MSetInterface <> a var
R4792:4793 Coq.MSets.MSetInterface WSetsOn In defax
R4797:4797 Coq.MSets.MSetInterface <> s var
R4795:4795 Coq.MSets.MSetInterface <> a var
def 4824:4828 WSetsOn Empty
R4846:4848 Coq.MSets.MSetInterface WSetsOn elt def
R4851:4852 Coq.Init.Logic <> :type_scope:'~'_x not
R4853:4854 Coq.MSets.MSetInterface WSetsOn In defax
R4858:4858 Coq.MSets.MSetInterface <> s var
R4856:4856 Coq.MSets.MSetInterface <> a var
def 4874:4880 WSetsOn For_all
R4890:4893 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4887:4889 Coq.MSets.MSetInterface WSetsOn elt def
R4921:4924 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4925:4925 Coq.MSets.MSetInterface <> P var
R4927:4927 Coq.MSets.MSetInterface <> x var
R4915:4916 Coq.MSets.MSetInterface WSetsOn In defax
R4920:4920 Coq.MSets.MSetInterface <> s var
R4918:4918 Coq.MSets.MSetInterface <> x var
def 4943:4948 WSetsOn Exists
R4958:4961 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4955:4957 Coq.MSets.MSetInterface WSetsOn elt def
R4973:4979 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4981:4982 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4989:4992 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4983:4984 Coq.MSets.MSetInterface WSetsOn In defax
R4988:4988 Coq.MSets.MSetInterface <> s var
R4986:4986 Coq.MSets.MSetInterface <> x var
R4993:4993 Coq.MSets.MSetInterface <> P var
R4995:4995 Coq.MSets.MSetInterface <> x var
R5026:5030 Coq.MSets.MSetInterface WSetsOn Equal def
not 5010:5010 WSetsOn ::x_'[=]'_x
R5098:5103 Coq.MSets.MSetInterface WSetsOn Subset def
not 5081:5081 WSetsOn ::x_'[<=]'_x
def 5157:5158 WSetsOn eq
R5163:5166 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5168:5171 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5167:5167 Coq.MSets.MSetInterface WSetsOn t defax
R5162:5162 Coq.MSets.MSetInterface WSetsOn t defax
R5180:5184 Coq.MSets.MSetInterface WSetsOn Equal def
R5197:5200 Coq.Structures.Equalities IsEq <> mod
R5273:5280 Coq.Structures.Equalities HasEqDec <> mod
sec 5336:5339 WSetsOn Spec
var 5353:5353 WSetsOn.Spec s
var 5355:5356 WSetsOn.Spec s'
R5359:5359 Coq.MSets.MSetInterface WSetsOn t defax
var 5373:5373 WSetsOn.Spec x
var 5375:5375 WSetsOn.Spec y
R5379:5381 Coq.MSets.MSetInterface WSetsOn elt def
var 5395:5395 WSetsOn.Spec f
R5402:5405 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5406:5409 Coq.Init.Datatypes <> bool ind
R5399:5401 Coq.MSets.MSetInterface WSetsOn elt def
syndef 5423:5429 WSetsOn compatb
R5435:5440 Coq.Classes.Morphisms <> Proper class
R5447:5449 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R5443:5446 Coq.MSets.MSetInterface E eq defax
R5450:5457 Coq.Init.Logic <> eq ind
ax 5490:5497 WSetsOn mem_spec
R5515:5519 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5508:5510 Coq.Init.Logic <> :type_scope:x_'='_x not
R5501:5503 Coq.MSets.MSetInterface WSetsOn mem defax
R5507:5507 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5505:5505 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5511:5514 Coq.Init.Datatypes <> true constr
R5520:5521 Coq.MSets.MSetInterface WSetsOn In defax
R5525:5525 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5523:5523 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
ax 5540:5549 WSetsOn equal_spec
R5570:5574 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5563:5565 Coq.Init.Logic <> :type_scope:x_'='_x not
R5553:5557 Coq.MSets.MSetInterface WSetsOn equal defax
R5561:5562 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R5559:5559 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5566:5569 Coq.Init.Datatypes <> true constr
R5576:5578 Coq.MSets.MSetInterface WSetsOn ::x_'[=]'_x not
R5575:5575 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5579:5580 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
ax 5595:5605 WSetsOn subset_spec
R5627:5631 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5620:5622 Coq.Init.Logic <> :type_scope:x_'='_x not
R5609:5614 Coq.MSets.MSetInterface WSetsOn subset defax
R5618:5619 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R5616:5616 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5623:5626 Coq.Init.Datatypes <> true constr
R5633:5636 Coq.MSets.MSetInterface WSetsOn ::x_'[<=]'_x not
R5632:5632 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5637:5638 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
ax 5653:5662 WSetsOn empty_spec
R5666:5670 Coq.MSets.MSetInterface WSetsOn Empty def
R5672:5676 Coq.MSets.MSetInterface WSetsOn empty defax
ax 5691:5703 WSetsOn is_empty_spec
R5724:5728 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5717:5719 Coq.Init.Logic <> :type_scope:x_'='_x not
R5707:5714 Coq.MSets.MSetInterface WSetsOn is_empty defax
R5716:5716 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5720:5723 Coq.Init.Datatypes <> true constr
R5729:5733 Coq.MSets.MSetInterface WSetsOn Empty def
R5735:5735 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
ax 5750:5757 WSetsOn add_spec
R5775:5779 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5761:5762 Coq.MSets.MSetInterface WSetsOn In defax
R5767:5769 Coq.MSets.MSetInterface WSetsOn add defax
R5773:5773 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5771:5771 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5764:5764 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
R5788:5791 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R5780:5783 Coq.MSets.MSetInterface E eq defax
R5787:5787 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5785:5785 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
R5792:5793 Coq.MSets.MSetInterface WSetsOn In defax
R5797:5797 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5795:5795 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
ax 5812:5822 WSetsOn remove_spec
R5843:5847 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5826:5827 Coq.MSets.MSetInterface WSetsOn In defax
R5832:5837 Coq.MSets.MSetInterface WSetsOn remove defax
R5841:5841 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5839:5839 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5829:5829 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
R5854:5857 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5848:5849 Coq.MSets.MSetInterface WSetsOn In defax
R5853:5853 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5851:5851 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
R5858:5858 Coq.Init.Logic <> :type_scope:'~'_x not
R5859:5862 Coq.MSets.MSetInterface E eq defax
R5866:5866 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5864:5864 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
ax 5881:5894 WSetsOn singleton_spec
R5916:5920 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5898:5899 Coq.MSets.MSetInterface WSetsOn In defax
R5904:5912 Coq.MSets.MSetInterface WSetsOn singleton defax
R5914:5914 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5901:5901 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
R5921:5924 Coq.MSets.MSetInterface E eq defax
R5928:5928 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5926:5926 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
ax 5943:5952 WSetsOn union_spec
R5973:5977 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5956:5957 Coq.MSets.MSetInterface WSetsOn In defax
R5962:5966 Coq.MSets.MSetInterface WSetsOn union defax
R5970:5971 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R5968:5968 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5959:5959 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5984:5987 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R5978:5979 Coq.MSets.MSetInterface WSetsOn In defax
R5983:5983 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5981:5981 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5988:5989 Coq.MSets.MSetInterface WSetsOn In defax
R5993:5994 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R5991:5991 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
ax 6009:6018 WSetsOn inter_spec
R6039:6043 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6022:6023 Coq.MSets.MSetInterface WSetsOn In defax
R6028:6032 Coq.MSets.MSetInterface WSetsOn inter defax
R6036:6037 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R6034:6034 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6025:6025 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6050:6053 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6044:6045 Coq.MSets.MSetInterface WSetsOn In defax
R6049:6049 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6047:6047 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6054:6055 Coq.MSets.MSetInterface WSetsOn In defax
R6059:6060 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R6057:6057 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
ax 6075:6083 WSetsOn diff_spec
R6103:6107 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6087:6088 Coq.MSets.MSetInterface WSetsOn In defax
R6093:6096 Coq.MSets.MSetInterface WSetsOn diff defax
R6100:6101 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R6098:6098 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6090:6090 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6114:6117 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6108:6109 Coq.MSets.MSetInterface WSetsOn In defax
R6113:6113 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6111:6111 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6118:6118 Coq.Init.Logic <> :type_scope:'~'_x not
R6119:6120 Coq.MSets.MSetInterface WSetsOn In defax
R6124:6125 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R6122:6122 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
ax 6140:6148 WSetsOn fold_spec
R6175:6175 Coq.MSets.MSetInterface <> A var
R6186:6189 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6191:6194 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6195:6195 Coq.MSets.MSetInterface <> A var
R6190:6190 Coq.MSets.MSetInterface <> A var
R6183:6185 Coq.MSets.MSetInterface WSetsOn elt def
R6213:6215 Coq.Init.Logic <> :type_scope:x_'='_x not
R6203:6206 Coq.MSets.MSetInterface WSetsOn fold defax
R6212:6212 Coq.MSets.MSetInterface <> i var
R6210:6210 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6208:6208 Coq.MSets.MSetInterface <> f var
R6216:6224 Coq.Lists.List <> fold_left def
R6248:6248 Coq.MSets.MSetInterface <> i var
R6236:6243 Coq.MSets.MSetInterface WSetsOn elements defax
R6245:6245 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6227:6230 Coq.Program.Basics <> flip def
R6232:6232 Coq.MSets.MSetInterface <> f var
ax 6263:6275 WSetsOn cardinal_spec
R6289:6291 Coq.Init.Logic <> :type_scope:x_'='_x not
R6279:6286 Coq.MSets.MSetInterface WSetsOn cardinal defax
R6288:6288 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6292:6297 Coq.Init.Datatypes <> length def
R6300:6307 Coq.MSets.MSetInterface WSetsOn elements defax
R6309:6309 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
ax 6325:6335 WSetsOn filter_spec
R6348:6356 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6399:6399 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6374:6378 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6357:6358 Coq.MSets.MSetInterface WSetsOn In defax
R6363:6368 Coq.MSets.MSetInterface WSetsOn filter defax
R6372:6372 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6370:6370 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6360:6360 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6385:6388 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6379:6380 Coq.MSets.MSetInterface WSetsOn In defax
R6384:6384 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6382:6382 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6392:6394 Coq.Init.Logic <> :type_scope:x_'='_x not
R6389:6389 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6391:6391 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6395:6398 Coq.Init.Datatypes <> true constr
R6339:6345 Coq.MSets.MSetInterface WSetsOn compatb syndef
R6347:6347 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
ax 6414:6425 WSetsOn for_all_spec
R6438:6446 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6501:6501 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6465:6469 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6458:6460 Coq.Init.Logic <> :type_scope:x_'='_x not
R6447:6453 Coq.MSets.MSetInterface WSetsOn for_all defax
R6457:6457 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6455:6455 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6461:6464 Coq.Init.Datatypes <> true constr
R6470:6476 Coq.MSets.MSetInterface WSetsOn For_all def
R6500:6500 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6491:6493 Coq.Init.Logic <> :type_scope:x_'='_x not
R6488:6488 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6490:6490 Coq.MSets.MSetInterface <> x var
R6494:6497 Coq.Init.Datatypes <> true constr
R6429:6435 Coq.MSets.MSetInterface WSetsOn compatb syndef
R6437:6437 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
ax 6516:6526 WSetsOn exists_spec
R6539:6547 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6601:6601 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6566:6570 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6559:6561 Coq.Init.Logic <> :type_scope:x_'='_x not
R6548:6554 Coq.MSets.MSetInterface WSetsOn exists_ defax
R6558:6558 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6556:6556 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6562:6565 Coq.Init.Datatypes <> true constr
R6571:6576 Coq.MSets.MSetInterface WSetsOn Exists def
R6600:6600 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6591:6593 Coq.Init.Logic <> :type_scope:x_'='_x not
R6588:6588 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6590:6590 Coq.MSets.MSetInterface <> x var
R6594:6597 Coq.Init.Datatypes <> true constr
R6530:6536 Coq.MSets.MSetInterface WSetsOn compatb syndef
R6538:6538 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
ax 6616:6630 WSetsOn partition_spec1
R6643:6650 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6670:6674 Coq.MSets.MSetInterface WSetsOn ::x_'[=]'_x not
R6651:6653 Coq.Init.Datatypes <> fst def
R6656:6664 Coq.MSets.MSetInterface WSetsOn partition defax
R6668:6668 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6666:6666 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6675:6680 Coq.MSets.MSetInterface WSetsOn filter defax
R6684:6684 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6682:6682 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6634:6640 Coq.MSets.MSetInterface WSetsOn compatb syndef
R6642:6642 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
ax 6699:6713 WSetsOn partition_spec2
R6726:6733 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6753:6757 Coq.MSets.MSetInterface WSetsOn ::x_'[=]'_x not
R6734:6736 Coq.Init.Datatypes <> snd def
R6739:6747 Coq.MSets.MSetInterface WSetsOn partition defax
R6751:6751 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6749:6749 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6758:6763 Coq.MSets.MSetInterface WSetsOn filter defax
R6787:6787 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6775:6778 Coq.Init.Datatypes <> negb def
R6781:6781 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6783:6783 Coq.MSets.MSetInterface <> x var
R6717:6723 Coq.MSets.MSetInterface WSetsOn compatb syndef
R6725:6725 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
ax 6802:6815 WSetsOn elements_spec1
R6842:6846 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6819:6821 Coq.Lists.SetoidList <> InA ind
R6831:6838 Coq.MSets.MSetInterface WSetsOn elements defax
R6840:6840 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6828:6828 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6823:6826 Coq.MSets.MSetInterface E eq defax
R6847:6848 Coq.MSets.MSetInterface WSetsOn In defax
R6852:6852 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6850:6850 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
ax 6967:6981 WSetsOn elements_spec2w
R6985:6990 Coq.Lists.SetoidList <> NoDupA ind
R6998:7005 Coq.MSets.MSetInterface WSetsOn elements defax
R7007:7007 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6992:6995 Coq.MSets.MSetInterface E eq defax
ax 7023:7034 WSetsOn choose_spec1
R7055:7058 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7059:7060 Coq.MSets.MSetInterface WSetsOn In defax
R7064:7064 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R7062:7062 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R7046:7048 Coq.Init.Logic <> :type_scope:x_'='_x not
R7038:7043 Coq.MSets.MSetInterface WSetsOn choose defax
R7045:7045 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R7049:7052 Coq.Init.Datatypes <> Some constr
R7054:7054 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
ax 7079:7090 WSetsOn choose_spec2
R7109:7112 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7113:7117 Coq.MSets.MSetInterface WSetsOn Empty def
R7119:7119 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R7102:7104 Coq.Init.Logic <> :type_scope:x_'='_x not
R7094:7099 Coq.MSets.MSetInterface WSetsOn choose defax
R7101:7101 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R7105:7108 Coq.Init.Datatypes <> None constr
R7129:7132 Coq.MSets.MSetInterface WSetsOn.Spec <> sec
R7140:7146 Coq.MSets.MSetInterface WSetsOn <> modtype
modtype 7338:7342 <> WSets
R7366:7378 Coq.Structures.Equalities DecidableType <> mod
mod 7362:7362 <> WSets.E
R7391:7397 Coq.MSets.MSetInterface WSetsOn <> mod
R7399:7399 Coq.MSets.MSetInterface WSets.E <> modtype
R7406:7410 Coq.MSets.MSetInterface WSets <> modtype
R7640:7645 Coq.MSets.MSetInterface TypElt <> mod
modtype 7620:7628 <> HasOrdOps
ax 7662:7668 HasOrdOps compare
R7673:7676 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7678:7681 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7682:7691 Coq.Init.Datatypes <> comparison ind
R7677:7677 Coq.MSets.MSetInterface T t defax
R7672:7672 Coq.MSets.MSetInterface T t defax
ax 7808:7814 HasOrdOps min_elt
R7819:7822 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7823:7828 Coq.Init.Datatypes <> option ind
R7830:7832 Coq.MSets.MSetInterface T elt defax
R7818:7818 Coq.MSets.MSetInterface T t defax
ax 7981:7987 HasOrdOps max_elt
R7992:7995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7996:8001 Coq.Init.Datatypes <> option ind
R8003:8005 Coq.MSets.MSetInterface T elt defax
R7991:7991 Coq.MSets.MSetInterface T t defax
R8093:8101 Coq.MSets.MSetInterface HasOrdOps <> modtype
R8126:8136 Coq.Structures.Orders OrderedType <> mod
R8142:8145 Coq.MSets.MSetInterface WOps <> mod
R8147:8147 Coq.MSets.MSetInterface E <> modtype
R8152:8160 Coq.MSets.MSetInterface HasOrdOps <> mod
modtype 8117:8119 <> Ops
R8189:8199 Coq.Structures.Orders OrderedType <> mod
modtype 8177:8182 <> SetsOn
R8213:8219 Coq.MSets.MSetInterface WSetsOn <> mod
R8221:8221 Coq.MSets.MSetInterface E <> modtype
R8226:8234 Coq.MSets.MSetInterface HasOrdOps <> mod
R8239:8243 Coq.Structures.Orders HasLt <> mod
R8248:8257 Coq.Structures.Orders IsStrOrder <> mod
sec 8271:8274 SetsOn Spec
var 8288:8288 SetsOn.Spec s
var 8290:8291 SetsOn.Spec s'
R8294:8294 Coq.MSets.MSetInterface SetsOn t defax
var 8308:8308 SetsOn.Spec x
var 8310:8310 SetsOn.Spec y
R8314:8316 Coq.MSets.MSetInterface SetsOn elt def
ax 8332:8343 SetsOn compare_spec
R8347:8354 Coq.Init.Datatypes <> CompSpec def
R8368:8374 Coq.MSets.MSetInterface SetsOn compare defax
R8378:8379 Coq.MSets.MSetInterface <> SetsOn.Spec.s' var
R8376:8376 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8364:8365 Coq.MSets.MSetInterface <> SetsOn.Spec.s' var
R8362:8362 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8359:8360 Coq.MSets.MSetInterface SetsOn lt defax
R8356:8357 Coq.MSets.MSetInterface SetsOn eq def
ax 8444:8457 SetsOn elements_spec2
R8461:8464 Coq.Sorting.Sorted <> sort syndef
R8472:8479 Coq.MSets.MSetInterface SetsOn elements defax
R8481:8481 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8466:8469 Coq.MSets.MSetInterface E lt defax
ax 8707:8719 SetsOn min_elt_spec1
R8741:8744 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8745:8746 Coq.MSets.MSetInterface SetsOn In defax
R8750:8750 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8748:8748 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R8732:8734 Coq.Init.Logic <> :type_scope:x_'='_x not
R8723:8729 Coq.MSets.MSetInterface SetsOn min_elt defax
R8731:8731 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8735:8738 Coq.Init.Datatypes <> Some constr
R8740:8740 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
ax 8765:8777 SetsOn min_elt_spec2
R8799:8802 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8809:8812 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8813:8814 Coq.Init.Logic <> :type_scope:'~'_x not
R8815:8818 Coq.MSets.MSetInterface E lt defax
R8822:8822 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R8820:8820 Coq.MSets.MSetInterface <> SetsOn.Spec.y var
R8803:8804 Coq.MSets.MSetInterface SetsOn In defax
R8808:8808 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8806:8806 Coq.MSets.MSetInterface <> SetsOn.Spec.y var
R8790:8792 Coq.Init.Logic <> :type_scope:x_'='_x not
R8781:8787 Coq.MSets.MSetInterface SetsOn min_elt defax
R8789:8789 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8793:8796 Coq.Init.Datatypes <> Some constr
R8798:8798 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
ax 8837:8849 SetsOn min_elt_spec3
R8869:8872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8873:8877 Coq.MSets.MSetInterface SetsOn Empty def
R8879:8879 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8862:8864 Coq.Init.Logic <> :type_scope:x_'='_x not
R8853:8859 Coq.MSets.MSetInterface SetsOn min_elt defax
R8861:8861 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8865:8868 Coq.Init.Datatypes <> None constr
ax 8895:8907 SetsOn max_elt_spec1
R8929:8932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8933:8934 Coq.MSets.MSetInterface SetsOn In defax
R8938:8938 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8936:8936 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R8920:8922 Coq.Init.Logic <> :type_scope:x_'='_x not
R8911:8917 Coq.MSets.MSetInterface SetsOn max_elt defax
R8919:8919 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8923:8926 Coq.Init.Datatypes <> Some constr
R8928:8928 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
ax 8953:8965 SetsOn max_elt_spec2
R8987:8990 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8997:9000 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9001:9002 Coq.Init.Logic <> :type_scope:'~'_x not
R9003:9006 Coq.MSets.MSetInterface E lt defax
R9010:9010 Coq.MSets.MSetInterface <> SetsOn.Spec.y var
R9008:9008 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R8991:8992 Coq.MSets.MSetInterface SetsOn In defax
R8996:8996 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8994:8994 Coq.MSets.MSetInterface <> SetsOn.Spec.y var
R8978:8980 Coq.Init.Logic <> :type_scope:x_'='_x not
R8969:8975 Coq.MSets.MSetInterface SetsOn max_elt defax
R8977:8977 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8981:8984 Coq.Init.Datatypes <> Some constr
R8986:8986 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
ax 9025:9037 SetsOn max_elt_spec3
R9057:9060 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9061:9065 Coq.MSets.MSetInterface SetsOn Empty def
R9067:9067 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R9050:9052 Coq.Init.Logic <> :type_scope:x_'='_x not
R9041:9047 Coq.MSets.MSetInterface SetsOn max_elt defax
R9049:9049 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R9053:9056 Coq.Init.Datatypes <> None constr
ax 9129:9140 SetsOn choose_spec3
R9161:9164 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9183:9190 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9201:9204 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9205:9208 Coq.MSets.MSetInterface E eq defax
R9212:9212 Coq.MSets.MSetInterface <> SetsOn.Spec.y var
R9210:9210 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R9191:9195 Coq.MSets.MSetInterface SetsOn Equal def
R9199:9200 Coq.MSets.MSetInterface <> SetsOn.Spec.s' var
R9197:9197 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R9174:9176 Coq.Init.Logic <> :type_scope:x_'='_x not
R9165:9170 Coq.MSets.MSetInterface SetsOn choose defax
R9172:9173 Coq.MSets.MSetInterface <> SetsOn.Spec.s' var
R9177:9180 Coq.Init.Datatypes <> Some constr
R9182:9182 Coq.MSets.MSetInterface <> SetsOn.Spec.y var
R9152:9154 Coq.Init.Logic <> :type_scope:x_'='_x not
R9144:9149 Coq.MSets.MSetInterface SetsOn choose defax
R9151:9151 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R9155:9158 Coq.Init.Datatypes <> Some constr
R9160:9160 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R9222:9225 Coq.MSets.MSetInterface SetsOn.Spec <> sec
R9233:9238 Coq.MSets.MSetInterface SetsOn <> modtype
modtype 9445:9448 <> Sets
R9472:9482 Coq.Structures.Orders OrderedType <> mod
mod 9468:9468 <> Sets.E
R9495:9500 Coq.MSets.MSetInterface SetsOn <> mod
R9502:9502 Coq.MSets.MSetInterface Sets.E <> modtype
R9509:9512 Coq.MSets.MSetInterface Sets <> modtype
R9533:9536 Coq.MSets.MSetInterface Sets <> mod
modtype 9528:9528 <> S
R11751:11763 Coq.Structures.Equalities DecidableType <> mod
modtype 11737:11744 <> WRawSets
R11822:11825 Coq.MSets.MSetInterface WOps <> mod
R11827:11827 Coq.MSets.MSetInterface E <> modtype
ax 11890:11893 WRawSets IsOk
R11898:11901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11897:11897 Coq.MSets.MSetInterface WRawSets t defax
ind 11916:11917 WRawSets Ok
constr 11935:11936 WRawSets ok
rec 11916:11917 WRawSets Ok
proj 11935:11936 WRawSets ok
R11922:11922 Coq.MSets.MSetInterface WRawSets t defax
R11940:11943 Coq.MSets.MSetInterface WRawSets IsOk defax
R11945:11945 Coq.MSets.MSetInterface <> s var
ax 12200:12203 WRawSets isok
R12208:12211 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12212:12215 Coq.Init.Datatypes <> bool ind
R12207:12207 Coq.MSets.MSetInterface WRawSets t defax
inst 12383:12389 WRawSets isok_Ok
R12401:12403 Coq.Init.Logic <> :type_scope:x_'='_x not
R12395:12398 Coq.MSets.MSetInterface WRawSets isok defax
R12400:12400 Coq.MSets.MSetInterface <> s var
R12404:12407 Coq.Init.Datatypes <> true constr
R12412:12413 Coq.MSets.MSetInterface WRawSets Ok class
R12415:12415 Coq.MSets.MSetInterface <> s var
ax 12464:12465 WRawSets In
R12472:12475 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12477:12480 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12476:12476 Coq.MSets.MSetInterface WRawSets t defax
R12469:12471 Coq.MSets.MSetInterface WRawSets elt def
inst 12506:12514 WRawSets In_compat
R12518:12523 Coq.Classes.Morphisms <> Proper class
R12543:12544 Coq.MSets.MSetInterface WRawSets In defax
R12530:12532 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R12526:12529 Coq.MSets.MSetInterface E eq defax
R12535:12537 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R12533:12534 Coq.Init.Logic <> eq ind
R12538:12540 Coq.Init.Logic <> iff def
def 12561:12565 WRawSets Equal
R12586:12588 Coq.MSets.MSetInterface WRawSets elt def
R12597:12601 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12591:12592 Coq.MSets.MSetInterface WRawSets In defax
R12596:12596 Coq.MSets.MSetInterface <> s var
R12594:12594 Coq.MSets.MSetInterface <> a var
R12602:12603 Coq.MSets.MSetInterface WRawSets In defax
R12607:12608 Coq.MSets.MSetInterface <> s' var
R12605:12605 Coq.MSets.MSetInterface <> a var
def 12624:12629 WRawSets Subset
R12650:12652 Coq.MSets.MSetInterface WRawSets elt def
R12661:12664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12665:12666 Coq.MSets.MSetInterface WRawSets In defax
R12670:12671 Coq.MSets.MSetInterface <> s' var
R12668:12668 Coq.MSets.MSetInterface <> a var
R12655:12656 Coq.MSets.MSetInterface WRawSets In defax
R12660:12660 Coq.MSets.MSetInterface <> s var
R12658:12658 Coq.MSets.MSetInterface <> a var
def 12687:12691 WRawSets Empty
R12709:12711 Coq.MSets.MSetInterface WRawSets elt def
R12714:12715 Coq.Init.Logic <> :type_scope:'~'_x not
R12716:12717 Coq.MSets.MSetInterface WRawSets In defax
R12721:12721 Coq.MSets.MSetInterface <> s var
R12719:12719 Coq.MSets.MSetInterface <> a var
def 12737:12743 WRawSets For_all
R12753:12756 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12750:12752 Coq.MSets.MSetInterface WRawSets elt def
R12784:12787 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12788:12788 Coq.MSets.MSetInterface <> P var
R12790:12790 Coq.MSets.MSetInterface <> x var
R12778:12779 Coq.MSets.MSetInterface WRawSets In defax
R12783:12783 Coq.MSets.MSetInterface <> s var
R12781:12781 Coq.MSets.MSetInterface <> x var
def 12806:12811 WRawSets Exists
R12821:12824 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12818:12820 Coq.MSets.MSetInterface WRawSets elt def
R12836:12842 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12844:12845 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12852:12855 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12846:12847 Coq.MSets.MSetInterface WRawSets In defax
R12851:12851 Coq.MSets.MSetInterface <> s var
R12849:12849 Coq.MSets.MSetInterface <> x var
R12856:12856 Coq.MSets.MSetInterface <> P var
R12858:12858 Coq.MSets.MSetInterface <> x var
R12889:12893 Coq.MSets.MSetInterface WRawSets Equal def
not 12873:12873 WRawSets ::x_'[=]'_x
R12961:12966 Coq.MSets.MSetInterface WRawSets Subset def
not 12944:12944 WRawSets ::x_'[<=]'_x
def 13020:13021 WRawSets eq
R13026:13029 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13031:13034 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13030:13030 Coq.MSets.MSetInterface WRawSets t defax
R13025:13025 Coq.MSets.MSetInterface WRawSets t defax
R13043:13047 Coq.MSets.MSetInterface WRawSets Equal def
inst 13069:13076 WRawSets eq_equiv
R13080:13090 Coq.Classes.RelationClasses <> Equivalence class
R13092:13093 Coq.MSets.MSetInterface WRawSets eq def
inst 13195:13202 WRawSets empty_ok
R13206:13207 Coq.MSets.MSetInterface WRawSets Ok class
R13209:13213 Coq.MSets.MSetInterface WRawSets empty defax
inst 13235:13240 WRawSets add_ok
R13248:13249 Coq.MSets.MSetInterface WRawSets Ok class
R13251:13251 Coq.MSets.MSetInterface <> s var
R13256:13257 Coq.MSets.MSetInterface WRawSets Ok class
R13260:13262 Coq.MSets.MSetInterface WRawSets add defax
R13266:13266 Coq.MSets.MSetInterface <> s var
R13264:13264 Coq.MSets.MSetInterface <> x var
inst 13289:13297 WRawSets remove_ok
R13305:13306 Coq.MSets.MSetInterface WRawSets Ok class
R13308:13308 Coq.MSets.MSetInterface <> s var
R13313:13314 Coq.MSets.MSetInterface WRawSets Ok class
R13317:13322 Coq.MSets.MSetInterface WRawSets remove defax
R13326:13326 Coq.MSets.MSetInterface <> s var
R13324:13324 Coq.MSets.MSetInterface <> x var
inst 13349:13360 WRawSets singleton_ok
R13366:13367 Coq.MSets.MSetInterface WRawSets Ok class
R13370:13378 Coq.MSets.MSetInterface WRawSets singleton defax
R13380:13380 Coq.MSets.MSetInterface <> x var
inst 13403:13410 WRawSets union_ok
R13419:13420 Coq.MSets.MSetInterface WRawSets Ok class
R13422:13422 Coq.MSets.MSetInterface <> s var
R13425:13426 Coq.MSets.MSetInterface WRawSets Ok class
R13428:13429 Coq.MSets.MSetInterface <> s' var
R13434:13435 Coq.MSets.MSetInterface WRawSets Ok class
R13438:13442 Coq.MSets.MSetInterface WRawSets union defax
R13446:13447 Coq.MSets.MSetInterface <> s' var
R13444:13444 Coq.MSets.MSetInterface <> s var
inst 13470:13477 WRawSets inter_ok
R13486:13487 Coq.MSets.MSetInterface WRawSets Ok class
R13489:13489 Coq.MSets.MSetInterface <> s var
R13492:13493 Coq.MSets.MSetInterface WRawSets Ok class
R13495:13496 Coq.MSets.MSetInterface <> s' var
R13501:13502 Coq.MSets.MSetInterface WRawSets Ok class
R13505:13509 Coq.MSets.MSetInterface WRawSets inter defax
R13513:13514 Coq.MSets.MSetInterface <> s' var
R13511:13511 Coq.MSets.MSetInterface <> s var
inst 13537:13543 WRawSets diff_ok
R13552:13553 Coq.MSets.MSetInterface WRawSets Ok class
R13555:13555 Coq.MSets.MSetInterface <> s var
R13558:13559 Coq.MSets.MSetInterface WRawSets Ok class
R13561:13562 Coq.MSets.MSetInterface <> s' var
R13567:13568 Coq.MSets.MSetInterface WRawSets Ok class
R13571:13574 Coq.MSets.MSetInterface WRawSets diff defax
R13578:13579 Coq.MSets.MSetInterface <> s' var
R13576:13576 Coq.MSets.MSetInterface <> s var
inst 13602:13610 WRawSets filter_ok
R13618:13619 Coq.MSets.MSetInterface WRawSets Ok class
R13621:13621 Coq.MSets.MSetInterface <> s var
R13626:13627 Coq.MSets.MSetInterface WRawSets Ok class
R13630:13635 Coq.MSets.MSetInterface WRawSets filter defax
R13639:13639 Coq.MSets.MSetInterface <> s var
R13637:13637 Coq.MSets.MSetInterface <> f var
inst 13662:13674 WRawSets partition_ok1
R13682:13683 Coq.MSets.MSetInterface WRawSets Ok class
R13685:13685 Coq.MSets.MSetInterface <> s var
R13690:13691 Coq.MSets.MSetInterface WRawSets Ok class
R13694:13696 Coq.Init.Datatypes <> fst def
R13699:13707 Coq.MSets.MSetInterface WRawSets partition defax
R13711:13711 Coq.MSets.MSetInterface <> s var
R13709:13709 Coq.MSets.MSetInterface <> f var
inst 13735:13747 WRawSets partition_ok2
R13755:13756 Coq.MSets.MSetInterface WRawSets Ok class
R13758:13758 Coq.MSets.MSetInterface <> s var
R13763:13764 Coq.MSets.MSetInterface WRawSets Ok class
R13767:13769 Coq.Init.Datatypes <> snd def
R13772:13780 Coq.MSets.MSetInterface WRawSets partition defax
R13784:13784 Coq.MSets.MSetInterface <> s var
R13782:13782 Coq.MSets.MSetInterface <> f var
sec 13871:13874 WRawSets Spec
var 13888:13888 WRawSets.Spec s
var 13890:13891 WRawSets.Spec s'
R13894:13894 Coq.MSets.MSetInterface WRawSets t defax
var 13908:13908 WRawSets.Spec x
var 13910:13910 WRawSets.Spec y
R13914:13916 Coq.MSets.MSetInterface WRawSets elt def
var 13930:13930 WRawSets.Spec f
R13937:13940 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13941:13944 Coq.Init.Datatypes <> bool ind
R13934:13936 Coq.MSets.MSetInterface WRawSets elt def
syndef 13958:13964 WRawSets compatb
R13970:13975 Coq.Classes.Morphisms <> Proper class
R13982:13984 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R13978:13981 Coq.MSets.MSetInterface E eq defax
R13985:13992 Coq.Init.Logic <> eq ind
ax 14025:14032 WRawSets mem_spec
R14045:14046 Coq.MSets.MSetInterface WRawSets Ok class
R14048:14048 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14066:14070 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14059:14061 Coq.Init.Logic <> :type_scope:x_'='_x not
R14052:14054 Coq.MSets.MSetInterface WRawSets mem defax
R14058:14058 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14056:14056 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14062:14065 Coq.Init.Datatypes <> true constr
R14071:14072 Coq.MSets.MSetInterface WRawSets In defax
R14076:14076 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14074:14074 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
ax 14091:14100 WRawSets equal_spec
R14113:14114 Coq.MSets.MSetInterface WRawSets Ok class
R14116:14116 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14119:14120 Coq.MSets.MSetInterface WRawSets Ok class
R14122:14123 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14148:14152 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14141:14143 Coq.Init.Logic <> :type_scope:x_'='_x not
R14131:14135 Coq.MSets.MSetInterface WRawSets equal defax
R14139:14140 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14137:14137 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14144:14147 Coq.Init.Datatypes <> true constr
R14154:14156 Coq.MSets.MSetInterface WRawSets ::x_'[=]'_x not
R14153:14153 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14157:14158 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
ax 14173:14183 WRawSets subset_spec
R14196:14197 Coq.MSets.MSetInterface WRawSets Ok class
R14199:14199 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14202:14203 Coq.MSets.MSetInterface WRawSets Ok class
R14205:14206 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14232:14236 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14225:14227 Coq.Init.Logic <> :type_scope:x_'='_x not
R14214:14219 Coq.MSets.MSetInterface WRawSets subset defax
R14223:14224 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14221:14221 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14228:14231 Coq.Init.Datatypes <> true constr
R14238:14241 Coq.MSets.MSetInterface WRawSets ::x_'[<=]'_x not
R14237:14237 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14242:14243 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
ax 14258:14267 WRawSets empty_spec
R14271:14275 Coq.MSets.MSetInterface WRawSets Empty def
R14277:14281 Coq.MSets.MSetInterface WRawSets empty defax
ax 14296:14308 WRawSets is_empty_spec
R14329:14333 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14322:14324 Coq.Init.Logic <> :type_scope:x_'='_x not
R14312:14319 Coq.MSets.MSetInterface WRawSets is_empty defax
R14321:14321 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14325:14328 Coq.Init.Datatypes <> true constr
R14334:14338 Coq.MSets.MSetInterface WRawSets Empty def
R14340:14340 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
ax 14355:14362 WRawSets add_spec
R14375:14376 Coq.MSets.MSetInterface WRawSets Ok class
R14378:14378 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14400:14404 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14386:14387 Coq.MSets.MSetInterface WRawSets In defax
R14392:14394 Coq.MSets.MSetInterface WRawSets add defax
R14398:14398 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14396:14396 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14389:14389 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
R14413:14416 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R14405:14408 Coq.MSets.MSetInterface E eq defax
R14412:14412 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14410:14410 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
R14417:14418 Coq.MSets.MSetInterface WRawSets In defax
R14422:14422 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14420:14420 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
ax 14437:14447 WRawSets remove_spec
R14460:14461 Coq.MSets.MSetInterface WRawSets Ok class
R14463:14463 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14488:14492 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14471:14472 Coq.MSets.MSetInterface WRawSets In defax
R14477:14482 Coq.MSets.MSetInterface WRawSets remove defax
R14486:14486 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14484:14484 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14474:14474 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
R14499:14502 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14493:14494 Coq.MSets.MSetInterface WRawSets In defax
R14498:14498 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14496:14496 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
R14503:14503 Coq.Init.Logic <> :type_scope:'~'_x not
R14504:14507 Coq.MSets.MSetInterface E eq defax
R14511:14511 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14509:14509 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
ax 14526:14539 WRawSets singleton_spec
R14561:14565 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14543:14544 Coq.MSets.MSetInterface WRawSets In defax
R14549:14557 Coq.MSets.MSetInterface WRawSets singleton defax
R14559:14559 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14546:14546 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
R14566:14569 Coq.MSets.MSetInterface E eq defax
R14573:14573 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14571:14571 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
ax 14588:14597 WRawSets union_spec
R14610:14611 Coq.MSets.MSetInterface WRawSets Ok class
R14613:14613 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14616:14617 Coq.MSets.MSetInterface WRawSets Ok class
R14619:14620 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14645:14649 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14628:14629 Coq.MSets.MSetInterface WRawSets In defax
R14634:14638 Coq.MSets.MSetInterface WRawSets union defax
R14642:14643 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14640:14640 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14631:14631 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14656:14659 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R14650:14651 Coq.MSets.MSetInterface WRawSets In defax
R14655:14655 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14653:14653 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14660:14661 Coq.MSets.MSetInterface WRawSets In defax
R14665:14666 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14663:14663 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
ax 14681:14690 WRawSets inter_spec
R14703:14704 Coq.MSets.MSetInterface WRawSets Ok class
R14706:14706 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14709:14710 Coq.MSets.MSetInterface WRawSets Ok class
R14712:14713 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14738:14742 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14721:14722 Coq.MSets.MSetInterface WRawSets In defax
R14727:14731 Coq.MSets.MSetInterface WRawSets inter defax
R14735:14736 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14733:14733 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14724:14724 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14749:14752 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14743:14744 Coq.MSets.MSetInterface WRawSets In defax
R14748:14748 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14746:14746 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14753:14754 Coq.MSets.MSetInterface WRawSets In defax
R14758:14759 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14756:14756 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
ax 14774:14782 WRawSets diff_spec
R14795:14796 Coq.MSets.MSetInterface WRawSets Ok class
R14798:14798 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14801:14802 Coq.MSets.MSetInterface WRawSets Ok class
R14804:14805 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14829:14833 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14813:14814 Coq.MSets.MSetInterface WRawSets In defax
R14819:14822 Coq.MSets.MSetInterface WRawSets diff defax
R14826:14827 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14824:14824 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14816:14816 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14840:14843 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14834:14835 Coq.MSets.MSetInterface WRawSets In defax
R14839:14839 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14837:14837 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14844:14844 Coq.Init.Logic <> :type_scope:'~'_x not
R14845:14846 Coq.MSets.MSetInterface WRawSets In defax
R14850:14851 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14848:14848 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
ax 14866:14874 WRawSets fold_spec
R14901:14901 Coq.MSets.MSetInterface <> A var
R14912:14915 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14917:14920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14921:14921 Coq.MSets.MSetInterface <> A var
R14916:14916 Coq.MSets.MSetInterface <> A var
R14909:14911 Coq.MSets.MSetInterface WRawSets elt def
R14939:14941 Coq.Init.Logic <> :type_scope:x_'='_x not
R14929:14932 Coq.MSets.MSetInterface WRawSets fold defax
R14938:14938 Coq.MSets.MSetInterface <> i var
R14936:14936 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14934:14934 Coq.MSets.MSetInterface <> f var
R14942:14950 Coq.Lists.List <> fold_left def
R14974:14974 Coq.MSets.MSetInterface <> i var
R14962:14969 Coq.MSets.MSetInterface WRawSets elements defax
R14971:14971 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14953:14956 Coq.Program.Basics <> flip def
R14958:14958 Coq.MSets.MSetInterface <> f var
ax 14989:15001 WRawSets cardinal_spec
R15014:15015 Coq.MSets.MSetInterface WRawSets Ok class
R15017:15017 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15035:15037 Coq.Init.Logic <> :type_scope:x_'='_x not
R15025:15032 Coq.MSets.MSetInterface WRawSets cardinal defax
R15034:15034 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15038:15043 Coq.Init.Datatypes <> length def
R15046:15053 Coq.MSets.MSetInterface WRawSets elements defax
R15055:15055 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
ax 15071:15081 WRawSets filter_spec
R15094:15102 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15145:15145 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15120:15124 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15103:15104 Coq.MSets.MSetInterface WRawSets In defax
R15109:15114 Coq.MSets.MSetInterface WRawSets filter defax
R15118:15118 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15116:15116 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15106:15106 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15131:15134 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15125:15126 Coq.MSets.MSetInterface WRawSets In defax
R15130:15130 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15128:15128 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15138:15140 Coq.Init.Logic <> :type_scope:x_'='_x not
R15135:15135 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15137:15137 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15141:15144 Coq.Init.Datatypes <> true constr
R15085:15091 Coq.MSets.MSetInterface WRawSets compatb syndef
R15093:15093 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
ax 15160:15171 WRawSets for_all_spec
R15184:15192 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15247:15247 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15211:15215 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15204:15206 Coq.Init.Logic <> :type_scope:x_'='_x not
R15193:15199 Coq.MSets.MSetInterface WRawSets for_all defax
R15203:15203 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15201:15201 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15207:15210 Coq.Init.Datatypes <> true constr
R15216:15222 Coq.MSets.MSetInterface WRawSets For_all def
R15246:15246 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15237:15239 Coq.Init.Logic <> :type_scope:x_'='_x not
R15234:15234 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15236:15236 Coq.MSets.MSetInterface <> x var
R15240:15243 Coq.Init.Datatypes <> true constr
R15175:15181 Coq.MSets.MSetInterface WRawSets compatb syndef
R15183:15183 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
ax 15262:15272 WRawSets exists_spec
R15285:15293 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15347:15347 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15312:15316 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15305:15307 Coq.Init.Logic <> :type_scope:x_'='_x not
R15294:15300 Coq.MSets.MSetInterface WRawSets exists_ defax
R15304:15304 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15302:15302 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15308:15311 Coq.Init.Datatypes <> true constr
R15317:15322 Coq.MSets.MSetInterface WRawSets Exists def
R15346:15346 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15337:15339 Coq.Init.Logic <> :type_scope:x_'='_x not
R15334:15334 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15336:15336 Coq.MSets.MSetInterface <> x var
R15340:15343 Coq.Init.Datatypes <> true constr
R15276:15282 Coq.MSets.MSetInterface WRawSets compatb syndef
R15284:15284 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
ax 15362:15376 WRawSets partition_spec1
R15389:15396 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15416:15420 Coq.MSets.MSetInterface WRawSets ::x_'[=]'_x not
R15397:15399 Coq.Init.Datatypes <> fst def
R15402:15410 Coq.MSets.MSetInterface WRawSets partition defax
R15414:15414 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15412:15412 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15421:15426 Coq.MSets.MSetInterface WRawSets filter defax
R15430:15430 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15428:15428 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15380:15386 Coq.MSets.MSetInterface WRawSets compatb syndef
R15388:15388 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
ax 15445:15459 WRawSets partition_spec2
R15472:15479 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15499:15503 Coq.MSets.MSetInterface WRawSets ::x_'[=]'_x not
R15480:15482 Coq.Init.Datatypes <> snd def
R15485:15493 Coq.MSets.MSetInterface WRawSets partition defax
R15497:15497 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15495:15495 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15504:15509 Coq.MSets.MSetInterface WRawSets filter defax
R15533:15533 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15521:15524 Coq.Init.Datatypes <> negb def
R15527:15527 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15529:15529 Coq.MSets.MSetInterface <> x var
R15463:15469 Coq.MSets.MSetInterface WRawSets compatb syndef
R15471:15471 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
ax 15548:15561 WRawSets elements_spec1
R15588:15592 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15565:15567 Coq.Lists.SetoidList <> InA ind
R15577:15584 Coq.MSets.MSetInterface WRawSets elements defax
R15586:15586 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15574:15574 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15569:15572 Coq.MSets.MSetInterface E eq defax
R15593:15594 Coq.MSets.MSetInterface WRawSets In defax
R15598:15598 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15596:15596 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
ax 15613:15627 WRawSets elements_spec2w
R15640:15641 Coq.MSets.MSetInterface WRawSets Ok class
R15643:15643 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15647:15652 Coq.Lists.SetoidList <> NoDupA ind
R15660:15667 Coq.MSets.MSetInterface WRawSets elements defax
R15669:15669 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15654:15657 Coq.MSets.MSetInterface E eq defax
ax 15685:15696 WRawSets choose_spec1
R15717:15720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15721:15722 Coq.MSets.MSetInterface WRawSets In defax
R15726:15726 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15724:15724 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15708:15710 Coq.Init.Logic <> :type_scope:x_'='_x not
R15700:15705 Coq.MSets.MSetInterface WRawSets choose defax
R15707:15707 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15711:15714 Coq.Init.Datatypes <> Some constr
R15716:15716 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
ax 15741:15752 WRawSets choose_spec2
R15771:15774 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15775:15779 Coq.MSets.MSetInterface WRawSets Empty def
R15781:15781 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15764:15766 Coq.Init.Logic <> :type_scope:x_'='_x not
R15756:15761 Coq.MSets.MSetInterface WRawSets choose defax
R15763:15763 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15767:15770 Coq.Init.Datatypes <> None constr
R15791:15794 Coq.MSets.MSetInterface WRawSets.Spec <> sec
R15802:15809 Coq.MSets.MSetInterface WRawSets <> modtype
R15881:15893 Coq.Structures.Equalities DecidableType <> mod
R15898:15905 Coq.MSets.MSetInterface WRawSets <> mod
R15907:15907 Coq.MSets.MSetInterface E <> modtype
R15913:15919 Coq.MSets.MSetInterface WSetsOn <> mod
R15921:15921 Coq.MSets.MSetInterface E <> modtype
mod 15866:15876 <> WRaw2SetsOn
def 16034:16036 WRaw2SetsOn elt
R16041:16043 Coq.MSets.MSetInterface E t defax
constr 16061:16063 WRaw2SetsOn Mkt
rec 16055:16056 WRaw2SetsOn t_
proj 16066:16069 WRaw2SetsOn this
proj 16079:16083 WRaw2SetsOn is_ok
R16074:16076 Coq.MSets.MSetInterface M t defax
R16087:16090 Coq.MSets.MSetInterface M Ok class
R16092:16095 Coq.MSets.MSetInterface <> this meth
def 16111:16111 WRaw2SetsOn t
R16116:16117 Coq.MSets.MSetInterface WRaw2SetsOn t_ rec
R16131:16133 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R16131:16133 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
def 16205:16206 WRaw2SetsOn In
R16213:16215 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R16222:16222 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16228:16231 Coq.MSets.MSetInterface M In defax
R16238:16241 Coq.MSets.MSetInterface WRaw2SetsOn this proj
R16235:16235 Coq.MSets.MSetInterface <> s var
R16233:16233 Coq.MSets.MSetInterface <> x var
def 16257:16261 WRaw2SetsOn Equal
R16271:16271 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16288:16290 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R16299:16303 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16293:16294 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16298:16298 Coq.MSets.MSetInterface <> s var
R16296:16296 Coq.MSets.MSetInterface <> a var
R16304:16305 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16309:16310 Coq.MSets.MSetInterface <> s' var
R16307:16307 Coq.MSets.MSetInterface <> a var
def 16325:16330 WRaw2SetsOn Subset
R16340:16340 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16357:16359 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R16368:16371 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16372:16373 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16377:16378 Coq.MSets.MSetInterface <> s' var
R16375:16375 Coq.MSets.MSetInterface <> a var
R16362:16363 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16367:16367 Coq.MSets.MSetInterface <> s var
R16365:16365 Coq.MSets.MSetInterface <> a var
def 16393:16397 WRaw2SetsOn Empty
R16404:16404 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16421:16423 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R16426:16427 Coq.Init.Logic <> :type_scope:'~'_x not
R16428:16429 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16433:16433 Coq.MSets.MSetInterface <> s var
R16431:16431 Coq.MSets.MSetInterface <> a var
def 16448:16454 WRaw2SetsOn For_all
R16464:16467 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16461:16463 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R16478:16478 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16500:16503 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16504:16504 Coq.MSets.MSetInterface <> P var
R16506:16506 Coq.MSets.MSetInterface <> x var
R16494:16495 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16499:16499 Coq.MSets.MSetInterface <> s var
R16497:16497 Coq.MSets.MSetInterface <> x var
def 16521:16526 WRaw2SetsOn Exists
R16536:16539 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16533:16535 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R16550:16550 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16556:16562 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16564:16565 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16572:16575 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16566:16567 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16571:16571 Coq.MSets.MSetInterface <> s var
R16569:16569 Coq.MSets.MSetInterface <> x var
R16576:16576 Coq.MSets.MSetInterface <> P var
R16578:16578 Coq.MSets.MSetInterface <> x var
def 16594:16596 WRaw2SetsOn mem
R16603:16605 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R16612:16612 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16618:16622 Coq.MSets.MSetInterface M mem defax
R16626:16626 Coq.MSets.MSetInterface <> s var
R16624:16624 Coq.MSets.MSetInterface <> x var
def 16641:16643 WRaw2SetsOn add
R16650:16652 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R16659:16659 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16664:16664 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16669:16671 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R16674:16678 Coq.MSets.MSetInterface M add defax
R16682:16682 Coq.MSets.MSetInterface <> s var
R16680:16680 Coq.MSets.MSetInterface <> x var
def 16698:16703 WRaw2SetsOn remove
R16710:16712 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R16719:16719 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16724:16724 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16729:16731 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R16734:16741 Coq.MSets.MSetInterface M remove defax
R16745:16745 Coq.MSets.MSetInterface <> s var
R16743:16743 Coq.MSets.MSetInterface <> x var
def 16761:16769 WRaw2SetsOn singleton
R16776:16778 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R16783:16783 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16788:16790 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R16793:16803 Coq.MSets.MSetInterface M singleton defax
R16805:16805 Coq.MSets.MSetInterface <> x var
def 16821:16825 WRaw2SetsOn union
R16835:16835 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16840:16840 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16845:16847 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R16850:16856 Coq.MSets.MSetInterface M union defax
R16860:16861 Coq.MSets.MSetInterface <> s' var
R16858:16858 Coq.MSets.MSetInterface <> s var
def 16877:16881 WRaw2SetsOn inter
R16891:16891 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16896:16896 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16901:16903 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R16906:16912 Coq.MSets.MSetInterface M inter defax
R16916:16917 Coq.MSets.MSetInterface <> s' var
R16914:16914 Coq.MSets.MSetInterface <> s var
def 16933:16936 WRaw2SetsOn diff
R16946:16946 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16951:16951 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16956:16958 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R16961:16966 Coq.MSets.MSetInterface M diff defax
R16970:16971 Coq.MSets.MSetInterface <> s' var
R16968:16968 Coq.MSets.MSetInterface <> s var
def 16987:16991 WRaw2SetsOn equal
R17001:17001 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17007:17013 Coq.MSets.MSetInterface M equal defax
R17017:17018 Coq.MSets.MSetInterface <> s' var
R17015:17015 Coq.MSets.MSetInterface <> s var
def 17033:17038 WRaw2SetsOn subset
R17048:17048 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17054:17061 Coq.MSets.MSetInterface M subset defax
R17065:17066 Coq.MSets.MSetInterface <> s' var
R17063:17063 Coq.MSets.MSetInterface <> s var
def 17081:17085 WRaw2SetsOn empty
R17089:17089 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17094:17096 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R17098:17104 Coq.MSets.MSetInterface M empty defax
def 17119:17126 WRaw2SetsOn is_empty
R17133:17133 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17139:17148 Coq.MSets.MSetInterface M is_empty defax
R17150:17150 Coq.MSets.MSetInterface <> s var
def 17165:17172 WRaw2SetsOn elements
R17179:17179 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17184:17187 Coq.Init.Datatypes <> list ind
R17189:17191 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17196:17205 Coq.MSets.MSetInterface M elements defax
R17207:17207 Coq.MSets.MSetInterface <> s var
def 17222:17227 WRaw2SetsOn choose
R17234:17234 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17239:17244 Coq.Init.Datatypes <> option ind
R17246:17248 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17253:17260 Coq.MSets.MSetInterface M choose defax
R17262:17262 Coq.MSets.MSetInterface <> s var
def 17277:17280 WRaw2SetsOn fold
R17300:17303 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17305:17308 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17309:17309 Coq.MSets.MSetInterface <> A var
R17304:17304 Coq.MSets.MSetInterface <> A var
R17297:17299 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17316:17316 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17322:17325 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17326:17326 Coq.MSets.MSetInterface <> A var
R17321:17321 Coq.MSets.MSetInterface <> A var
R17331:17336 Coq.MSets.MSetInterface M fold defax
R17340:17340 Coq.MSets.MSetInterface <> s var
R17338:17338 Coq.MSets.MSetInterface <> f var
def 17355:17362 WRaw2SetsOn cardinal
R17369:17369 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17375:17384 Coq.MSets.MSetInterface M cardinal defax
R17386:17386 Coq.MSets.MSetInterface <> s var
def 17401:17406 WRaw2SetsOn filter
R17416:17419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17420:17423 Coq.Init.Datatypes <> bool ind
R17413:17415 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17430:17430 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17435:17435 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17440:17442 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R17445:17452 Coq.MSets.MSetInterface M filter defax
R17456:17456 Coq.MSets.MSetInterface <> s var
R17454:17454 Coq.MSets.MSetInterface <> f var
def 17472:17478 WRaw2SetsOn for_all
R17488:17491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17492:17495 Coq.Init.Datatypes <> bool ind
R17485:17487 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17502:17502 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17508:17516 Coq.MSets.MSetInterface M for_all defax
R17520:17520 Coq.MSets.MSetInterface <> s var
R17518:17518 Coq.MSets.MSetInterface <> f var
def 17535:17541 WRaw2SetsOn exists_
R17551:17554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17555:17558 Coq.Init.Datatypes <> bool ind
R17548:17550 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17565:17565 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17571:17579 Coq.MSets.MSetInterface M exists_ defax
R17583:17583 Coq.MSets.MSetInterface <> s var
R17581:17581 Coq.MSets.MSetInterface <> f var
def 17598:17606 WRaw2SetsOn partition
R17616:17619 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17620:17623 Coq.Init.Datatypes <> bool ind
R17613:17615 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17630:17630 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17636:17638 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R17635:17635 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17639:17639 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17656:17666 Coq.MSets.MSetInterface M partition defax
R17670:17670 Coq.MSets.MSetInterface <> s var
R17668:17668 Coq.MSets.MSetInterface <> f var
R17675:17675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17687:17688 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17700:17700 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17676:17678 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R17681:17683 Coq.Init.Datatypes <> fst def
R17685:17685 Coq.MSets.MSetInterface <> p var
R17689:17691 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R17694:17696 Coq.Init.Datatypes <> snd def
R17698:17698 Coq.MSets.MSetInterface <> p var
inst 17714:17722 WRaw2SetsOn In_compat
R17726:17731 Coq.Classes.Morphisms <> Proper class
R17751:17752 Coq.MSets.MSetInterface WRaw2SetsOn In def
R17738:17740 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R17734:17737 Coq.MSets.MSetInterface E eq defax
R17743:17745 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R17741:17742 Coq.Init.Logic <> eq ind
R17746:17748 Coq.Init.Logic <> iff def
R17789:17799 Coq.MSets.MSetInterface M In_compat prfax
R17789:17799 Coq.MSets.MSetInterface M In_compat prfax
def 17832:17833 WRaw2SetsOn eq
R17838:17841 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17843:17846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17842:17842 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17837:17837 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17855:17859 Coq.MSets.MSetInterface WRaw2SetsOn Equal def
inst 17873:17880 WRaw2SetsOn eq_equiv
R17884:17894 Coq.Classes.RelationClasses <> Equivalence class
R17896:17897 Coq.MSets.MSetInterface WRaw2SetsOn eq def
def 17938:17943 WRaw2SetsOn eq_dec
R17960:17960 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17964:17965 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R17973:17977 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R17986:17987 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R17966:17967 Coq.MSets.MSetInterface WRaw2SetsOn eq def
R17971:17972 Coq.MSets.MSetInterface <> s' var
R17969:17969 Coq.MSets.MSetInterface <> s var
R17978:17978 Coq.Init.Logic <> :type_scope:'~'_x not
R17979:17980 Coq.MSets.MSetInterface WRaw2SetsOn eq def
R17984:17985 Coq.MSets.MSetInterface <> s' var
R17982:17982 Coq.MSets.MSetInterface <> s var
R18034:18034 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18047:18049 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18063:18063 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18035:18041 Coq.MSets.MSetInterface M Equal def
R18050:18050 Coq.Init.Logic <> :type_scope:'~'_x not
R18051:18057 Coq.MSets.MSetInterface M Equal def
R18034:18034 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18047:18049 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18063:18063 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18035:18041 Coq.MSets.MSetInterface M Equal def
R18050:18050 Coq.Init.Logic <> :type_scope:'~'_x not
R18051:18057 Coq.MSets.MSetInterface M Equal def
R18079:18085 Coq.MSets.MSetInterface M equal defax
R18128:18139 Coq.MSets.MSetInterface M equal_spec defax
R18079:18085 Coq.MSets.MSetInterface M equal defax
R18128:18139 Coq.MSets.MSetInterface M equal_spec defax
R18128:18139 Coq.MSets.MSetInterface M equal_spec defax
R18128:18139 Coq.MSets.MSetInterface M equal_spec defax
R18128:18139 Coq.MSets.MSetInterface M equal_spec defax
R18128:18139 Coq.MSets.MSetInterface M equal_spec defax
R18128:18139 Coq.MSets.MSetInterface M equal_spec defax
R18128:18139 Coq.MSets.MSetInterface M equal_spec defax
R18128:18139 Coq.MSets.MSetInterface M equal_spec defax
sec 18175:18178 WRaw2SetsOn Spec
var 18192:18192 WRaw2SetsOn.Spec s
var 18194:18195 WRaw2SetsOn.Spec s'
R18199:18199 Coq.MSets.MSetInterface WRaw2SetsOn t def
var 18213:18213 WRaw2SetsOn.Spec x
var 18215:18215 WRaw2SetsOn.Spec y
R18219:18221 Coq.MSets.MSetInterface WRaw2SetsOn elt def
var 18235:18235 WRaw2SetsOn.Spec f
R18242:18245 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18246:18249 Coq.Init.Datatypes <> bool ind
R18239:18241 Coq.MSets.MSetInterface WRaw2SetsOn elt def
syndef 18263:18269 WRaw2SetsOn compatb
R18275:18280 Coq.Classes.Morphisms <> Proper class
R18287:18289 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R18283:18286 Coq.MSets.MSetInterface E eq defax
R18290:18297 Coq.Init.Logic <> eq ind
prf 18326:18333 WRaw2SetsOn mem_spec
R18351:18355 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18344:18346 Coq.Init.Logic <> :type_scope:x_'='_x not
R18337:18339 Coq.MSets.MSetInterface WRaw2SetsOn mem def
R18343:18343 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18341:18341 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R18347:18350 Coq.Init.Datatypes <> true constr
R18356:18357 Coq.MSets.MSetInterface WRaw2SetsOn In def
R18361:18361 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18359:18359 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R18381:18390 Coq.MSets.MSetInterface M mem_spec defax
R18381:18390 Coq.MSets.MSetInterface M mem_spec defax
prf 18413:18422 WRaw2SetsOn equal_spec
R18443:18447 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18436:18438 Coq.Init.Logic <> :type_scope:x_'='_x not
R18426:18430 Coq.MSets.MSetInterface WRaw2SetsOn equal def
R18434:18435 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R18432:18432 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18439:18442 Coq.Init.Datatypes <> true constr
R18448:18452 Coq.MSets.MSetInterface WRaw2SetsOn Equal def
R18456:18457 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R18454:18454 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18477:18488 Coq.MSets.MSetInterface M equal_spec defax
R18477:18488 Coq.MSets.MSetInterface M equal_spec defax
prf 18513:18523 WRaw2SetsOn subset_spec
R18545:18549 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18538:18540 Coq.Init.Logic <> :type_scope:x_'='_x not
R18527:18532 Coq.MSets.MSetInterface WRaw2SetsOn subset def
R18536:18537 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R18534:18534 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18541:18544 Coq.Init.Datatypes <> true constr
R18550:18555 Coq.MSets.MSetInterface WRaw2SetsOn Subset def
R18559:18560 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R18557:18557 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18580:18592 Coq.MSets.MSetInterface M subset_spec defax
R18580:18592 Coq.MSets.MSetInterface M subset_spec defax
prf 18617:18626 WRaw2SetsOn empty_spec
R18630:18634 Coq.MSets.MSetInterface WRaw2SetsOn Empty def
R18636:18640 Coq.MSets.MSetInterface WRaw2SetsOn empty def
R18658:18669 Coq.MSets.MSetInterface M empty_spec defax
R18658:18669 Coq.MSets.MSetInterface M empty_spec defax
prf 18685:18697 WRaw2SetsOn is_empty_spec
R18718:18722 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18711:18713 Coq.Init.Logic <> :type_scope:x_'='_x not
R18701:18708 Coq.MSets.MSetInterface WRaw2SetsOn is_empty def
R18710:18710 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18714:18717 Coq.Init.Datatypes <> true constr
R18723:18727 Coq.MSets.MSetInterface WRaw2SetsOn Empty def
R18729:18729 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18749:18763 Coq.MSets.MSetInterface M is_empty_spec defax
R18749:18763 Coq.MSets.MSetInterface M is_empty_spec defax
prf 18782:18789 WRaw2SetsOn add_spec
R18807:18811 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18793:18794 Coq.MSets.MSetInterface WRaw2SetsOn In def
R18799:18801 Coq.MSets.MSetInterface WRaw2SetsOn add def
R18805:18805 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18803:18803 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R18796:18796 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R18820:18823 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18812:18815 Coq.MSets.MSetInterface E eq defax
R18819:18819 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R18817:18817 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R18824:18825 Coq.MSets.MSetInterface WRaw2SetsOn In def
R18829:18829 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18827:18827 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R18849:18858 Coq.MSets.MSetInterface M add_spec defax
R18849:18858 Coq.MSets.MSetInterface M add_spec defax
prf 18883:18893 WRaw2SetsOn remove_spec
R18914:18918 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18897:18898 Coq.MSets.MSetInterface WRaw2SetsOn In def
R18903:18908 Coq.MSets.MSetInterface WRaw2SetsOn remove def
R18912:18912 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18910:18910 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R18900:18900 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R18925:18928 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18919:18920 Coq.MSets.MSetInterface WRaw2SetsOn In def
R18924:18924 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18922:18922 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R18929:18929 Coq.Init.Logic <> :type_scope:'~'_x not
R18930:18933 Coq.MSets.MSetInterface E eq defax
R18937:18937 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R18935:18935 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R18957:18969 Coq.MSets.MSetInterface M remove_spec defax
R18957:18969 Coq.MSets.MSetInterface M remove_spec defax
prf 18994:19007 WRaw2SetsOn singleton_spec
R19029:19033 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19011:19012 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19017:19025 Coq.MSets.MSetInterface WRaw2SetsOn singleton def
R19027:19027 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19014:19014 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R19034:19037 Coq.MSets.MSetInterface E eq defax
R19041:19041 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19039:19039 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R19061:19076 Coq.MSets.MSetInterface M singleton_spec defax
R19061:19076 Coq.MSets.MSetInterface M singleton_spec defax
prf 19097:19106 WRaw2SetsOn union_spec
R19127:19131 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19110:19111 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19116:19120 Coq.MSets.MSetInterface WRaw2SetsOn union def
R19124:19125 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R19122:19122 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19113:19113 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19138:19141 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19132:19133 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19137:19137 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19135:19135 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19142:19143 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19147:19148 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R19145:19145 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19168:19179 Coq.MSets.MSetInterface M union_spec defax
R19168:19179 Coq.MSets.MSetInterface M union_spec defax
prf 19206:19215 WRaw2SetsOn inter_spec
R19236:19240 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19219:19220 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19225:19229 Coq.MSets.MSetInterface WRaw2SetsOn inter def
R19233:19234 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R19231:19231 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19222:19222 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19247:19250 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19241:19242 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19246:19246 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19244:19244 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19251:19252 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19256:19257 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R19254:19254 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19277:19288 Coq.MSets.MSetInterface M inter_spec defax
R19277:19288 Coq.MSets.MSetInterface M inter_spec defax
prf 19315:19323 WRaw2SetsOn diff_spec
R19343:19347 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19327:19328 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19333:19336 Coq.MSets.MSetInterface WRaw2SetsOn diff def
R19340:19341 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R19338:19338 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19330:19330 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19354:19357 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19348:19349 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19353:19353 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19351:19351 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19358:19358 Coq.Init.Logic <> :type_scope:'~'_x not
R19359:19360 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19364:19365 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R19362:19362 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19385:19395 Coq.MSets.MSetInterface M diff_spec defax
R19385:19395 Coq.MSets.MSetInterface M diff_spec defax
prf 19422:19430 WRaw2SetsOn fold_spec
R19457:19457 Coq.MSets.MSetInterface <> A var
R19468:19471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19473:19476 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19477:19477 Coq.MSets.MSetInterface <> A var
R19472:19472 Coq.MSets.MSetInterface <> A var
R19465:19467 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R19497:19499 Coq.Init.Logic <> :type_scope:x_'='_x not
R19487:19490 Coq.MSets.MSetInterface WRaw2SetsOn fold def
R19496:19496 Coq.MSets.MSetInterface <> i var
R19494:19494 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19492:19492 Coq.MSets.MSetInterface <> f var
R19500:19508 Coq.Lists.List <> fold_left def
R19542:19542 Coq.MSets.MSetInterface <> i var
R19530:19537 Coq.MSets.MSetInterface WRaw2SetsOn elements def
R19539:19539 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19522:19522 Coq.MSets.MSetInterface <> f var
R19526:19526 Coq.MSets.MSetInterface <> a var
R19524:19524 Coq.MSets.MSetInterface <> e var
R19562:19572 Coq.MSets.MSetInterface M fold_spec defax
R19562:19572 Coq.MSets.MSetInterface M fold_spec defax
prf 19591:19603 WRaw2SetsOn cardinal_spec
R19617:19619 Coq.Init.Logic <> :type_scope:x_'='_x not
R19607:19614 Coq.MSets.MSetInterface WRaw2SetsOn cardinal def
R19616:19616 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19620:19625 Coq.Init.Datatypes <> length def
R19628:19635 Coq.MSets.MSetInterface WRaw2SetsOn elements def
R19637:19637 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19658:19672 Coq.MSets.MSetInterface M cardinal_spec defax
R19674:19674 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19658:19672 Coq.MSets.MSetInterface M cardinal_spec defax
R19674:19674 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
prf 19693:19703 WRaw2SetsOn filter_spec
R19716:19724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19767:19767 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19742:19746 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19725:19726 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19731:19736 Coq.MSets.MSetInterface WRaw2SetsOn filter def
R19740:19740 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19738:19738 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R19728:19728 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19753:19756 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19747:19748 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19752:19752 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19750:19750 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19760:19762 Coq.Init.Logic <> :type_scope:x_'='_x not
R19757:19757 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R19759:19759 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19763:19766 Coq.Init.Datatypes <> true constr
R19707:19713 Coq.MSets.MSetInterface WRaw2SetsOn compatb syndef
R19715:19715 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R19787:19799 Coq.MSets.MSetInterface M filter_spec defax
R19787:19799 Coq.MSets.MSetInterface M filter_spec defax
prf 19822:19833 WRaw2SetsOn for_all_spec
R19846:19854 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19909:19909 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19873:19877 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19866:19868 Coq.Init.Logic <> :type_scope:x_'='_x not
R19855:19861 Coq.MSets.MSetInterface WRaw2SetsOn for_all def
R19865:19865 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19863:19863 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R19869:19872 Coq.Init.Datatypes <> true constr
R19878:19884 Coq.MSets.MSetInterface WRaw2SetsOn For_all def
R19908:19908 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19899:19901 Coq.Init.Logic <> :type_scope:x_'='_x not
R19896:19896 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R19898:19898 Coq.MSets.MSetInterface <> x var
R19902:19905 Coq.Init.Datatypes <> true constr
R19837:19843 Coq.MSets.MSetInterface WRaw2SetsOn compatb syndef
R19845:19845 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R19929:19942 Coq.MSets.MSetInterface M for_all_spec defax
R19929:19942 Coq.MSets.MSetInterface M for_all_spec defax
prf 19963:19973 WRaw2SetsOn exists_spec
R19986:19994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20048:20048 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20013:20017 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R20006:20008 Coq.Init.Logic <> :type_scope:x_'='_x not
R19995:20001 Coq.MSets.MSetInterface WRaw2SetsOn exists_ def
R20005:20005 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20003:20003 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20009:20012 Coq.Init.Datatypes <> true constr
R20018:20023 Coq.MSets.MSetInterface WRaw2SetsOn Exists def
R20047:20047 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20038:20040 Coq.Init.Logic <> :type_scope:x_'='_x not
R20035:20035 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20037:20037 Coq.MSets.MSetInterface <> x var
R20041:20044 Coq.Init.Datatypes <> true constr
R19977:19983 Coq.MSets.MSetInterface WRaw2SetsOn compatb syndef
R19985:19985 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20068:20080 Coq.MSets.MSetInterface M exists_spec defax
R20068:20080 Coq.MSets.MSetInterface M exists_spec defax
prf 20101:20115 WRaw2SetsOn partition_spec1
R20128:20131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20132:20136 Coq.MSets.MSetInterface WRaw2SetsOn Equal def
R20161:20166 Coq.MSets.MSetInterface WRaw2SetsOn filter def
R20170:20170 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20168:20168 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20139:20141 Coq.Init.Datatypes <> fst def
R20144:20152 Coq.MSets.MSetInterface WRaw2SetsOn partition def
R20156:20156 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20154:20154 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20119:20125 Coq.MSets.MSetInterface WRaw2SetsOn compatb syndef
R20127:20127 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20191:20207 Coq.MSets.MSetInterface M partition_spec1 defax
R20191:20207 Coq.MSets.MSetInterface M partition_spec1 defax
prf 20228:20242 WRaw2SetsOn partition_spec2
R20255:20264 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20265:20269 Coq.MSets.MSetInterface WRaw2SetsOn Equal def
R20294:20299 Coq.MSets.MSetInterface WRaw2SetsOn filter def
R20323:20323 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20311:20314 Coq.Init.Datatypes <> negb def
R20317:20317 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20319:20319 Coq.MSets.MSetInterface <> x var
R20272:20274 Coq.Init.Datatypes <> snd def
R20277:20285 Coq.MSets.MSetInterface WRaw2SetsOn partition def
R20289:20289 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20287:20287 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20246:20252 Coq.MSets.MSetInterface WRaw2SetsOn compatb syndef
R20254:20254 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20344:20360 Coq.MSets.MSetInterface M partition_spec2 defax
R20344:20360 Coq.MSets.MSetInterface M partition_spec2 defax
prf 20381:20394 WRaw2SetsOn elements_spec1
R20421:20425 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R20398:20400 Coq.Lists.SetoidList <> InA ind
R20410:20417 Coq.MSets.MSetInterface WRaw2SetsOn elements def
R20419:20419 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20407:20407 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R20402:20405 Coq.MSets.MSetInterface E eq defax
R20426:20427 Coq.MSets.MSetInterface WRaw2SetsOn In def
R20431:20431 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20429:20429 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R20451:20466 Coq.MSets.MSetInterface M elements_spec1 defax
R20451:20466 Coq.MSets.MSetInterface M elements_spec1 defax
prf 20487:20501 WRaw2SetsOn elements_spec2w
R20505:20510 Coq.Lists.SetoidList <> NoDupA ind
R20518:20525 Coq.MSets.MSetInterface WRaw2SetsOn elements def
R20527:20527 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20512:20515 Coq.MSets.MSetInterface E eq defax
R20548:20564 Coq.MSets.MSetInterface M elements_spec2w defax
R20548:20564 Coq.MSets.MSetInterface M elements_spec2w defax
prf 20585:20596 WRaw2SetsOn choose_spec1
R20617:20620 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20621:20622 Coq.MSets.MSetInterface WRaw2SetsOn In def
R20626:20626 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20624:20624 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R20608:20610 Coq.Init.Logic <> :type_scope:x_'='_x not
R20600:20605 Coq.MSets.MSetInterface WRaw2SetsOn choose def
R20607:20607 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20611:20614 Coq.Init.Datatypes <> Some constr
R20616:20616 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R20646:20659 Coq.MSets.MSetInterface M choose_spec1 defax
R20646:20659 Coq.MSets.MSetInterface M choose_spec1 defax
prf 20680:20691 WRaw2SetsOn choose_spec2
R20710:20713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20714:20718 Coq.MSets.MSetInterface WRaw2SetsOn Empty def
R20720:20720 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20703:20705 Coq.Init.Logic <> :type_scope:x_'='_x not
R20695:20700 Coq.MSets.MSetInterface WRaw2SetsOn choose def
R20702:20702 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20706:20709 Coq.Init.Datatypes <> None constr
R20740:20753 Coq.MSets.MSetInterface M choose_spec2 defax
R20740:20753 Coq.MSets.MSetInterface M choose_spec2 defax
R20770:20773 Coq.MSets.MSetInterface WRaw2SetsOn.Spec <> sec
R20781:20791 Coq.MSets.MSetInterface WRaw2SetsOn <> mod
R20815:20827 Coq.Structures.Equalities DecidableType <> mod
R20832:20839 Coq.MSets.MSetInterface WRawSets <> mod
R20841:20841 Coq.MSets.MSetInterface D <> modtype
R20847:20851 Coq.MSets.MSetInterface WSets <> mod
R20870:20870 Coq.MSets.MSetInterface D <> modtype
mod 20802:20810 <> WRaw2Sets
R20887:20887 Coq.MSets.MSetInterface D <> modtype
mod 20882:20882 <> WRaw2Sets.E
R20900:20910 Coq.MSets.MSetInterface WRaw2SetsOn <> modtype
R20912:20912 Coq.MSets.MSetInterface D <> modtype
R20914:20914 Coq.MSets.MSetInterface M <> modtype
R20921:20929 Coq.MSets.MSetInterface WRaw2Sets <> mod
R20997:21007 Coq.Structures.Orders OrderedType <> mod
modtype 20984:20990 <> RawSets
R21021:21028 Coq.MSets.MSetInterface WRawSets <> mod
R21030:21030 Coq.MSets.MSetInterface E <> modtype
R21035:21043 Coq.MSets.MSetInterface HasOrdOps <> mod
R21048:21052 Coq.Structures.Orders HasLt <> mod
R21057:21066 Coq.Structures.Orders IsStrOrder <> mod
sec 21080:21083 RawSets Spec
var 21097:21097 RawSets.Spec s
var 21099:21100 RawSets.Spec s'
R21103:21103 Coq.MSets.MSetInterface RawSets t defax
var 21117:21117 RawSets.Spec x
var 21119:21119 RawSets.Spec y
R21123:21125 Coq.MSets.MSetInterface RawSets elt def
ax 21177:21188 RawSets compare_spec
R21201:21202 Coq.MSets.MSetInterface RawSets Ok class
R21204:21204 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21207:21208 Coq.MSets.MSetInterface RawSets Ok class
R21210:21211 Coq.MSets.MSetInterface <> RawSets.Spec.s' var
R21215:21222 Coq.Init.Datatypes <> CompSpec def
R21236:21242 Coq.MSets.MSetInterface RawSets compare defax
R21246:21247 Coq.MSets.MSetInterface <> RawSets.Spec.s' var
R21244:21244 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21232:21233 Coq.MSets.MSetInterface <> RawSets.Spec.s' var
R21230:21230 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21227:21228 Coq.MSets.MSetInterface RawSets lt defax
R21224:21225 Coq.MSets.MSetInterface RawSets eq def
ax 21312:21325 RawSets elements_spec2
R21338:21339 Coq.MSets.MSetInterface RawSets Ok class
R21341:21341 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21345:21348 Coq.Sorting.Sorted <> sort syndef
R21356:21363 Coq.MSets.MSetInterface RawSets elements defax
R21365:21365 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21350:21353 Coq.MSets.MSetInterface E lt defax
ax 21418:21430 RawSets min_elt_spec1
R21452:21455 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21456:21457 Coq.MSets.MSetInterface RawSets In defax
R21461:21461 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21459:21459 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R21443:21445 Coq.Init.Logic <> :type_scope:x_'='_x not
R21434:21440 Coq.MSets.MSetInterface RawSets min_elt defax
R21442:21442 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21446:21449 Coq.Init.Datatypes <> Some constr
R21451:21451 Coq.MSets.MSetInterface <> RawSets.Spec.x var
ax 21476:21488 RawSets min_elt_spec2
R21501:21502 Coq.MSets.MSetInterface RawSets Ok class
R21504:21504 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21526:21529 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21536:21539 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21540:21541 Coq.Init.Logic <> :type_scope:'~'_x not
R21542:21545 Coq.MSets.MSetInterface E lt defax
R21549:21549 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R21547:21547 Coq.MSets.MSetInterface <> RawSets.Spec.y var
R21530:21531 Coq.MSets.MSetInterface RawSets In defax
R21535:21535 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21533:21533 Coq.MSets.MSetInterface <> RawSets.Spec.y var
R21517:21519 Coq.Init.Logic <> :type_scope:x_'='_x not
R21508:21514 Coq.MSets.MSetInterface RawSets min_elt defax
R21516:21516 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21520:21523 Coq.Init.Datatypes <> Some constr
R21525:21525 Coq.MSets.MSetInterface <> RawSets.Spec.x var
ax 21564:21576 RawSets min_elt_spec3
R21596:21599 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21600:21604 Coq.MSets.MSetInterface RawSets Empty def
R21606:21606 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21589:21591 Coq.Init.Logic <> :type_scope:x_'='_x not
R21580:21586 Coq.MSets.MSetInterface RawSets min_elt defax
R21588:21588 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21592:21595 Coq.Init.Datatypes <> None constr
ax 21658:21670 RawSets max_elt_spec1
R21692:21695 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21696:21697 Coq.MSets.MSetInterface RawSets In defax
R21701:21701 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21699:21699 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R21683:21685 Coq.Init.Logic <> :type_scope:x_'='_x not
R21674:21680 Coq.MSets.MSetInterface RawSets max_elt defax
R21682:21682 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21686:21689 Coq.Init.Datatypes <> Some constr
R21691:21691 Coq.MSets.MSetInterface <> RawSets.Spec.x var
ax 21716:21728 RawSets max_elt_spec2
R21741:21742 Coq.MSets.MSetInterface RawSets Ok class
R21744:21744 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21766:21769 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21776:21779 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21780:21781 Coq.Init.Logic <> :type_scope:'~'_x not
R21782:21785 Coq.MSets.MSetInterface E lt defax
R21789:21789 Coq.MSets.MSetInterface <> RawSets.Spec.y var
R21787:21787 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R21770:21771 Coq.MSets.MSetInterface RawSets In defax
R21775:21775 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21773:21773 Coq.MSets.MSetInterface <> RawSets.Spec.y var
R21757:21759 Coq.Init.Logic <> :type_scope:x_'='_x not
R21748:21754 Coq.MSets.MSetInterface RawSets max_elt defax
R21756:21756 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21760:21763 Coq.Init.Datatypes <> Some constr
R21765:21765 Coq.MSets.MSetInterface <> RawSets.Spec.x var
ax 21804:21816 RawSets max_elt_spec3
R21836:21839 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21840:21844 Coq.MSets.MSetInterface RawSets Empty def
R21846:21846 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21829:21831 Coq.Init.Logic <> :type_scope:x_'='_x not
R21820:21826 Coq.MSets.MSetInterface RawSets max_elt defax
R21828:21828 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21832:21835 Coq.Init.Datatypes <> None constr
ax 21908:21919 RawSets choose_spec3
R21932:21933 Coq.MSets.MSetInterface RawSets Ok class
R21935:21935 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21938:21939 Coq.MSets.MSetInterface RawSets Ok class
R21941:21942 Coq.MSets.MSetInterface <> RawSets.Spec.s' var
R21967:21970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21989:21992 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22003:22006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22007:22010 Coq.MSets.MSetInterface E eq defax
R22014:22014 Coq.MSets.MSetInterface <> RawSets.Spec.y var
R22012:22012 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R21993:21997 Coq.MSets.MSetInterface RawSets Equal def
R22001:22002 Coq.MSets.MSetInterface <> RawSets.Spec.s' var
R21999:21999 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21980:21982 Coq.Init.Logic <> :type_scope:x_'='_x not
R21971:21976 Coq.MSets.MSetInterface RawSets choose defax
R21978:21979 Coq.MSets.MSetInterface <> RawSets.Spec.s' var
R21983:21986 Coq.Init.Datatypes <> Some constr
R21988:21988 Coq.MSets.MSetInterface <> RawSets.Spec.y var
R21958:21960 Coq.Init.Logic <> :type_scope:x_'='_x not
R21950:21955 Coq.MSets.MSetInterface RawSets choose defax
R21957:21957 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21961:21964 Coq.Init.Datatypes <> Some constr
R21966:21966 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R22024:22027 Coq.MSets.MSetInterface RawSets.Spec <> sec
R22035:22041 Coq.MSets.MSetInterface RawSets <> modtype
R22097:22107 Coq.Structures.Orders OrderedType <> mod
R22112:22118 Coq.MSets.MSetInterface RawSets <> mod
R22120:22120 Coq.MSets.MSetInterface O <> modtype
R22126:22131 Coq.MSets.MSetInterface SetsOn <> mod
R22133:22133 Coq.MSets.MSetInterface O <> modtype
mod 22083:22092 <> Raw2SetsOn
R22146:22156 Coq.MSets.MSetInterface WRaw2SetsOn <> modtype
R22158:22158 Coq.MSets.MSetInterface O <> modtype
R22160:22160 Coq.MSets.MSetInterface M <> modtype
def 22177:22183 Raw2SetsOn compare
R22191:22191 Coq.MSets.MSetInterface Raw2SetsOn t def
R22197:22205 Coq.MSets.MSetInterface M compare defax
R22209:22210 Coq.MSets.MSetInterface <> s' var
R22207:22207 Coq.MSets.MSetInterface <> s var
def 22226:22232 Raw2SetsOn min_elt
R22237:22237 Coq.MSets.MSetInterface Raw2SetsOn t def
R22242:22247 Coq.Init.Datatypes <> option ind
R22249:22251 Coq.MSets.MSetInterface Raw2SetsOn elt def
R22256:22264 Coq.MSets.MSetInterface M min_elt defax
R22266:22266 Coq.MSets.MSetInterface <> s var
def 22282:22288 Raw2SetsOn max_elt
R22293:22293 Coq.MSets.MSetInterface Raw2SetsOn t def
R22298:22303 Coq.Init.Datatypes <> option ind
R22305:22307 Coq.MSets.MSetInterface Raw2SetsOn elt def
R22312:22320 Coq.MSets.MSetInterface M max_elt defax
R22322:22322 Coq.MSets.MSetInterface <> s var
def 22338:22339 Raw2SetsOn lt
R22347:22347 Coq.MSets.MSetInterface Raw2SetsOn t def
R22353:22356 Coq.MSets.MSetInterface M lt defax
R22360:22361 Coq.MSets.MSetInterface <> s' var
R22358:22358 Coq.MSets.MSetInterface <> s var
inst 22407:22417 Raw2SetsOn lt_strorder
R22421:22431 Coq.Classes.RelationClasses <> StrictOrder class
R22433:22434 Coq.MSets.MSetInterface Raw2SetsOn lt def
R22467:22468 Coq.MSets.MSetInterface Raw2SetsOn lt def
R22487:22496 Coq.Classes.RelationClasses <> complement def
R22519:22531 Coq.Classes.RelationClasses <> irreflexivity def
R22519:22531 Coq.Classes.RelationClasses <> irreflexivity def
inst 22590:22598 Raw2SetsOn lt_compat
R22602:22607 Coq.Classes.Morphisms <> Proper class
R22625:22626 Coq.MSets.MSetInterface Raw2SetsOn lt def
R22612:22614 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R22610:22611 Coq.MSets.MSetInterface Raw2SetsOn eq def
R22617:22619 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R22615:22616 Coq.MSets.MSetInterface Raw2SetsOn eq def
R22620:22622 Coq.Init.Logic <> iff def
R22659:22660 Coq.MSets.MSetInterface Raw2SetsOn eq def
R22663:22664 Coq.MSets.MSetInterface Raw2SetsOn lt def
R22735:22738 Coq.MSets.MSetInterface M eq def
R22735:22738 Coq.MSets.MSetInterface M eq def
R22763:22766 Coq.MSets.MSetInterface M eq def
R22763:22766 Coq.MSets.MSetInterface M eq def
sec 22829:22832 Raw2SetsOn Spec
var 22846:22846 Raw2SetsOn.Spec s
var 22848:22849 Raw2SetsOn.Spec s'
var 22851:22853 Raw2SetsOn.Spec s''
R22857:22857 Coq.MSets.MSetInterface Raw2SetsOn t def
var 22871:22871 Raw2SetsOn.Spec x
var 22873:22873 Raw2SetsOn.Spec y
R22877:22879 Coq.MSets.MSetInterface Raw2SetsOn elt def
prf 22891:22902 Raw2SetsOn compare_spec
R22906:22913 Coq.Init.Datatypes <> CompSpec def
R22927:22933 Coq.MSets.MSetInterface Raw2SetsOn compare def
R22937:22938 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s' var
R22935:22935 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R22923:22924 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s' var
R22921:22921 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R22918:22919 Coq.MSets.MSetInterface Raw2SetsOn lt def
R22915:22916 Coq.MSets.MSetInterface Raw2SetsOn eq def
R22958:22964 Coq.MSets.MSetInterface Raw2SetsOn compare def
R22978:22991 Coq.MSets.MSetInterface M compare_spec defax
R22995:22996 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s' var
R22993:22993 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R22978:22991 Coq.MSets.MSetInterface M compare_spec defax
R22995:22996 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s' var
R22993:22993 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
prf 23072:23085 Raw2SetsOn elements_spec2
R23089:23092 Coq.Sorting.Sorted <> sort syndef
R23100:23107 Coq.MSets.MSetInterface Raw2SetsOn elements def
R23109:23109 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23094:23097 Coq.MSets.MSetInterface O lt defax
R23130:23145 Coq.MSets.MSetInterface M elements_spec2 defax
R23130:23145 Coq.MSets.MSetInterface M elements_spec2 defax
prf 23203:23215 Raw2SetsOn min_elt_spec1
R23237:23240 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23241:23242 Coq.MSets.MSetInterface Raw2SetsOn In def
R23246:23246 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23244:23244 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23228:23230 Coq.Init.Logic <> :type_scope:x_'='_x not
R23219:23225 Coq.MSets.MSetInterface Raw2SetsOn min_elt def
R23227:23227 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23231:23234 Coq.Init.Datatypes <> Some constr
R23236:23236 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23266:23280 Coq.MSets.MSetInterface M min_elt_spec1 defax
R23266:23280 Coq.MSets.MSetInterface M min_elt_spec1 defax
prf 23301:23313 Raw2SetsOn min_elt_spec2
R23335:23338 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23345:23348 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23349:23350 Coq.Init.Logic <> :type_scope:'~'_x not
R23351:23354 Coq.MSets.MSetInterface O lt defax
R23358:23358 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23356:23356 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.y var
R23339:23340 Coq.MSets.MSetInterface Raw2SetsOn In def
R23344:23344 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23342:23342 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.y var
R23326:23328 Coq.Init.Logic <> :type_scope:x_'='_x not
R23317:23323 Coq.MSets.MSetInterface Raw2SetsOn min_elt def
R23325:23325 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23329:23332 Coq.Init.Datatypes <> Some constr
R23334:23334 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23378:23392 Coq.MSets.MSetInterface M min_elt_spec2 defax
R23378:23392 Coq.MSets.MSetInterface M min_elt_spec2 defax
prf 23417:23429 Raw2SetsOn min_elt_spec3
R23449:23452 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23453:23457 Coq.MSets.MSetInterface Raw2SetsOn Empty def
R23459:23459 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23442:23444 Coq.Init.Logic <> :type_scope:x_'='_x not
R23433:23439 Coq.MSets.MSetInterface Raw2SetsOn min_elt def
R23441:23441 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23445:23448 Coq.Init.Datatypes <> None constr
R23479:23493 Coq.MSets.MSetInterface M min_elt_spec3 defax
R23479:23493 Coq.MSets.MSetInterface M min_elt_spec3 defax
prf 23549:23561 Raw2SetsOn max_elt_spec1
R23583:23586 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23587:23588 Coq.MSets.MSetInterface Raw2SetsOn In def
R23592:23592 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23590:23590 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23574:23576 Coq.Init.Logic <> :type_scope:x_'='_x not
R23565:23571 Coq.MSets.MSetInterface Raw2SetsOn max_elt def
R23573:23573 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23577:23580 Coq.Init.Datatypes <> Some constr
R23582:23582 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23612:23626 Coq.MSets.MSetInterface M max_elt_spec1 defax
R23612:23626 Coq.MSets.MSetInterface M max_elt_spec1 defax
prf 23647:23659 Raw2SetsOn max_elt_spec2
R23681:23684 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23691:23694 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23695:23696 Coq.Init.Logic <> :type_scope:'~'_x not
R23697:23700 Coq.MSets.MSetInterface O lt defax
R23704:23704 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.y var
R23702:23702 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23685:23686 Coq.MSets.MSetInterface Raw2SetsOn In def
R23690:23690 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23688:23688 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.y var
R23672:23674 Coq.Init.Logic <> :type_scope:x_'='_x not
R23663:23669 Coq.MSets.MSetInterface Raw2SetsOn max_elt def
R23671:23671 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23675:23678 Coq.Init.Datatypes <> Some constr
R23680:23680 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23724:23738 Coq.MSets.MSetInterface M max_elt_spec2 defax
R23724:23738 Coq.MSets.MSetInterface M max_elt_spec2 defax
prf 23763:23775 Raw2SetsOn max_elt_spec3
R23795:23798 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23799:23803 Coq.MSets.MSetInterface Raw2SetsOn Empty def
R23805:23805 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23788:23790 Coq.Init.Logic <> :type_scope:x_'='_x not
R23779:23785 Coq.MSets.MSetInterface Raw2SetsOn max_elt def
R23787:23787 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23791:23794 Coq.Init.Datatypes <> None constr
R23825:23839 Coq.MSets.MSetInterface M max_elt_spec3 defax
R23825:23839 Coq.MSets.MSetInterface M max_elt_spec3 defax
prf 23905:23916 Raw2SetsOn choose_spec3
R23941:23944 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23963:23966 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23977:23980 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23981:23984 Coq.MSets.MSetInterface O eq defax
R23988:23988 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.y var
R23986:23986 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23967:23971 Coq.MSets.MSetInterface Raw2SetsOn Equal def
R23975:23976 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s' var
R23973:23973 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23954:23956 Coq.Init.Logic <> :type_scope:x_'='_x not
R23945:23950 Coq.MSets.MSetInterface Raw2SetsOn choose def
R23952:23953 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s' var
R23957:23960 Coq.Init.Datatypes <> Some constr
R23962:23962 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.y var
R23932:23934 Coq.Init.Logic <> :type_scope:x_'='_x not
R23924:23929 Coq.MSets.MSetInterface Raw2SetsOn choose def
R23931:23931 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23935:23938 Coq.Init.Datatypes <> Some constr
R23940:23940 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R24008:24021 Coq.MSets.MSetInterface M choose_spec3 defax
R24008:24021 Coq.MSets.MSetInterface M choose_spec3 defax
R24049:24052 Coq.MSets.MSetInterface Raw2SetsOn.Spec <> sec
R24060:24069 Coq.MSets.MSetInterface Raw2SetsOn <> mod
R24092:24102 Coq.Structures.Orders OrderedType <> mod
R24107:24113 Coq.MSets.MSetInterface RawSets <> mod
R24115:24115 Coq.MSets.MSetInterface O <> modtype
R24121:24124 Coq.MSets.MSetInterface Sets <> mod
R24143:24143 Coq.MSets.MSetInterface O <> modtype
mod 24080:24087 <> Raw2Sets
R24160:24160 Coq.MSets.MSetInterface O <> modtype
mod 24155:24155 <> Raw2Sets.E
R24173:24182 Coq.MSets.MSetInterface Raw2SetsOn <> modtype
R24184:24184 Coq.MSets.MSetInterface O <> modtype
R24186:24186 Coq.MSets.MSetInterface M <> modtype
R24193:24200 Coq.MSets.MSetInterface Raw2Sets <> mod
R24537:24547 Coq.Structures.Orders OrderedType <> mod
modtype 24531:24532 <> IN
ax 24569:24569 IN t
ax 24597:24598 IN In
R24605:24608 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24610:24613 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24609:24609 Coq.MSets.MSetInterface IN t defax
R24602:24604 Coq.MSets.MSetInterface O t defax
inst 24638:24646 IN In_compat
R24650:24655 Coq.Classes.Morphisms <> Proper class
R24675:24676 Coq.MSets.MSetInterface IN In defax
R24662:24664 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R24658:24661 Coq.MSets.MSetInterface O eq defax
R24667:24669 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R24665:24666 Coq.Init.Logic <> eq ind
R24670:24672 Coq.Init.Logic <> iff def
def 24691:24695 IN Equal
R24721:24725 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24715:24716 Coq.MSets.MSetInterface IN In defax
R24720:24720 Coq.MSets.MSetInterface <> s var
R24718:24718 Coq.MSets.MSetInterface <> x var
R24726:24727 Coq.MSets.MSetInterface IN In defax
R24731:24732 Coq.MSets.MSetInterface <> s' var
R24729:24729 Coq.MSets.MSetInterface <> x var
def 24747:24751 IN Empty
R24768:24768 Coq.Init.Logic <> :type_scope:'~'_x not
R24769:24770 Coq.MSets.MSetInterface IN In defax
R24774:24774 Coq.MSets.MSetInterface <> s var
R24772:24772 Coq.MSets.MSetInterface <> x var
R24781:24782 Coq.MSets.MSetInterface IN <> modtype
R24812:24822 Coq.Structures.Orders OrderedType <> mod
R24834:24835 Coq.MSets.MSetInterface IN <> mod
R24837:24837 Coq.MSets.MSetInterface O <> modtype
mod 24793:24807 <> MakeSetOrdering
R24862:24877 Coq.Structures.OrdersFacts OrderedTypeFacts <> modtype
R24879:24879 Coq.MSets.MSetInterface O <> modtype
mod 24856:24857 <> MakeSetOrdering.MO
def 24895:24896 MakeSetOrdering eq
R24901:24904 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24906:24909 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24905:24905 Coq.MSets.MSetInterface M t defax
R24900:24900 Coq.MSets.MSetInterface M t defax
R24918:24922 Coq.MSets.MSetInterface M Equal def
inst 24936:24943 MakeSetOrdering eq_equiv
R24947:24957 Coq.Classes.RelationClasses <> Equivalence class
R24959:24960 Coq.MSets.MSetInterface MakeSetOrdering eq def
R25001:25006 Coq.Classes.Morphisms <> Proper class
R25026:25027 Coq.MSets.MSetInterface M In defax
R25013:25015 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R25009:25012 Coq.MSets.MSetInterface O eq defax
R25018:25020 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R25016:25017 Coq.MSets.MSetInterface MakeSetOrdering eq def
R25021:25023 Coq.Init.Logic <> iff def
def 25104:25108 MakeSetOrdering Below
R25133:25136 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25137:25140 Coq.MSets.MSetInterface O lt defax
R25144:25144 Coq.MSets.MSetInterface <> x var
R25142:25142 Coq.MSets.MSetInterface <> y var
R25127:25128 Coq.MSets.MSetInterface M In defax
R25132:25132 Coq.MSets.MSetInterface <> s var
R25130:25130 Coq.MSets.MSetInterface <> y var
def 25159:25163 MakeSetOrdering Above
R25188:25191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25192:25195 Coq.MSets.MSetInterface O lt defax
R25199:25199 Coq.MSets.MSetInterface <> y var
R25197:25197 Coq.MSets.MSetInterface <> x var
R25182:25183 Coq.MSets.MSetInterface M In defax
R25187:25187 Coq.MSets.MSetInterface <> s var
R25185:25185 Coq.MSets.MSetInterface <> y var
def 25215:25225 MakeSetOrdering EquivBefore
R25258:25262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25281:25281 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25269:25273 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R25263:25264 Coq.MSets.MSetInterface M In defax
R25268:25268 Coq.MSets.MSetInterface <> s var
R25266:25266 Coq.MSets.MSetInterface <> y var
R25274:25275 Coq.MSets.MSetInterface M In defax
R25279:25280 Coq.MSets.MSetInterface <> s' var
R25277:25277 Coq.MSets.MSetInterface <> y var
R25250:25253 Coq.MSets.MSetInterface O lt defax
R25257:25257 Coq.MSets.MSetInterface <> x var
R25255:25255 Coq.MSets.MSetInterface <> y var
def 25297:25308 MakeSetOrdering EmptyBetween
R25338:25341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25350:25353 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25354:25357 Coq.MSets.MSetInterface O lt defax
R25361:25361 Coq.MSets.MSetInterface <> x var
R25359:25359 Coq.MSets.MSetInterface <> z var
R25342:25345 Coq.MSets.MSetInterface O lt defax
R25349:25349 Coq.MSets.MSetInterface <> y var
R25347:25347 Coq.MSets.MSetInterface <> z var
R25332:25333 Coq.MSets.MSetInterface M In defax
R25337:25337 Coq.MSets.MSetInterface <> s var
R25335:25335 Coq.MSets.MSetInterface <> z var
def 25377:25378 MakeSetOrdering lt
R25388:25394 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25396:25397 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25416:25423 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25519:25519 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25398:25408 Coq.MSets.MSetInterface MakeSetOrdering EquivBefore def
R25414:25415 Coq.MSets.MSetInterface <> s' var
R25412:25412 Coq.MSets.MSetInterface <> s var
R25410:25410 Coq.MSets.MSetInterface <> x var
R25424:25424 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25445:25454 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25518:25518 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25432:25435 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25425:25426 Coq.MSets.MSetInterface M In defax
R25430:25431 Coq.MSets.MSetInterface <> s' var
R25428:25428 Coq.MSets.MSetInterface <> x var
R25436:25440 Coq.MSets.MSetInterface MakeSetOrdering Below def
R25444:25444 Coq.MSets.MSetInterface <> s var
R25442:25442 Coq.MSets.MSetInterface <> x var
R25461:25465 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25455:25456 Coq.MSets.MSetInterface M In defax
R25460:25460 Coq.MSets.MSetInterface <> s var
R25458:25458 Coq.MSets.MSetInterface <> x var
R25466:25472 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25474:25475 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25483:25486 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25476:25477 Coq.MSets.MSetInterface M In defax
R25481:25482 Coq.MSets.MSetInterface <> s' var
R25479:25479 Coq.MSets.MSetInterface <> y var
R25495:25498 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25487:25490 Coq.MSets.MSetInterface O lt defax
R25494:25494 Coq.MSets.MSetInterface <> y var
R25492:25492 Coq.MSets.MSetInterface <> x var
R25499:25510 Coq.MSets.MSetInterface MakeSetOrdering EmptyBetween def
R25516:25517 Coq.MSets.MSetInterface <> s' var
R25514:25514 Coq.MSets.MSetInterface <> y var
R25512:25512 Coq.MSets.MSetInterface <> x var
R25535:25540 Coq.Classes.Morphisms <> Proper class
R25565:25575 Coq.MSets.MSetInterface MakeSetOrdering EquivBefore def
R25547:25549 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R25543:25546 Coq.MSets.MSetInterface O eq defax
R25552:25554 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R25550:25551 Coq.MSets.MSetInterface MakeSetOrdering eq def
R25557:25559 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R25555:25556 Coq.MSets.MSetInterface MakeSetOrdering eq def
R25560:25562 Coq.Init.Logic <> iff def
R25595:25605 Coq.MSets.MSetInterface MakeSetOrdering EquivBefore def
R25731:25736 Coq.Classes.Morphisms <> Proper class
R25756:25760 Coq.MSets.MSetInterface MakeSetOrdering Below def
R25743:25745 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R25739:25742 Coq.MSets.MSetInterface O eq defax
R25748:25750 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R25746:25747 Coq.MSets.MSetInterface MakeSetOrdering eq def
R25751:25753 Coq.Init.Logic <> iff def
R25780:25784 Coq.MSets.MSetInterface MakeSetOrdering Below def
R25881:25886 Coq.Classes.Morphisms <> Proper class
R25906:25910 Coq.MSets.MSetInterface MakeSetOrdering Above def
R25893:25895 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R25889:25892 Coq.MSets.MSetInterface O eq defax
R25898:25900 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R25896:25897 Coq.MSets.MSetInterface MakeSetOrdering eq def
R25901:25903 Coq.Init.Logic <> iff def
R25930:25934 Coq.MSets.MSetInterface MakeSetOrdering Above def
R26031:26036 Coq.Classes.Morphisms <> Proper class
R26063:26074 Coq.MSets.MSetInterface MakeSetOrdering EmptyBetween def
R26043:26045 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R26039:26042 Coq.MSets.MSetInterface O eq defax
R26050:26052 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R26046:26049 Coq.MSets.MSetInterface O eq defax
R26055:26057 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R26053:26054 Coq.MSets.MSetInterface MakeSetOrdering eq def
R26058:26060 Coq.Init.Logic <> iff def
R26094:26105 Coq.MSets.MSetInterface MakeSetOrdering EmptyBetween def
inst 26227:26235 MakeSetOrdering lt_compat
R26239:26244 Coq.Classes.Morphisms <> Proper class
R26262:26263 Coq.MSets.MSetInterface MakeSetOrdering lt def
R26249:26251 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R26247:26248 Coq.MSets.MSetInterface MakeSetOrdering eq def
R26254:26256 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R26252:26253 Coq.MSets.MSetInterface MakeSetOrdering eq def
R26257:26259 Coq.Init.Logic <> iff def
R26283:26284 Coq.MSets.MSetInterface MakeSetOrdering lt def
inst 26383:26393 MakeSetOrdering lt_strorder
R26397:26407 Coq.Classes.RelationClasses <> StrictOrder class
R26409:26410 Coq.MSets.MSetInterface MakeSetOrdering lt def
R26735:26738 Coq.MSets.MSetInterface O lt defax
R26735:26738 Coq.MSets.MSetInterface O lt defax
R28593:28596 Coq.MSets.MSetInterface O lt defax
R28593:28596 Coq.MSets.MSetInterface O lt defax
prf 28772:28781 MakeSetOrdering lt_empty_r
R28806:28809 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28810:28811 Coq.Init.Logic <> :type_scope:'~'_x not
R28812:28813 Coq.MSets.MSetInterface MakeSetOrdering lt def
R28817:28818 Coq.MSets.MSetInterface <> s' var
R28815:28815 Coq.MSets.MSetInterface <> s var
R28798:28802 Coq.MSets.MSetInterface M Empty def
R28804:28805 Coq.MSets.MSetInterface <> s' var
def 28941:28943 MakeSetOrdering Add
R28972:28976 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R28965:28966 Coq.MSets.MSetInterface M In defax
R28970:28971 Coq.MSets.MSetInterface <> s' var
R28968:28968 Coq.MSets.MSetInterface <> y var
R28985:28988 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28977:28980 Coq.MSets.MSetInterface O eq defax
R28984:28984 Coq.MSets.MSetInterface <> y var
R28982:28982 Coq.MSets.MSetInterface <> x var
R28989:28990 Coq.MSets.MSetInterface M In defax
R28994:28994 Coq.MSets.MSetInterface <> s var
R28992:28992 Coq.MSets.MSetInterface <> y var
prf 29005:29014 MakeSetOrdering lt_empty_l
R29048:29051 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29062:29065 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29078:29081 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29082:29083 Coq.MSets.MSetInterface MakeSetOrdering lt def
R29088:29090 Coq.MSets.MSetInterface <> s2' var
R29085:29086 Coq.MSets.MSetInterface <> s1 var
R29066:29068 Coq.MSets.MSetInterface MakeSetOrdering Add def
R29075:29077 Coq.MSets.MSetInterface <> s2' var
R29072:29073 Coq.MSets.MSetInterface <> s2 var
R29070:29070 Coq.MSets.MSetInterface <> x var
R29052:29056 Coq.MSets.MSetInterface MakeSetOrdering Above def
R29060:29061 Coq.MSets.MSetInterface <> s2 var
R29058:29058 Coq.MSets.MSetInterface <> x var
R29040:29044 Coq.MSets.MSetInterface M Empty def
R29046:29047 Coq.MSets.MSetInterface <> s1 var
prf 29376:29384 MakeSetOrdering lt_add_lt
R29430:29433 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29445:29448 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29462:29465 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29479:29485 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29496:29499 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29500:29501 Coq.MSets.MSetInterface MakeSetOrdering lt def
R29507:29509 Coq.MSets.MSetInterface <> s2' var
R29503:29505 Coq.MSets.MSetInterface <> s1' var
R29486:29489 Coq.MSets.MSetInterface O lt defax
R29494:29495 Coq.MSets.MSetInterface <> x2 var
R29491:29492 Coq.MSets.MSetInterface <> x1 var
R29466:29468 Coq.MSets.MSetInterface MakeSetOrdering Add def
R29476:29478 Coq.MSets.MSetInterface <> s2' var
R29473:29474 Coq.MSets.MSetInterface <> s2 var
R29470:29471 Coq.MSets.MSetInterface <> x2 var
R29449:29451 Coq.MSets.MSetInterface MakeSetOrdering Add def
R29459:29461 Coq.MSets.MSetInterface <> s1' var
R29456:29457 Coq.MSets.MSetInterface <> s1 var
R29453:29454 Coq.MSets.MSetInterface <> x1 var
R29434:29438 Coq.MSets.MSetInterface MakeSetOrdering Above def
R29443:29444 Coq.MSets.MSetInterface <> s2 var
R29440:29441 Coq.MSets.MSetInterface <> x2 var
R29419:29423 Coq.MSets.MSetInterface MakeSetOrdering Above def
R29428:29429 Coq.MSets.MSetInterface <> s1 var
R29425:29426 Coq.MSets.MSetInterface <> x1 var
prf 29945:29953 MakeSetOrdering lt_add_eq
R29999:30002 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30014:30017 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30031:30034 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30048:30054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30065:30068 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30077:30080 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30081:30082 Coq.MSets.MSetInterface MakeSetOrdering lt def
R30088:30090 Coq.MSets.MSetInterface <> s2' var
R30084:30086 Coq.MSets.MSetInterface <> s1' var
R30069:30070 Coq.MSets.MSetInterface MakeSetOrdering lt def
R30075:30076 Coq.MSets.MSetInterface <> s2 var
R30072:30073 Coq.MSets.MSetInterface <> s1 var
R30055:30058 Coq.MSets.MSetInterface O eq defax
R30063:30064 Coq.MSets.MSetInterface <> x2 var
R30060:30061 Coq.MSets.MSetInterface <> x1 var
R30035:30037 Coq.MSets.MSetInterface MakeSetOrdering Add def
R30045:30047 Coq.MSets.MSetInterface <> s2' var
R30042:30043 Coq.MSets.MSetInterface <> s2 var
R30039:30040 Coq.MSets.MSetInterface <> x2 var
R30018:30020 Coq.MSets.MSetInterface MakeSetOrdering Add def
R30028:30030 Coq.MSets.MSetInterface <> s1' var
R30025:30026 Coq.MSets.MSetInterface <> s1 var
R30022:30023 Coq.MSets.MSetInterface <> x1 var
R30003:30007 Coq.MSets.MSetInterface MakeSetOrdering Above def
R30012:30013 Coq.MSets.MSetInterface <> s2 var
R30009:30010 Coq.MSets.MSetInterface <> x2 var
R29988:29992 Coq.MSets.MSetInterface MakeSetOrdering Above def
R29997:29998 Coq.MSets.MSetInterface <> s1 var
R29994:29995 Coq.MSets.MSetInterface <> x1 var
R30177:30180 Coq.MSets.MSetInterface O lt defax
R30177:30180 Coq.MSets.MSetInterface O lt defax
R30792:30806 Coq.MSets.MSetInterface MakeSetOrdering <> mod
R30838:30848 Coq.Structures.Orders OrderedType <> mod
mod 30818:30833 <> MakeListOrdering
R30864:30879 Coq.Structures.OrdersFacts OrderedTypeFacts <> modtype
R30881:30881 Coq.MSets.MSetInterface O <> modtype
mod 30860:30861 <> MakeListOrdering.MO
syndef 30901:30901 MakeListOrdering t
R30907:30910 Coq.Init.Datatypes <> list ind
R30912:30914 Coq.MSets.MSetInterface O t defax
syndef 30934:30935 MakeListOrdering In
R30941:30943 Coq.Lists.SetoidList <> InA ind
R30945:30948 Coq.MSets.MSetInterface O eq defax
def 30965:30966 MakeListOrdering eq
R30992:30996 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30986:30987 Coq.MSets.MSetInterface MakeListOrdering In syndef
R30991:30991 Coq.MSets.MSetInterface <> s var
R30989:30989 Coq.MSets.MSetInterface <> x var
R30997:30998 Coq.MSets.MSetInterface MakeListOrdering In syndef
R31002:31003 Coq.MSets.MSetInterface <> s' var
R31000:31000 Coq.MSets.MSetInterface <> x var
inst 31017:31024 MakeListOrdering eq_equiv
R31028:31038 Coq.Classes.RelationClasses <> Equivalence class
R31040:31041 Coq.MSets.MSetInterface MakeListOrdering eq def
ind 31061:31067 MakeListOrdering lt_list
constr 31095:31100 MakeListOrdering lt_nil
constr 31143:31152 MakeListOrdering lt_cons_lt
constr 31226:31235 MakeListOrdering lt_cons_eq
R31072:31075 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31077:31080 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31076:31076 Coq.MSets.MSetInterface MakeListOrdering t syndef
R31071:31071 Coq.MSets.MSetInterface MakeListOrdering t syndef
R31116:31122 Coq.MSets.MSetInterface <> lt_list ind
R31130:31133 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R31129:31129 Coq.MSets.MSetInterface <> x var
R31134:31134 Coq.MSets.MSetInterface <> s var
R31124:31126 Coq.Init.Datatypes <> nil constr
R31189:31192 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31193:31199 Coq.MSets.MSetInterface <> lt_list ind
R31212:31215 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R31211:31211 Coq.MSets.MSetInterface <> y var
R31216:31217 Coq.MSets.MSetInterface <> s' var
R31203:31206 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R31202:31202 Coq.MSets.MSetInterface <> x var
R31207:31207 Coq.MSets.MSetInterface <> s var
R31181:31184 Coq.MSets.MSetInterface O lt defax
R31188:31188 Coq.MSets.MSetInterface <> y var
R31186:31186 Coq.MSets.MSetInterface <> x var
R31272:31275 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31288:31291 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31292:31298 Coq.MSets.MSetInterface <> lt_list ind
R31311:31314 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R31310:31310 Coq.MSets.MSetInterface <> y var
R31315:31316 Coq.MSets.MSetInterface <> s' var
R31302:31305 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R31301:31301 Coq.MSets.MSetInterface <> x var
R31306:31306 Coq.MSets.MSetInterface <> s var
R31276:31282 Coq.MSets.MSetInterface <> lt_list ind
R31286:31287 Coq.MSets.MSetInterface <> s' var
R31284:31284 Coq.MSets.MSetInterface <> s var
R31264:31267 Coq.MSets.MSetInterface O eq defax
R31271:31271 Coq.MSets.MSetInterface <> y var
R31269:31269 Coq.MSets.MSetInterface <> x var
R31339:31345 Coq.MSets.MSetInterface <> lt_list ind
def 31361:31362 MakeListOrdering lt
R31367:31373 Coq.MSets.MSetInterface MakeListOrdering lt_list ind
R31389:31390 Coq.MSets.MSetInterface MakeListOrdering lt def
inst 31404:31414 MakeListOrdering lt_strorder
R31418:31428 Coq.Classes.RelationClasses <> StrictOrder class
R31430:31431 Coq.MSets.MSetInterface MakeListOrdering lt def
R31495:31498 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31499:31499 Coq.Init.Logic <> :type_scope:'~'_x not
R31500:31501 Coq.MSets.MSetInterface MakeListOrdering lt def
R31505:31506 Coq.MSets.MSetInterface <> s' var
R31503:31503 Coq.MSets.MSetInterface <> s var
R31492:31492 Coq.Init.Logic <> :type_scope:x_'='_x not
R31491:31491 Coq.MSets.MSetInterface <> s var
R31493:31494 Coq.MSets.MSetInterface <> s' var
R31495:31498 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31499:31499 Coq.Init.Logic <> :type_scope:'~'_x not
R31500:31501 Coq.MSets.MSetInterface MakeListOrdering lt def
R31505:31506 Coq.MSets.MSetInterface <> s' var
R31503:31503 Coq.MSets.MSetInterface <> s var
R31492:31492 Coq.Init.Logic <> :type_scope:x_'='_x not
R31491:31491 Coq.MSets.MSetInterface <> s var
R31493:31494 Coq.MSets.MSetInterface <> s' var
R31577:31599 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R31577:31599 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R31667:31673 Coq.Init.Logic <> eq_refl constr
R31667:31673 Coq.Init.Logic <> eq_refl constr
R32047:32048 Coq.MSets.MSetInterface MakeListOrdering lt def
inst 32079:32088 MakeListOrdering lt_compat'
R32094:32099 Coq.Classes.Morphisms <> Proper class
R32137:32138 Coq.MSets.MSetInterface MakeListOrdering lt def
R32114:32116 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R32102:32108 Coq.Lists.SetoidList <> eqlistA ind
R32110:32113 Coq.MSets.MSetInterface O eq defax
R32129:32131 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R32117:32123 Coq.Lists.SetoidList <> eqlistA ind
R32125:32128 Coq.MSets.MSetInterface O eq defax
R32132:32134 Coq.Init.Logic <> iff def
R32156:32176 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R32156:32176 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R32383:32384 Coq.MSets.MSetInterface MakeListOrdering lt def
prf 32412:32418 MakeListOrdering eq_cons
R32452:32455 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32464:32467 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32468:32469 Coq.MSets.MSetInterface MakeListOrdering eq def
R32483:32486 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32482:32482 Coq.MSets.MSetInterface <> y var
R32487:32488 Coq.MSets.MSetInterface <> l2 var
R32473:32476 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32472:32472 Coq.MSets.MSetInterface <> x var
R32477:32478 Coq.MSets.MSetInterface <> l1 var
R32456:32457 Coq.MSets.MSetInterface MakeListOrdering eq def
R32462:32463 Coq.MSets.MSetInterface <> l2 var
R32459:32460 Coq.MSets.MSetInterface <> l1 var
R32444:32447 Coq.MSets.MSetInterface O eq defax
R32451:32451 Coq.MSets.MSetInterface <> y var
R32449:32449 Coq.MSets.MSetInterface <> x var
R32509:32510 Coq.MSets.MSetInterface MakeListOrdering eq def
prf 32697:32709 MakeListOrdering cons_CompSpec
R32745:32750 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32773:32776 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32777:32784 Coq.Init.Datatypes <> CompSpec def
R32810:32810 Coq.MSets.MSetInterface <> c var
R32804:32805 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32802:32803 Coq.MSets.MSetInterface <> x2 var
R32806:32807 Coq.MSets.MSetInterface <> l2 var
R32795:32796 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32793:32794 Coq.MSets.MSetInterface <> x1 var
R32797:32798 Coq.MSets.MSetInterface <> l1 var
R32789:32790 Coq.MSets.MSetInterface MakeListOrdering lt def
R32786:32787 Coq.MSets.MSetInterface MakeListOrdering eq def
R32751:32758 Coq.Init.Datatypes <> CompSpec def
R32772:32772 Coq.MSets.MSetInterface <> c var
R32769:32770 Coq.MSets.MSetInterface <> l2 var
R32766:32767 Coq.MSets.MSetInterface <> l1 var
R32763:32764 Coq.MSets.MSetInterface MakeListOrdering lt def
R32760:32761 Coq.MSets.MSetInterface MakeListOrdering eq def
R32735:32738 Coq.MSets.MSetInterface O eq defax
R32743:32744 Coq.MSets.MSetInterface <> x2 var
R32740:32741 Coq.MSets.MSetInterface <> x1 var
R32922:32937 Coq.MSets.MSetInterface MakeListOrdering <> mod

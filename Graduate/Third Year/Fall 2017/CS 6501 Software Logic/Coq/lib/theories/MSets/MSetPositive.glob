DIGEST 451805f4e20cbf8f5a2745b6f995671c
FCoq.MSets.MSetPositive
R986:989 Coq.Bool.Bool <> <> lib
R991:996 Coq.PArith.BinPos <> <> lib
R998:1003 Coq.Structures.Orders <> <> lib
R1005:1012 Coq.Structures.OrdersEx <> <> lib
R1014:1026 Coq.MSets.MSetInterface <> <> lib
R1177:1177 Coq.MSets.MSetInterface S <> mod
R1194:1216 Coq.Structures.OrdersEx PositiveOrderedTypeBits <> modtype
mod 1162:1172 <> PositiveSet
R1232:1254 Coq.Structures.OrdersEx PositiveOrderedTypeBits <> modtype
mod 1229:1229 <> PositiveSet.E
def 1271:1273 PositiveSet elt
R1278:1285 Coq.Numbers.BinNums <> positive ind
ind 1308:1311 PositiveSet tree
constr 1322:1325 PositiveSet Leaf
constr 1340:1343 PositiveSet Node
R1329:1332 Coq.MSets.MSetPositive <> tree ind
R1351:1354 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1359:1362 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1367:1370 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1371:1374 Coq.MSets.MSetPositive <> tree ind
R1363:1366 Coq.MSets.MSetPositive <> tree ind
R1355:1358 Coq.Init.Datatypes <> bool ind
R1347:1350 Coq.MSets.MSetPositive <> tree ind
def 1387:1394 PositiveSet tree_ind
R1413:1416 Coq.MSets.MSetPositive PositiveSet tree ind
def 1443:1443 PositiveSet t
R1448:1451 Coq.MSets.MSetPositive PositiveSet tree ind
def 1475:1479 PositiveSet empty
R1483:1483 Coq.MSets.MSetPositive PositiveSet t def
R1488:1491 Coq.MSets.MSetPositive PositiveSet Leaf constr
def 1506:1513 PositiveSet is_empty
R1520:1520 Coq.MSets.MSetPositive PositiveSet t def
R1525:1528 Coq.Init.Datatypes <> bool ind
R1542:1542 Coq.MSets.MSetPositive <> m var
R1555:1558 Coq.MSets.MSetPositive PositiveSet Leaf constr
R1563:1566 Coq.Init.Datatypes <> true constr
R1574:1577 Coq.MSets.MSetPositive PositiveSet Node constr
R1609:1613 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R1614:1621 Coq.MSets.MSetPositive <> is_empty def
R1594:1598 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R1599:1606 Coq.MSets.MSetPositive <> is_empty def
R1588:1591 Coq.Init.Datatypes <> negb def
def 1645:1647 PositiveSet mem
R1654:1661 Coq.Numbers.BinNums <> positive ind
R1669:1669 Coq.MSets.MSetPositive PositiveSet t def
R1685:1688 Coq.Init.Datatypes <> bool ind
R1703:1703 Coq.MSets.MSetPositive <> m var
R1716:1719 Coq.MSets.MSetPositive PositiveSet Leaf constr
R1724:1728 Coq.Init.Datatypes <> false constr
R1736:1739 Coq.MSets.MSetPositive PositiveSet Node constr
R1764:1764 Coq.MSets.MSetPositive <> i var
R1799:1800 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R1805:1807 Coq.MSets.MSetPositive <> mem def
R1809:1809 Coq.MSets.MSetPositive <> i var
R1824:1825 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R1830:1832 Coq.MSets.MSetPositive <> mem def
R1834:1834 Coq.MSets.MSetPositive <> i var
def 1871:1873 PositiveSet add
R1880:1887 Coq.Numbers.BinNums <> positive ind
R1895:1895 Coq.MSets.MSetPositive PositiveSet t def
R1900:1900 Coq.MSets.MSetPositive PositiveSet t def
R1915:1915 Coq.MSets.MSetPositive <> m var
R1928:1931 Coq.MSets.MSetPositive PositiveSet Leaf constr
R1950:1950 Coq.MSets.MSetPositive <> i var
R1972:1975 Coq.MSets.MSetPositive PositiveSet Node constr
R1987:1990 Coq.MSets.MSetPositive PositiveSet Leaf constr
R1982:1985 Coq.Init.Datatypes <> true constr
R1977:1980 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2003:2004 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R2009:2012 Coq.MSets.MSetPositive PositiveSet Node constr
R2033:2036 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2027:2031 Coq.Init.Datatypes <> false constr
R2015:2017 Coq.MSets.MSetPositive <> add def
R2021:2024 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2019:2019 Coq.MSets.MSetPositive <> i var
R2049:2050 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R2055:2058 Coq.MSets.MSetPositive PositiveSet Node constr
R2072:2074 Coq.MSets.MSetPositive <> add def
R2078:2081 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2076:2076 Coq.MSets.MSetPositive <> i var
R2065:2069 Coq.Init.Datatypes <> false constr
R2060:2063 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2102:2105 Coq.MSets.MSetPositive PositiveSet Node constr
R2130:2130 Coq.MSets.MSetPositive <> i var
R2152:2155 Coq.MSets.MSetPositive PositiveSet Node constr
R2159:2162 Coq.Init.Datatypes <> true constr
R2177:2178 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R2183:2186 Coq.MSets.MSetPositive PositiveSet Node constr
R2189:2191 Coq.MSets.MSetPositive <> add def
R2193:2193 Coq.MSets.MSetPositive <> i var
R2213:2214 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R2219:2222 Coq.MSets.MSetPositive PositiveSet Node constr
R2229:2231 Coq.MSets.MSetPositive <> add def
R2233:2233 Coq.MSets.MSetPositive <> i var
def 2273:2281 PositiveSet singleton
R2288:2290 Coq.MSets.MSetPositive PositiveSet add def
R2294:2298 Coq.MSets.MSetPositive PositiveSet empty def
R2292:2292 Coq.MSets.MSetPositive <> i var
def 2391:2394 PositiveSet node
R2401:2401 Coq.MSets.MSetPositive PositiveSet t def
R2408:2411 Coq.Init.Datatypes <> bool ind
R2419:2419 Coq.MSets.MSetPositive PositiveSet t def
R2424:2424 Coq.MSets.MSetPositive PositiveSet t def
R2436:2436 Coq.MSets.MSetPositive <> b var
R2472:2472 Coq.MSets.MSetPositive <> r var
R2470:2470 Coq.MSets.MSetPositive <> l var
R2488:2491 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2493:2496 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2501:2504 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2522:2525 Coq.MSets.MSetPositive PositiveSet Node constr
R2535:2535 Coq.MSets.MSetPositive <> r var
R2529:2533 Coq.Init.Datatypes <> false constr
R2527:2527 Coq.MSets.MSetPositive <> l var
R2443:2446 Coq.MSets.MSetPositive PositiveSet Node constr
R2452:2452 Coq.MSets.MSetPositive <> r var
R2450:2450 Coq.MSets.MSetPositive <> b var
R2448:2448 Coq.MSets.MSetPositive <> l var
def 2554:2559 PositiveSet remove
R2566:2573 Coq.Numbers.BinNums <> positive ind
R2581:2581 Coq.MSets.MSetPositive PositiveSet t def
R2597:2597 Coq.MSets.MSetPositive PositiveSet t def
R2612:2612 Coq.MSets.MSetPositive <> m var
R2627:2630 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2635:2638 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2648:2651 Coq.MSets.MSetPositive PositiveSet Node constr
R2676:2676 Coq.MSets.MSetPositive <> i var
R2700:2703 Coq.MSets.MSetPositive PositiveSet node def
R2707:2711 Coq.Init.Datatypes <> false constr
R2728:2729 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R2734:2737 Coq.MSets.MSetPositive PositiveSet node def
R2740:2745 Coq.MSets.MSetPositive <> remove def
R2747:2747 Coq.MSets.MSetPositive <> i var
R2769:2770 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R2775:2778 Coq.MSets.MSetPositive PositiveSet node def
R2785:2790 Coq.MSets.MSetPositive <> remove def
R2792:2792 Coq.MSets.MSetPositive <> i var
def 2830:2834 PositiveSet union
R2843:2843 Coq.MSets.MSetPositive PositiveSet t def
R2848:2848 Coq.MSets.MSetPositive PositiveSet t def
R2863:2863 Coq.MSets.MSetPositive <> m var
R2878:2881 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2886:2887 Coq.MSets.MSetPositive <> m' var
R2897:2900 Coq.MSets.MSetPositive PositiveSet Node constr
R2925:2926 Coq.MSets.MSetPositive <> m' var
R2945:2948 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2953:2953 Coq.MSets.MSetPositive <> m var
R2967:2970 Coq.MSets.MSetPositive PositiveSet Node constr
R2984:2987 Coq.MSets.MSetPositive PositiveSet Node constr
R3011:3015 Coq.MSets.MSetPositive <> union def
R3004:3005 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R2990:2994 Coq.MSets.MSetPositive <> union def
def 3056:3060 PositiveSet inter
R3069:3069 Coq.MSets.MSetPositive PositiveSet t def
R3074:3074 Coq.MSets.MSetPositive PositiveSet t def
R3089:3089 Coq.MSets.MSetPositive <> m var
R3104:3107 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3112:3115 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3125:3128 Coq.MSets.MSetPositive PositiveSet Node constr
R3153:3154 Coq.MSets.MSetPositive <> m' var
R3173:3176 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3181:3184 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3198:3201 Coq.MSets.MSetPositive PositiveSet Node constr
R3215:3218 Coq.MSets.MSetPositive PositiveSet node def
R3242:3246 Coq.MSets.MSetPositive <> inter def
R3235:3236 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R3221:3225 Coq.MSets.MSetPositive <> inter def
def 3287:3290 PositiveSet diff
R3299:3299 Coq.MSets.MSetPositive PositiveSet t def
R3304:3304 Coq.MSets.MSetPositive PositiveSet t def
R3319:3319 Coq.MSets.MSetPositive <> m var
R3334:3337 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3342:3345 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3355:3358 Coq.MSets.MSetPositive PositiveSet Node constr
R3383:3384 Coq.MSets.MSetPositive <> m' var
R3403:3406 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3411:3411 Coq.MSets.MSetPositive <> m var
R3425:3428 Coq.MSets.MSetPositive PositiveSet Node constr
R3442:3445 Coq.MSets.MSetPositive PositiveSet node def
R3473:3476 Coq.MSets.MSetPositive <> diff def
R3461:3462 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R3463:3466 Coq.Init.Datatypes <> negb def
R3448:3451 Coq.MSets.MSetPositive <> diff def
def 3517:3521 PositiveSet equal
R3530:3530 Coq.MSets.MSetPositive PositiveSet t def
R3534:3537 Coq.Init.Datatypes <> bool ind
R3552:3552 Coq.MSets.MSetPositive <> m var
R3567:3570 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3575:3582 Coq.MSets.MSetPositive PositiveSet is_empty def
R3584:3585 Coq.MSets.MSetPositive <> m' var
R3595:3598 Coq.MSets.MSetPositive PositiveSet Node constr
R3623:3624 Coq.MSets.MSetPositive <> m' var
R3643:3646 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3651:3658 Coq.MSets.MSetPositive PositiveSet is_empty def
R3660:3660 Coq.MSets.MSetPositive <> m var
R3674:3677 Coq.MSets.MSetPositive PositiveSet Node constr
R3714:3718 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R3719:3723 Coq.MSets.MSetPositive <> equal def
R3699:3703 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R3704:3708 Coq.MSets.MSetPositive <> equal def
R3691:3693 Coq.Bool.Bool <> eqb def
def 3763:3768 PositiveSet subset
R3777:3777 Coq.MSets.MSetPositive PositiveSet t def
R3781:3784 Coq.Init.Datatypes <> bool ind
R3799:3799 Coq.MSets.MSetPositive <> m var
R3814:3817 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3822:3825 Coq.Init.Datatypes <> true constr
R3835:3838 Coq.MSets.MSetPositive PositiveSet Node constr
R3863:3864 Coq.MSets.MSetPositive <> m' var
R3883:3886 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3891:3898 Coq.MSets.MSetPositive PositiveSet is_empty def
R3900:3900 Coq.MSets.MSetPositive <> m var
R3914:3917 Coq.MSets.MSetPositive PositiveSet Node constr
R3962:3966 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R3967:3972 Coq.MSets.MSetPositive <> subset def
R3931:3931 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R3945:3950 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R3951:3956 Coq.MSets.MSetPositive <> subset def
R3938:3942 Coq.Bool.Bool <> :lazy_bool_scope:x_'|||'_x not
R3932:3935 Coq.Init.Datatypes <> negb def
def 4063:4072 PositiveSet rev_append
R4081:4083 Coq.MSets.MSetPositive PositiveSet elt def
R4088:4090 Coq.MSets.MSetPositive PositiveSet elt def
R4105:4105 Coq.MSets.MSetPositive <> y var
R4125:4125 Coq.MSets.MSetPositive <> x var
R4136:4137 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R4142:4151 Coq.MSets.MSetPositive <> rev_append def
R4156:4157 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R4155:4155 Coq.MSets.MSetPositive <> x var
R4153:4153 Coq.MSets.MSetPositive <> y var
R4168:4169 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R4174:4183 Coq.MSets.MSetPositive <> rev_append def
R4188:4189 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R4187:4187 Coq.MSets.MSetPositive <> x var
R4185:4185 Coq.MSets.MSetPositive <> y var
R4215:4224 Coq.MSets.MSetPositive PositiveSet rev_append def
not 4208:4208 PositiveSet ::x_'@'_x
def 4254:4256 PositiveSet rev
R4264:4264 Coq.MSets.MSetPositive PositiveSet ::x_'@'_x not
R4263:4263 Coq.MSets.MSetPositive <> x var
sec 4279:4282 PositiveSet Fold
var 4300:4300 PositiveSet.Fold B
var 4323:4323 PositiveSet.Fold f
R4335:4338 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4340:4343 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4344:4344 Coq.MSets.MSetPositive <> PositiveSet.Fold.B var
R4339:4339 Coq.MSets.MSetPositive <> PositiveSet.Fold.B var
R4327:4334 Coq.Numbers.BinNums <> positive ind
def 4647:4651 PositiveSet xfold
R4658:4658 Coq.MSets.MSetPositive PositiveSet t def
R4666:4666 Coq.MSets.MSetPositive <> PositiveSet.Fold.B var
R4674:4681 Coq.Numbers.BinNums <> positive ind
R4699:4699 Coq.MSets.MSetPositive <> m var
R4716:4719 Coq.MSets.MSetPositive PositiveSet Leaf constr
R4724:4724 Coq.MSets.MSetPositive <> v var
R4736:4739 Coq.MSets.MSetPositive PositiveSet Node constr
R4743:4746 Coq.Init.Datatypes <> true constr
R4763:4767 Coq.MSets.MSetPositive <> xfold def
R4800:4801 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R4799:4799 Coq.MSets.MSetPositive <> i var
R4772:4772 Coq.MSets.MSetPositive <> PositiveSet.Fold.f var
R4783:4787 Coq.MSets.MSetPositive <> xfold def
R4794:4795 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R4793:4793 Coq.MSets.MSetPositive <> i var
R4791:4791 Coq.MSets.MSetPositive <> v var
R4775:4777 Coq.MSets.MSetPositive PositiveSet rev def
R4779:4779 Coq.MSets.MSetPositive <> i var
R4813:4816 Coq.MSets.MSetPositive PositiveSet Node constr
R4820:4824 Coq.Init.Datatypes <> false constr
R4841:4845 Coq.MSets.MSetPositive <> xfold def
R4866:4867 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R4865:4865 Coq.MSets.MSetPositive <> i var
R4850:4854 Coq.MSets.MSetPositive <> xfold def
R4861:4862 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R4860:4860 Coq.MSets.MSetPositive <> i var
R4858:4858 Coq.MSets.MSetPositive <> v var
def 4895:4898 PositiveSet fold
R4907:4911 Coq.MSets.MSetPositive PositiveSet xfold def
R4915:4915 Coq.MSets.MSetPositive <> i var
R4913:4913 Coq.MSets.MSetPositive <> m var
R4927:4930 Coq.MSets.MSetPositive PositiveSet.Fold <> sec
sec 4944:4954 PositiveSet Quantifiers
var 4971:4971 PositiveSet.Quantifiers f
R4983:4986 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4987:4990 Coq.Init.Datatypes <> bool ind
R4975:4982 Coq.Numbers.BinNums <> positive ind
def 5007:5013 PositiveSet xforall
R5020:5020 Coq.MSets.MSetPositive PositiveSet t def
R5028:5035 Coq.Numbers.BinNums <> positive ind
R5053:5053 Coq.MSets.MSetPositive <> m var
R5070:5073 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5078:5081 Coq.Init.Datatypes <> true constr
R5093:5096 Coq.MSets.MSetPositive PositiveSet Node constr
R5157:5161 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R5162:5168 Coq.MSets.MSetPositive <> xforall def
R5173:5174 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R5172:5172 Coq.MSets.MSetPositive <> i var
R5117:5117 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R5138:5143 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R5144:5150 Coq.MSets.MSetPositive <> xforall def
R5155:5156 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R5154:5154 Coq.MSets.MSetPositive <> i var
R5124:5128 Coq.Bool.Bool <> :lazy_bool_scope:x_'|||'_x not
R5129:5129 Coq.MSets.MSetPositive <> PositiveSet.Quantifiers.f var
R5132:5134 Coq.MSets.MSetPositive PositiveSet rev def
R5136:5136 Coq.MSets.MSetPositive <> i var
R5118:5121 Coq.Init.Datatypes <> negb def
def 5202:5208 PositiveSet for_all
R5215:5221 Coq.MSets.MSetPositive PositiveSet xforall def
R5223:5223 Coq.MSets.MSetPositive <> m var
def 5242:5248 PositiveSet xexists
R5255:5255 Coq.MSets.MSetPositive PositiveSet t def
R5263:5270 Coq.Numbers.BinNums <> positive ind
R5288:5288 Coq.MSets.MSetPositive <> m var
R5305:5308 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5313:5317 Coq.Init.Datatypes <> false constr
R5329:5332 Coq.MSets.MSetPositive PositiveSet Node constr
R5378:5382 Coq.Bool.Bool <> :lazy_bool_scope:x_'|||'_x not
R5383:5389 Coq.MSets.MSetPositive <> xexists def
R5394:5395 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R5393:5393 Coq.MSets.MSetPositive <> i var
R5343:5343 Coq.Bool.Bool <> :lazy_bool_scope:x_'|||'_x not
R5359:5364 Coq.Bool.Bool <> :lazy_bool_scope:x_'|||'_x not
R5365:5371 Coq.MSets.MSetPositive <> xexists def
R5376:5377 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R5375:5375 Coq.MSets.MSetPositive <> i var
R5345:5349 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R5350:5350 Coq.MSets.MSetPositive <> PositiveSet.Quantifiers.f var
R5353:5355 Coq.MSets.MSetPositive PositiveSet rev def
R5357:5357 Coq.MSets.MSetPositive <> i var
def 5423:5429 PositiveSet exists_
R5436:5442 Coq.MSets.MSetPositive PositiveSet xexists def
R5444:5444 Coq.MSets.MSetPositive <> m var
def 5463:5469 PositiveSet xfilter
R5476:5476 Coq.MSets.MSetPositive PositiveSet t def
R5484:5491 Coq.Numbers.BinNums <> positive ind
R5496:5496 Coq.MSets.MSetPositive PositiveSet t def
R5513:5513 Coq.MSets.MSetPositive <> m var
R5530:5533 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5538:5541 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5553:5556 Coq.MSets.MSetPositive PositiveSet Node constr
R5567:5570 Coq.MSets.MSetPositive PositiveSet node def
R5607:5613 Coq.MSets.MSetPositive <> xfilter def
R5618:5619 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R5617:5617 Coq.MSets.MSetPositive <> i var
R5590:5594 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R5595:5595 Coq.MSets.MSetPositive <> PositiveSet.Quantifiers.f var
R5598:5600 Coq.MSets.MSetPositive PositiveSet rev def
R5602:5602 Coq.MSets.MSetPositive <> i var
R5573:5579 Coq.MSets.MSetPositive <> xfilter def
R5584:5585 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R5583:5583 Coq.MSets.MSetPositive <> i var
def 5648:5653 PositiveSet filter
R5660:5666 Coq.MSets.MSetPositive PositiveSet xfilter def
R5668:5668 Coq.MSets.MSetPositive <> m var
def 5687:5696 PositiveSet xpartition
R5703:5703 Coq.MSets.MSetPositive PositiveSet t def
R5711:5718 Coq.Numbers.BinNums <> positive ind
R5724:5726 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R5723:5723 Coq.MSets.MSetPositive PositiveSet t def
R5727:5727 Coq.MSets.MSetPositive PositiveSet t def
R5744:5744 Coq.MSets.MSetPositive <> m var
R5761:5764 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5769:5769 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5774:5774 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5779:5779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5770:5773 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5775:5778 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5791:5794 Coq.MSets.MSetPositive PositiveSet Node constr
R5830:5839 Coq.MSets.MSetPositive <> xpartition def
R5844:5845 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R5843:5843 Coq.MSets.MSetPositive <> i var
R5875:5884 Coq.MSets.MSetPositive <> xpartition def
R5889:5890 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R5888:5888 Coq.MSets.MSetPositive <> i var
R6046:6046 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6063:6064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6081:6081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6047:6050 Coq.MSets.MSetPositive PositiveSet node def
R6061:6062 Coq.MSets.MSetPositive <> rt var
R6055:6059 Coq.Init.Datatypes <> false constr
R6052:6053 Coq.MSets.MSetPositive <> lt var
R6065:6068 Coq.MSets.MSetPositive PositiveSet node def
R6079:6080 Coq.MSets.MSetPositive <> rf var
R6073:6077 Coq.Init.Datatypes <> false constr
R6070:6071 Coq.MSets.MSetPositive <> lf var
R5943:5943 Coq.MSets.MSetPositive <> PositiveSet.Quantifiers.f var
R5946:5948 Coq.MSets.MSetPositive PositiveSet rev def
R5950:5950 Coq.MSets.MSetPositive <> i var
R5973:5973 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5987:5988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6009:6009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5974:5977 Coq.MSets.MSetPositive PositiveSet node def
R5985:5986 Coq.MSets.MSetPositive <> rt var
R5982:5983 Coq.MSets.MSetPositive <> fi var
R5979:5980 Coq.MSets.MSetPositive <> lt var
R5989:5992 Coq.MSets.MSetPositive PositiveSet node def
R6007:6008 Coq.MSets.MSetPositive <> rf var
R5998:6001 Coq.Init.Datatypes <> negb def
R6003:6004 Coq.MSets.MSetPositive <> fi var
R5994:5995 Coq.MSets.MSetPositive <> lf var
def 6109:6117 PositiveSet partition
R6124:6133 Coq.MSets.MSetPositive PositiveSet xpartition def
R6135:6135 Coq.MSets.MSetPositive <> m var
R6147:6157 Coq.MSets.MSetPositive PositiveSet.Quantifiers <> sec
def 6254:6262 PositiveSet xelements
R6269:6269 Coq.MSets.MSetPositive PositiveSet t def
R6277:6284 Coq.Numbers.BinNums <> positive ind
R6291:6294 Coq.Init.Datatypes <> list ind
R6296:6303 Coq.Numbers.BinNums <> positive ind
R6319:6319 Coq.MSets.MSetPositive <> m var
R6334:6337 Coq.MSets.MSetPositive PositiveSet Leaf constr
R6342:6342 Coq.MSets.MSetPositive <> a var
R6352:6355 Coq.MSets.MSetPositive PositiveSet Node constr
R6359:6363 Coq.Init.Datatypes <> false constr
R6370:6378 Coq.MSets.MSetPositive <> xelements def
R6387:6395 Coq.MSets.MSetPositive <> xelements def
R6403:6403 Coq.MSets.MSetPositive <> a var
R6400:6401 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R6399:6399 Coq.MSets.MSetPositive <> i var
R6383:6384 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R6382:6382 Coq.MSets.MSetPositive <> i var
R6414:6417 Coq.MSets.MSetPositive PositiveSet Node constr
R6421:6424 Coq.Init.Datatypes <> true constr
R6431:6439 Coq.MSets.MSetPositive <> xelements def
R6453:6456 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6448:6450 Coq.MSets.MSetPositive PositiveSet rev def
R6452:6452 Coq.MSets.MSetPositive <> i var
R6457:6465 Coq.MSets.MSetPositive <> xelements def
R6473:6473 Coq.MSets.MSetPositive <> a var
R6470:6471 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R6469:6469 Coq.MSets.MSetPositive <> i var
R6444:6445 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R6443:6443 Coq.MSets.MSetPositive <> i var
def 6499:6506 PositiveSet elements
R6513:6513 Coq.MSets.MSetPositive PositiveSet t def
R6519:6527 Coq.MSets.MSetPositive PositiveSet xelements def
R6533:6535 Coq.Init.Datatypes <> nil constr
R6529:6529 Coq.MSets.MSetPositive <> m var
def 6550:6557 PositiveSet cardinal
R6564:6564 Coq.MSets.MSetPositive PositiveSet t def
R6569:6571 Coq.Init.Datatypes <> nat ind
R6586:6586 Coq.MSets.MSetPositive <> m var
R6601:6604 Coq.MSets.MSetPositive PositiveSet Leaf constr
R6609:6609 Coq.Init.Datatypes <> O constr
R6619:6622 Coq.MSets.MSetPositive PositiveSet Node constr
R6626:6630 Coq.Init.Datatypes <> false constr
R6648:6650 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6638:6645 Coq.MSets.MSetPositive <> cardinal def
R6651:6658 Coq.MSets.MSetPositive <> cardinal def
R6675:6678 Coq.MSets.MSetPositive PositiveSet Node constr
R6682:6685 Coq.Init.Datatypes <> true constr
R6692:6692 Coq.Init.Datatypes <> S constr
R6705:6707 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6695:6702 Coq.MSets.MSetPositive <> cardinal def
R6708:6715 Coq.MSets.MSetPositive <> cardinal def
def 6822:6827 PositiveSet choose
R6833:6833 Coq.MSets.MSetPositive PositiveSet t def
R6838:6843 Coq.Init.Datatypes <> option ind
R6845:6847 Coq.MSets.MSetPositive PositiveSet elt def
R6862:6862 Coq.MSets.MSetPositive <> m var
R6877:6880 Coq.MSets.MSetPositive PositiveSet Leaf constr
R6885:6888 Coq.Init.Datatypes <> None constr
R6898:6901 Coq.MSets.MSetPositive PositiveSet Node constr
R6948:6953 Coq.MSets.MSetPositive <> choose def
R6974:6977 Coq.Init.Datatypes <> None constr
R6982:6991 Coq.Init.Datatypes <> option_map def
R6997:7002 Coq.MSets.MSetPositive <> choose def
R6993:6994 Coq.Numbers.BinNums <> xI constr
R7019:7022 Coq.Init.Datatypes <> Some constr
R7029:7032 Coq.Init.Datatypes <> Some constr
R7035:7036 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R6922:6925 Coq.Init.Datatypes <> Some constr
def 7071:7077 PositiveSet min_elt
R7083:7083 Coq.MSets.MSetPositive PositiveSet t def
R7088:7093 Coq.Init.Datatypes <> option ind
R7095:7097 Coq.MSets.MSetPositive PositiveSet elt def
R7112:7112 Coq.MSets.MSetPositive <> m var
R7127:7130 Coq.MSets.MSetPositive PositiveSet Leaf constr
R7135:7138 Coq.Init.Datatypes <> None constr
R7148:7151 Coq.MSets.MSetPositive PositiveSet Node constr
R7176:7182 Coq.MSets.MSetPositive <> min_elt def
R7203:7206 Coq.Init.Datatypes <> None constr
R7233:7242 Coq.Init.Datatypes <> option_map def
R7248:7254 Coq.MSets.MSetPositive <> min_elt def
R7244:7245 Coq.Numbers.BinNums <> xI constr
R7221:7224 Coq.Init.Datatypes <> Some constr
R7271:7274 Coq.Init.Datatypes <> Some constr
R7281:7284 Coq.Init.Datatypes <> Some constr
R7287:7288 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
def 7323:7329 PositiveSet max_elt
R7335:7335 Coq.MSets.MSetPositive PositiveSet t def
R7340:7345 Coq.Init.Datatypes <> option ind
R7347:7349 Coq.MSets.MSetPositive PositiveSet elt def
R7364:7364 Coq.MSets.MSetPositive <> m var
R7379:7382 Coq.MSets.MSetPositive PositiveSet Leaf constr
R7387:7390 Coq.Init.Datatypes <> None constr
R7400:7403 Coq.MSets.MSetPositive PositiveSet Node constr
R7428:7434 Coq.MSets.MSetPositive <> max_elt def
R7455:7458 Coq.Init.Datatypes <> None constr
R7485:7494 Coq.Init.Datatypes <> option_map def
R7500:7506 Coq.MSets.MSetPositive <> max_elt def
R7496:7497 Coq.Numbers.BinNums <> xO constr
R7473:7476 Coq.Init.Datatypes <> Some constr
R7523:7526 Coq.Init.Datatypes <> Some constr
R7533:7536 Coq.Init.Datatypes <> Some constr
R7539:7540 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
syndef 7653:7655 PositiveSet lex
R7677:7678 Coq.Init.Datatypes <> Eq constr
R7687:7688 Coq.Init.Datatypes <> Lt constr
R7693:7694 Coq.Init.Datatypes <> Lt constr
R7698:7699 Coq.Init.Datatypes <> Gt constr
R7704:7705 Coq.Init.Datatypes <> Gt constr
def 7726:7737 PositiveSet compare_bool
R7758:7758 Coq.MSets.MSetPositive <> b var
R7756:7756 Coq.MSets.MSetPositive <> a var
R7773:7777 Coq.Init.Datatypes <> false constr
R7780:7783 Coq.Init.Datatypes <> true constr
R7788:7789 Coq.Init.Datatypes <> Lt constr
R7799:7802 Coq.Init.Datatypes <> true constr
R7805:7809 Coq.Init.Datatypes <> false constr
R7814:7815 Coq.Init.Datatypes <> Gt constr
R7832:7833 Coq.Init.Datatypes <> Eq constr
def 7856:7862 PositiveSet compare
R7871:7871 Coq.MSets.MSetPositive PositiveSet t def
R7875:7884 Coq.Init.Datatypes <> comparison ind
R7901:7902 Coq.MSets.MSetPositive <> m' var
R7899:7899 Coq.MSets.MSetPositive <> m var
R7917:7920 Coq.MSets.MSetPositive PositiveSet Leaf constr
R7930:7937 Coq.MSets.MSetPositive PositiveSet is_empty def
R7939:7940 Coq.MSets.MSetPositive <> m' var
R7955:7956 Coq.Init.Datatypes <> Lt constr
R7947:7948 Coq.Init.Datatypes <> Eq constr
R7968:7971 Coq.MSets.MSetPositive PositiveSet Leaf constr
R7979:7986 Coq.MSets.MSetPositive PositiveSet is_empty def
R7988:7988 Coq.MSets.MSetPositive <> m var
R8003:8004 Coq.Init.Datatypes <> Gt constr
R7995:7996 Coq.Init.Datatypes <> Eq constr
R8014:8017 Coq.MSets.MSetPositive PositiveSet Node constr
R8025:8028 Coq.MSets.MSetPositive PositiveSet Node constr
R8050:8052 Coq.MSets.MSetPositive PositiveSet lex syndef
R8055:8066 Coq.MSets.MSetPositive PositiveSet compare_bool def
R8075:8077 Coq.MSets.MSetPositive PositiveSet lex syndef
R8080:8086 Coq.MSets.MSetPositive <> compare def
R8095:8101 Coq.MSets.MSetPositive <> compare def
def 8134:8135 PositiveSet In
R8151:8153 Coq.Init.Logic <> :type_scope:x_'='_x not
R8144:8146 Coq.MSets.MSetPositive PositiveSet mem def
R8150:8150 Coq.MSets.MSetPositive <> t var
R8148:8148 Coq.MSets.MSetPositive <> i var
R8154:8157 Coq.Init.Datatypes <> true constr
def 8173:8177 PositiveSet Equal
R8198:8200 Coq.MSets.MSetPositive PositiveSet elt def
R8210:8214 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8203:8204 Coq.MSets.MSetPositive PositiveSet In def
R8209:8209 Coq.MSets.MSetPositive <> s var
R8206:8206 Coq.MSets.MSetPositive <> a var
R8215:8216 Coq.MSets.MSetPositive PositiveSet In def
R8221:8222 Coq.MSets.MSetPositive <> s' var
R8218:8218 Coq.MSets.MSetPositive <> a var
def 8238:8243 PositiveSet Subset
R8264:8266 Coq.MSets.MSetPositive PositiveSet elt def
R8275:8278 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8279:8280 Coq.MSets.MSetPositive PositiveSet In def
R8284:8285 Coq.MSets.MSetPositive <> s' var
R8282:8282 Coq.MSets.MSetPositive <> a var
R8269:8270 Coq.MSets.MSetPositive PositiveSet In def
R8274:8274 Coq.MSets.MSetPositive <> s var
R8272:8272 Coq.MSets.MSetPositive <> a var
def 8301:8305 PositiveSet Empty
R8323:8325 Coq.MSets.MSetPositive PositiveSet elt def
R8328:8329 Coq.Init.Logic <> :type_scope:'~'_x not
R8330:8331 Coq.MSets.MSetPositive PositiveSet In def
R8335:8335 Coq.MSets.MSetPositive <> s var
R8333:8333 Coq.MSets.MSetPositive <> a var
def 8351:8357 PositiveSet For_all
R8367:8370 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8364:8366 Coq.MSets.MSetPositive PositiveSet elt def
R8398:8401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8402:8402 Coq.MSets.MSetPositive <> P var
R8404:8404 Coq.MSets.MSetPositive <> x var
R8392:8393 Coq.MSets.MSetPositive PositiveSet In def
R8397:8397 Coq.MSets.MSetPositive <> s var
R8395:8395 Coq.MSets.MSetPositive <> x var
def 8420:8425 PositiveSet Exists
R8435:8438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8432:8434 Coq.MSets.MSetPositive PositiveSet elt def
R8450:8456 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8458:8459 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8466:8469 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8460:8461 Coq.MSets.MSetPositive PositiveSet In def
R8465:8465 Coq.MSets.MSetPositive <> s var
R8463:8463 Coq.MSets.MSetPositive <> x var
R8470:8470 Coq.MSets.MSetPositive <> P var
R8472:8472 Coq.MSets.MSetPositive <> x var
R8503:8507 Coq.MSets.MSetPositive PositiveSet Equal def
not 8487:8487 PositiveSet ::x_'[=]'_x
R8575:8580 Coq.MSets.MSetPositive PositiveSet Subset def
not 8558:8558 PositiveSet ::x_'[<=]'_x
def 8634:8635 PositiveSet eq
R8640:8644 Coq.MSets.MSetPositive PositiveSet Equal def
def 8660:8661 PositiveSet lt
R8683:8685 Coq.Init.Logic <> :type_scope:x_'='_x not
R8671:8677 Coq.MSets.MSetPositive PositiveSet compare def
R8681:8682 Coq.MSets.MSetPositive <> m' var
R8679:8679 Coq.MSets.MSetPositive <> m var
R8686:8687 Coq.Init.Datatypes <> Lt constr
inst 8734:8742 PositiveSet In_compat
R8746:8751 Coq.Classes.Morphisms <> Proper class
R8777:8778 Coq.MSets.MSetPositive PositiveSet In def
R8758:8760 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R8754:8757 Coq.MSets.MSetPositive PositiveSet eq def
R8769:8771 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R8761:8768 Coq.Init.Logic <> eq ind
R8772:8774 Coq.Init.Logic <> iff def
inst 8901:8908 PositiveSet eq_equiv
R8912:8922 Coq.Classes.RelationClasses <> Equivalence class
R8924:8925 Coq.MSets.MSetPositive PositiveSet eq def
prf 8996:9003 PositiveSet mem_spec
R9032:9036 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9025:9027 Coq.Init.Logic <> :type_scope:x_'='_x not
R9018:9020 Coq.MSets.MSetPositive PositiveSet mem def
R9024:9024 Coq.MSets.MSetPositive <> s var
R9022:9022 Coq.MSets.MSetPositive <> x var
R9028:9031 Coq.Init.Datatypes <> true constr
R9037:9038 Coq.MSets.MSetPositive PositiveSet In def
R9042:9042 Coq.MSets.MSetPositive <> s var
R9040:9040 Coq.MSets.MSetPositive <> x var
R9061:9062 Coq.MSets.MSetPositive PositiveSet In def
prf 9127:9134 PositiveSet mem_Leaf
R9157:9159 Coq.Init.Logic <> :type_scope:x_'='_x not
R9147:9149 Coq.MSets.MSetPositive PositiveSet mem def
R9153:9156 Coq.MSets.MSetPositive PositiveSet Leaf constr
R9151:9151 Coq.MSets.MSetPositive <> x var
R9160:9164 Coq.Init.Datatypes <> false constr
prf 9246:9255 PositiveSet empty_spec
R9259:9263 Coq.MSets.MSetPositive PositiveSet Empty def
R9265:9269 Coq.MSets.MSetPositive PositiveSet empty def
R9288:9292 Coq.MSets.MSetPositive PositiveSet Empty def
R9295:9296 Coq.MSets.MSetPositive PositiveSet In def
R9314:9321 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R9314:9321 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R9314:9321 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
prf 9385:9392 PositiveSet mem_node
R9429:9431 Coq.Init.Logic <> :type_scope:x_'='_x not
R9411:9413 Coq.MSets.MSetPositive PositiveSet mem def
R9418:9421 Coq.MSets.MSetPositive PositiveSet node def
R9427:9427 Coq.MSets.MSetPositive <> r var
R9425:9425 Coq.MSets.MSetPositive <> o var
R9423:9423 Coq.MSets.MSetPositive <> l var
R9415:9415 Coq.MSets.MSetPositive <> x var
R9432:9434 Coq.MSets.MSetPositive PositiveSet mem def
R9439:9442 Coq.MSets.MSetPositive PositiveSet Node constr
R9448:9448 Coq.MSets.MSetPositive <> r var
R9446:9446 Coq.MSets.MSetPositive <> o var
R9444:9444 Coq.MSets.MSetPositive <> l var
R9436:9436 Coq.MSets.MSetPositive <> x var
R9603:9606 Coq.MSets.MSetPositive PositiveSet node def
prf 9656:9668 PositiveSet is_empty_spec
R9698:9702 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9691:9693 Coq.Init.Logic <> :type_scope:x_'='_x not
R9681:9688 Coq.MSets.MSetPositive PositiveSet is_empty def
R9690:9690 Coq.MSets.MSetPositive <> s var
R9694:9697 Coq.Init.Datatypes <> true constr
R9703:9707 Coq.MSets.MSetPositive PositiveSet Empty def
R9709:9709 Coq.MSets.MSetPositive <> s var
R9732:9736 Coq.MSets.MSetPositive PositiveSet Empty def
R9739:9740 Coq.MSets.MSetPositive PositiveSet In def
R9823:9835 Coq.Bool.Bool <> andb_lazy_alt thm
R9839:9851 Coq.Bool.Bool <> andb_true_iff thm
R9823:9835 Coq.Bool.Bool <> andb_lazy_alt thm
R9823:9835 Coq.Bool.Bool <> andb_lazy_alt thm
R9823:9835 Coq.Bool.Bool <> andb_lazy_alt thm
R9839:9851 Coq.Bool.Bool <> andb_true_iff thm
R9839:9851 Coq.Bool.Bool <> andb_true_iff thm
R9839:9851 Coq.Bool.Bool <> andb_true_iff thm
R10115:10116 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R10115:10116 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R10149:10150 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R10149:10150 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
prf 10206:10218 PositiveSet subset_Leaf_s
R10235:10240 Coq.MSets.MSetPositive PositiveSet ::x_'[<=]'_x not
R10231:10234 Coq.MSets.MSetPositive PositiveSet Leaf constr
R10241:10241 Coq.MSets.MSetPositive <> s var
R10274:10283 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R10274:10283 Coq.MSets.MSetPositive PositiveSet empty_spec thm
prf 10315:10325 PositiveSet subset_spec
R10359:10363 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10352:10354 Coq.Init.Logic <> :type_scope:x_'='_x not
R10341:10346 Coq.MSets.MSetPositive PositiveSet subset def
R10350:10351 Coq.MSets.MSetPositive <> s' var
R10348:10348 Coq.MSets.MSetPositive <> s var
R10355:10358 Coq.Init.Datatypes <> true constr
R10365:10370 Coq.MSets.MSetPositive PositiveSet ::x_'[<=]'_x not
R10364:10364 Coq.MSets.MSetPositive <> s var
R10371:10372 Coq.MSets.MSetPositive <> s' var
R10475:10487 Coq.MSets.MSetPositive PositiveSet subset_Leaf_s thm
R10475:10487 Coq.MSets.MSetPositive PositiveSet subset_Leaf_s thm
R10531:10543 Coq.MSets.MSetPositive PositiveSet subset_Leaf_s thm
R10531:10543 Coq.MSets.MSetPositive PositiveSet subset_Leaf_s thm
R10578:10590 Coq.Bool.Bool <> andb_lazy_alt thm
R10594:10606 Coq.Bool.Bool <> andb_true_iff thm
R10610:10622 Coq.MSets.MSetPositive PositiveSet is_empty_spec thm
R10578:10590 Coq.Bool.Bool <> andb_lazy_alt thm
R10578:10590 Coq.Bool.Bool <> andb_lazy_alt thm
R10578:10590 Coq.Bool.Bool <> andb_lazy_alt thm
R10594:10606 Coq.Bool.Bool <> andb_true_iff thm
R10594:10606 Coq.Bool.Bool <> andb_true_iff thm
R10594:10606 Coq.Bool.Bool <> andb_true_iff thm
R10610:10622 Coq.MSets.MSetPositive PositiveSet is_empty_spec thm
R10610:10622 Coq.MSets.MSetPositive PositiveSet is_empty_spec thm
R10610:10622 Coq.MSets.MSetPositive PositiveSet is_empty_spec thm
R10725:10734 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R10725:10734 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R10987:10991 Coq.MSets.MSetPositive PositiveSet Empty def
R11015:11024 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R11028:11029 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R11015:11024 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R11028:11029 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R11066:11070 Coq.MSets.MSetPositive PositiveSet Empty def
R11094:11103 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R11107:11108 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R11094:11103 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R11107:11108 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R11147:11159 Coq.Bool.Bool <> andb_lazy_alt thm
R11163:11175 Coq.Bool.Bool <> andb_true_iff thm
R11147:11159 Coq.Bool.Bool <> andb_lazy_alt thm
R11147:11159 Coq.Bool.Bool <> andb_lazy_alt thm
R11147:11159 Coq.Bool.Bool <> andb_lazy_alt thm
R11163:11175 Coq.Bool.Bool <> andb_true_iff thm
R11163:11175 Coq.Bool.Bool <> andb_true_iff thm
R11163:11175 Coq.Bool.Bool <> andb_true_iff thm
R11519:11520 Coq.MSets.MSetPositive PositiveSet In def
R11595:11596 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R11595:11596 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R11643:11644 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R11643:11644 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R11914:11915 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R11914:11915 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R11963:11964 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R11963:11964 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
prf 12042:12053 PositiveSet equal_subset
R12079:12081 Coq.Init.Logic <> :type_scope:x_'='_x not
R12069:12073 Coq.MSets.MSetPositive PositiveSet equal def
R12077:12078 Coq.MSets.MSetPositive <> s' var
R12075:12075 Coq.MSets.MSetPositive <> s var
R12093:12096 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R12082:12087 Coq.MSets.MSetPositive PositiveSet subset def
R12091:12092 Coq.MSets.MSetPositive <> s' var
R12089:12089 Coq.MSets.MSetPositive <> s var
R12097:12102 Coq.MSets.MSetPositive PositiveSet subset def
R12107:12107 Coq.MSets.MSetPositive <> s var
R12104:12105 Coq.MSets.MSetPositive <> s' var
R12231:12239 Coq.Bool.Bool <> andb_comm thm
R12231:12239 Coq.Bool.Bool <> andb_comm thm
R12231:12239 Coq.Bool.Bool <> andb_comm thm
R12273:12285 Coq.Bool.Bool <> andb_lazy_alt thm
R12273:12285 Coq.Bool.Bool <> andb_lazy_alt thm
R12273:12285 Coq.Bool.Bool <> andb_lazy_alt thm
R12273:12285 Coq.Bool.Bool <> andb_lazy_alt thm
R12273:12285 Coq.Bool.Bool <> andb_lazy_alt thm
R12273:12285 Coq.Bool.Bool <> andb_lazy_alt thm
R12273:12285 Coq.Bool.Bool <> andb_lazy_alt thm
R12273:12285 Coq.Bool.Bool <> andb_lazy_alt thm
R12296:12309 Coq.Bool.Bool <> eq_iff_eq_true thm
R12296:12309 Coq.Bool.Bool <> eq_iff_eq_true thm
R12296:12309 Coq.Bool.Bool <> eq_iff_eq_true thm
R12328:12340 Coq.Bool.Bool <> andb_true_iff thm
R12343:12354 Coq.Bool.Bool <> eqb_true_iff thm
R12328:12340 Coq.Bool.Bool <> andb_true_iff thm
R12328:12340 Coq.Bool.Bool <> andb_true_iff thm
R12328:12340 Coq.Bool.Bool <> andb_true_iff thm
R12328:12340 Coq.Bool.Bool <> andb_true_iff thm
R12328:12340 Coq.Bool.Bool <> andb_true_iff thm
R12328:12340 Coq.Bool.Bool <> andb_true_iff thm
R12328:12340 Coq.Bool.Bool <> andb_true_iff thm
R12328:12340 Coq.Bool.Bool <> andb_true_iff thm
R12343:12354 Coq.Bool.Bool <> eqb_true_iff thm
R12343:12354 Coq.Bool.Bool <> eqb_true_iff thm
R12382:12394 Coq.Bool.Bool <> andb_true_iff thm
R12382:12394 Coq.Bool.Bool <> andb_true_iff thm
R12382:12394 Coq.Bool.Bool <> andb_true_iff thm
R12382:12394 Coq.Bool.Bool <> andb_true_iff thm
prf 12558:12567 PositiveSet equal_spec
R12600:12604 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12593:12595 Coq.Init.Logic <> :type_scope:x_'='_x not
R12583:12587 Coq.MSets.MSetPositive PositiveSet equal def
R12591:12592 Coq.MSets.MSetPositive <> s' var
R12589:12589 Coq.MSets.MSetPositive <> s var
R12596:12599 Coq.Init.Datatypes <> true constr
R12605:12609 Coq.MSets.MSetPositive PositiveSet Equal def
R12613:12614 Coq.MSets.MSetPositive <> s' var
R12611:12611 Coq.MSets.MSetPositive <> s var
R12646:12657 Coq.MSets.MSetPositive PositiveSet equal_subset thm
R12646:12657 Coq.MSets.MSetPositive PositiveSet equal_subset thm
R12646:12657 Coq.MSets.MSetPositive PositiveSet equal_subset thm
R12668:12680 Coq.Bool.Bool <> andb_true_iff thm
R12668:12680 Coq.Bool.Bool <> andb_true_iff thm
R12668:12680 Coq.Bool.Bool <> andb_true_iff thm
R12696:12706 Coq.MSets.MSetPositive PositiveSet subset_spec thm
R12696:12706 Coq.MSets.MSetPositive PositiveSet subset_spec thm
R12696:12706 Coq.MSets.MSetPositive PositiveSet subset_spec thm
R12696:12706 Coq.MSets.MSetPositive PositiveSet subset_spec thm
R12716:12720 Coq.MSets.MSetPositive PositiveSet Equal def
R12723:12728 Coq.MSets.MSetPositive PositiveSet Subset def
prf 12759:12764 PositiveSet eq_dec
R12781:12782 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R12790:12796 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R12806:12807 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R12783:12784 Coq.MSets.MSetPositive PositiveSet eq def
R12788:12789 Coq.MSets.MSetPositive <> s' var
R12786:12786 Coq.MSets.MSetPositive <> s var
R12797:12798 Coq.Init.Logic <> :type_scope:'~'_x not
R12799:12800 Coq.MSets.MSetPositive PositiveSet eq def
R12804:12805 Coq.MSets.MSetPositive <> s' var
R12802:12802 Coq.MSets.MSetPositive <> s var
R12830:12831 Coq.MSets.MSetPositive PositiveSet eq def
R12855:12859 Coq.MSets.MSetPositive PositiveSet equal def
R12855:12859 Coq.MSets.MSetPositive PositiveSet equal def
R12894:12903 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R12894:12903 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R12932:12941 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R12932:12941 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R12932:12941 Coq.MSets.MSetPositive PositiveSet equal_spec thm
prf 13022:13028 PositiveSet lex_Opp
R13063:13066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13081:13088 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13096:13098 Coq.Init.Logic <> :type_scope:x_'='_x not
R13089:13091 Coq.MSets.MSetPositive PositiveSet lex syndef
R13093:13093 Coq.MSets.MSetPositive <> u var
R13095:13095 Coq.MSets.MSetPositive <> v var
R13099:13105 Coq.Init.Datatypes <> CompOpp def
R13108:13110 Coq.MSets.MSetPositive PositiveSet lex syndef
R13112:13113 Coq.MSets.MSetPositive <> u' var
R13115:13116 Coq.MSets.MSetPositive <> v' var
R13068:13070 Coq.Init.Logic <> :type_scope:x_'='_x not
R13067:13067 Coq.MSets.MSetPositive <> v var
R13071:13077 Coq.Init.Datatypes <> CompOpp def
R13079:13080 Coq.MSets.MSetPositive <> v' var
R13050:13052 Coq.Init.Logic <> :type_scope:x_'='_x not
R13049:13049 Coq.MSets.MSetPositive <> u var
R13053:13059 Coq.Init.Datatypes <> CompOpp def
R13061:13062 Coq.MSets.MSetPositive <> u' var
prf 13188:13203 PositiveSet compare_bool_inv
R13240:13242 Coq.Init.Logic <> :type_scope:x_'='_x not
R13223:13234 Coq.MSets.MSetPositive PositiveSet compare_bool def
R13238:13239 Coq.MSets.MSetPositive <> b' var
R13236:13236 Coq.MSets.MSetPositive <> b var
R13243:13249 Coq.Init.Datatypes <> CompOpp def
R13252:13263 Coq.MSets.MSetPositive PositiveSet compare_bool def
R13268:13268 Coq.MSets.MSetPositive <> b var
R13265:13266 Coq.MSets.MSetPositive <> b' var
prf 13324:13334 PositiveSet compare_inv
R13362:13364 Coq.Init.Logic <> :type_scope:x_'='_x not
R13350:13356 Coq.MSets.MSetPositive PositiveSet compare def
R13360:13361 Coq.MSets.MSetPositive <> s' var
R13358:13358 Coq.MSets.MSetPositive <> s var
R13365:13371 Coq.Init.Datatypes <> CompOpp def
R13374:13380 Coq.MSets.MSetPositive PositiveSet compare def
R13385:13385 Coq.MSets.MSetPositive <> s var
R13382:13383 Coq.MSets.MSetPositive <> s' var
R13483:13489 Coq.MSets.MSetPositive PositiveSet compare def
R13497:13504 Coq.MSets.MSetPositive PositiveSet is_empty def
R13497:13504 Coq.MSets.MSetPositive PositiveSet is_empty def
R13531:13537 Coq.MSets.MSetPositive PositiveSet compare def
R13545:13552 Coq.MSets.MSetPositive PositiveSet is_empty def
R13545:13552 Coq.MSets.MSetPositive PositiveSet is_empty def
R13587:13602 Coq.MSets.MSetPositive PositiveSet compare_bool_inv thm
R13587:13602 Coq.MSets.MSetPositive PositiveSet compare_bool_inv thm
R13587:13602 Coq.MSets.MSetPositive PositiveSet compare_bool_inv thm
R13615:13626 Coq.MSets.MSetPositive PositiveSet compare_bool def
R13651:13657 Coq.MSets.MSetPositive PositiveSet lex_Opp thm
R13615:13626 Coq.MSets.MSetPositive PositiveSet compare_bool def
R13651:13657 Coq.MSets.MSetPositive PositiveSet lex_Opp thm
prf 13682:13687 PositiveSet lex_Eq
R13714:13718 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13709:13711 Coq.Init.Logic <> :type_scope:x_'='_x not
R13702:13704 Coq.MSets.MSetPositive PositiveSet lex syndef
R13706:13706 Coq.MSets.MSetPositive <> u var
R13708:13708 Coq.MSets.MSetPositive <> v var
R13712:13713 Coq.Init.Datatypes <> Eq constr
R13723:13726 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13720:13720 Coq.Init.Logic <> :type_scope:x_'='_x not
R13719:13719 Coq.MSets.MSetPositive <> u var
R13721:13722 Coq.Init.Datatypes <> Eq constr
R13728:13728 Coq.Init.Logic <> :type_scope:x_'='_x not
R13727:13727 Coq.MSets.MSetPositive <> v var
R13729:13730 Coq.Init.Datatypes <> Eq constr
prf 13804:13818 PositiveSet compare_bool_Eq
R13862:13866 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13857:13859 Coq.Init.Logic <> :type_scope:x_'='_x not
R13839:13850 Coq.MSets.MSetPositive PositiveSet compare_bool def
R13855:13856 Coq.MSets.MSetPositive <> b2 var
R13852:13853 Coq.MSets.MSetPositive <> b1 var
R13860:13861 Coq.Init.Datatypes <> Eq constr
R13876:13878 Coq.Init.Logic <> :type_scope:x_'='_x not
R13867:13869 Coq.Bool.Bool <> eqb def
R13874:13875 Coq.MSets.MSetPositive <> b2 var
R13871:13872 Coq.MSets.MSetPositive <> b1 var
R13879:13882 Coq.Init.Datatypes <> true constr
prf 13948:13960 PositiveSet compare_equal
R13993:13997 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13988:13990 Coq.Init.Logic <> :type_scope:x_'='_x not
R13976:13982 Coq.MSets.MSetPositive PositiveSet compare def
R13986:13987 Coq.MSets.MSetPositive <> s' var
R13984:13984 Coq.MSets.MSetPositive <> s var
R13991:13992 Coq.Init.Datatypes <> Eq constr
R14008:14010 Coq.Init.Logic <> :type_scope:x_'='_x not
R13998:14002 Coq.MSets.MSetPositive PositiveSet equal def
R14006:14007 Coq.MSets.MSetPositive <> s' var
R14004:14004 Coq.MSets.MSetPositive <> s var
R14011:14014 Coq.Init.Datatypes <> true constr
R14122:14128 Coq.MSets.MSetPositive PositiveSet compare def
R14131:14135 Coq.MSets.MSetPositive PositiveSet equal def
R14143:14150 Coq.MSets.MSetPositive PositiveSet is_empty def
R14143:14150 Coq.MSets.MSetPositive PositiveSet is_empty def
R14189:14195 Coq.MSets.MSetPositive PositiveSet compare def
R14198:14202 Coq.MSets.MSetPositive PositiveSet equal def
R14210:14217 Coq.MSets.MSetPositive PositiveSet is_empty def
R14210:14217 Coq.MSets.MSetPositive PositiveSet is_empty def
R14268:14280 Coq.Bool.Bool <> andb_lazy_alt thm
R14284:14296 Coq.Bool.Bool <> andb_true_iff thm
R14268:14280 Coq.Bool.Bool <> andb_lazy_alt thm
R14268:14280 Coq.Bool.Bool <> andb_lazy_alt thm
R14268:14280 Coq.Bool.Bool <> andb_lazy_alt thm
R14284:14296 Coq.Bool.Bool <> andb_true_iff thm
R14284:14296 Coq.Bool.Bool <> andb_true_iff thm
R14284:14296 Coq.Bool.Bool <> andb_true_iff thm
R14331:14345 Coq.MSets.MSetPositive PositiveSet compare_bool_Eq thm
R14331:14345 Coq.MSets.MSetPositive PositiveSet compare_bool_Eq thm
R14331:14345 Coq.MSets.MSetPositive PositiveSet compare_bool_Eq thm
R14376:14384 Coq.Init.Logic <> and_assoc thm
R14376:14384 Coq.Init.Logic <> and_assoc thm
R14376:14384 Coq.Init.Logic <> and_assoc thm
R14399:14404 Coq.MSets.MSetPositive PositiveSet lex_Eq thm
R14399:14404 Coq.MSets.MSetPositive PositiveSet lex_Eq thm
R14399:14404 Coq.MSets.MSetPositive PositiveSet lex_Eq thm
R14399:14404 Coq.MSets.MSetPositive PositiveSet lex_Eq thm
prf 14437:14446 PositiveSet compare_gt
R14479:14482 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14483:14484 Coq.MSets.MSetPositive PositiveSet lt def
R14489:14489 Coq.MSets.MSetPositive <> s var
R14486:14487 Coq.MSets.MSetPositive <> s' var
R14474:14476 Coq.Init.Logic <> :type_scope:x_'='_x not
R14462:14468 Coq.MSets.MSetPositive PositiveSet compare def
R14472:14473 Coq.MSets.MSetPositive <> s' var
R14470:14470 Coq.MSets.MSetPositive <> s var
R14477:14478 Coq.Init.Datatypes <> Gt constr
R14512:14513 Coq.MSets.MSetPositive PositiveSet lt def
R14537:14547 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R14537:14547 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R14537:14547 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R14560:14566 Coq.MSets.MSetPositive PositiveSet compare def
R14560:14566 Coq.MSets.MSetPositive PositiveSet compare def
prf 14616:14625 PositiveSet compare_eq
R14658:14661 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14662:14663 Coq.MSets.MSetPositive PositiveSet eq def
R14667:14668 Coq.MSets.MSetPositive <> s' var
R14665:14665 Coq.MSets.MSetPositive <> s var
R14653:14655 Coq.Init.Logic <> :type_scope:x_'='_x not
R14641:14647 Coq.MSets.MSetPositive PositiveSet compare def
R14651:14652 Coq.MSets.MSetPositive <> s' var
R14649:14649 Coq.MSets.MSetPositive <> s var
R14656:14657 Coq.Init.Datatypes <> Eq constr
R14691:14692 Coq.MSets.MSetPositive PositiveSet eq def
R14716:14728 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R14731:14740 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R14716:14728 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R14716:14728 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R14731:14740 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R14731:14740 Coq.MSets.MSetPositive PositiveSet equal_spec thm
prf 14768:14779 PositiveSet compare_spec
R14797:14797 Coq.MSets.MSetPositive PositiveSet t def
R14800:14807 Coq.Init.Datatypes <> CompSpec def
R14821:14827 Coq.MSets.MSetPositive PositiveSet compare def
R14831:14832 Coq.MSets.MSetPositive <> s' var
R14829:14829 Coq.MSets.MSetPositive <> s var
R14817:14818 Coq.MSets.MSetPositive <> s' var
R14815:14815 Coq.MSets.MSetPositive <> s var
R14812:14813 Coq.MSets.MSetPositive PositiveSet lt def
R14809:14810 Coq.MSets.MSetPositive PositiveSet eq def
R14866:14872 Coq.MSets.MSetPositive PositiveSet compare def
R14866:14872 Coq.MSets.MSetPositive PositiveSet compare def
R14913:14922 Coq.MSets.MSetPositive PositiveSet compare_eq thm
R14913:14922 Coq.MSets.MSetPositive PositiveSet compare_eq thm
R14954:14963 Coq.MSets.MSetPositive PositiveSet compare_gt thm
R14954:14963 Coq.MSets.MSetPositive PositiveSet compare_gt thm
sec 14987:14993 PositiveSet lt_spec
ind 15009:15010 PositiveSet ct
constr 15067:15072 PositiveSet ct_xxx
constr 15100:15105 PositiveSet ct_xex
constr 15133:15138 PositiveSet ct_exx
constr 15166:15171 PositiveSet ct_glx
constr 15199:15204 PositiveSet ct_lgx
R15023:15026 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15037:15040 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15051:15054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15041:15050 Coq.Init.Datatypes <> comparison ind
R15027:15036 Coq.Init.Datatypes <> comparison ind
R15013:15022 Coq.Init.Datatypes <> comparison ind
R15085:15086 Coq.MSets.MSetPositive <> ct ind
R15094:15094 Coq.MSets.MSetPositive <> x var
R15091:15091 Coq.MSets.MSetPositive <> x var
R15088:15088 Coq.MSets.MSetPositive <> x var
R15118:15119 Coq.MSets.MSetPositive <> ct ind
R15127:15127 Coq.MSets.MSetPositive <> x var
R15124:15125 Coq.Init.Datatypes <> Eq constr
R15121:15121 Coq.MSets.MSetPositive <> x var
R15151:15152 Coq.MSets.MSetPositive <> ct ind
R15160:15160 Coq.MSets.MSetPositive <> x var
R15157:15157 Coq.MSets.MSetPositive <> x var
R15154:15155 Coq.Init.Datatypes <> Eq constr
R15184:15185 Coq.MSets.MSetPositive <> ct ind
R15193:15193 Coq.MSets.MSetPositive <> x var
R15190:15191 Coq.Init.Datatypes <> Lt constr
R15187:15188 Coq.Init.Datatypes <> Gt constr
R15217:15218 Coq.MSets.MSetPositive <> ct ind
R15226:15226 Coq.MSets.MSetPositive <> x var
R15223:15224 Coq.Init.Datatypes <> Gt constr
R15220:15221 Coq.Init.Datatypes <> Lt constr
prf 15238:15243 PositiveSet ct_cxe
R15256:15257 Coq.MSets.MSetPositive PositiveSet ct ind
R15273:15274 Coq.Init.Datatypes <> Eq constr
R15271:15271 Coq.MSets.MSetPositive <> x var
R15260:15266 Coq.Init.Datatypes <> CompOpp def
R15268:15268 Coq.MSets.MSetPositive <> x var
prf 15325:15330 PositiveSet ct_xce
R15343:15344 Coq.MSets.MSetPositive PositiveSet ct ind
R15360:15361 Coq.Init.Datatypes <> Eq constr
R15349:15355 Coq.Init.Datatypes <> CompOpp def
R15357:15357 Coq.MSets.MSetPositive <> x var
R15346:15346 Coq.MSets.MSetPositive <> x var
prf 15412:15417 PositiveSet ct_lxl
R15430:15431 Coq.MSets.MSetPositive PositiveSet ct ind
R15438:15439 Coq.Init.Datatypes <> Lt constr
R15436:15436 Coq.MSets.MSetPositive <> x var
R15433:15434 Coq.Init.Datatypes <> Lt constr
prf 15490:15495 PositiveSet ct_gxg
R15508:15509 Coq.MSets.MSetPositive PositiveSet ct ind
R15516:15517 Coq.Init.Datatypes <> Gt constr
R15514:15514 Coq.MSets.MSetPositive <> x var
R15511:15512 Coq.Init.Datatypes <> Gt constr
prf 15568:15573 PositiveSet ct_xll
R15586:15587 Coq.MSets.MSetPositive PositiveSet ct ind
R15594:15595 Coq.Init.Datatypes <> Lt constr
R15591:15592 Coq.Init.Datatypes <> Lt constr
R15589:15589 Coq.MSets.MSetPositive <> x var
prf 15646:15651 PositiveSet ct_xgg
R15664:15665 Coq.MSets.MSetPositive PositiveSet ct ind
R15672:15673 Coq.Init.Datatypes <> Gt constr
R15669:15670 Coq.Init.Datatypes <> Gt constr
R15667:15667 Coq.MSets.MSetPositive <> x var
R15742:15743 Coq.MSets.MSetPositive <> ct ind
prf 15857:15862 PositiveSet ct_lex
R15900:15903 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15915:15918 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15919:15920 Coq.MSets.MSetPositive PositiveSet ct ind
R15945:15947 Coq.MSets.MSetPositive PositiveSet lex syndef
R15949:15949 Coq.MSets.MSetPositive <> w var
R15951:15952 Coq.MSets.MSetPositive <> w' var
R15934:15936 Coq.MSets.MSetPositive PositiveSet lex syndef
R15938:15938 Coq.MSets.MSetPositive <> v var
R15940:15941 Coq.MSets.MSetPositive <> v' var
R15923:15925 Coq.MSets.MSetPositive PositiveSet lex syndef
R15927:15927 Coq.MSets.MSetPositive <> u var
R15929:15930 Coq.MSets.MSetPositive <> u' var
R15904:15905 Coq.MSets.MSetPositive PositiveSet ct ind
R15913:15914 Coq.MSets.MSetPositive <> w' var
R15910:15911 Coq.MSets.MSetPositive <> v' var
R15907:15908 Coq.MSets.MSetPositive <> u' var
R15892:15893 Coq.MSets.MSetPositive PositiveSet ct ind
R15899:15899 Coq.MSets.MSetPositive <> w var
R15897:15897 Coq.MSets.MSetPositive <> v var
R15895:15895 Coq.MSets.MSetPositive <> u var
prf 16093:16107 PositiveSet ct_compare_bool
R16128:16129 Coq.MSets.MSetPositive PositiveSet ct ind
R16170:16181 Coq.MSets.MSetPositive PositiveSet compare_bool def
R16185:16185 Coq.MSets.MSetPositive <> c var
R16183:16183 Coq.MSets.MSetPositive <> a var
R16151:16162 Coq.MSets.MSetPositive PositiveSet compare_bool def
R16166:16166 Coq.MSets.MSetPositive <> c var
R16164:16164 Coq.MSets.MSetPositive <> b var
R16132:16143 Coq.MSets.MSetPositive PositiveSet compare_bool def
R16147:16147 Coq.MSets.MSetPositive <> b var
R16145:16145 Coq.MSets.MSetPositive <> a var
prf 16251:16264 PositiveSet compare_x_Leaf
R16295:16297 Coq.Init.Logic <> :type_scope:x_'='_x not
R16281:16287 Coq.MSets.MSetPositive PositiveSet compare def
R16291:16294 Coq.MSets.MSetPositive PositiveSet Leaf constr
R16289:16289 Coq.MSets.MSetPositive <> s var
R16301:16308 Coq.MSets.MSetPositive PositiveSet is_empty def
R16310:16310 Coq.MSets.MSetPositive <> s var
R16325:16326 Coq.Init.Datatypes <> Gt constr
R16317:16318 Coq.Init.Datatypes <> Eq constr
R16358:16368 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R16358:16368 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R16358:16368 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R16384:16391 Coq.MSets.MSetPositive PositiveSet is_empty def
R16384:16391 Coq.MSets.MSetPositive PositiveSet is_empty def
prf 16426:16440 PositiveSet compare_empty_x
R16470:16477 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16499:16501 Coq.Init.Logic <> :type_scope:x_'='_x not
R16488:16494 Coq.MSets.MSetPositive PositiveSet compare def
R16498:16498 Coq.MSets.MSetPositive <> b var
R16496:16496 Coq.MSets.MSetPositive <> a var
R16505:16512 Coq.MSets.MSetPositive PositiveSet is_empty def
R16514:16514 Coq.MSets.MSetPositive <> b var
R16529:16530 Coq.Init.Datatypes <> Lt constr
R16521:16522 Coq.Init.Datatypes <> Eq constr
R16463:16465 Coq.Init.Logic <> :type_scope:x_'='_x not
R16453:16460 Coq.MSets.MSetPositive PositiveSet is_empty def
R16462:16462 Coq.MSets.MSetPositive <> a var
R16466:16469 Coq.Init.Datatypes <> true constr
R16656:16668 Coq.Bool.Bool <> andb_lazy_alt thm
R16671:16683 Coq.Bool.Bool <> andb_true_iff thm
R16656:16668 Coq.Bool.Bool <> andb_lazy_alt thm
R16656:16668 Coq.Bool.Bool <> andb_lazy_alt thm
R16671:16683 Coq.Bool.Bool <> andb_true_iff thm
R16671:16683 Coq.Bool.Bool <> andb_true_iff thm
R16843:16850 Coq.MSets.MSetPositive PositiveSet is_empty def
R16863:16870 Coq.MSets.MSetPositive PositiveSet is_empty def
R16843:16850 Coq.MSets.MSetPositive PositiveSet is_empty def
R16863:16870 Coq.MSets.MSetPositive PositiveSet is_empty def
R16863:16870 Coq.MSets.MSetPositive PositiveSet is_empty def
prf 16902:16916 PositiveSet compare_x_empty
R16946:16953 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16975:16977 Coq.Init.Logic <> :type_scope:x_'='_x not
R16964:16970 Coq.MSets.MSetPositive PositiveSet compare def
R16974:16974 Coq.MSets.MSetPositive <> a var
R16972:16972 Coq.MSets.MSetPositive <> b var
R16981:16988 Coq.MSets.MSetPositive PositiveSet is_empty def
R16990:16990 Coq.MSets.MSetPositive <> b var
R17005:17006 Coq.Init.Datatypes <> Gt constr
R16997:16998 Coq.Init.Datatypes <> Eq constr
R16939:16941 Coq.Init.Logic <> :type_scope:x_'='_x not
R16929:16936 Coq.MSets.MSetPositive PositiveSet is_empty def
R16938:16938 Coq.MSets.MSetPositive <> a var
R16942:16945 Coq.Init.Datatypes <> true constr
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17040:17053 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17078:17088 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17095:17109 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17078:17088 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17078:17088 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17078:17088 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17095:17109 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17095:17109 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
prf 17146:17155 PositiveSet ct_compare
R17176:17177 Coq.MSets.MSetPositive PositiveSet ct ind
R17208:17214 Coq.MSets.MSetPositive PositiveSet compare def
R17218:17218 Coq.MSets.MSetPositive <> c var
R17216:17216 Coq.MSets.MSetPositive <> a var
R17194:17200 Coq.MSets.MSetPositive PositiveSet compare def
R17204:17204 Coq.MSets.MSetPositive <> c var
R17202:17202 Coq.MSets.MSetPositive <> b var
R17180:17186 Coq.MSets.MSetPositive PositiveSet compare def
R17190:17190 Coq.MSets.MSetPositive <> b var
R17188:17188 Coq.MSets.MSetPositive <> a var
R17366:17376 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17366:17376 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17366:17376 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17396:17402 Coq.MSets.MSetPositive PositiveSet compare def
R17419:17426 Coq.MSets.MSetPositive PositiveSet is_empty def
R17429:17432 Coq.MSets.MSetPositive PositiveSet Node constr
R17419:17426 Coq.MSets.MSetPositive PositiveSet is_empty def
R17429:17432 Coq.MSets.MSetPositive PositiveSet Node constr
R17472:17486 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17472:17486 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17472:17486 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17513:17519 Coq.MSets.MSetPositive PositiveSet compare def
R17536:17543 Coq.MSets.MSetPositive PositiveSet is_empty def
R17546:17549 Coq.MSets.MSetPositive PositiveSet Node constr
R17536:17543 Coq.MSets.MSetPositive PositiveSet is_empty def
R17546:17549 Coq.MSets.MSetPositive PositiveSet Node constr
R17594:17608 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R17594:17608 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R17594:17608 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R17727:17733 Coq.MSets.MSetPositive PositiveSet compare def
R17749:17762 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17749:17762 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17749:17762 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17780:17787 Coq.MSets.MSetPositive PositiveSet is_empty def
R17790:17793 Coq.MSets.MSetPositive PositiveSet Node constr
R17780:17787 Coq.MSets.MSetPositive PositiveSet is_empty def
R17790:17793 Coq.MSets.MSetPositive PositiveSet Node constr
R17829:17843 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17829:17843 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17829:17843 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17871:17878 Coq.MSets.MSetPositive PositiveSet is_empty def
R17881:17884 Coq.MSets.MSetPositive PositiveSet Node constr
R17871:17878 Coq.MSets.MSetPositive PositiveSet is_empty def
R17881:17884 Coq.MSets.MSetPositive PositiveSet Node constr
R17929:17943 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R17929:17943 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R17929:17943 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R17989:18002 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17989:18002 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17989:18002 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17989:18002 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R18020:18027 Coq.MSets.MSetPositive PositiveSet is_empty def
R18030:18033 Coq.MSets.MSetPositive PositiveSet Node constr
R18020:18027 Coq.MSets.MSetPositive PositiveSet is_empty def
R18030:18033 Coq.MSets.MSetPositive PositiveSet Node constr
R18068:18078 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R18082:18096 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18068:18078 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R18068:18078 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R18082:18096 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18082:18096 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18124:18131 Coq.MSets.MSetPositive PositiveSet is_empty def
R18134:18137 Coq.MSets.MSetPositive PositiveSet Node constr
R18124:18131 Coq.MSets.MSetPositive PositiveSet is_empty def
R18134:18137 Coq.MSets.MSetPositive PositiveSet Node constr
R18178:18192 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18178:18192 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18178:18192 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18248:18253 Coq.MSets.MSetPositive PositiveSet ct_lex thm
R18248:18253 Coq.MSets.MSetPositive PositiveSet ct_lex thm
R18262:18276 Coq.MSets.MSetPositive PositiveSet ct_compare_bool thm
R18262:18276 Coq.MSets.MSetPositive PositiveSet ct_compare_bool thm
R18292:18297 Coq.MSets.MSetPositive PositiveSet ct_lex thm
R18292:18297 Coq.MSets.MSetPositive PositiveSet ct_lex thm
R18323:18329 Coq.MSets.MSetPositive PositiveSet.lt_spec <> sec
inst 18344:18354 PositiveSet lt_strorder
R18358:18368 Coq.Classes.RelationClasses <> StrictOrder class
R18370:18371 Coq.MSets.MSetPositive PositiveSet lt def
R18393:18394 Coq.MSets.MSetPositive PositiveSet lt def
R18441:18443 Coq.Init.Logic <> :type_scope:x_'='_x not
R18430:18436 Coq.MSets.MSetPositive PositiveSet compare def
R18444:18445 Coq.Init.Datatypes <> Eq constr
R18441:18443 Coq.Init.Logic <> :type_scope:x_'='_x not
R18430:18436 Coq.MSets.MSetPositive PositiveSet compare def
R18444:18445 Coq.Init.Datatypes <> Eq constr
R18459:18471 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R18474:18483 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R18459:18471 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R18474:18483 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R18544:18553 Coq.MSets.MSetPositive PositiveSet ct_compare thm
R18544:18553 Coq.MSets.MSetPositive PositiveSet ct_compare thm
inst 18642:18657 PositiveSet compare_compat_1
R18661:18666 Coq.Classes.Morphisms <> Proper class
R18695:18701 Coq.MSets.MSetPositive PositiveSet compare def
R18671:18673 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R18669:18670 Coq.MSets.MSetPositive PositiveSet eq def
R18682:18684 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R18674:18681 Coq.Init.Logic <> eq ind
R18685:18692 Coq.Init.Logic <> eq ind
R18760:18761 Coq.MSets.MSetPositive PositiveSet eq def
R18780:18789 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R18795:18807 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R18780:18789 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R18780:18789 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R18795:18807 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R18795:18807 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R18829:18838 Coq.MSets.MSetPositive PositiveSet ct_compare thm
R18829:18838 Coq.MSets.MSetPositive PositiveSet ct_compare thm
inst 18904:18917 PositiveSet compare_compat
R18921:18926 Coq.Classes.Morphisms <> Proper class
R18949:18955 Coq.MSets.MSetPositive PositiveSet compare def
R18931:18933 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R18929:18930 Coq.MSets.MSetPositive PositiveSet eq def
R18936:18938 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R18934:18935 Coq.MSets.MSetPositive PositiveSet eq def
R18939:18946 Coq.Init.Logic <> eq ind
R19017:19027 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R19037:19047 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R19017:19027 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R19017:19027 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R19037:19047 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R19037:19047 Coq.MSets.MSetPositive PositiveSet compare_inv thm
inst 19088:19096 PositiveSet lt_compat
R19100:19105 Coq.Classes.Morphisms <> Proper class
R19123:19124 Coq.MSets.MSetPositive PositiveSet lt def
R19110:19112 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R19108:19109 Coq.MSets.MSetPositive PositiveSet eq def
R19115:19117 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R19113:19114 Coq.MSets.MSetPositive PositiveSet eq def
R19118:19120 Coq.Init.Logic <> iff def
R19170:19171 Coq.MSets.MSetPositive PositiveSet lt def
prf 19250:19257 PositiveSet add_spec
R19288:19292 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19274:19275 Coq.MSets.MSetPositive PositiveSet In def
R19280:19282 Coq.MSets.MSetPositive PositiveSet add def
R19286:19286 Coq.MSets.MSetPositive <> s var
R19284:19284 Coq.MSets.MSetPositive <> x var
R19277:19277 Coq.MSets.MSetPositive <> y var
R19296:19299 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19294:19294 Coq.Init.Logic <> :type_scope:x_'='_x not
R19293:19293 Coq.MSets.MSetPositive <> y var
R19295:19295 Coq.MSets.MSetPositive <> x var
R19300:19301 Coq.MSets.MSetPositive PositiveSet In def
R19305:19305 Coq.MSets.MSetPositive <> s var
R19303:19303 Coq.MSets.MSetPositive <> y var
R19328:19329 Coq.MSets.MSetPositive PositiveSet In def
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19455:19462 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
prf 19539:19549 PositiveSet remove_spec
R19583:19587 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19566:19567 Coq.MSets.MSetPositive PositiveSet In def
R19572:19577 Coq.MSets.MSetPositive PositiveSet remove def
R19581:19581 Coq.MSets.MSetPositive <> s var
R19579:19579 Coq.MSets.MSetPositive <> x var
R19569:19569 Coq.MSets.MSetPositive <> y var
R19594:19597 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19588:19589 Coq.MSets.MSetPositive PositiveSet In def
R19593:19593 Coq.MSets.MSetPositive <> s var
R19591:19591 Coq.MSets.MSetPositive <> y var
R19599:19600 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R19598:19598 Coq.MSets.MSetPositive <> y var
R19601:19601 Coq.MSets.MSetPositive <> x var
R19624:19625 Coq.MSets.MSetPositive PositiveSet In def
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19720:19727 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19785:19792 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
prf 19877:19890 PositiveSet singleton_spec
R19924:19928 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19906:19907 Coq.MSets.MSetPositive PositiveSet In def
R19912:19920 Coq.MSets.MSetPositive PositiveSet singleton def
R19922:19922 Coq.MSets.MSetPositive <> x var
R19909:19909 Coq.MSets.MSetPositive <> y var
R19930:19930 Coq.Init.Logic <> :type_scope:x_'='_x not
R19929:19929 Coq.MSets.MSetPositive <> y var
R19931:19931 Coq.MSets.MSetPositive <> x var
R19954:19962 Coq.MSets.MSetPositive PositiveSet singleton def
R19985:19992 Coq.MSets.MSetPositive PositiveSet add_spec thm
R19985:19992 Coq.MSets.MSetPositive PositiveSet add_spec thm
R19985:19992 Coq.MSets.MSetPositive PositiveSet add_spec thm
R20017:20018 Coq.MSets.MSetPositive PositiveSet In def
R20034:20041 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R20034:20041 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R20034:20041 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
prf 20114:20123 PositiveSet union_spec
R20158:20162 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R20141:20142 Coq.MSets.MSetPositive PositiveSet In def
R20147:20151 Coq.MSets.MSetPositive PositiveSet union def
R20155:20156 Coq.MSets.MSetPositive <> s' var
R20153:20153 Coq.MSets.MSetPositive <> s var
R20144:20144 Coq.MSets.MSetPositive <> x var
R20169:20172 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20163:20164 Coq.MSets.MSetPositive PositiveSet In def
R20168:20168 Coq.MSets.MSetPositive <> s var
R20166:20166 Coq.MSets.MSetPositive <> x var
R20173:20174 Coq.MSets.MSetPositive PositiveSet In def
R20178:20179 Coq.MSets.MSetPositive <> s' var
R20176:20176 Coq.MSets.MSetPositive <> x var
R20202:20203 Coq.MSets.MSetPositive PositiveSet In def
R20376:20387 Coq.Bool.Bool <> orb_true_iff thm
R20376:20387 Coq.Bool.Bool <> orb_true_iff thm
prf 20441:20450 PositiveSet inter_spec
R20485:20489 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R20468:20469 Coq.MSets.MSetPositive PositiveSet In def
R20474:20478 Coq.MSets.MSetPositive PositiveSet inter def
R20482:20483 Coq.MSets.MSetPositive <> s' var
R20480:20480 Coq.MSets.MSetPositive <> s var
R20471:20471 Coq.MSets.MSetPositive <> x var
R20496:20499 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20490:20491 Coq.MSets.MSetPositive PositiveSet In def
R20495:20495 Coq.MSets.MSetPositive <> s var
R20493:20493 Coq.MSets.MSetPositive <> x var
R20500:20501 Coq.MSets.MSetPositive PositiveSet In def
R20505:20506 Coq.MSets.MSetPositive <> s' var
R20503:20503 Coq.MSets.MSetPositive <> x var
R20529:20530 Coq.MSets.MSetPositive PositiveSet In def
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20627:20634 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20720:20732 Coq.Bool.Bool <> andb_true_iff thm
R20720:20732 Coq.Bool.Bool <> andb_true_iff thm
prf 20785:20793 PositiveSet diff_spec
R20827:20831 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R20811:20812 Coq.MSets.MSetPositive PositiveSet In def
R20817:20820 Coq.MSets.MSetPositive PositiveSet diff def
R20824:20825 Coq.MSets.MSetPositive <> s' var
R20822:20822 Coq.MSets.MSetPositive <> s var
R20814:20814 Coq.MSets.MSetPositive <> x var
R20838:20841 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20832:20833 Coq.MSets.MSetPositive PositiveSet In def
R20837:20837 Coq.MSets.MSetPositive <> s var
R20835:20835 Coq.MSets.MSetPositive <> x var
R20842:20843 Coq.Init.Logic <> :type_scope:'~'_x not
R20844:20845 Coq.MSets.MSetPositive PositiveSet In def
R20849:20850 Coq.MSets.MSetPositive <> s' var
R20847:20847 Coq.MSets.MSetPositive <> x var
R20873:20874 Coq.MSets.MSetPositive PositiveSet In def
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20990:20997 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21087:21099 Coq.Bool.Bool <> andb_true_iff thm
R21087:21099 Coq.Bool.Bool <> andb_true_iff thm
R21087:21099 Coq.Bool.Bool <> andb_true_iff thm
prf 21189:21197 PositiveSet fold_spec
R21225:21225 Coq.MSets.MSetPositive <> A var
R21236:21239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21241:21244 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21245:21245 Coq.MSets.MSetPositive <> A var
R21240:21240 Coq.MSets.MSetPositive <> A var
R21233:21235 Coq.MSets.MSetPositive PositiveSet elt def
R21265:21267 Coq.Init.Logic <> :type_scope:x_'='_x not
R21255:21258 Coq.MSets.MSetPositive PositiveSet fold def
R21264:21264 Coq.MSets.MSetPositive <> i var
R21262:21262 Coq.MSets.MSetPositive <> s var
R21260:21260 Coq.MSets.MSetPositive <> f var
R21268:21276 Coq.Lists.List <> fold_left def
R21310:21310 Coq.MSets.MSetPositive <> i var
R21298:21305 Coq.MSets.MSetPositive PositiveSet elements def
R21307:21307 Coq.MSets.MSetPositive <> s var
R21290:21290 Coq.MSets.MSetPositive <> f var
R21294:21294 Coq.MSets.MSetPositive <> a var
R21292:21292 Coq.MSets.MSetPositive <> e var
R21333:21336 Coq.MSets.MSetPositive PositiveSet fold def
R21339:21346 Coq.MSets.MSetPositive PositiveSet elements def
R21407:21407 Coq.MSets.MSetPositive <> a var
R21405:21405 Coq.MSets.MSetPositive <> e var
R21407:21407 Coq.MSets.MSetPositive <> a var
R21405:21405 Coq.MSets.MSetPositive <> e var
R21482:21490 Coq.Init.Logic <> :type_scope:x_'='_x not
R21450:21458 Coq.Lists.List <> fold_left def
R21468:21472 Coq.MSets.MSetPositive PositiveSet xfold def
R21480:21480 Coq.MSets.MSetPositive <> j var
R21478:21478 Coq.MSets.MSetPositive <> i var
R21476:21476 Coq.MSets.MSetPositive <> s var
R21463:21465 Coq.MSets.MSetPositive <> acc var
R21491:21499 Coq.Lists.List <> fold_left def
R21524:21524 Coq.MSets.MSetPositive <> i var
R21505:21513 Coq.MSets.MSetPositive PositiveSet xelements def
R21519:21521 Coq.MSets.MSetPositive <> acc var
R21517:21517 Coq.MSets.MSetPositive <> j var
R21515:21515 Coq.MSets.MSetPositive <> s var
R21482:21490 Coq.Init.Logic <> :type_scope:x_'='_x not
R21450:21458 Coq.Lists.List <> fold_left def
R21468:21472 Coq.MSets.MSetPositive PositiveSet xfold def
R21480:21480 Coq.MSets.MSetPositive <> j var
R21478:21478 Coq.MSets.MSetPositive <> i var
R21476:21476 Coq.MSets.MSetPositive <> s var
R21463:21465 Coq.MSets.MSetPositive <> acc var
R21491:21499 Coq.Lists.List <> fold_left def
R21524:21524 Coq.MSets.MSetPositive <> i var
R21505:21513 Coq.MSets.MSetPositive PositiveSet xelements def
R21519:21521 Coq.MSets.MSetPositive <> acc var
R21517:21517 Coq.MSets.MSetPositive <> j var
R21515:21515 Coq.MSets.MSetPositive <> s var
R21733:21735 Coq.Init.Datatypes <> nil constr
R21733:21735 Coq.Init.Datatypes <> nil constr
prf 21793:21805 PositiveSet cardinal_spec
R21828:21830 Coq.Init.Logic <> :type_scope:x_'='_x not
R21818:21825 Coq.MSets.MSetPositive PositiveSet cardinal def
R21827:21827 Coq.MSets.MSetPositive <> s var
R21831:21836 Coq.Init.Datatypes <> length def
R21839:21846 Coq.MSets.MSetPositive PositiveSet elements def
R21848:21848 Coq.MSets.MSetPositive <> s var
R21872:21879 Coq.MSets.MSetPositive PositiveSet elements def
R21958:21960 Coq.Init.Logic <> :type_scope:x_'='_x not
R21940:21942 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21930:21937 Coq.MSets.MSetPositive PositiveSet cardinal def
R21939:21939 Coq.MSets.MSetPositive <> s var
R21943:21948 Coq.Init.Datatypes <> length def
R21950:21952 Coq.MSets.MSetPositive <> acc var
R21961:21966 Coq.Init.Datatypes <> length def
R21969:21977 Coq.MSets.MSetPositive PositiveSet xelements def
R21983:21985 Coq.MSets.MSetPositive <> acc var
R21981:21981 Coq.MSets.MSetPositive <> j var
R21979:21979 Coq.MSets.MSetPositive <> s var
R21958:21960 Coq.Init.Logic <> :type_scope:x_'='_x not
R21940:21942 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21930:21937 Coq.MSets.MSetPositive PositiveSet cardinal def
R21939:21939 Coq.MSets.MSetPositive <> s var
R21943:21948 Coq.Init.Datatypes <> length def
R21950:21952 Coq.MSets.MSetPositive <> acc var
R21961:21966 Coq.Init.Datatypes <> length def
R21969:21977 Coq.MSets.MSetPositive PositiveSet xelements def
R21983:21985 Coq.MSets.MSetPositive <> acc var
R21981:21981 Coq.MSets.MSetPositive <> j var
R21979:21979 Coq.MSets.MSetPositive <> s var
R22133:22141 Coq.Init.Peano <> plus_n_Sm thm
R22144:22158 Coq.Arith.Plus <> plus_assoc syndef
R22133:22141 Coq.Init.Peano <> plus_n_Sm thm
R22133:22141 Coq.Init.Peano <> plus_n_Sm thm
R22144:22158 Coq.Arith.Plus <> plus_assoc syndef
R22144:22158 Coq.Arith.Plus <> plus_assoc syndef
R22212:22226 Coq.Arith.Plus <> plus_assoc syndef
R22212:22226 Coq.Arith.Plus <> plus_assoc syndef
R22212:22226 Coq.Arith.Plus <> plus_assoc syndef
R22284:22297 Coq.Arith.Plus <> plus_comm syndef
R22284:22297 Coq.Arith.Plus <> plus_comm syndef
R22284:22297 Coq.Arith.Plus <> plus_comm syndef
prf 22365:22376 PositiveSet xfilter_spec
R22419:22423 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R22399:22400 Coq.MSets.MSetPositive PositiveSet In def
R22405:22411 Coq.MSets.MSetPositive PositiveSet xfilter def
R22417:22417 Coq.MSets.MSetPositive <> i var
R22415:22415 Coq.MSets.MSetPositive <> s var
R22413:22413 Coq.MSets.MSetPositive <> f var
R22402:22402 Coq.MSets.MSetPositive <> x var
R22430:22433 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22424:22425 Coq.MSets.MSetPositive PositiveSet In def
R22429:22429 Coq.MSets.MSetPositive <> s var
R22427:22427 Coq.MSets.MSetPositive <> x var
R22441:22443 Coq.Init.Logic <> :type_scope:x_'='_x not
R22434:22434 Coq.MSets.MSetPositive <> f var
R22438:22438 Coq.MSets.MSetPositive PositiveSet ::x_'@'_x not
R22437:22437 Coq.MSets.MSetPositive <> i var
R22439:22439 Coq.MSets.MSetPositive <> x var
R22444:22447 Coq.Init.Datatypes <> true constr
R22479:22480 Coq.MSets.MSetPositive PositiveSet In def
R22560:22567 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R22560:22567 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R22560:22567 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R22607:22614 Coq.MSets.MSetPositive PositiveSet mem_node thm
R22607:22614 Coq.MSets.MSetPositive PositiveSet mem_node thm
R22607:22614 Coq.MSets.MSetPositive PositiveSet mem_node thm
R22720:22732 Coq.Bool.Bool <> andb_lazy_alt thm
R22720:22732 Coq.Bool.Bool <> andb_lazy_alt thm
R22720:22732 Coq.Bool.Bool <> andb_lazy_alt thm
R22741:22753 Coq.Bool.Bool <> andb_true_iff thm
R22741:22753 Coq.Bool.Bool <> andb_true_iff thm
prf 22772:22782 PositiveSet filter_spec
R22822:22830 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22873:22873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22848:22852 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R22831:22832 Coq.MSets.MSetPositive PositiveSet In def
R22837:22842 Coq.MSets.MSetPositive PositiveSet filter def
R22846:22846 Coq.MSets.MSetPositive <> s var
R22844:22844 Coq.MSets.MSetPositive <> f var
R22834:22834 Coq.MSets.MSetPositive <> x var
R22859:22862 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22853:22854 Coq.MSets.MSetPositive PositiveSet In def
R22858:22858 Coq.MSets.MSetPositive <> s var
R22856:22856 Coq.MSets.MSetPositive <> x var
R22866:22868 Coq.Init.Logic <> :type_scope:x_'='_x not
R22863:22863 Coq.MSets.MSetPositive <> f var
R22865:22865 Coq.MSets.MSetPositive <> x var
R22869:22872 Coq.Init.Datatypes <> true constr
R22800:22810 Coq.Lists.SetoidList <> compat_bool def
R22821:22821 Coq.MSets.MSetPositive <> f var
R22816:22819 Coq.MSets.MSetPositive PositiveSet eq def
R22812:22814 Coq.MSets.MSetPositive PositiveSet elt def
R22899:22910 Coq.MSets.MSetPositive PositiveSet xfilter_spec thm
R22899:22910 Coq.MSets.MSetPositive PositiveSet xfilter_spec thm
prf 22964:22975 PositiveSet xforall_spec
R23016:23020 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R23009:23011 Coq.Init.Logic <> :type_scope:x_'='_x not
R22996:23002 Coq.MSets.MSetPositive PositiveSet xforall def
R23008:23008 Coq.MSets.MSetPositive <> i var
R23006:23006 Coq.MSets.MSetPositive <> s var
R23004:23004 Coq.MSets.MSetPositive <> f var
R23012:23015 Coq.Init.Datatypes <> true constr
R23021:23027 Coq.MSets.MSetPositive PositiveSet For_all def
R23055:23055 Coq.MSets.MSetPositive <> s var
R23046:23048 Coq.Init.Logic <> :type_scope:x_'='_x not
R23039:23039 Coq.MSets.MSetPositive <> f var
R23043:23043 Coq.MSets.MSetPositive PositiveSet ::x_'@'_x not
R23042:23042 Coq.MSets.MSetPositive <> i var
R23044:23044 Coq.MSets.MSetPositive <> x var
R23049:23052 Coq.Init.Datatypes <> true constr
R23078:23084 Coq.MSets.MSetPositive PositiveSet For_all def
R23087:23088 Coq.MSets.MSetPositive PositiveSet In def
R23199:23211 Coq.Bool.Bool <> andb_lazy_alt thm
R23217:23228 Coq.Bool.Bool <> orb_lazy_alt thm
R23233:23245 Coq.Bool.Bool <> andb_true_iff thm
R23199:23211 Coq.Bool.Bool <> andb_lazy_alt thm
R23199:23211 Coq.Bool.Bool <> andb_lazy_alt thm
R23199:23211 Coq.Bool.Bool <> andb_lazy_alt thm
R23217:23228 Coq.Bool.Bool <> orb_lazy_alt thm
R23217:23228 Coq.Bool.Bool <> orb_lazy_alt thm
R23233:23245 Coq.Bool.Bool <> andb_true_iff thm
R23233:23245 Coq.Bool.Bool <> andb_true_iff thm
R23233:23245 Coq.Bool.Bool <> andb_true_iff thm
prf 23610:23621 PositiveSet for_all_spec
R23659:23667 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23722:23722 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23686:23690 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R23679:23681 Coq.Init.Logic <> :type_scope:x_'='_x not
R23668:23674 Coq.MSets.MSetPositive PositiveSet for_all def
R23678:23678 Coq.MSets.MSetPositive <> s var
R23676:23676 Coq.MSets.MSetPositive <> f var
R23682:23685 Coq.Init.Datatypes <> true constr
R23691:23697 Coq.MSets.MSetPositive PositiveSet For_all def
R23721:23721 Coq.MSets.MSetPositive <> s var
R23712:23714 Coq.Init.Logic <> :type_scope:x_'='_x not
R23709:23709 Coq.MSets.MSetPositive <> f var
R23711:23711 Coq.MSets.MSetPositive <> x var
R23715:23718 Coq.Init.Datatypes <> true constr
R23637:23647 Coq.Lists.SetoidList <> compat_bool def
R23658:23658 Coq.MSets.MSetPositive <> f var
R23653:23656 Coq.MSets.MSetPositive PositiveSet eq def
R23649:23651 Coq.MSets.MSetPositive PositiveSet elt def
R23748:23759 Coq.MSets.MSetPositive PositiveSet xforall_spec thm
R23748:23759 Coq.MSets.MSetPositive PositiveSet xforall_spec thm
prf 23812:23823 PositiveSet xexists_spec
R23864:23868 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R23857:23859 Coq.Init.Logic <> :type_scope:x_'='_x not
R23844:23850 Coq.MSets.MSetPositive PositiveSet xexists def
R23856:23856 Coq.MSets.MSetPositive <> i var
R23854:23854 Coq.MSets.MSetPositive <> s var
R23852:23852 Coq.MSets.MSetPositive <> f var
R23860:23863 Coq.Init.Datatypes <> true constr
R23869:23874 Coq.MSets.MSetPositive PositiveSet Exists def
R23902:23902 Coq.MSets.MSetPositive <> s var
R23893:23895 Coq.Init.Logic <> :type_scope:x_'='_x not
R23886:23886 Coq.MSets.MSetPositive <> f var
R23890:23890 Coq.MSets.MSetPositive PositiveSet ::x_'@'_x not
R23889:23889 Coq.MSets.MSetPositive <> i var
R23891:23891 Coq.MSets.MSetPositive <> x var
R23896:23899 Coq.Init.Datatypes <> true constr
R23925:23930 Coq.MSets.MSetPositive PositiveSet Exists def
R23933:23934 Coq.MSets.MSetPositive PositiveSet In def
R24034:24045 Coq.Bool.Bool <> orb_lazy_alt thm
R24049:24060 Coq.Bool.Bool <> orb_true_iff thm
R24066:24078 Coq.Bool.Bool <> andb_lazy_alt thm
R24081:24093 Coq.Bool.Bool <> andb_true_iff thm
R24034:24045 Coq.Bool.Bool <> orb_lazy_alt thm
R24034:24045 Coq.Bool.Bool <> orb_lazy_alt thm
R24034:24045 Coq.Bool.Bool <> orb_lazy_alt thm
R24049:24060 Coq.Bool.Bool <> orb_true_iff thm
R24049:24060 Coq.Bool.Bool <> orb_true_iff thm
R24049:24060 Coq.Bool.Bool <> orb_true_iff thm
R24066:24078 Coq.Bool.Bool <> andb_lazy_alt thm
R24066:24078 Coq.Bool.Bool <> andb_lazy_alt thm
R24081:24093 Coq.Bool.Bool <> andb_true_iff thm
R24081:24093 Coq.Bool.Bool <> andb_true_iff thm
R24227:24228 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R24227:24228 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R24257:24258 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R24257:24258 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
prf 24320:24330 PositiveSet exists_spec
R24369:24377 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24431:24431 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24396:24400 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24389:24391 Coq.Init.Logic <> :type_scope:x_'='_x not
R24378:24384 Coq.MSets.MSetPositive PositiveSet exists_ def
R24388:24388 Coq.MSets.MSetPositive <> s var
R24386:24386 Coq.MSets.MSetPositive <> f var
R24392:24395 Coq.Init.Datatypes <> true constr
R24401:24406 Coq.MSets.MSetPositive PositiveSet Exists def
R24430:24430 Coq.MSets.MSetPositive <> s var
R24421:24423 Coq.Init.Logic <> :type_scope:x_'='_x not
R24418:24418 Coq.MSets.MSetPositive <> f var
R24420:24420 Coq.MSets.MSetPositive <> x var
R24424:24427 Coq.Init.Datatypes <> true constr
R24347:24357 Coq.Lists.SetoidList <> compat_bool def
R24368:24368 Coq.MSets.MSetPositive <> f var
R24363:24366 Coq.MSets.MSetPositive PositiveSet eq def
R24359:24361 Coq.MSets.MSetPositive PositiveSet elt def
R24457:24468 Coq.MSets.MSetPositive PositiveSet xexists_spec thm
R24457:24468 Coq.MSets.MSetPositive PositiveSet xexists_spec thm
prf 24525:24540 PositiveSet partition_filter
R24573:24575 Coq.Init.Logic <> :type_scope:x_'='_x not
R24560:24568 Coq.MSets.MSetPositive PositiveSet partition def
R24572:24572 Coq.MSets.MSetPositive <> s var
R24570:24570 Coq.MSets.MSetPositive <> f var
R24576:24576 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24587:24588 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24619:24619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24577:24582 Coq.MSets.MSetPositive PositiveSet filter def
R24586:24586 Coq.MSets.MSetPositive <> s var
R24584:24584 Coq.MSets.MSetPositive <> f var
R24589:24594 Coq.MSets.MSetPositive PositiveSet filter def
R24618:24618 Coq.MSets.MSetPositive <> s var
R24606:24609 Coq.Init.Datatypes <> negb def
R24612:24612 Coq.MSets.MSetPositive <> f var
R24614:24614 Coq.MSets.MSetPositive <> x var
R24642:24650 Coq.MSets.MSetPositive PositiveSet partition def
R24653:24658 Coq.MSets.MSetPositive PositiveSet filter def
prf 24829:24843 PositiveSet partition_spec1
R24882:24891 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24892:24896 Coq.MSets.MSetPositive PositiveSet Equal def
R24921:24926 Coq.MSets.MSetPositive PositiveSet filter def
R24930:24930 Coq.MSets.MSetPositive <> s var
R24928:24928 Coq.MSets.MSetPositive <> f var
R24899:24901 Coq.Init.Datatypes <> fst def
R24904:24912 Coq.MSets.MSetPositive PositiveSet partition def
R24916:24916 Coq.MSets.MSetPositive <> s var
R24914:24914 Coq.MSets.MSetPositive <> f var
R24860:24870 Coq.Lists.SetoidList <> compat_bool def
R24881:24881 Coq.MSets.MSetPositive <> f var
R24876:24879 Coq.MSets.MSetPositive PositiveSet eq def
R24872:24874 Coq.MSets.MSetPositive PositiveSet elt def
R24959:24974 Coq.MSets.MSetPositive PositiveSet partition_filter thm
R24959:24974 Coq.MSets.MSetPositive PositiveSet partition_filter thm
R24959:24974 Coq.MSets.MSetPositive PositiveSet partition_filter thm
prf 25004:25018 PositiveSet partition_spec2
R25057:25066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25067:25071 Coq.MSets.MSetPositive PositiveSet Equal def
R25096:25101 Coq.MSets.MSetPositive PositiveSet filter def
R25125:25125 Coq.MSets.MSetPositive <> s var
R25113:25116 Coq.Init.Datatypes <> negb def
R25119:25119 Coq.MSets.MSetPositive <> f var
R25121:25121 Coq.MSets.MSetPositive <> x var
R25074:25076 Coq.Init.Datatypes <> snd def
R25079:25087 Coq.MSets.MSetPositive PositiveSet partition def
R25091:25091 Coq.MSets.MSetPositive <> s var
R25089:25089 Coq.MSets.MSetPositive <> f var
R25035:25045 Coq.Lists.SetoidList <> compat_bool def
R25056:25056 Coq.MSets.MSetPositive <> f var
R25051:25054 Coq.MSets.MSetPositive PositiveSet eq def
R25047:25049 Coq.MSets.MSetPositive PositiveSet elt def
R25154:25169 Coq.MSets.MSetPositive PositiveSet partition_filter thm
R25154:25169 Coq.MSets.MSetPositive PositiveSet partition_filter thm
R25154:25169 Coq.MSets.MSetPositive PositiveSet partition_filter thm
syndef 25241:25243 PositiveSet InL
R25249:25251 Coq.Lists.SetoidList <> InA ind
R25253:25256 Coq.MSets.MSetPositive PositiveSet eq def
prf 25269:25282 PositiveSet xelements_spec
R25332:25344 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R25307:25309 Coq.MSets.MSetPositive PositiveSet InL syndef
R25314:25322 Coq.MSets.MSetPositive PositiveSet xelements def
R25328:25330 Coq.MSets.MSetPositive <> acc var
R25326:25326 Coq.MSets.MSetPositive <> j var
R25324:25324 Coq.MSets.MSetPositive <> s var
R25311:25311 Coq.MSets.MSetPositive <> y var
R25354:25357 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25345:25347 Coq.MSets.MSetPositive PositiveSet InL syndef
R25351:25353 Coq.MSets.MSetPositive <> acc var
R25349:25349 Coq.MSets.MSetPositive <> y var
R25358:25364 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25366:25367 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25375:25378 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25369:25370 Coq.Init.Logic <> :type_scope:x_'='_x not
R25374:25374 Coq.Init.Logic <> :type_scope:x_'='_x not
R25368:25368 Coq.MSets.MSetPositive <> y var
R25372:25372 Coq.MSets.MSetPositive PositiveSet ::x_'@'_x not
R25371:25371 Coq.MSets.MSetPositive <> j var
R25373:25373 Coq.MSets.MSetPositive <> x var
R25386:25388 Coq.Init.Logic <> :type_scope:x_'='_x not
R25379:25381 Coq.MSets.MSetPositive PositiveSet mem def
R25385:25385 Coq.MSets.MSetPositive <> s var
R25383:25383 Coq.MSets.MSetPositive <> x var
R25389:25392 Coq.Init.Datatypes <> true constr
R25630:25637 Coq.Lists.SetoidList <> InA_cons thm
R25630:25637 Coq.Lists.SetoidList <> InA_cons thm
R25630:25637 Coq.Lists.SetoidList <> InA_cons thm
R25759:25760 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R25759:25760 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R25796:25797 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R25796:25797 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R26149:26150 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R26149:26150 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R26186:26187 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R26186:26187 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
prf 26397:26410 PositiveSet elements_spec1
R26443:26447 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26425:26427 Coq.MSets.MSetPositive PositiveSet InL syndef
R26432:26439 Coq.MSets.MSetPositive PositiveSet elements def
R26441:26441 Coq.MSets.MSetPositive <> s var
R26429:26429 Coq.MSets.MSetPositive <> x var
R26448:26449 Coq.MSets.MSetPositive PositiveSet In def
R26453:26453 Coq.MSets.MSetPositive <> s var
R26451:26451 Coq.MSets.MSetPositive <> x var
R26475:26482 Coq.MSets.MSetPositive PositiveSet elements def
R26501:26514 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R26501:26514 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R26501:26514 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
prf 26649:26661 PositiveSet lt_rev_append
R26686:26689 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26690:26693 Coq.MSets.MSetPositive PositiveSet lt def
R26703:26703 Coq.MSets.MSetPositive PositiveSet ::x_'@'_x not
R26702:26702 Coq.MSets.MSetPositive <> j var
R26704:26704 Coq.MSets.MSetPositive <> y var
R26697:26697 Coq.MSets.MSetPositive PositiveSet ::x_'@'_x not
R26696:26696 Coq.MSets.MSetPositive <> j var
R26698:26698 Coq.MSets.MSetPositive <> x var
R26678:26681 Coq.MSets.MSetPositive PositiveSet lt def
R26685:26685 Coq.MSets.MSetPositive <> y var
R26683:26683 Coq.MSets.MSetPositive <> x var
prf 26765:26778 PositiveSet elements_spec2
R26791:26794 Coq.Sorting.Sorted <> sort syndef
R26802:26809 Coq.MSets.MSetPositive PositiveSet elements def
R26811:26811 Coq.MSets.MSetPositive <> s var
R26796:26799 Coq.MSets.MSetPositive PositiveSet lt def
R26835:26842 Coq.MSets.MSetPositive PositiveSet elements def
R26895:26904 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26905:26905 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26954:26964 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26965:26968 Coq.Sorting.Sorted <> sort syndef
R26976:26984 Coq.MSets.MSetPositive PositiveSet xelements def
R26990:26992 Coq.MSets.MSetPositive <> acc var
R26988:26988 Coq.MSets.MSetPositive <> j var
R26986:26986 Coq.MSets.MSetPositive <> s var
R26970:26973 Coq.MSets.MSetPositive PositiveSet lt def
R26924:26928 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26938:26941 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26942:26945 Coq.MSets.MSetPositive PositiveSet lt def
R26953:26953 Coq.MSets.MSetPositive <> y var
R26949:26949 Coq.MSets.MSetPositive PositiveSet ::x_'@'_x not
R26948:26948 Coq.MSets.MSetPositive <> j var
R26950:26950 Coq.MSets.MSetPositive <> x var
R26929:26931 Coq.MSets.MSetPositive PositiveSet InL syndef
R26935:26937 Coq.MSets.MSetPositive <> acc var
R26933:26933 Coq.MSets.MSetPositive <> y var
R26918:26919 Coq.MSets.MSetPositive PositiveSet In def
R26923:26923 Coq.MSets.MSetPositive <> s var
R26921:26921 Coq.MSets.MSetPositive <> x var
R26882:26885 Coq.Sorting.Sorted <> sort syndef
R26892:26894 Coq.MSets.MSetPositive <> acc var
R26887:26890 Coq.MSets.MSetPositive PositiveSet lt def
R26895:26904 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26905:26905 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26954:26964 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26965:26968 Coq.Sorting.Sorted <> sort syndef
R26976:26984 Coq.MSets.MSetPositive PositiveSet xelements def
R26990:26992 Coq.MSets.MSetPositive <> acc var
R26988:26988 Coq.MSets.MSetPositive <> j var
R26986:26986 Coq.MSets.MSetPositive <> s var
R26970:26973 Coq.MSets.MSetPositive PositiveSet lt def
R26924:26928 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26938:26941 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26942:26945 Coq.MSets.MSetPositive PositiveSet lt def
R26953:26953 Coq.MSets.MSetPositive <> y var
R26949:26949 Coq.MSets.MSetPositive PositiveSet ::x_'@'_x not
R26948:26948 Coq.MSets.MSetPositive <> j var
R26950:26950 Coq.MSets.MSetPositive <> x var
R26929:26931 Coq.MSets.MSetPositive PositiveSet InL syndef
R26935:26937 Coq.MSets.MSetPositive <> acc var
R26933:26933 Coq.MSets.MSetPositive <> y var
R26918:26919 Coq.MSets.MSetPositive PositiveSet In def
R26923:26923 Coq.MSets.MSetPositive <> s var
R26921:26921 Coq.MSets.MSetPositive <> x var
R26882:26885 Coq.Sorting.Sorted <> sort syndef
R26892:26894 Coq.MSets.MSetPositive <> acc var
R26887:26890 Coq.MSets.MSetPositive PositiveSet lt def
R27218:27226 Coq.MSets.MSetPositive PositiveSet xelements def
R27231:27232 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R27218:27226 Coq.MSets.MSetPositive PositiveSet xelements def
R27231:27232 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R27306:27308 Coq.MSets.MSetPositive PositiveSet InL syndef
R27313:27321 Coq.MSets.MSetPositive PositiveSet xelements def
R27326:27327 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R27306:27308 Coq.MSets.MSetPositive PositiveSet InL syndef
R27313:27321 Coq.MSets.MSetPositive PositiveSet xelements def
R27326:27327 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R27407:27420 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27407:27420 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27407:27420 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27534:27546 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R27534:27546 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R27555:27555 Coq.Init.Logic <> I constr
R27555:27555 Coq.Init.Logic <> I constr
R27636:27648 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R27636:27648 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R27657:27657 Coq.Init.Logic <> I constr
R27657:27657 Coq.Init.Logic <> I constr
R27677:27690 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27677:27690 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27677:27690 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27790:27802 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R27790:27802 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R27811:27811 Coq.Init.Logic <> I constr
R27811:27811 Coq.Init.Logic <> I constr
R27938:27951 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27938:27951 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27938:27951 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R28057:28069 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R28057:28069 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R28078:28078 Coq.Init.Logic <> I constr
R28078:28078 Coq.Init.Logic <> I constr
prf 28169:28183 PositiveSet elements_spec2w
R28196:28201 Coq.Lists.SetoidList <> NoDupA ind
R28209:28216 Coq.MSets.MSetPositive PositiveSet elements def
R28218:28218 Coq.MSets.MSetPositive <> s var
R28203:28206 Coq.MSets.MSetPositive PositiveSet eq def
R28266:28269 Coq.MSets.MSetPositive PositiveSet lt def
R28248:28259 Coq.Lists.SetoidList <> SortA_NoDupA thm
R28266:28269 Coq.MSets.MSetPositive PositiveSet lt def
R28248:28259 Coq.Lists.SetoidList <> SortA_NoDupA thm
R28295:28308 Coq.MSets.MSetPositive PositiveSet elements_spec2 thm
R28295:28308 Coq.MSets.MSetPositive PositiveSet elements_spec2 thm
prf 28364:28375 PositiveSet choose_spec1
R28407:28410 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28411:28412 Coq.MSets.MSetPositive PositiveSet In def
R28416:28416 Coq.MSets.MSetPositive <> s var
R28414:28414 Coq.MSets.MSetPositive <> x var
R28398:28400 Coq.Init.Logic <> :type_scope:x_'='_x not
R28390:28395 Coq.MSets.MSetPositive PositiveSet choose def
R28397:28397 Coq.MSets.MSetPositive <> s var
R28401:28404 Coq.Init.Datatypes <> Some constr
R28406:28406 Coq.MSets.MSetPositive <> x var
R28605:28610 Coq.MSets.MSetPositive PositiveSet choose def
R28605:28610 Coq.MSets.MSetPositive PositiveSet choose def
R28732:28737 Coq.MSets.MSetPositive PositiveSet choose def
R28732:28737 Coq.MSets.MSetPositive PositiveSet choose def
prf 28871:28882 PositiveSet choose_spec2
R28910:28913 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28914:28918 Coq.MSets.MSetPositive PositiveSet Empty def
R28920:28920 Coq.MSets.MSetPositive <> s var
R28903:28905 Coq.Init.Logic <> :type_scope:x_'='_x not
R28895:28900 Coq.MSets.MSetPositive PositiveSet choose def
R28902:28902 Coq.MSets.MSetPositive <> s var
R28906:28909 Coq.Init.Datatypes <> None constr
R28943:28947 Coq.MSets.MSetPositive PositiveSet Empty def
R28950:28951 Coq.MSets.MSetPositive PositiveSet In def
R29022:29031 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R29022:29031 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R29104:29109 Coq.MSets.MSetPositive PositiveSet choose def
R29104:29109 Coq.MSets.MSetPositive PositiveSet choose def
R29159:29164 Coq.MSets.MSetPositive PositiveSet choose def
R29159:29164 Coq.MSets.MSetPositive PositiveSet choose def
prf 29343:29354 PositiveSet choose_empty
R29384:29387 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29396:29398 Coq.Init.Logic <> :type_scope:x_'='_x not
R29388:29393 Coq.MSets.MSetPositive PositiveSet choose def
R29395:29395 Coq.MSets.MSetPositive <> s var
R29399:29402 Coq.Init.Datatypes <> None constr
R29377:29379 Coq.Init.Logic <> :type_scope:x_'='_x not
R29367:29374 Coq.MSets.MSetPositive PositiveSet is_empty def
R29376:29376 Coq.MSets.MSetPositive <> s var
R29380:29383 Coq.Init.Datatypes <> true constr
R29440:29445 Coq.MSets.MSetPositive PositiveSet choose def
R29440:29445 Coq.MSets.MSetPositive PositiveSet choose def
R29483:29494 Coq.MSets.MSetPositive PositiveSet choose_spec1 thm
R29483:29494 Coq.MSets.MSetPositive PositiveSet choose_spec1 thm
R29509:29521 Coq.MSets.MSetPositive PositiveSet is_empty_spec thm
R29509:29521 Coq.MSets.MSetPositive PositiveSet is_empty_spec thm
prf 29567:29579 PositiveSet choose_spec3'
R29605:29608 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29617:29619 Coq.Init.Logic <> :type_scope:x_'='_x not
R29609:29614 Coq.MSets.MSetPositive PositiveSet choose def
R29616:29616 Coq.MSets.MSetPositive <> s var
R29620:29625 Coq.MSets.MSetPositive PositiveSet choose def
R29627:29628 Coq.MSets.MSetPositive <> s' var
R29595:29599 Coq.MSets.MSetPositive PositiveSet Equal def
R29603:29604 Coq.MSets.MSetPositive <> s' var
R29601:29601 Coq.MSets.MSetPositive <> s var
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29662:29671 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29741:29752 Coq.MSets.MSetPositive PositiveSet choose_empty thm
R29741:29752 Coq.MSets.MSetPositive PositiveSet choose_empty thm
R29822:29825 Coq.MSets.MSetPositive PositiveSet Node constr
R29822:29825 Coq.MSets.MSetPositive PositiveSet Node constr
R29861:29872 Coq.MSets.MSetPositive PositiveSet choose_empty thm
R29861:29872 Coq.MSets.MSetPositive PositiveSet choose_empty thm
R29891:29900 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29891:29900 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29891:29900 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29934:29943 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29934:29943 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29934:29943 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29999:30011 Coq.Bool.Bool <> andb_lazy_alt thm
R30015:30027 Coq.Bool.Bool <> andb_true_iff thm
R30030:30041 Coq.Bool.Bool <> eqb_true_iff thm
R29999:30011 Coq.Bool.Bool <> andb_lazy_alt thm
R29999:30011 Coq.Bool.Bool <> andb_lazy_alt thm
R29999:30011 Coq.Bool.Bool <> andb_lazy_alt thm
R30015:30027 Coq.Bool.Bool <> andb_true_iff thm
R30015:30027 Coq.Bool.Bool <> andb_true_iff thm
R30015:30027 Coq.Bool.Bool <> andb_true_iff thm
R30030:30041 Coq.Bool.Bool <> eqb_true_iff thm
R30030:30041 Coq.Bool.Bool <> eqb_true_iff thm
prf 30134:30145 PositiveSet choose_spec3
R30186:30189 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30208:30211 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30222:30225 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30226:30229 Coq.MSets.MSetPositive PositiveSet eq def
R30233:30233 Coq.MSets.MSetPositive <> y var
R30231:30231 Coq.MSets.MSetPositive <> x var
R30212:30216 Coq.MSets.MSetPositive PositiveSet Equal def
R30220:30221 Coq.MSets.MSetPositive <> s' var
R30218:30218 Coq.MSets.MSetPositive <> s var
R30199:30201 Coq.Init.Logic <> :type_scope:x_'='_x not
R30190:30195 Coq.MSets.MSetPositive PositiveSet choose def
R30197:30198 Coq.MSets.MSetPositive <> s' var
R30202:30205 Coq.Init.Datatypes <> Some constr
R30207:30207 Coq.MSets.MSetPositive <> y var
R30177:30179 Coq.Init.Logic <> :type_scope:x_'='_x not
R30169:30174 Coq.MSets.MSetPositive PositiveSet choose def
R30176:30176 Coq.MSets.MSetPositive <> s var
R30180:30183 Coq.Init.Datatypes <> Some constr
R30185:30185 Coq.MSets.MSetPositive <> x var
R30276:30288 Coq.MSets.MSetPositive PositiveSet choose_spec3' thm
R30276:30288 Coq.MSets.MSetPositive PositiveSet choose_spec3' thm
prf 30360:30372 PositiveSet min_elt_spec1
R30405:30408 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30409:30410 Coq.MSets.MSetPositive PositiveSet In def
R30414:30414 Coq.MSets.MSetPositive <> s var
R30412:30412 Coq.MSets.MSetPositive <> x var
R30396:30398 Coq.Init.Logic <> :type_scope:x_'='_x not
R30387:30393 Coq.MSets.MSetPositive PositiveSet min_elt def
R30395:30395 Coq.MSets.MSetPositive <> s var
R30399:30402 Coq.Init.Datatypes <> Some constr
R30404:30404 Coq.MSets.MSetPositive <> x var
R30436:30437 Coq.MSets.MSetPositive PositiveSet In def
R30536:30542 Coq.MSets.MSetPositive PositiveSet min_elt def
R30536:30542 Coq.MSets.MSetPositive PositiveSet min_elt def
R30692:30698 Coq.MSets.MSetPositive PositiveSet min_elt def
R30692:30698 Coq.MSets.MSetPositive PositiveSet min_elt def
prf 30811:30823 PositiveSet min_elt_spec3
R30852:30855 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30856:30860 Coq.MSets.MSetPositive PositiveSet Empty def
R30862:30862 Coq.MSets.MSetPositive <> s var
R30845:30847 Coq.Init.Logic <> :type_scope:x_'='_x not
R30836:30842 Coq.MSets.MSetPositive PositiveSet min_elt def
R30844:30844 Coq.MSets.MSetPositive <> s var
R30848:30851 Coq.Init.Datatypes <> None constr
R30885:30889 Coq.MSets.MSetPositive PositiveSet Empty def
R30892:30893 Coq.MSets.MSetPositive PositiveSet In def
R30964:30973 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R30964:30973 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R31050:31056 Coq.MSets.MSetPositive PositiveSet min_elt def
R31050:31056 Coq.MSets.MSetPositive PositiveSet min_elt def
R31086:31092 Coq.MSets.MSetPositive PositiveSet min_elt def
R31086:31092 Coq.MSets.MSetPositive PositiveSet min_elt def
R31200:31206 Coq.MSets.MSetPositive PositiveSet min_elt def
R31200:31206 Coq.MSets.MSetPositive PositiveSet min_elt def
R31288:31294 Coq.MSets.MSetPositive PositiveSet min_elt def
R31288:31294 Coq.MSets.MSetPositive PositiveSet min_elt def
prf 31374:31386 PositiveSet min_elt_spec2
R31421:31424 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31431:31434 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31435:31436 Coq.Init.Logic <> :type_scope:'~'_x not
R31437:31440 Coq.MSets.MSetPositive PositiveSet lt def
R31444:31444 Coq.MSets.MSetPositive <> x var
R31442:31442 Coq.MSets.MSetPositive <> y var
R31425:31426 Coq.MSets.MSetPositive PositiveSet In def
R31430:31430 Coq.MSets.MSetPositive <> s var
R31428:31428 Coq.MSets.MSetPositive <> y var
R31412:31414 Coq.Init.Logic <> :type_scope:x_'='_x not
R31403:31409 Coq.MSets.MSetPositive PositiveSet min_elt def
R31411:31411 Coq.MSets.MSetPositive <> s var
R31415:31418 Coq.Init.Datatypes <> Some constr
R31420:31420 Coq.MSets.MSetPositive <> x var
R31467:31468 Coq.MSets.MSetPositive PositiveSet In def
R31572:31578 Coq.MSets.MSetPositive PositiveSet min_elt def
R31572:31578 Coq.MSets.MSetPositive PositiveSet min_elt def
R31761:31773 Coq.MSets.MSetPositive PositiveSet min_elt_spec3 thm
R31761:31773 Coq.MSets.MSetPositive PositiveSet min_elt_spec3 thm
R31927:31933 Coq.MSets.MSetPositive PositiveSet min_elt def
R31927:31933 Coq.MSets.MSetPositive PositiveSet min_elt def
prf 32182:32194 PositiveSet max_elt_spec1
R32227:32230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32231:32232 Coq.MSets.MSetPositive PositiveSet In def
R32236:32236 Coq.MSets.MSetPositive <> s var
R32234:32234 Coq.MSets.MSetPositive <> x var
R32218:32220 Coq.Init.Logic <> :type_scope:x_'='_x not
R32209:32215 Coq.MSets.MSetPositive PositiveSet max_elt def
R32217:32217 Coq.MSets.MSetPositive <> s var
R32221:32224 Coq.Init.Datatypes <> Some constr
R32226:32226 Coq.MSets.MSetPositive <> x var
R32258:32259 Coq.MSets.MSetPositive PositiveSet In def
R32358:32364 Coq.MSets.MSetPositive PositiveSet max_elt def
R32358:32364 Coq.MSets.MSetPositive PositiveSet max_elt def
R32514:32520 Coq.MSets.MSetPositive PositiveSet max_elt def
R32514:32520 Coq.MSets.MSetPositive PositiveSet max_elt def
prf 32633:32645 PositiveSet max_elt_spec3
R32674:32677 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32678:32682 Coq.MSets.MSetPositive PositiveSet Empty def
R32684:32684 Coq.MSets.MSetPositive <> s var
R32667:32669 Coq.Init.Logic <> :type_scope:x_'='_x not
R32658:32664 Coq.MSets.MSetPositive PositiveSet max_elt def
R32666:32666 Coq.MSets.MSetPositive <> s var
R32670:32673 Coq.Init.Datatypes <> None constr
R32707:32711 Coq.MSets.MSetPositive PositiveSet Empty def
R32714:32715 Coq.MSets.MSetPositive PositiveSet In def
R32786:32795 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R32786:32795 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R32872:32878 Coq.MSets.MSetPositive PositiveSet max_elt def
R32872:32878 Coq.MSets.MSetPositive PositiveSet max_elt def
R32976:32982 Coq.MSets.MSetPositive PositiveSet max_elt def
R32976:32982 Coq.MSets.MSetPositive PositiveSet max_elt def
R33012:33018 Coq.MSets.MSetPositive PositiveSet max_elt def
R33012:33018 Coq.MSets.MSetPositive PositiveSet max_elt def
R33110:33116 Coq.MSets.MSetPositive PositiveSet max_elt def
R33110:33116 Coq.MSets.MSetPositive PositiveSet max_elt def
prf 33196:33208 PositiveSet max_elt_spec2
R33243:33246 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33253:33256 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33257:33258 Coq.Init.Logic <> :type_scope:'~'_x not
R33259:33262 Coq.MSets.MSetPositive PositiveSet lt def
R33266:33266 Coq.MSets.MSetPositive <> y var
R33264:33264 Coq.MSets.MSetPositive <> x var
R33247:33248 Coq.MSets.MSetPositive PositiveSet In def
R33252:33252 Coq.MSets.MSetPositive <> s var
R33250:33250 Coq.MSets.MSetPositive <> y var
R33234:33236 Coq.Init.Logic <> :type_scope:x_'='_x not
R33225:33231 Coq.MSets.MSetPositive PositiveSet max_elt def
R33233:33233 Coq.MSets.MSetPositive <> s var
R33237:33240 Coq.Init.Datatypes <> Some constr
R33242:33242 Coq.MSets.MSetPositive <> x var
R33289:33290 Coq.MSets.MSetPositive PositiveSet In def
R33394:33400 Coq.MSets.MSetPositive PositiveSet max_elt def
R33394:33400 Coq.MSets.MSetPositive PositiveSet max_elt def
R33583:33595 Coq.MSets.MSetPositive PositiveSet max_elt_spec3 thm
R33583:33595 Coq.MSets.MSetPositive PositiveSet max_elt_spec3 thm
R33749:33755 Coq.MSets.MSetPositive PositiveSet max_elt def
R33749:33755 Coq.MSets.MSetPositive PositiveSet max_elt def
R33962:33972 Coq.MSets.MSetPositive PositiveSet <> mod

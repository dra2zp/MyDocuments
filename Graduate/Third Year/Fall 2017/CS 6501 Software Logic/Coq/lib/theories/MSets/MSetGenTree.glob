DIGEST abce78757d0e6cd30d675fab08cc4da7
FCoq.MSets.MSetGenTree
R1285:1290 Coq.Structures.Orders <> <> lib
R1292:1302 Coq.Structures.OrdersFacts <> <> lib
R1304:1316 Coq.MSets.MSetInterface <> <> lib
R1318:1325 Coq.Arith.PeanoNat <> <> lib
modtype 1517:1523 <> InfoTyp
ax 1537:1537 InfoTyp t
R1550:1556 Coq.MSets.MSetGenTree InfoTyp <> modtype
R1614:1624 Coq.Structures.Orders OrderedType <> mod
R1632:1638 Coq.MSets.MSetGenTree InfoTyp <> mod
modtype 1607:1609 <> Ops
def 1654:1656 Ops elt
R1661:1663 Coq.MSets.MSetGenTree X t defax
R1683:1685 Coq.MSets.MSetGenTree Ops elt def
ind 1699:1702 Ops tree
constr 1717:1720 Ops Leaf
constr 1731:1734 Ops Node
R1724:1727 Coq.MSets.MSetGenTree <> tree ind
R1744:1747 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1752:1755 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1759:1762 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1767:1770 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1771:1774 Coq.MSets.MSetGenTree <> tree ind
R1763:1766 Coq.MSets.MSetGenTree <> tree ind
R1756:1758 Coq.MSets.MSetGenTree X t defax
R1748:1751 Coq.MSets.MSetGenTree <> tree ind
R1738:1743 Coq.MSets.MSetGenTree Info t defax
def 1833:1837 Ops empty
R1842:1845 Coq.MSets.MSetGenTree Ops Leaf constr
def 1860:1867 Ops is_empty
R1881:1881 Coq.MSets.MSetGenTree <> t var
R1891:1894 Coq.MSets.MSetGenTree Ops Leaf constr
R1899:1902 Coq.Init.Datatypes <> true constr
R1912:1916 Coq.Init.Datatypes <> false constr
def 2096:2098 Ops mem
R2114:2114 Coq.MSets.MSetGenTree <> t var
R2124:2127 Coq.MSets.MSetGenTree Ops Leaf constr
R2132:2136 Coq.Init.Datatypes <> false constr
R2141:2144 Coq.MSets.MSetGenTree Ops Node constr
R2166:2174 Coq.MSets.MSetGenTree X compare defax
R2176:2176 Coq.MSets.MSetGenTree <> x var
R2192:2193 Coq.Init.Datatypes <> Lt constr
R2198:2200 Coq.MSets.MSetGenTree <> mem def
R2202:2202 Coq.MSets.MSetGenTree <> x var
R2213:2214 Coq.Init.Datatypes <> Eq constr
R2219:2222 Coq.Init.Datatypes <> true constr
R2231:2232 Coq.Init.Datatypes <> Gt constr
R2237:2239 Coq.MSets.MSetGenTree <> mem def
R2241:2241 Coq.MSets.MSetGenTree <> x var
def 2316:2322 Ops min_elt
R2329:2332 Coq.MSets.MSetGenTree Ops tree ind
R2337:2342 Coq.Init.Datatypes <> option ind
R2344:2346 Coq.MSets.MSetGenTree Ops elt def
R2358:2358 Coq.MSets.MSetGenTree <> t var
R2368:2371 Coq.MSets.MSetGenTree Ops Leaf constr
R2376:2379 Coq.Init.Datatypes <> None constr
R2384:2387 Coq.MSets.MSetGenTree Ops Node constr
R2391:2394 Coq.MSets.MSetGenTree Ops Leaf constr
R2403:2406 Coq.Init.Datatypes <> Some constr
R2413:2416 Coq.MSets.MSetGenTree Ops Node constr
R2429:2435 Coq.MSets.MSetGenTree <> min_elt def
def 2455:2461 Ops max_elt
R2468:2471 Coq.MSets.MSetGenTree Ops tree ind
R2476:2481 Coq.Init.Datatypes <> option ind
R2483:2485 Coq.MSets.MSetGenTree Ops elt def
R2498:2498 Coq.MSets.MSetGenTree <> t var
R2509:2512 Coq.MSets.MSetGenTree Ops Leaf constr
R2517:2520 Coq.Init.Datatypes <> None constr
R2526:2529 Coq.MSets.MSetGenTree Ops Node constr
R2537:2540 Coq.MSets.MSetGenTree Ops Leaf constr
R2545:2548 Coq.Init.Datatypes <> Some constr
R2556:2559 Coq.MSets.MSetGenTree Ops Node constr
R2572:2578 Coq.MSets.MSetGenTree <> max_elt def
def 2601:2606 Ops choose
R2611:2617 Coq.MSets.MSetGenTree Ops min_elt def
def 2663:2666 Ops fold
R2685:2688 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2690:2693 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2694:2694 Coq.MSets.MSetGenTree <> A var
R2689:2689 Coq.MSets.MSetGenTree <> A var
R2682:2684 Coq.MSets.MSetGenTree Ops elt def
R2701:2704 Coq.MSets.MSetGenTree Ops tree ind
R2714:2714 Coq.MSets.MSetGenTree <> A var
R2719:2719 Coq.MSets.MSetGenTree <> A var
R2732:2732 Coq.MSets.MSetGenTree <> t var
R2743:2746 Coq.MSets.MSetGenTree Ops Leaf constr
R2751:2754 Coq.MSets.MSetGenTree <> base var
R2760:2763 Coq.MSets.MSetGenTree Ops Node constr
R2776:2779 Coq.MSets.MSetGenTree <> fold def
R2786:2786 Coq.MSets.MSetGenTree <> f var
R2791:2794 Coq.MSets.MSetGenTree <> fold def
R2800:2803 Coq.MSets.MSetGenTree <> base var
R2796:2796 Coq.MSets.MSetGenTree <> f var
R2781:2781 Coq.MSets.MSetGenTree <> f var
def 2823:2834 Ops elements_aux
R2853:2853 Coq.MSets.MSetGenTree <> s var
R2865:2868 Coq.MSets.MSetGenTree Ops Leaf constr
R2873:2875 Coq.MSets.MSetGenTree <> acc var
R2882:2885 Coq.MSets.MSetGenTree Ops Node constr
R2898:2909 Coq.MSets.MSetGenTree <> elements_aux def
R2913:2916 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2917:2928 Coq.MSets.MSetGenTree <> elements_aux def
R2930:2932 Coq.MSets.MSetGenTree <> acc var
def 2958:2965 Ops elements
R2970:2981 Coq.MSets.MSetGenTree Ops elements_aux def
R2983:2985 Coq.Init.Datatypes <> nil constr
def 2998:3013 Ops rev_elements_aux
R3032:3032 Coq.MSets.MSetGenTree <> s var
R3044:3047 Coq.MSets.MSetGenTree Ops Leaf constr
R3052:3054 Coq.MSets.MSetGenTree <> acc var
R3061:3064 Coq.MSets.MSetGenTree Ops Node constr
R3077:3092 Coq.MSets.MSetGenTree <> rev_elements_aux def
R3096:3099 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3100:3115 Coq.MSets.MSetGenTree <> rev_elements_aux def
R3117:3119 Coq.MSets.MSetGenTree <> acc var
def 3145:3156 Ops rev_elements
R3161:3176 Coq.MSets.MSetGenTree Ops rev_elements_aux def
R3178:3180 Coq.Init.Datatypes <> nil constr
def 3193:3200 Ops cardinal
R3207:3210 Coq.MSets.MSetGenTree Ops tree ind
R3215:3217 Coq.Init.Datatypes <> nat ind
R3230:3230 Coq.MSets.MSetGenTree <> s var
R3242:3245 Coq.MSets.MSetGenTree Ops Leaf constr
R3257:3260 Coq.MSets.MSetGenTree Ops Node constr
R3273:3273 Coq.Init.Datatypes <> S constr
R3286:3288 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3276:3283 Coq.MSets.MSetGenTree <> cardinal def
R3289:3296 Coq.MSets.MSetGenTree <> cardinal def
def 3318:3325 Ops maxdepth
R3339:3339 Coq.MSets.MSetGenTree <> s var
R3349:3352 Coq.MSets.MSetGenTree Ops Leaf constr
R3362:3365 Coq.MSets.MSetGenTree Ops Node constr
R3378:3378 Coq.Init.Datatypes <> S constr
R3381:3383 Coq.Init.Peano <> max syndef
R3399:3406 Coq.MSets.MSetGenTree <> maxdepth def
R3386:3393 Coq.MSets.MSetGenTree <> maxdepth def
def 3428:3435 Ops mindepth
R3449:3449 Coq.MSets.MSetGenTree <> s var
R3459:3462 Coq.MSets.MSetGenTree Ops Leaf constr
R3472:3475 Coq.MSets.MSetGenTree Ops Node constr
R3488:3488 Coq.Init.Datatypes <> S constr
R3491:3493 Coq.Init.Peano <> min syndef
R3509:3516 Coq.MSets.MSetGenTree <> mindepth def
R3496:3503 Coq.MSets.MSetGenTree <> mindepth def
def 3674:3680 Ops for_all
R3688:3689 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3690:3693 Coq.Init.Datatypes <> bool ind
R3685:3687 Coq.MSets.MSetGenTree Ops elt def
R3707:3707 Coq.MSets.MSetGenTree <> s var
R3718:3721 Coq.MSets.MSetGenTree Ops Leaf constr
R3726:3729 Coq.Init.Datatypes <> true constr
R3735:3738 Coq.MSets.MSetGenTree Ops Node constr
R3770:3774 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R3775:3781 Coq.MSets.MSetGenTree <> for_all def
R3783:3783 Coq.MSets.MSetGenTree <> f var
R3754:3758 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R3759:3765 Coq.MSets.MSetGenTree <> for_all def
R3767:3767 Coq.MSets.MSetGenTree <> f var
R3751:3751 Coq.MSets.MSetGenTree <> f var
def 3802:3808 Ops exists_
R3816:3817 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3818:3821 Coq.Init.Datatypes <> bool ind
R3813:3815 Coq.MSets.MSetGenTree Ops elt def
R3835:3835 Coq.MSets.MSetGenTree <> s var
R3846:3849 Coq.MSets.MSetGenTree Ops Leaf constr
R3854:3858 Coq.Init.Datatypes <> false constr
R3864:3867 Coq.MSets.MSetGenTree Ops Node constr
R3899:3903 Coq.Bool.Bool <> :lazy_bool_scope:x_'|||'_x not
R3904:3910 Coq.MSets.MSetGenTree <> exists_ def
R3912:3912 Coq.MSets.MSetGenTree <> f var
R3883:3887 Coq.Bool.Bool <> :lazy_bool_scope:x_'|||'_x not
R3888:3894 Coq.MSets.MSetGenTree <> exists_ def
R3896:3896 Coq.MSets.MSetGenTree <> f var
R3880:3880 Coq.MSets.MSetGenTree <> f var
ind 4498:4508 Ops enumeration
constr 4516:4518 Ops End
constr 4537:4540 Ops More
R4522:4532 Coq.MSets.MSetGenTree <> enumeration ind
R4547:4550 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4555:4558 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4570:4573 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4574:4584 Coq.MSets.MSetGenTree <> enumeration ind
R4559:4569 Coq.MSets.MSetGenTree <> enumeration ind
R4551:4554 Coq.MSets.MSetGenTree Ops tree ind
R4544:4546 Coq.MSets.MSetGenTree Ops elt def
def 4683:4686 Ops cons
R4694:4704 Coq.MSets.MSetGenTree Ops enumeration ind
R4716:4716 Coq.MSets.MSetGenTree <> s var
R4727:4730 Coq.MSets.MSetGenTree Ops Leaf constr
R4735:4735 Coq.MSets.MSetGenTree <> e var
R4741:4744 Coq.MSets.MSetGenTree Ops Node constr
R4757:4760 Coq.MSets.MSetGenTree <> cons def
R4765:4768 Coq.MSets.MSetGenTree Ops More constr
R4774:4774 Coq.MSets.MSetGenTree <> e var
def 4838:4849 Ops compare_more
R4871:4872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4873:4882 Coq.Init.Datatypes <> comparison ind
R4860:4870 Coq.MSets.MSetGenTree Ops enumeration ind
R4898:4899 Coq.MSets.MSetGenTree <> e2 var
R4909:4911 Coq.MSets.MSetGenTree Ops End constr
R4916:4917 Coq.Init.Datatypes <> Gt constr
R4922:4925 Coq.MSets.MSetGenTree Ops More constr
R4950:4958 Coq.MSets.MSetGenTree X compare defax
R4960:4961 Coq.MSets.MSetGenTree <> x1 var
R4979:4980 Coq.Init.Datatypes <> Eq constr
R4985:4988 Coq.MSets.MSetGenTree <> cont var
R4991:4994 Coq.MSets.MSetGenTree Ops cons def
R4999:5000 Coq.MSets.MSetGenTree <> e2 var
R5011:5012 Coq.Init.Datatypes <> Lt constr
R5017:5018 Coq.Init.Datatypes <> Lt constr
R5028:5029 Coq.Init.Datatypes <> Gt constr
R5034:5035 Coq.Init.Datatypes <> Gt constr
def 5127:5138 Ops compare_cont
R5160:5161 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5162:5171 Coq.Init.Datatypes <> comparison ind
R5149:5159 Coq.MSets.MSetGenTree Ops enumeration ind
R5187:5188 Coq.MSets.MSetGenTree <> s1 var
R5199:5202 Coq.MSets.MSetGenTree Ops Leaf constr
R5207:5210 Coq.MSets.MSetGenTree <> cont var
R5212:5213 Coq.MSets.MSetGenTree <> e2 var
R5219:5222 Coq.MSets.MSetGenTree Ops Node constr
R5243:5254 Coq.MSets.MSetGenTree <> compare_cont def
R5300:5301 Coq.MSets.MSetGenTree <> e2 var
R5260:5271 Coq.MSets.MSetGenTree Ops compare_more def
R5277:5288 Coq.MSets.MSetGenTree <> compare_cont def
R5293:5296 Coq.MSets.MSetGenTree <> cont var
def 5351:5361 Ops compare_end
R5376:5377 Coq.MSets.MSetGenTree <> e2 var
R5384:5386 Coq.MSets.MSetGenTree Ops End constr
R5391:5392 Coq.Init.Datatypes <> Eq constr
R5401:5402 Coq.Init.Datatypes <> Lt constr
def 5453:5459 Ops compare
R5470:5481 Coq.MSets.MSetGenTree Ops compare_cont def
R5499:5502 Coq.MSets.MSetGenTree Ops cons def
R5507:5509 Coq.MSets.MSetGenTree Ops End constr
R5504:5505 Coq.MSets.MSetGenTree <> s2 var
R5486:5496 Coq.MSets.MSetGenTree Ops compare_end def
R5483:5484 Coq.MSets.MSetGenTree <> s1 var
def 5525:5529 Ops equal
R5547:5553 Coq.MSets.MSetGenTree Ops compare def
R5558:5559 Coq.MSets.MSetGenTree <> s2 var
R5555:5556 Coq.MSets.MSetGenTree <> s1 var
R5566:5567 Coq.Init.Datatypes <> Eq constr
R5572:5575 Coq.Init.Datatypes <> true constr
R5584:5588 Coq.Init.Datatypes <> false constr
def 6117:6123 Ops subsetl
R6142:6145 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6146:6149 Coq.Init.Datatypes <> bool ind
R6138:6141 Coq.MSets.MSetGenTree Ops tree ind
R6160:6163 Coq.Init.Datatypes <> bool ind
R6175:6176 Coq.MSets.MSetGenTree <> s2 var
R6187:6190 Coq.MSets.MSetGenTree Ops Leaf constr
R6195:6199 Coq.Init.Datatypes <> false constr
R6205:6208 Coq.MSets.MSetGenTree Ops Node constr
R6235:6243 Coq.MSets.MSetGenTree X compare defax
R6245:6246 Coq.MSets.MSetGenTree <> x1 var
R6264:6265 Coq.Init.Datatypes <> Eq constr
R6270:6278 Coq.MSets.MSetGenTree <> subset_l1 var
R6291:6292 Coq.Init.Datatypes <> Lt constr
R6297:6303 Coq.MSets.MSetGenTree <> subsetl def
R6315:6316 Coq.MSets.MSetGenTree <> x1 var
R6305:6313 Coq.MSets.MSetGenTree <> subset_l1 var
R6329:6330 Coq.Init.Datatypes <> Gt constr
R6344:6348 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R6349:6357 Coq.MSets.MSetGenTree <> subset_l1 var
R6359:6360 Coq.MSets.MSetGenTree <> s2 var
R6335:6337 Coq.MSets.MSetGenTree Ops mem def
R6339:6340 Coq.MSets.MSetGenTree <> x1 var
def 6387:6393 Ops subsetr
R6412:6415 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6416:6419 Coq.Init.Datatypes <> bool ind
R6408:6411 Coq.MSets.MSetGenTree Ops tree ind
R6430:6433 Coq.Init.Datatypes <> bool ind
R6445:6446 Coq.MSets.MSetGenTree <> s2 var
R6457:6460 Coq.MSets.MSetGenTree Ops Leaf constr
R6465:6469 Coq.Init.Datatypes <> false constr
R6475:6478 Coq.MSets.MSetGenTree Ops Node constr
R6505:6513 Coq.MSets.MSetGenTree X compare defax
R6515:6516 Coq.MSets.MSetGenTree <> x1 var
R6534:6535 Coq.Init.Datatypes <> Eq constr
R6540:6548 Coq.MSets.MSetGenTree <> subset_r1 var
R6561:6562 Coq.Init.Datatypes <> Lt constr
R6576:6580 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R6581:6589 Coq.MSets.MSetGenTree <> subset_r1 var
R6591:6592 Coq.MSets.MSetGenTree <> s2 var
R6567:6569 Coq.MSets.MSetGenTree Ops mem def
R6571:6572 Coq.MSets.MSetGenTree <> x1 var
R6602:6603 Coq.Init.Datatypes <> Gt constr
R6608:6614 Coq.MSets.MSetGenTree <> subsetr def
R6626:6627 Coq.MSets.MSetGenTree <> x1 var
R6616:6624 Coq.MSets.MSetGenTree <> subset_r1 var
def 6657:6662 Ops subset
R6672:6675 Coq.Init.Datatypes <> bool ind
R6690:6691 Coq.MSets.MSetGenTree <> s2 var
R6686:6687 Coq.MSets.MSetGenTree <> s1 var
R6702:6705 Coq.MSets.MSetGenTree Ops Leaf constr
R6713:6716 Coq.Init.Datatypes <> true constr
R6722:6725 Coq.MSets.MSetGenTree Ops Node constr
R6736:6739 Coq.MSets.MSetGenTree Ops Leaf constr
R6744:6748 Coq.Init.Datatypes <> false constr
R6754:6757 Coq.MSets.MSetGenTree Ops Node constr
R6771:6774 Coq.MSets.MSetGenTree Ops Node constr
R6801:6809 Coq.MSets.MSetGenTree X compare defax
R6830:6831 Coq.Init.Datatypes <> Eq constr
R6848:6852 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R6853:6858 Coq.MSets.MSetGenTree <> subset def
R6836:6841 Coq.MSets.MSetGenTree <> subset def
R6874:6875 Coq.Init.Datatypes <> Lt constr
R6905:6909 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R6910:6915 Coq.MSets.MSetGenTree <> subset def
R6920:6921 Coq.MSets.MSetGenTree <> s2 var
R6880:6886 Coq.MSets.MSetGenTree Ops subsetl def
R6889:6894 Coq.MSets.MSetGenTree <> subset def
R6931:6932 Coq.Init.Datatypes <> Gt constr
R6962:6966 Coq.Bool.Bool <> :lazy_bool_scope:x_'&&&'_x not
R6967:6972 Coq.MSets.MSetGenTree <> subset def
R6977:6978 Coq.MSets.MSetGenTree <> s2 var
R6937:6943 Coq.MSets.MSetGenTree Ops subsetr def
R6946:6951 Coq.MSets.MSetGenTree <> subset def
R7000:7002 Coq.MSets.MSetGenTree Ops <> modtype
R7092:7102 Coq.Structures.Orders OrderedType <> mod
R7110:7116 Coq.MSets.MSetGenTree InfoTyp <> mod
R7128:7130 Coq.MSets.MSetGenTree Ops <> mod
R7132:7132 Coq.MSets.MSetGenTree X <> modtype
R7134:7137 Coq.MSets.MSetGenTree Info <> modtype
modtype 7083:7087 <> Props
ind 7184:7186 Props InT
constr 7220:7225 Props IsRoot
constr 7282:7287 Props InLeft
constr 7343:7349 Props InRight
R7193:7195 Coq.MSets.MSetGenTree M elt def
R7204:7207 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7200:7203 Coq.MSets.MSetGenTree M tree ind
R7253:7256 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7257:7259 Coq.MSets.MSetGenTree <> InT ind
R7264:7267 Coq.MSets.MSetGenTree M Node constr
R7275:7275 Coq.MSets.MSetGenTree <> r var
R7273:7273 Coq.MSets.MSetGenTree <> y var
R7271:7271 Coq.MSets.MSetGenTree <> l var
R7269:7269 Coq.MSets.MSetGenTree <> c var
R7245:7248 Coq.MSets.MSetGenTree X eq defax
R7252:7252 Coq.MSets.MSetGenTree <> y var
R7314:7317 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7318:7320 Coq.MSets.MSetGenTree <> InT ind
R7325:7328 Coq.MSets.MSetGenTree M Node constr
R7336:7336 Coq.MSets.MSetGenTree <> r var
R7334:7334 Coq.MSets.MSetGenTree <> y var
R7332:7332 Coq.MSets.MSetGenTree <> l var
R7330:7330 Coq.MSets.MSetGenTree <> c var
R7307:7309 Coq.MSets.MSetGenTree <> InT ind
R7313:7313 Coq.MSets.MSetGenTree <> l var
R7376:7379 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7380:7382 Coq.MSets.MSetGenTree <> InT ind
R7387:7390 Coq.MSets.MSetGenTree M Node constr
R7398:7398 Coq.MSets.MSetGenTree <> r var
R7396:7396 Coq.MSets.MSetGenTree <> y var
R7394:7394 Coq.MSets.MSetGenTree <> l var
R7392:7392 Coq.MSets.MSetGenTree <> c var
R7369:7371 Coq.MSets.MSetGenTree <> InT ind
R7375:7375 Coq.MSets.MSetGenTree <> r var
def 7414:7415 Props In
R7420:7422 Coq.MSets.MSetGenTree Props InT ind
def 7463:7467 Props Equal
R7488:7490 Coq.MSets.MSetGenTree M elt def
R7500:7504 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R7493:7495 Coq.MSets.MSetGenTree Props InT ind
R7499:7499 Coq.MSets.MSetGenTree <> s var
R7497:7497 Coq.MSets.MSetGenTree <> a var
R7505:7507 Coq.MSets.MSetGenTree Props InT ind
R7511:7512 Coq.MSets.MSetGenTree <> s' var
R7509:7509 Coq.MSets.MSetGenTree <> a var
def 7526:7531 Props Subset
R7552:7554 Coq.MSets.MSetGenTree M elt def
R7564:7567 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7568:7570 Coq.MSets.MSetGenTree Props InT ind
R7574:7575 Coq.MSets.MSetGenTree <> s' var
R7572:7572 Coq.MSets.MSetGenTree <> a var
R7557:7559 Coq.MSets.MSetGenTree Props InT ind
R7563:7563 Coq.MSets.MSetGenTree <> s var
R7561:7561 Coq.MSets.MSetGenTree <> a var
def 7589:7593 Props Empty
R7611:7613 Coq.MSets.MSetGenTree M elt def
R7616:7617 Coq.Init.Logic <> :type_scope:'~'_x not
R7618:7620 Coq.MSets.MSetGenTree Props InT ind
R7624:7624 Coq.MSets.MSetGenTree <> s var
R7622:7622 Coq.MSets.MSetGenTree <> a var
def 7638:7644 Props For_all
R7654:7657 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7651:7653 Coq.MSets.MSetGenTree M elt def
R7686:7689 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7690:7690 Coq.MSets.MSetGenTree <> P var
R7692:7692 Coq.MSets.MSetGenTree <> x var
R7679:7681 Coq.MSets.MSetGenTree Props InT ind
R7685:7685 Coq.MSets.MSetGenTree <> s var
R7683:7683 Coq.MSets.MSetGenTree <> x var
def 7706:7711 Props Exists
R7721:7724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7718:7720 Coq.MSets.MSetGenTree M elt def
R7736:7742 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7744:7745 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7753:7756 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7746:7748 Coq.MSets.MSetGenTree Props InT ind
R7752:7752 Coq.MSets.MSetGenTree <> s var
R7750:7750 Coq.MSets.MSetGenTree <> x var
R7757:7757 Coq.MSets.MSetGenTree <> P var
R7759:7759 Coq.MSets.MSetGenTree <> x var
def 7902:7908 Props lt_tree
R7934:7937 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7938:7941 Coq.MSets.MSetGenTree X lt defax
R7945:7945 Coq.MSets.MSetGenTree <> x var
R7943:7943 Coq.MSets.MSetGenTree <> y var
R7927:7929 Coq.MSets.MSetGenTree Props InT ind
R7933:7933 Coq.MSets.MSetGenTree <> s var
R7931:7931 Coq.MSets.MSetGenTree <> y var
def 7959:7965 Props gt_tree
R7991:7994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7995:7998 Coq.MSets.MSetGenTree X lt defax
R8002:8002 Coq.MSets.MSetGenTree <> y var
R8000:8000 Coq.MSets.MSetGenTree <> x var
R7984:7986 Coq.MSets.MSetGenTree Props InT ind
R7990:7990 Coq.MSets.MSetGenTree <> s var
R7988:7988 Coq.MSets.MSetGenTree <> y var
ind 8062:8064 Props bst
constr 8088:8093 Props BSLeaf
constr 8110:8115 Props BSNode
R8072:8075 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8068:8071 Coq.MSets.MSetGenTree M tree ind
R8097:8099 Coq.MSets.MSetGenTree <> bst ind
R8101:8104 Coq.MSets.MSetGenTree M Leaf constr
R8140:8143 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8149:8157 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8169:8172 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8184:8187 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8188:8190 Coq.MSets.MSetGenTree <> bst ind
R8193:8196 Coq.MSets.MSetGenTree M Node constr
R8204:8204 Coq.MSets.MSetGenTree <> r var
R8202:8202 Coq.MSets.MSetGenTree <> x var
R8200:8200 Coq.MSets.MSetGenTree <> l var
R8198:8198 Coq.MSets.MSetGenTree <> c var
R8173:8179 Coq.MSets.MSetGenTree Props gt_tree def
R8183:8183 Coq.MSets.MSetGenTree <> r var
R8181:8181 Coq.MSets.MSetGenTree <> x var
R8158:8164 Coq.MSets.MSetGenTree Props lt_tree def
R8168:8168 Coq.MSets.MSetGenTree <> l var
R8166:8166 Coq.MSets.MSetGenTree <> x var
R8144:8146 Coq.MSets.MSetGenTree <> bst ind
R8148:8148 Coq.MSets.MSetGenTree <> r var
R8135:8137 Coq.MSets.MSetGenTree <> bst ind
R8139:8139 Coq.MSets.MSetGenTree <> l var
def 8295:8298 Props IsOk
R8303:8305 Coq.MSets.MSetGenTree Props bst ind
ind 8315:8316 Props Ok
constr 8337:8338 Props ok
rec 8315:8316 Props Ok
proj 8337:8338 Props ok
R8321:8324 Coq.MSets.MSetGenTree M tree ind
R8342:8344 Coq.MSets.MSetGenTree Props bst ind
R8346:8346 Coq.MSets.MSetGenTree <> s var
inst 8359:8364 Props bst_Ok
R8374:8376 Coq.MSets.MSetGenTree Props bst ind
R8378:8378 Coq.MSets.MSetGenTree <> s var
R8383:8384 Coq.MSets.MSetGenTree Props Ok class
R8386:8386 Coq.MSets.MSetGenTree <> s var
R8393:8394 Coq.MSets.MSetGenTree Props ok def
def 8415:8422 Props ltb_tree
R8438:8438 Coq.MSets.MSetGenTree <> s var
R8449:8452 Coq.MSets.MSetGenTree M Leaf constr
R8457:8460 Coq.Init.Datatypes <> true constr
R8466:8469 Coq.MSets.MSetGenTree M Node constr
R8493:8501 Coq.MSets.MSetGenTree X compare defax
R8503:8503 Coq.MSets.MSetGenTree <> x var
R8520:8521 Coq.Init.Datatypes <> Gt constr
R8538:8541 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R8526:8533 Coq.MSets.MSetGenTree <> ltb_tree def
R8535:8535 Coq.MSets.MSetGenTree <> x var
R8542:8549 Coq.MSets.MSetGenTree <> ltb_tree def
R8551:8551 Coq.MSets.MSetGenTree <> x var
R8568:8572 Coq.Init.Datatypes <> false constr
def 8599:8606 Props gtb_tree
R8622:8622 Coq.MSets.MSetGenTree <> s var
R8633:8636 Coq.MSets.MSetGenTree M Leaf constr
R8641:8644 Coq.Init.Datatypes <> true constr
R8650:8653 Coq.MSets.MSetGenTree M Node constr
R8677:8685 Coq.MSets.MSetGenTree X compare defax
R8687:8687 Coq.MSets.MSetGenTree <> x var
R8704:8705 Coq.Init.Datatypes <> Lt constr
R8722:8725 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R8710:8717 Coq.MSets.MSetGenTree <> gtb_tree def
R8719:8719 Coq.MSets.MSetGenTree <> x var
R8726:8733 Coq.MSets.MSetGenTree <> gtb_tree def
R8735:8735 Coq.MSets.MSetGenTree <> x var
R8752:8756 Coq.Init.Datatypes <> false constr
def 8783:8786 Props isok
R8800:8800 Coq.MSets.MSetGenTree <> s var
R8811:8814 Coq.MSets.MSetGenTree M Leaf constr
R8819:8822 Coq.Init.Datatypes <> true constr
R8828:8831 Coq.MSets.MSetGenTree M Node constr
R8877:8880 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R8861:8864 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R8851:8854 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R8845:8848 Coq.MSets.MSetGenTree <> isok def
R8855:8858 Coq.MSets.MSetGenTree <> isok def
R8865:8872 Coq.MSets.MSetGenTree Props ltb_tree def
R8881:8888 Coq.MSets.MSetGenTree Props gtb_tree def
R8965:8980 Coq.Structures.OrdersFacts OrderedTypeFacts <> modtype
R8982:8982 Coq.MSets.MSetGenTree X <> modtype
mod 8959:8960 <> Props.MX
def 9037:9044 Props tree_ind
R9063:9066 Coq.MSets.MSetGenTree M tree ind
def 9086:9092 Props bst_ind
R9111:9113 Coq.MSets.MSetGenTree Props bst ind
R9235:9236 Coq.MSets.MSetGenTree Props In def
R9238:9244 Coq.MSets.MSetGenTree Props lt_tree def
R9246:9252 Coq.MSets.MSetGenTree Props gt_tree def
R9279:9281 Coq.MSets.MSetGenTree <> InT ind
R9283:9285 Coq.MSets.MSetGenTree <> bst ind
R9306:9307 Coq.MSets.MSetGenTree Props Ok class
R9450:9451 Coq.MSets.MSetGenTree Props Ok class
R9454:9457 Coq.MSets.MSetGenTree M Node constr
R9450:9451 Coq.MSets.MSetGenTree Props Ok class
R9454:9457 Coq.MSets.MSetGenTree M Node constr
R9507:9508 Coq.MSets.MSetGenTree Props Ok class
R9510:9513 Coq.MSets.MSetGenTree M Leaf constr
R9507:9508 Coq.MSets.MSetGenTree Props Ok class
R9510:9513 Coq.MSets.MSetGenTree M Leaf constr
R9544:9546 Coq.MSets.MSetGenTree Props bst ind
R9544:9546 Coq.MSets.MSetGenTree Props bst ind
R9567:9568 Coq.MSets.MSetGenTree Props Ok class
R9745:9748 Coq.MSets.MSetGenTree M Leaf constr
R9745:9748 Coq.MSets.MSetGenTree M Leaf constr
R9764:9767 Coq.MSets.MSetGenTree M Node constr
R9764:9767 Coq.MSets.MSetGenTree M Node constr
R10253:10259 Coq.MSets.MSetGenTree Props lt_tree def
R10253:10259 Coq.MSets.MSetGenTree Props lt_tree def
R10270:10272 Coq.MSets.MSetGenTree Props InT ind
R10270:10272 Coq.MSets.MSetGenTree Props InT ind
R10328:10334 Coq.MSets.MSetGenTree Props gt_tree def
R10328:10334 Coq.MSets.MSetGenTree Props gt_tree def
R10345:10347 Coq.MSets.MSetGenTree Props InT ind
R10345:10347 Coq.MSets.MSetGenTree Props InT ind
prf 10482:10493 Props ltb_tree_iff
R10520:10524 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10509:10515 Coq.MSets.MSetGenTree Props lt_tree def
R10519:10519 Coq.MSets.MSetGenTree <> s var
R10517:10517 Coq.MSets.MSetGenTree <> x var
R10537:10539 Coq.Init.Logic <> :type_scope:x_'='_x not
R10525:10532 Coq.MSets.MSetGenTree Props ltb_tree def
R10536:10536 Coq.MSets.MSetGenTree <> s var
R10534:10534 Coq.MSets.MSetGenTree <> x var
R10540:10543 Coq.Init.Datatypes <> true constr
R10604:10610 Coq.MSets.MSetGenTree Props lt_tree def
R10688:10691 Coq.MSets.MSetGenTree X lt defax
R10688:10691 Coq.MSets.MSetGenTree X lt defax
R10756:10759 Coq.MSets.MSetGenTree X lt defax
R10756:10759 Coq.MSets.MSetGenTree X lt defax
R10792:10804 Coq.Bool.Bool <> andb_true_iff thm
R10792:10804 Coq.Bool.Bool <> andb_true_iff thm
R10792:10804 Coq.Bool.Bool <> andb_true_iff thm
R10792:10804 Coq.Bool.Bool <> andb_true_iff thm
R10830:10836 Coq.MSets.MSetGenTree Props lt_tree def
prf 10872:10883 Props gtb_tree_iff
R10910:10914 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10899:10905 Coq.MSets.MSetGenTree Props gt_tree def
R10909:10909 Coq.MSets.MSetGenTree <> s var
R10907:10907 Coq.MSets.MSetGenTree <> x var
R10927:10929 Coq.Init.Logic <> :type_scope:x_'='_x not
R10915:10922 Coq.MSets.MSetGenTree Props gtb_tree def
R10926:10926 Coq.MSets.MSetGenTree <> s var
R10924:10924 Coq.MSets.MSetGenTree <> x var
R10930:10933 Coq.Init.Datatypes <> true constr
R10994:11000 Coq.MSets.MSetGenTree Props gt_tree def
R11078:11081 Coq.MSets.MSetGenTree X lt defax
R11078:11081 Coq.MSets.MSetGenTree X lt defax
R11114:11126 Coq.Bool.Bool <> andb_true_iff thm
R11114:11126 Coq.Bool.Bool <> andb_true_iff thm
R11114:11126 Coq.Bool.Bool <> andb_true_iff thm
R11114:11126 Coq.Bool.Bool <> andb_true_iff thm
R11152:11158 Coq.MSets.MSetGenTree Props gt_tree def
R11224:11227 Coq.MSets.MSetGenTree X lt defax
R11224:11227 Coq.MSets.MSetGenTree X lt defax
prf 11262:11269 Props isok_iff
R11287:11291 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11283:11284 Coq.MSets.MSetGenTree Props Ok class
R11286:11286 Coq.MSets.MSetGenTree <> s var
R11298:11300 Coq.Init.Logic <> :type_scope:x_'='_x not
R11292:11295 Coq.MSets.MSetGenTree Props isok def
R11297:11297 Coq.MSets.MSetGenTree <> s var
R11301:11304 Coq.Init.Datatypes <> true constr
R11382:11394 Coq.Bool.Bool <> andb_true_iff thm
R11415:11426 Coq.MSets.MSetGenTree Props ltb_tree_iff thm
R11432:11443 Coq.MSets.MSetGenTree Props gtb_tree_iff thm
R11382:11394 Coq.Bool.Bool <> andb_true_iff thm
R11382:11394 Coq.Bool.Bool <> andb_true_iff thm
R11382:11394 Coq.Bool.Bool <> andb_true_iff thm
R11382:11394 Coq.Bool.Bool <> andb_true_iff thm
R11382:11394 Coq.Bool.Bool <> andb_true_iff thm
R11415:11426 Coq.MSets.MSetGenTree Props ltb_tree_iff thm
R11415:11426 Coq.MSets.MSetGenTree Props ltb_tree_iff thm
R11432:11443 Coq.MSets.MSetGenTree Props gtb_tree_iff thm
R11432:11443 Coq.MSets.MSetGenTree Props gtb_tree_iff thm
inst 11476:11482 Props isok_Ok
R11501:11504 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11505:11506 Coq.MSets.MSetGenTree Props Ok class
R11508:11508 Coq.MSets.MSetGenTree <> s var
R11494:11496 Coq.Init.Logic <> :type_scope:x_'='_x not
R11488:11491 Coq.MSets.MSetGenTree Props isok def
R11493:11493 Coq.MSets.MSetGenTree <> s var
R11497:11500 Coq.Init.Datatypes <> true constr
R11540:11547 Coq.MSets.MSetGenTree Props isok_iff thm
R11540:11547 Coq.MSets.MSetGenTree Props isok_iff thm
prf 11604:11607 Props In_1
R11634:11637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11645:11648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11649:11651 Coq.MSets.MSetGenTree Props InT ind
R11655:11655 Coq.MSets.MSetGenTree <> s var
R11653:11653 Coq.MSets.MSetGenTree <> y var
R11638:11640 Coq.MSets.MSetGenTree Props InT ind
R11644:11644 Coq.MSets.MSetGenTree <> s var
R11642:11642 Coq.MSets.MSetGenTree <> x var
R11626:11629 Coq.MSets.MSetGenTree X eq defax
R11633:11633 Coq.MSets.MSetGenTree <> y var
R11631:11631 Coq.MSets.MSetGenTree <> x var
inst 11749:11757 Props In_compat
R11761:11766 Coq.Classes.Morphisms <> Proper class
R11786:11788 Coq.MSets.MSetGenTree Props InT ind
R11773:11775 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R11769:11772 Coq.MSets.MSetGenTree X eq defax
R11778:11780 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R11776:11777 Coq.Init.Logic <> eq ind
R11781:11783 Coq.Init.Logic <> iff def
R11804:11824 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R11804:11824 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R11873:11876 Coq.MSets.MSetGenTree Props In_1 thm
R11873:11876 Coq.MSets.MSetGenTree Props In_1 thm
prf 11904:11914 Props In_node_iff
R11959:11963 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11939:11941 Coq.MSets.MSetGenTree Props InT ind
R11946:11949 Coq.MSets.MSetGenTree M Node constr
R11957:11957 Coq.MSets.MSetGenTree <> r var
R11955:11955 Coq.MSets.MSetGenTree <> x var
R11953:11953 Coq.MSets.MSetGenTree <> l var
R11951:11951 Coq.MSets.MSetGenTree <> c var
R11943:11943 Coq.MSets.MSetGenTree <> y var
R11971:11974 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11964:11966 Coq.MSets.MSetGenTree Props InT ind
R11970:11970 Coq.MSets.MSetGenTree <> l var
R11968:11968 Coq.MSets.MSetGenTree <> y var
R11983:11986 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11975:11978 Coq.MSets.MSetGenTree X eq defax
R11982:11982 Coq.MSets.MSetGenTree <> x var
R11980:11980 Coq.MSets.MSetGenTree <> y var
R11987:11989 Coq.MSets.MSetGenTree Props InT ind
R11993:11993 Coq.MSets.MSetGenTree <> r var
R11991:11991 Coq.MSets.MSetGenTree <> y var
prf 12030:12040 Props In_leaf_iff
R12064:12068 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12054:12056 Coq.MSets.MSetGenTree Props InT ind
R12060:12063 Coq.MSets.MSetGenTree M Leaf constr
R12058:12058 Coq.MSets.MSetGenTree <> x var
R12069:12073 Coq.Init.Logic <> False ind
prf 12156:12162 Props lt_leaf
R12177:12179 Coq.MSets.MSetGenTree M elt def
R12182:12188 Coq.MSets.MSetGenTree Props lt_tree def
R12192:12195 Coq.MSets.MSetGenTree M Leaf constr
R12190:12190 Coq.MSets.MSetGenTree <> x var
prf 12236:12242 Props gt_leaf
R12257:12259 Coq.MSets.MSetGenTree M elt def
R12262:12268 Coq.MSets.MSetGenTree Props gt_tree def
R12272:12275 Coq.MSets.MSetGenTree M Leaf constr
R12270:12270 Coq.MSets.MSetGenTree <> x var
prf 12316:12327 Props lt_tree_node
R12346:12348 Coq.MSets.MSetGenTree M elt def
R12358:12361 Coq.MSets.MSetGenTree M tree ind
R12369:12374 Coq.MSets.MSetGenTree Info t defax
R12390:12393 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12405:12408 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12417:12420 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12421:12427 Coq.MSets.MSetGenTree Props lt_tree def
R12432:12435 Coq.MSets.MSetGenTree M Node constr
R12443:12443 Coq.MSets.MSetGenTree <> r var
R12441:12441 Coq.MSets.MSetGenTree <> y var
R12439:12439 Coq.MSets.MSetGenTree <> l var
R12437:12437 Coq.MSets.MSetGenTree <> i var
R12429:12429 Coq.MSets.MSetGenTree <> x var
R12409:12412 Coq.MSets.MSetGenTree X lt defax
R12416:12416 Coq.MSets.MSetGenTree <> x var
R12414:12414 Coq.MSets.MSetGenTree <> y var
R12394:12400 Coq.MSets.MSetGenTree Props lt_tree def
R12404:12404 Coq.MSets.MSetGenTree <> r var
R12402:12402 Coq.MSets.MSetGenTree <> x var
R12379:12385 Coq.MSets.MSetGenTree Props lt_tree def
R12389:12389 Coq.MSets.MSetGenTree <> l var
R12387:12387 Coq.MSets.MSetGenTree <> x var
R12462:12468 Coq.MSets.MSetGenTree Props lt_tree def
prf 12504:12515 Props gt_tree_node
R12534:12536 Coq.MSets.MSetGenTree M elt def
R12546:12549 Coq.MSets.MSetGenTree M tree ind
R12557:12562 Coq.MSets.MSetGenTree Info t defax
R12578:12581 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12593:12596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12605:12608 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12609:12615 Coq.MSets.MSetGenTree Props gt_tree def
R12620:12623 Coq.MSets.MSetGenTree M Node constr
R12631:12631 Coq.MSets.MSetGenTree <> r var
R12629:12629 Coq.MSets.MSetGenTree <> y var
R12627:12627 Coq.MSets.MSetGenTree <> l var
R12625:12625 Coq.MSets.MSetGenTree <> i var
R12617:12617 Coq.MSets.MSetGenTree <> x var
R12597:12600 Coq.MSets.MSetGenTree X lt defax
R12604:12604 Coq.MSets.MSetGenTree <> y var
R12602:12602 Coq.MSets.MSetGenTree <> x var
R12582:12588 Coq.MSets.MSetGenTree Props gt_tree def
R12592:12592 Coq.MSets.MSetGenTree <> r var
R12590:12590 Coq.MSets.MSetGenTree <> x var
R12567:12573 Coq.MSets.MSetGenTree Props gt_tree def
R12577:12577 Coq.MSets.MSetGenTree <> l var
R12575:12575 Coq.MSets.MSetGenTree <> x var
R12650:12656 Coq.MSets.MSetGenTree Props gt_tree def
prf 12755:12768 Props lt_tree_not_in
R12785:12787 Coq.MSets.MSetGenTree M elt def
R12795:12798 Coq.MSets.MSetGenTree M tree ind
R12813:12816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12817:12818 Coq.Init.Logic <> :type_scope:'~'_x not
R12819:12821 Coq.MSets.MSetGenTree Props InT ind
R12825:12825 Coq.MSets.MSetGenTree <> t var
R12823:12823 Coq.MSets.MSetGenTree <> x var
R12802:12808 Coq.MSets.MSetGenTree Props lt_tree def
R12812:12812 Coq.MSets.MSetGenTree <> t var
R12810:12810 Coq.MSets.MSetGenTree <> x var
prf 12870:12882 Props lt_tree_trans
R12907:12910 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12932:12935 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12936:12942 Coq.MSets.MSetGenTree Props lt_tree def
R12946:12946 Coq.MSets.MSetGenTree <> t var
R12944:12944 Coq.MSets.MSetGenTree <> y var
R12921:12927 Coq.MSets.MSetGenTree Props lt_tree def
R12931:12931 Coq.MSets.MSetGenTree <> t var
R12929:12929 Coq.MSets.MSetGenTree <> x var
R12899:12902 Coq.MSets.MSetGenTree X lt defax
R12906:12906 Coq.MSets.MSetGenTree <> y var
R12904:12904 Coq.MSets.MSetGenTree <> x var
prf 12976:12989 Props gt_tree_not_in
R13006:13008 Coq.MSets.MSetGenTree M elt def
R13016:13019 Coq.MSets.MSetGenTree M tree ind
R13034:13037 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13038:13039 Coq.Init.Logic <> :type_scope:'~'_x not
R13040:13042 Coq.MSets.MSetGenTree Props InT ind
R13046:13046 Coq.MSets.MSetGenTree <> t var
R13044:13044 Coq.MSets.MSetGenTree <> x var
R13023:13029 Coq.MSets.MSetGenTree Props gt_tree def
R13033:13033 Coq.MSets.MSetGenTree <> t var
R13031:13031 Coq.MSets.MSetGenTree <> x var
prf 13091:13103 Props gt_tree_trans
R13128:13131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13153:13156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13157:13163 Coq.MSets.MSetGenTree Props gt_tree def
R13167:13167 Coq.MSets.MSetGenTree <> t var
R13165:13165 Coq.MSets.MSetGenTree <> y var
R13142:13148 Coq.MSets.MSetGenTree Props gt_tree def
R13152:13152 Coq.MSets.MSetGenTree <> t var
R13150:13150 Coq.MSets.MSetGenTree <> x var
R13120:13123 Coq.MSets.MSetGenTree X lt defax
R13127:13127 Coq.MSets.MSetGenTree <> x var
R13125:13125 Coq.MSets.MSetGenTree <> y var
inst 13200:13213 Props lt_tree_compat
R13217:13222 Coq.Classes.Morphisms <> Proper class
R13252:13258 Coq.MSets.MSetGenTree Props lt_tree def
R13229:13233 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R13225:13228 Coq.MSets.MSetGenTree X eq defax
R13242:13246 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R13234:13241 Coq.Init.Logic <> eq ind
R13247:13249 Coq.Init.Logic <> iff def
R13275:13295 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R13275:13295 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
inst 13386:13399 Props gt_tree_compat
R13403:13408 Coq.Classes.Morphisms <> Proper class
R13438:13444 Coq.MSets.MSetGenTree Props gt_tree def
R13415:13419 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R13411:13414 Coq.MSets.MSetGenTree X eq defax
R13428:13432 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R13420:13427 Coq.Init.Logic <> eq ind
R13433:13435 Coq.Init.Logic <> iff def
R13461:13481 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R13461:13481 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R13831:13832 Coq.MSets.MSetGenTree Props Ok class
R13822:13824 Coq.MSets.MSetGenTree Props bst ind
R13865:13866 Coq.MSets.MSetGenTree Props Ok class
R13869:13872 Coq.MSets.MSetGenTree M Node constr
R13865:13866 Coq.MSets.MSetGenTree Props Ok class
R13869:13872 Coq.MSets.MSetGenTree M Node constr
R13919:13925 Coq.MSets.MSetGenTree Props lt_tree def
R13930:13933 Coq.MSets.MSetGenTree M Node constr
R13919:13925 Coq.MSets.MSetGenTree Props lt_tree def
R13930:13933 Coq.MSets.MSetGenTree M Node constr
R13978:13984 Coq.MSets.MSetGenTree Props gt_tree def
R13989:13992 Coq.MSets.MSetGenTree M Node constr
R13978:13984 Coq.MSets.MSetGenTree Props gt_tree def
R13989:13992 Coq.MSets.MSetGenTree M Node constr
R14012:14023 Coq.MSets.MSetGenTree Props gt_tree_node thm
R13953:13964 Coq.MSets.MSetGenTree Props lt_tree_node thm
prf 14104:14113 Props empty_spec
R14117:14121 Coq.MSets.MSetGenTree Props Empty def
R14123:14127 Coq.MSets.MSetGenTree M empty def
inst 14178:14185 Props empty_ok
R14189:14190 Coq.MSets.MSetGenTree Props Ok class
R14192:14196 Coq.MSets.MSetGenTree M empty def
prf 14251:14263 Props is_empty_spec
R14294:14298 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14287:14289 Coq.Init.Logic <> :type_scope:x_'='_x not
R14277:14284 Coq.MSets.MSetGenTree M is_empty def
R14286:14286 Coq.MSets.MSetGenTree <> s var
R14290:14293 Coq.Init.Datatypes <> true constr
R14299:14303 Coq.MSets.MSetGenTree Props Empty def
R14305:14305 Coq.MSets.MSetGenTree <> s var
prf 14485:14492 Props mem_spec
R14509:14510 Coq.MSets.MSetGenTree Props Ok class
R14512:14512 Coq.MSets.MSetGenTree <> s var
R14530:14534 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14523:14525 Coq.Init.Logic <> :type_scope:x_'='_x not
R14516:14518 Coq.MSets.MSetGenTree M mem def
R14522:14522 Coq.MSets.MSetGenTree <> s var
R14520:14520 Coq.MSets.MSetGenTree <> x var
R14526:14529 Coq.Init.Datatypes <> true constr
R14535:14537 Coq.MSets.MSetGenTree Props InT ind
R14541:14541 Coq.MSets.MSetGenTree <> s var
R14539:14539 Coq.MSets.MSetGenTree <> x var
prf 14805:14817 Props min_elt_spec1
R14843:14846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14847:14849 Coq.MSets.MSetGenTree Props InT ind
R14853:14853 Coq.MSets.MSetGenTree <> s var
R14851:14851 Coq.MSets.MSetGenTree <> x var
R14834:14836 Coq.Init.Logic <> :type_scope:x_'='_x not
R14825:14831 Coq.MSets.MSetGenTree M min_elt def
R14833:14833 Coq.MSets.MSetGenTree <> s var
R14837:14840 Coq.Init.Datatypes <> Some constr
R14842:14842 Coq.MSets.MSetGenTree <> x var
R14886:14892 Coq.MSets.MSetGenTree M min_elt def
R14886:14892 Coq.MSets.MSetGenTree M min_elt def
prf 14935:14947 Props min_elt_spec2
R14957:14958 Coq.MSets.MSetGenTree Props Ok class
R14960:14960 Coq.MSets.MSetGenTree <> s var
R14984:14987 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14995:14998 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14999:15000 Coq.Init.Logic <> :type_scope:'~'_x not
R15001:15004 Coq.MSets.MSetGenTree X lt defax
R15008:15008 Coq.MSets.MSetGenTree <> x var
R15006:15006 Coq.MSets.MSetGenTree <> y var
R14988:14990 Coq.MSets.MSetGenTree Props InT ind
R14994:14994 Coq.MSets.MSetGenTree <> s var
R14992:14992 Coq.MSets.MSetGenTree <> y var
R14975:14977 Coq.Init.Logic <> :type_scope:x_'='_x not
R14966:14972 Coq.MSets.MSetGenTree M min_elt def
R14974:14974 Coq.MSets.MSetGenTree <> s var
R14978:14981 Coq.Init.Datatypes <> Some constr
R14983:14983 Coq.MSets.MSetGenTree <> x var
R15052:15058 Coq.MSets.MSetGenTree M min_elt def
R15052:15058 Coq.MSets.MSetGenTree M min_elt def
R15254:15257 Coq.MSets.MSetGenTree X lt defax
R15285:15297 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R15254:15257 Coq.MSets.MSetGenTree X lt defax
R15285:15297 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R15332:15335 Coq.MSets.MSetGenTree X lt defax
R15332:15335 Coq.MSets.MSetGenTree X lt defax
R15366:15366 Coq.Init.Logic <> :type_scope:'~'_x not
R15367:15370 Coq.MSets.MSetGenTree X lt defax
R15366:15366 Coq.Init.Logic <> :type_scope:'~'_x not
R15367:15370 Coq.MSets.MSetGenTree X lt defax
prf 15411:15423 Props min_elt_spec3
R15445:15448 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15449:15453 Coq.MSets.MSetGenTree Props Empty def
R15455:15455 Coq.MSets.MSetGenTree <> s var
R15438:15440 Coq.Init.Logic <> :type_scope:x_'='_x not
R15429:15435 Coq.MSets.MSetGenTree M min_elt def
R15437:15437 Coq.MSets.MSetGenTree <> s var
R15441:15444 Coq.Init.Datatypes <> None constr
R15488:15494 Coq.MSets.MSetGenTree M min_elt def
R15488:15494 Coq.MSets.MSetGenTree M min_elt def
prf 15591:15603 Props max_elt_spec1
R15629:15632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15633:15635 Coq.MSets.MSetGenTree Props InT ind
R15639:15639 Coq.MSets.MSetGenTree <> s var
R15637:15637 Coq.MSets.MSetGenTree <> x var
R15620:15622 Coq.Init.Logic <> :type_scope:x_'='_x not
R15611:15617 Coq.MSets.MSetGenTree M max_elt def
R15619:15619 Coq.MSets.MSetGenTree <> s var
R15623:15626 Coq.Init.Datatypes <> Some constr
R15628:15628 Coq.MSets.MSetGenTree <> x var
R15672:15678 Coq.MSets.MSetGenTree M max_elt def
R15672:15678 Coq.MSets.MSetGenTree M max_elt def
prf 15721:15733 Props max_elt_spec2
R15743:15744 Coq.MSets.MSetGenTree Props Ok class
R15746:15746 Coq.MSets.MSetGenTree <> s var
R15770:15773 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15781:15784 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15785:15786 Coq.Init.Logic <> :type_scope:'~'_x not
R15787:15790 Coq.MSets.MSetGenTree X lt defax
R15794:15794 Coq.MSets.MSetGenTree <> y var
R15792:15792 Coq.MSets.MSetGenTree <> x var
R15774:15776 Coq.MSets.MSetGenTree Props InT ind
R15780:15780 Coq.MSets.MSetGenTree <> s var
R15778:15778 Coq.MSets.MSetGenTree <> y var
R15761:15763 Coq.Init.Logic <> :type_scope:x_'='_x not
R15752:15758 Coq.MSets.MSetGenTree M max_elt def
R15760:15760 Coq.MSets.MSetGenTree <> s var
R15764:15767 Coq.Init.Datatypes <> Some constr
R15769:15769 Coq.MSets.MSetGenTree <> x var
R15838:15844 Coq.MSets.MSetGenTree M max_elt def
R15838:15844 Coq.MSets.MSetGenTree M max_elt def
R16040:16043 Coq.MSets.MSetGenTree X lt defax
R16071:16083 Coq.MSets.MSetGenTree Props max_elt_spec1 thm
R16040:16043 Coq.MSets.MSetGenTree X lt defax
R16071:16083 Coq.MSets.MSetGenTree Props max_elt_spec1 thm
R16118:16121 Coq.MSets.MSetGenTree X lt defax
R16118:16121 Coq.MSets.MSetGenTree X lt defax
R16152:16152 Coq.Init.Logic <> :type_scope:'~'_x not
R16153:16156 Coq.MSets.MSetGenTree X lt defax
R16152:16152 Coq.Init.Logic <> :type_scope:'~'_x not
R16153:16156 Coq.MSets.MSetGenTree X lt defax
prf 16197:16209 Props max_elt_spec3
R16231:16234 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16235:16239 Coq.MSets.MSetGenTree Props Empty def
R16241:16241 Coq.MSets.MSetGenTree <> s var
R16224:16226 Coq.Init.Logic <> :type_scope:x_'='_x not
R16215:16221 Coq.MSets.MSetGenTree M max_elt def
R16223:16223 Coq.MSets.MSetGenTree <> s var
R16227:16230 Coq.Init.Datatypes <> None constr
R16274:16280 Coq.MSets.MSetGenTree M max_elt def
R16274:16280 Coq.MSets.MSetGenTree M max_elt def
prf 16377:16388 Props choose_spec1
R16421:16424 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16425:16427 Coq.MSets.MSetGenTree Props InT ind
R16431:16431 Coq.MSets.MSetGenTree <> s var
R16429:16429 Coq.MSets.MSetGenTree <> x var
R16412:16414 Coq.Init.Logic <> :type_scope:x_'='_x not
R16404:16409 Coq.MSets.MSetGenTree M choose def
R16411:16411 Coq.MSets.MSetGenTree <> s var
R16415:16418 Coq.Init.Datatypes <> Some constr
R16420:16420 Coq.MSets.MSetGenTree <> x var
R16448:16460 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R16448:16460 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
prf 16475:16486 Props choose_spec2
R16515:16518 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16519:16523 Coq.MSets.MSetGenTree Props Empty def
R16525:16525 Coq.MSets.MSetGenTree <> s var
R16508:16510 Coq.Init.Logic <> :type_scope:x_'='_x not
R16500:16505 Coq.MSets.MSetGenTree M choose def
R16507:16507 Coq.MSets.MSetGenTree <> s var
R16511:16514 Coq.Init.Datatypes <> None constr
R16542:16554 Coq.MSets.MSetGenTree Props min_elt_spec3 thm
R16542:16554 Coq.MSets.MSetGenTree Props min_elt_spec3 thm
prf 16569:16580 Props choose_spec3
R16603:16604 Coq.MSets.MSetGenTree Props Ok class
R16606:16606 Coq.MSets.MSetGenTree <> s var
R16609:16610 Coq.MSets.MSetGenTree Props Ok class
R16612:16613 Coq.MSets.MSetGenTree <> s' var
R16636:16639 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16659:16664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16675:16678 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16679:16682 Coq.MSets.MSetGenTree X eq defax
R16686:16687 Coq.MSets.MSetGenTree <> x' var
R16684:16684 Coq.MSets.MSetGenTree <> x var
R16665:16669 Coq.MSets.MSetGenTree Props Equal def
R16673:16674 Coq.MSets.MSetGenTree <> s' var
R16671:16671 Coq.MSets.MSetGenTree <> s var
R16649:16651 Coq.Init.Logic <> :type_scope:x_'='_x not
R16640:16645 Coq.MSets.MSetGenTree M choose def
R16647:16648 Coq.MSets.MSetGenTree <> s' var
R16652:16655 Coq.Init.Datatypes <> Some constr
R16657:16658 Coq.MSets.MSetGenTree <> x' var
R16627:16629 Coq.Init.Logic <> :type_scope:x_'='_x not
R16619:16624 Coq.MSets.MSetGenTree M choose def
R16626:16626 Coq.MSets.MSetGenTree <> s var
R16630:16633 Coq.Init.Datatypes <> Some constr
R16635:16635 Coq.MSets.MSetGenTree <> x var
R16705:16710 Coq.MSets.MSetGenTree M choose def
R16713:16717 Coq.MSets.MSetGenTree Props Equal def
R16763:16763 Coq.Init.Logic <> :type_scope:'~'_x not
R16764:16767 Coq.MSets.MSetGenTree X lt defax
R16763:16763 Coq.Init.Logic <> :type_scope:'~'_x not
R16764:16767 Coq.MSets.MSetGenTree X lt defax
R16784:16796 Coq.MSets.MSetGenTree Props min_elt_spec2 thm
R16784:16796 Coq.MSets.MSetGenTree Props min_elt_spec2 thm
R16839:16851 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R16839:16851 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R16863:16863 Coq.Init.Logic <> :type_scope:'~'_x not
R16864:16867 Coq.MSets.MSetGenTree X lt defax
R16863:16863 Coq.Init.Logic <> :type_scope:'~'_x not
R16864:16867 Coq.MSets.MSetGenTree X lt defax
R16884:16896 Coq.MSets.MSetGenTree Props min_elt_spec2 thm
R16884:16896 Coq.MSets.MSetGenTree Props min_elt_spec2 thm
R16936:16948 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R16936:16948 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
prf 17014:17028 Props elements_spec1'
R17080:17084 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17049:17051 Coq.Lists.SetoidList <> InA ind
R17061:17072 Coq.MSets.MSetGenTree M elements_aux def
R17078:17078 Coq.MSets.MSetGenTree <> s var
R17074:17076 Coq.MSets.MSetGenTree <> acc var
R17058:17058 Coq.MSets.MSetGenTree <> x var
R17053:17056 Coq.MSets.MSetGenTree X eq defax
R17092:17095 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17085:17087 Coq.MSets.MSetGenTree Props InT ind
R17091:17091 Coq.MSets.MSetGenTree <> s var
R17089:17089 Coq.MSets.MSetGenTree <> x var
R17096:17098 Coq.Lists.SetoidList <> InA ind
R17107:17109 Coq.MSets.MSetGenTree <> acc var
R17105:17105 Coq.MSets.MSetGenTree <> x var
R17100:17103 Coq.MSets.MSetGenTree X eq defax
prf 17309:17322 Props elements_spec1
R17361:17365 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17338:17340 Coq.Lists.SetoidList <> InA ind
R17350:17357 Coq.MSets.MSetGenTree M elements def
R17359:17359 Coq.MSets.MSetGenTree <> s var
R17347:17347 Coq.MSets.MSetGenTree <> x var
R17342:17345 Coq.MSets.MSetGenTree X eq defax
R17366:17368 Coq.MSets.MSetGenTree Props InT ind
R17372:17372 Coq.MSets.MSetGenTree <> s var
R17370:17370 Coq.MSets.MSetGenTree <> x var
R17403:17417 Coq.MSets.MSetGenTree Props elements_spec1' thm
R17421:17423 Coq.Init.Datatypes <> nil constr
R17403:17417 Coq.MSets.MSetGenTree Props elements_spec1' thm
R17421:17423 Coq.Init.Datatypes <> nil constr
prf 17473:17487 Props elements_spec2'
R17506:17507 Coq.MSets.MSetGenTree Props Ok class
R17509:17509 Coq.MSets.MSetGenTree <> s var
R17526:17530 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17531:17531 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17587:17592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17593:17596 Coq.Sorting.Sorted <> sort syndef
R17604:17615 Coq.MSets.MSetGenTree M elements_aux def
R17621:17621 Coq.MSets.MSetGenTree <> s var
R17617:17619 Coq.MSets.MSetGenTree <> acc var
R17598:17601 Coq.MSets.MSetGenTree X lt defax
R17545:17547 Coq.MSets.MSetGenTree M elt def
R17564:17567 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17575:17578 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17579:17582 Coq.MSets.MSetGenTree X lt defax
R17586:17586 Coq.MSets.MSetGenTree <> x var
R17584:17584 Coq.MSets.MSetGenTree <> y var
R17568:17570 Coq.MSets.MSetGenTree Props InT ind
R17574:17574 Coq.MSets.MSetGenTree <> s var
R17572:17572 Coq.MSets.MSetGenTree <> y var
R17550:17552 Coq.Lists.SetoidList <> InA ind
R17561:17563 Coq.MSets.MSetGenTree <> acc var
R17559:17559 Coq.MSets.MSetGenTree <> x var
R17554:17557 Coq.MSets.MSetGenTree X eq defax
R17513:17516 Coq.Sorting.Sorted <> sort syndef
R17523:17525 Coq.MSets.MSetGenTree <> acc var
R17518:17521 Coq.MSets.MSetGenTree X lt defax
R17748:17755 Coq.Lists.SetoidList <> InA_InfA thm
R17748:17755 Coq.Lists.SetoidList <> InA_InfA thm
R17792:17806 Coq.MSets.MSetGenTree Props elements_spec1' thm
R17792:17806 Coq.MSets.MSetGenTree Props elements_spec1' thm
R17878:17892 Coq.MSets.MSetGenTree Props elements_spec1' thm
R17878:17892 Coq.MSets.MSetGenTree Props elements_spec1' thm
prf 17933:17946 Props elements_spec2
R17961:17962 Coq.MSets.MSetGenTree Props Ok class
R17964:17964 Coq.MSets.MSetGenTree <> s var
R17968:17971 Coq.Sorting.Sorted <> sort syndef
R17979:17986 Coq.MSets.MSetGenTree M elements def
R17988:17988 Coq.MSets.MSetGenTree <> s var
R17973:17976 Coq.MSets.MSetGenTree X lt defax
R18015:18022 Coq.MSets.MSetGenTree M elements def
R18031:18045 Coq.MSets.MSetGenTree Props elements_spec2' thm
R18031:18045 Coq.MSets.MSetGenTree Props elements_spec2' thm
prf 18124:18138 Props elements_spec2w
R18153:18154 Coq.MSets.MSetGenTree Props Ok class
R18156:18156 Coq.MSets.MSetGenTree <> s var
R18160:18165 Coq.Lists.SetoidList <> NoDupA ind
R18173:18180 Coq.MSets.MSetGenTree M elements def
R18182:18182 Coq.MSets.MSetGenTree <> s var
R18167:18170 Coq.MSets.MSetGenTree X eq defax
R18209:18220 Coq.Lists.SetoidList <> SortA_NoDupA thm
R18209:18220 Coq.Lists.SetoidList <> SortA_NoDupA thm
prf 18249:18269 Props elements_aux_cardinal
R18317:18319 Coq.Init.Logic <> :type_scope:x_'='_x not
R18299:18301 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18289:18294 Coq.Init.Datatypes <> length def
R18296:18298 Coq.MSets.MSetGenTree <> acc var
R18302:18309 Coq.MSets.MSetGenTree M cardinal def
R18311:18311 Coq.MSets.MSetGenTree <> s var
R18320:18325 Coq.Init.Datatypes <> length def
R18328:18339 Coq.MSets.MSetGenTree M elements_aux def
R18345:18345 Coq.MSets.MSetGenTree <> s var
R18341:18343 Coq.MSets.MSetGenTree <> acc var
R18443:18454 Coq.Arith.PeanoNat Nat add_comm thm
R18457:18464 Coq.MSets.MSetGenTree M cardinal def
R18443:18454 Coq.Arith.PeanoNat Nat add_comm thm
R18457:18464 Coq.MSets.MSetGenTree M cardinal def
R18443:18454 Coq.Arith.PeanoNat Nat add_comm thm
R18457:18464 Coq.MSets.MSetGenTree M cardinal def
R18488:18501 Coq.Arith.PeanoNat Nat add_succ_r thm
R18504:18516 Coq.Arith.PeanoNat Nat add_assoc thm
R18488:18501 Coq.Arith.PeanoNat Nat add_succ_r thm
R18488:18501 Coq.Arith.PeanoNat Nat add_succ_r thm
R18504:18516 Coq.Arith.PeanoNat Nat add_assoc thm
R18504:18516 Coq.Arith.PeanoNat Nat add_assoc thm
prf 18531:18547 Props elements_cardinal
R18562:18565 Coq.MSets.MSetGenTree M tree ind
R18578:18580 Coq.Init.Logic <> :type_scope:x_'='_x not
R18568:18575 Coq.MSets.MSetGenTree M cardinal def
R18577:18577 Coq.MSets.MSetGenTree <> s var
R18581:18586 Coq.Init.Datatypes <> length def
R18589:18596 Coq.MSets.MSetGenTree M elements def
R18598:18598 Coq.MSets.MSetGenTree <> s var
R18626:18646 Coq.MSets.MSetGenTree Props elements_aux_cardinal thm
R18650:18652 Coq.Init.Datatypes <> nil constr
R18648:18648 Coq.MSets.MSetGenTree <> s var
R18626:18646 Coq.MSets.MSetGenTree Props elements_aux_cardinal thm
R18650:18652 Coq.Init.Datatypes <> nil constr
R18648:18648 Coq.MSets.MSetGenTree <> s var
def 18673:18685 Props cardinal_spec
R18690:18693 Coq.MSets.MSetGenTree M tree ind
R18699:18700 Coq.MSets.MSetGenTree Props Ok class
R18702:18702 Coq.MSets.MSetGenTree <> s var
R18708:18724 Coq.MSets.MSetGenTree Props elements_cardinal thm
R18726:18726 Coq.MSets.MSetGenTree <> s var
prf 18736:18747 Props elements_app
R18784:18786 Coq.Init.Logic <> :type_scope:x_'='_x not
R18766:18777 Coq.MSets.MSetGenTree M elements_aux def
R18783:18783 Coq.MSets.MSetGenTree <> s var
R18779:18781 Coq.MSets.MSetGenTree <> acc var
R18797:18800 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R18787:18794 Coq.MSets.MSetGenTree M elements def
R18796:18796 Coq.MSets.MSetGenTree <> s var
R18801:18803 Coq.MSets.MSetGenTree <> acc var
R18877:18884 Coq.MSets.MSetGenTree M elements def
R18918:18926 Coq.Lists.List <> app_nil_r thm
R18930:18936 Coq.Lists.List <> app_ass syndef
R18918:18926 Coq.Lists.List <> app_nil_r thm
R18918:18926 Coq.Lists.List <> app_nil_r thm
R18918:18926 Coq.Lists.List <> app_nil_r thm
R18918:18926 Coq.Lists.List <> app_nil_r thm
R18930:18936 Coq.Lists.List <> app_ass syndef
R18930:18936 Coq.Lists.List <> app_ass syndef
R18930:18936 Coq.Lists.List <> app_ass syndef
prf 18957:18969 Props elements_node
R19005:19007 Coq.Init.Logic <> :type_scope:x_'='_x not
R18982:18989 Coq.MSets.MSetGenTree M elements def
R18992:18995 Coq.MSets.MSetGenTree M Node constr
R19003:19003 Coq.MSets.MSetGenTree <> r var
R19001:19001 Coq.MSets.MSetGenTree <> x var
R18999:18999 Coq.MSets.MSetGenTree <> l var
R18997:18997 Coq.MSets.MSetGenTree <> c var
R19018:19021 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R19008:19015 Coq.MSets.MSetGenTree M elements def
R19017:19017 Coq.MSets.MSetGenTree <> l var
R19023:19026 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19022:19022 Coq.MSets.MSetGenTree <> x var
R19027:19034 Coq.MSets.MSetGenTree M elements def
R19036:19036 Coq.MSets.MSetGenTree <> r var
R19054:19061 Coq.MSets.MSetGenTree M elements def
R19085:19096 Coq.MSets.MSetGenTree Props elements_app thm
R19100:19108 Coq.Lists.List <> app_nil_r thm
R19085:19096 Coq.MSets.MSetGenTree Props elements_app thm
R19085:19096 Coq.MSets.MSetGenTree Props elements_app thm
R19085:19096 Coq.MSets.MSetGenTree Props elements_app thm
R19085:19096 Coq.MSets.MSetGenTree Props elements_app thm
R19085:19096 Coq.MSets.MSetGenTree Props elements_app thm
R19100:19108 Coq.Lists.List <> app_nil_r thm
R19100:19108 Coq.Lists.List <> app_nil_r thm
R19100:19108 Coq.Lists.List <> app_nil_r thm
R19100:19108 Coq.Lists.List <> app_nil_r thm
prf 19123:19138 Props rev_elements_app
R19179:19181 Coq.Init.Logic <> :type_scope:x_'='_x not
R19157:19172 Coq.MSets.MSetGenTree M rev_elements_aux def
R19178:19178 Coq.MSets.MSetGenTree <> s var
R19174:19176 Coq.MSets.MSetGenTree <> acc var
R19196:19199 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R19182:19193 Coq.MSets.MSetGenTree M rev_elements def
R19195:19195 Coq.MSets.MSetGenTree <> s var
R19200:19202 Coq.MSets.MSetGenTree <> acc var
R19276:19287 Coq.MSets.MSetGenTree M rev_elements def
R19321:19329 Coq.Lists.List <> app_nil_r thm
R19333:19339 Coq.Lists.List <> app_ass syndef
R19321:19329 Coq.Lists.List <> app_nil_r thm
R19321:19329 Coq.Lists.List <> app_nil_r thm
R19321:19329 Coq.Lists.List <> app_nil_r thm
R19321:19329 Coq.Lists.List <> app_nil_r thm
R19333:19339 Coq.Lists.List <> app_ass syndef
R19333:19339 Coq.Lists.List <> app_ass syndef
R19333:19339 Coq.Lists.List <> app_ass syndef
prf 19360:19376 Props rev_elements_node
R19416:19418 Coq.Init.Logic <> :type_scope:x_'='_x not
R19389:19400 Coq.MSets.MSetGenTree M rev_elements def
R19403:19406 Coq.MSets.MSetGenTree M Node constr
R19414:19414 Coq.MSets.MSetGenTree <> r var
R19412:19412 Coq.MSets.MSetGenTree <> x var
R19410:19410 Coq.MSets.MSetGenTree <> l var
R19408:19408 Coq.MSets.MSetGenTree <> c var
R19433:19436 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R19419:19430 Coq.MSets.MSetGenTree M rev_elements def
R19432:19432 Coq.MSets.MSetGenTree <> r var
R19438:19441 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19437:19437 Coq.MSets.MSetGenTree <> x var
R19442:19453 Coq.MSets.MSetGenTree M rev_elements def
R19455:19455 Coq.MSets.MSetGenTree <> l var
R19473:19484 Coq.MSets.MSetGenTree M rev_elements def
R19508:19523 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19527:19535 Coq.Lists.List <> app_nil_r thm
R19508:19523 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19508:19523 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19508:19523 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19508:19523 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19508:19523 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19527:19535 Coq.Lists.List <> app_nil_r thm
R19527:19535 Coq.Lists.List <> app_nil_r thm
R19527:19535 Coq.Lists.List <> app_nil_r thm
R19527:19535 Coq.Lists.List <> app_nil_r thm
prf 19550:19565 Props rev_elements_rev
R19585:19587 Coq.Init.Logic <> :type_scope:x_'='_x not
R19571:19582 Coq.MSets.MSetGenTree M rev_elements def
R19584:19584 Coq.MSets.MSetGenTree <> s var
R19588:19590 Coq.Lists.List <> rev def
R19593:19600 Coq.MSets.MSetGenTree M elements def
R19602:19602 Coq.MSets.MSetGenTree <> s var
R19667:19679 Coq.MSets.MSetGenTree Props elements_node thm
R19682:19698 Coq.MSets.MSetGenTree Props rev_elements_node thm
R19711:19723 Coq.Lists.List <> rev_app_distr thm
R19667:19679 Coq.MSets.MSetGenTree Props elements_node thm
R19667:19679 Coq.MSets.MSetGenTree Props elements_node thm
R19682:19698 Coq.MSets.MSetGenTree Props rev_elements_node thm
R19682:19698 Coq.MSets.MSetGenTree Props rev_elements_node thm
R19711:19723 Coq.Lists.List <> rev_app_distr thm
R19711:19723 Coq.Lists.List <> rev_app_distr thm
R19747:19753 Coq.Lists.List <> app_ass syndef
R19747:19753 Coq.Lists.List <> app_ass syndef
R19747:19753 Coq.Lists.List <> app_ass syndef
R19747:19753 Coq.Lists.List <> app_ass syndef
prf 19863:19876 Props sorted_app_inv
R19905:19909 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19922:19925 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19910:19913 Coq.Sorting.Sorted <> sort syndef
R19920:19921 Coq.MSets.MSetGenTree <> l1 var
R19915:19918 Coq.MSets.MSetGenTree X lt defax
R19938:19942 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19926:19929 Coq.Sorting.Sorted <> sort syndef
R19936:19937 Coq.MSets.MSetGenTree <> l2 var
R19931:19934 Coq.MSets.MSetGenTree X lt defax
R19971:19974 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19989:19992 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19993:19996 Coq.MSets.MSetGenTree X lt defax
R20001:20002 Coq.MSets.MSetGenTree <> x2 var
R19998:19999 Coq.MSets.MSetGenTree <> x1 var
R19975:19977 Coq.Lists.SetoidList <> InA ind
R19987:19988 Coq.MSets.MSetGenTree <> l2 var
R19984:19985 Coq.MSets.MSetGenTree <> x2 var
R19979:19982 Coq.MSets.MSetGenTree X eq defax
R19957:19959 Coq.Lists.SetoidList <> InA ind
R19969:19970 Coq.MSets.MSetGenTree <> l1 var
R19966:19967 Coq.MSets.MSetGenTree <> x1 var
R19961:19964 Coq.MSets.MSetGenTree X eq defax
R19887:19890 Coq.Sorting.Sorted <> sort syndef
R19900:19901 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R19898:19899 Coq.MSets.MSetGenTree <> l1 var
R19902:19903 Coq.MSets.MSetGenTree <> l2 var
R19892:19895 Coq.MSets.MSetGenTree X lt defax
R20097:20103 Coq.Lists.SetoidList <> InA_nil thm
R20097:20103 Coq.Lists.SetoidList <> InA_nil thm
R20097:20103 Coq.Lists.SetoidList <> InA_nil thm
R20354:20361 Coq.Lists.SetoidList <> InA_cons thm
R20354:20361 Coq.Lists.SetoidList <> InA_cons thm
R20354:20361 Coq.Lists.SetoidList <> InA_cons thm
R20442:20445 Coq.MSets.MSetGenTree X eq defax
R20453:20454 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R20416:20429 Coq.Lists.SetoidList <> SortA_InfA_InA thm
R20442:20445 Coq.MSets.MSetGenTree X eq defax
R20453:20454 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R20416:20429 Coq.Lists.SetoidList <> SortA_InfA_InA thm
R20484:20494 Coq.Lists.SetoidList <> InA_app_iff thm
R20484:20494 Coq.Lists.SetoidList <> InA_app_iff thm
R20484:20494 Coq.Lists.SetoidList <> InA_app_iff thm
prf 20531:20546 Props elements_sort_ok
R20574:20577 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20578:20579 Coq.MSets.MSetGenTree Props Ok class
R20581:20581 Coq.MSets.MSetGenTree <> s var
R20552:20555 Coq.Sorting.Sorted <> sort syndef
R20563:20570 Coq.MSets.MSetGenTree M elements def
R20572:20572 Coq.MSets.MSetGenTree <> s var
R20557:20560 Coq.MSets.MSetGenTree X lt defax
R20647:20659 Coq.MSets.MSetGenTree Props elements_node thm
R20647:20659 Coq.MSets.MSetGenTree Props elements_node thm
R20647:20659 Coq.MSets.MSetGenTree Props elements_node thm
R20685:20698 Coq.MSets.MSetGenTree Props sorted_app_inv thm
R20685:20698 Coq.MSets.MSetGenTree Props sorted_app_inv thm
R20816:20829 Coq.MSets.MSetGenTree Props elements_spec1 thm
R20816:20829 Coq.MSets.MSetGenTree Props elements_spec1 thm
R20816:20829 Coq.MSets.MSetGenTree Props elements_spec1 thm
R20847:20854 Coq.Lists.SetoidList <> InA_cons thm
R20847:20854 Coq.Lists.SetoidList <> InA_cons thm
R20847:20854 Coq.Lists.SetoidList <> InA_cons thm
R20922:20925 Coq.MSets.MSetGenTree X eq defax
R20931:20938 Coq.MSets.MSetGenTree M elements def
R20896:20909 Coq.Lists.SetoidList <> SortA_InfA_InA thm
R20922:20925 Coq.MSets.MSetGenTree X eq defax
R20931:20938 Coq.MSets.MSetGenTree M elements def
R20896:20909 Coq.Lists.SetoidList <> SortA_InfA_InA thm
R20970:20983 Coq.MSets.MSetGenTree Props elements_spec1 thm
R20970:20983 Coq.MSets.MSetGenTree Props elements_spec1 thm
R20970:20983 Coq.MSets.MSetGenTree Props elements_spec1 thm
prf 21032:21043 Props for_all_spec
R21071:21076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21131:21131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21095:21099 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21088:21090 Coq.Init.Logic <> :type_scope:x_'='_x not
R21077:21083 Coq.MSets.MSetGenTree M for_all def
R21087:21087 Coq.MSets.MSetGenTree <> s var
R21085:21085 Coq.MSets.MSetGenTree <> f var
R21091:21094 Coq.Init.Datatypes <> true constr
R21100:21106 Coq.MSets.MSetGenTree Props For_all def
R21130:21130 Coq.MSets.MSetGenTree <> s var
R21121:21123 Coq.Init.Logic <> :type_scope:x_'='_x not
R21118:21118 Coq.MSets.MSetGenTree <> f var
R21120:21120 Coq.MSets.MSetGenTree <> x var
R21124:21127 Coq.Init.Datatypes <> true constr
R21051:21056 Coq.Classes.Morphisms <> Proper class
R21070:21070 Coq.MSets.MSetGenTree <> f var
R21063:21065 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R21059:21062 Coq.MSets.MSetGenTree X eq defax
R21066:21067 Coq.Init.Logic <> eq ind
R21160:21166 Coq.MSets.MSetGenTree Props For_all def
R21262:21274 Coq.Bool.Bool <> andb_lazy_alt thm
R21278:21290 Coq.Bool.Bool <> andb_true_iff thm
R21262:21274 Coq.Bool.Bool <> andb_lazy_alt thm
R21262:21274 Coq.Bool.Bool <> andb_lazy_alt thm
R21262:21274 Coq.Bool.Bool <> andb_lazy_alt thm
R21262:21274 Coq.Bool.Bool <> andb_lazy_alt thm
R21278:21290 Coq.Bool.Bool <> andb_true_iff thm
R21278:21290 Coq.Bool.Bool <> andb_true_iff thm
R21278:21290 Coq.Bool.Bool <> andb_true_iff thm
R21278:21290 Coq.Bool.Bool <> andb_true_iff thm
prf 21354:21364 Props exists_spec
R21392:21397 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21451:21451 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21416:21420 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21409:21411 Coq.Init.Logic <> :type_scope:x_'='_x not
R21398:21404 Coq.MSets.MSetGenTree M exists_ def
R21408:21408 Coq.MSets.MSetGenTree <> s var
R21406:21406 Coq.MSets.MSetGenTree <> f var
R21412:21415 Coq.Init.Datatypes <> true constr
R21421:21426 Coq.MSets.MSetGenTree Props Exists def
R21450:21450 Coq.MSets.MSetGenTree <> s var
R21441:21443 Coq.Init.Logic <> :type_scope:x_'='_x not
R21438:21438 Coq.MSets.MSetGenTree <> f var
R21440:21440 Coq.MSets.MSetGenTree <> x var
R21444:21447 Coq.Init.Datatypes <> true constr
R21372:21377 Coq.Classes.Morphisms <> Proper class
R21391:21391 Coq.MSets.MSetGenTree <> f var
R21384:21386 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R21380:21383 Coq.MSets.MSetGenTree X eq defax
R21387:21388 Coq.Init.Logic <> eq ind
R21480:21485 Coq.MSets.MSetGenTree Props Exists def
R21609:21620 Coq.Bool.Bool <> orb_lazy_alt thm
R21624:21635 Coq.Bool.Bool <> orb_true_iff thm
R21609:21620 Coq.Bool.Bool <> orb_lazy_alt thm
R21609:21620 Coq.Bool.Bool <> orb_lazy_alt thm
R21609:21620 Coq.Bool.Bool <> orb_lazy_alt thm
R21609:21620 Coq.Bool.Bool <> orb_lazy_alt thm
R21624:21635 Coq.Bool.Bool <> orb_true_iff thm
R21624:21635 Coq.Bool.Bool <> orb_true_iff thm
R21624:21635 Coq.Bool.Bool <> orb_true_iff thm
R21624:21635 Coq.Bool.Bool <> orb_true_iff thm
prf 21883:21892 Props fold_spec'
R21906:21909 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21911:21914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21915:21915 Coq.MSets.MSetGenTree <> A var
R21910:21910 Coq.MSets.MSetGenTree <> A var
R21903:21905 Coq.MSets.MSetGenTree M elt def
R21923:21926 Coq.MSets.MSetGenTree M tree ind
R21934:21934 Coq.MSets.MSetGenTree <> A var
R21944:21947 Coq.Init.Datatypes <> list ind
R21949:21951 Coq.MSets.MSetGenTree M elt def
R21998:22000 Coq.Init.Logic <> :type_scope:x_'='_x not
R21957:21965 Coq.Lists.List <> fold_left def
R21997:21997 Coq.MSets.MSetGenTree <> i var
R21977:21988 Coq.MSets.MSetGenTree M elements_aux def
R21994:21994 Coq.MSets.MSetGenTree <> s var
R21990:21992 Coq.MSets.MSetGenTree <> acc var
R21968:21971 Coq.Program.Basics <> flip def
R21973:21973 Coq.MSets.MSetGenTree <> f var
R22001:22009 Coq.Lists.List <> fold_left def
R22025:22028 Coq.MSets.MSetGenTree M fold def
R22034:22034 Coq.MSets.MSetGenTree <> i var
R22032:22032 Coq.MSets.MSetGenTree <> s var
R22030:22030 Coq.MSets.MSetGenTree <> f var
R22020:22022 Coq.MSets.MSetGenTree <> acc var
R22012:22015 Coq.Program.Basics <> flip def
R22017:22017 Coq.MSets.MSetGenTree <> f var
R22146:22149 Coq.Program.Basics <> flip def
prf 22181:22189 Props fold_spec
R22194:22197 Coq.MSets.MSetGenTree M tree ind
R22209:22209 Coq.MSets.MSetGenTree <> A var
R22220:22223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22225:22228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22229:22229 Coq.MSets.MSetGenTree <> A var
R22224:22224 Coq.MSets.MSetGenTree <> A var
R22217:22219 Coq.MSets.MSetGenTree M elt def
R22245:22247 Coq.Init.Logic <> :type_scope:x_'='_x not
R22235:22238 Coq.MSets.MSetGenTree M fold def
R22244:22244 Coq.MSets.MSetGenTree <> i var
R22242:22242 Coq.MSets.MSetGenTree <> s var
R22240:22240 Coq.MSets.MSetGenTree <> f var
R22248:22256 Coq.Lists.List <> fold_left def
R22280:22280 Coq.MSets.MSetGenTree <> i var
R22268:22275 Coq.MSets.MSetGenTree M elements def
R22277:22277 Coq.MSets.MSetGenTree <> s var
R22259:22262 Coq.Program.Basics <> flip def
R22264:22264 Coq.MSets.MSetGenTree <> f var
R22308:22315 Coq.MSets.MSetGenTree M elements def
R22384:22393 Coq.MSets.MSetGenTree Props fold_spec' thm
R22384:22393 Coq.MSets.MSetGenTree Props fold_spec' thm
R22384:22393 Coq.MSets.MSetGenTree Props fold_spec' thm
prf 22455:22466 Props subsetl_spec
R22502:22503 Coq.MSets.MSetGenTree Props Ok class
R22506:22509 Coq.MSets.MSetGenTree M Node constr
R22520:22523 Coq.MSets.MSetGenTree M Leaf constr
R22517:22518 Coq.MSets.MSetGenTree <> x1 var
R22514:22515 Coq.MSets.MSetGenTree <> l1 var
R22511:22512 Coq.MSets.MSetGenTree <> c1 var
R22527:22528 Coq.MSets.MSetGenTree Props Ok class
R22530:22531 Coq.MSets.MSetGenTree <> s2 var
R22536:22536 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22591:22597 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22663:22664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22628:22632 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R22621:22623 Coq.Init.Logic <> :type_scope:x_'='_x not
R22598:22604 Coq.MSets.MSetGenTree M subsetl def
R22619:22620 Coq.MSets.MSetGenTree <> s2 var
R22616:22617 Coq.MSets.MSetGenTree <> x1 var
R22606:22614 Coq.MSets.MSetGenTree <> subset_l1 var
R22624:22627 Coq.Init.Datatypes <> true constr
R22633:22638 Coq.MSets.MSetGenTree Props Subset def
R22661:22662 Coq.MSets.MSetGenTree <> s2 var
R22641:22644 Coq.MSets.MSetGenTree M Node constr
R22655:22658 Coq.MSets.MSetGenTree M Leaf constr
R22652:22653 Coq.MSets.MSetGenTree <> x1 var
R22649:22650 Coq.MSets.MSetGenTree <> l1 var
R22646:22647 Coq.MSets.MSetGenTree <> c1 var
R22548:22549 Coq.MSets.MSetGenTree Props Ok class
R22551:22551 Coq.MSets.MSetGenTree <> s var
R22574:22578 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R22567:22569 Coq.Init.Logic <> :type_scope:x_'='_x not
R22556:22564 Coq.MSets.MSetGenTree <> subset_l1 var
R22566:22566 Coq.MSets.MSetGenTree <> s var
R22570:22573 Coq.Init.Datatypes <> true constr
R22579:22584 Coq.MSets.MSetGenTree Props Subset def
R22589:22589 Coq.MSets.MSetGenTree <> s var
R22586:22587 Coq.MSets.MSetGenTree <> l1 var
R22740:22745 Coq.MSets.MSetGenTree Props Subset def
R22790:22792 Coq.MSets.MSetGenTree Props InT ind
R22797:22800 Coq.MSets.MSetGenTree M Leaf constr
R22790:22792 Coq.MSets.MSetGenTree Props InT ind
R22797:22800 Coq.MSets.MSetGenTree M Leaf constr
R22947:22952 Coq.MSets.MSetGenTree Props Subset def
R22978:22981 Coq.MSets.MSetGenTree X eq defax
R22978:22981 Coq.MSets.MSetGenTree X eq defax
R23022:23024 Coq.MSets.MSetGenTree Props InT ind
R23029:23032 Coq.MSets.MSetGenTree M Node constr
R23022:23024 Coq.MSets.MSetGenTree Props InT ind
R23029:23032 Coq.MSets.MSetGenTree M Node constr
R23130:23135 Coq.MSets.MSetGenTree Props Subset def
R23161:23163 Coq.MSets.MSetGenTree Props InT ind
R23168:23171 Coq.MSets.MSetGenTree M Node constr
R23161:23163 Coq.MSets.MSetGenTree Props InT ind
R23168:23171 Coq.MSets.MSetGenTree M Node constr
R23226:23228 Coq.MSets.MSetGenTree Props InT ind
R23233:23236 Coq.MSets.MSetGenTree M Node constr
R23226:23228 Coq.MSets.MSetGenTree Props InT ind
R23233:23236 Coq.MSets.MSetGenTree M Node constr
R23294:23306 Coq.Bool.Bool <> andb_lazy_alt thm
R23309:23321 Coq.Bool.Bool <> andb_true_iff thm
R23294:23306 Coq.Bool.Bool <> andb_lazy_alt thm
R23294:23306 Coq.Bool.Bool <> andb_lazy_alt thm
R23309:23321 Coq.Bool.Bool <> andb_true_iff thm
R23309:23321 Coq.Bool.Bool <> andb_true_iff thm
R23364:23369 Coq.MSets.MSetGenTree Props Subset def
R23445:23452 Coq.MSets.MSetGenTree Props mem_spec thm
R23445:23452 Coq.MSets.MSetGenTree Props mem_spec thm
R23445:23452 Coq.MSets.MSetGenTree Props mem_spec thm
R23445:23452 Coq.MSets.MSetGenTree Props mem_spec thm
R23470:23477 Coq.MSets.MSetGenTree Props mem_spec thm
R23470:23477 Coq.MSets.MSetGenTree Props mem_spec thm
R23470:23477 Coq.MSets.MSetGenTree Props mem_spec thm
R23470:23477 Coq.MSets.MSetGenTree Props mem_spec thm
R23495:23497 Coq.MSets.MSetGenTree Props InT ind
R23503:23506 Coq.MSets.MSetGenTree M Node constr
R23495:23497 Coq.MSets.MSetGenTree Props InT ind
R23503:23506 Coq.MSets.MSetGenTree M Node constr
prf 23565:23576 Props subsetr_spec
R23635:23638 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23645:23649 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23650:23650 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23706:23712 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23778:23778 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23743:23747 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R23736:23738 Coq.Init.Logic <> :type_scope:x_'='_x not
R23713:23719 Coq.MSets.MSetGenTree M subsetr def
R23734:23735 Coq.MSets.MSetGenTree <> s2 var
R23731:23732 Coq.MSets.MSetGenTree <> x1 var
R23721:23729 Coq.MSets.MSetGenTree <> subset_r1 var
R23739:23742 Coq.Init.Datatypes <> true constr
R23748:23753 Coq.MSets.MSetGenTree Props Subset def
R23776:23777 Coq.MSets.MSetGenTree <> s2 var
R23756:23759 Coq.MSets.MSetGenTree M Node constr
R23772:23773 Coq.MSets.MSetGenTree <> r1 var
R23769:23770 Coq.MSets.MSetGenTree <> x1 var
R23764:23767 Coq.MSets.MSetGenTree M Leaf constr
R23761:23762 Coq.MSets.MSetGenTree <> c1 var
R23666:23670 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23705:23705 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23689:23693 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R23682:23684 Coq.Init.Logic <> :type_scope:x_'='_x not
R23671:23679 Coq.MSets.MSetGenTree <> subset_r1 var
R23681:23681 Coq.MSets.MSetGenTree <> s var
R23685:23688 Coq.Init.Datatypes <> true constr
R23694:23699 Coq.MSets.MSetGenTree Props Subset def
R23704:23704 Coq.MSets.MSetGenTree <> s var
R23701:23702 Coq.MSets.MSetGenTree <> r1 var
R23661:23663 Coq.MSets.MSetGenTree Props bst ind
R23665:23665 Coq.MSets.MSetGenTree <> s var
R23639:23641 Coq.MSets.MSetGenTree Props bst ind
R23643:23644 Coq.MSets.MSetGenTree <> s2 var
R23611:23613 Coq.MSets.MSetGenTree Props bst ind
R23616:23619 Coq.MSets.MSetGenTree M Node constr
R23632:23633 Coq.MSets.MSetGenTree <> r1 var
R23629:23630 Coq.MSets.MSetGenTree <> x1 var
R23624:23627 Coq.MSets.MSetGenTree M Leaf constr
R23621:23622 Coq.MSets.MSetGenTree <> c1 var
R23854:23859 Coq.MSets.MSetGenTree Props Subset def
R23904:23906 Coq.MSets.MSetGenTree Props InT ind
R23911:23914 Coq.MSets.MSetGenTree M Leaf constr
R23904:23906 Coq.MSets.MSetGenTree Props InT ind
R23911:23914 Coq.MSets.MSetGenTree M Leaf constr
R24061:24066 Coq.MSets.MSetGenTree Props Subset def
R24092:24095 Coq.MSets.MSetGenTree X eq defax
R24092:24095 Coq.MSets.MSetGenTree X eq defax
R24136:24138 Coq.MSets.MSetGenTree Props InT ind
R24143:24146 Coq.MSets.MSetGenTree M Node constr
R24136:24138 Coq.MSets.MSetGenTree Props InT ind
R24143:24146 Coq.MSets.MSetGenTree M Node constr
R24204:24216 Coq.Bool.Bool <> andb_lazy_alt thm
R24219:24231 Coq.Bool.Bool <> andb_true_iff thm
R24204:24216 Coq.Bool.Bool <> andb_lazy_alt thm
R24204:24216 Coq.Bool.Bool <> andb_lazy_alt thm
R24219:24231 Coq.Bool.Bool <> andb_true_iff thm
R24219:24231 Coq.Bool.Bool <> andb_true_iff thm
R24275:24280 Coq.MSets.MSetGenTree Props Subset def
R24356:24363 Coq.MSets.MSetGenTree Props mem_spec thm
R24356:24363 Coq.MSets.MSetGenTree Props mem_spec thm
R24356:24363 Coq.MSets.MSetGenTree Props mem_spec thm
R24356:24363 Coq.MSets.MSetGenTree Props mem_spec thm
R24381:24388 Coq.MSets.MSetGenTree Props mem_spec thm
R24381:24388 Coq.MSets.MSetGenTree Props mem_spec thm
R24381:24388 Coq.MSets.MSetGenTree Props mem_spec thm
R24381:24388 Coq.MSets.MSetGenTree Props mem_spec thm
R24406:24408 Coq.MSets.MSetGenTree Props InT ind
R24414:24417 Coq.MSets.MSetGenTree M Node constr
R24406:24408 Coq.MSets.MSetGenTree Props InT ind
R24414:24417 Coq.MSets.MSetGenTree M Node constr
R24515:24520 Coq.MSets.MSetGenTree Props Subset def
R24546:24548 Coq.MSets.MSetGenTree Props InT ind
R24553:24556 Coq.MSets.MSetGenTree M Node constr
R24546:24548 Coq.MSets.MSetGenTree Props InT ind
R24553:24556 Coq.MSets.MSetGenTree M Node constr
R24611:24613 Coq.MSets.MSetGenTree Props InT ind
R24618:24621 Coq.MSets.MSetGenTree M Node constr
R24611:24613 Coq.MSets.MSetGenTree Props InT ind
R24618:24621 Coq.MSets.MSetGenTree M Node constr
prf 24679:24689 Props subset_spec
R24708:24709 Coq.MSets.MSetGenTree Props Ok class
R24711:24712 Coq.MSets.MSetGenTree <> s1 var
R24715:24716 Coq.MSets.MSetGenTree Props Ok class
R24718:24719 Coq.MSets.MSetGenTree <> s2 var
R24744:24748 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24737:24739 Coq.Init.Logic <> :type_scope:x_'='_x not
R24725:24730 Coq.MSets.MSetGenTree M subset def
R24735:24736 Coq.MSets.MSetGenTree <> s2 var
R24732:24733 Coq.MSets.MSetGenTree <> s1 var
R24740:24743 Coq.Init.Datatypes <> true constr
R24749:24754 Coq.MSets.MSetGenTree Props Subset def
R24759:24760 Coq.MSets.MSetGenTree <> s2 var
R24756:24757 Coq.MSets.MSetGenTree <> s1 var
R24837:24842 Coq.MSets.MSetGenTree Props Subset def
R24914:24919 Coq.MSets.MSetGenTree Props Subset def
R24967:24969 Coq.MSets.MSetGenTree Props InT ind
R24974:24977 Coq.MSets.MSetGenTree M Leaf constr
R24967:24969 Coq.MSets.MSetGenTree Props InT ind
R24974:24977 Coq.MSets.MSetGenTree M Leaf constr
R25042:25054 Coq.Bool.Bool <> andb_lazy_alt thm
R25057:25069 Coq.Bool.Bool <> andb_true_iff thm
R25042:25054 Coq.Bool.Bool <> andb_lazy_alt thm
R25042:25054 Coq.Bool.Bool <> andb_lazy_alt thm
R25057:25069 Coq.Bool.Bool <> andb_true_iff thm
R25057:25069 Coq.Bool.Bool <> andb_true_iff thm
R25118:25123 Coq.MSets.MSetGenTree Props Subset def
R25149:25152 Coq.MSets.MSetGenTree X eq defax
R25149:25152 Coq.MSets.MSetGenTree X eq defax
R25193:25195 Coq.MSets.MSetGenTree Props InT ind
R25200:25203 Coq.MSets.MSetGenTree M Node constr
R25193:25195 Coq.MSets.MSetGenTree Props InT ind
R25200:25203 Coq.MSets.MSetGenTree M Node constr
R25258:25260 Coq.MSets.MSetGenTree Props InT ind
R25265:25268 Coq.MSets.MSetGenTree M Node constr
R25258:25260 Coq.MSets.MSetGenTree Props InT ind
R25265:25268 Coq.MSets.MSetGenTree M Node constr
R25326:25338 Coq.Bool.Bool <> andb_lazy_alt thm
R25341:25353 Coq.Bool.Bool <> andb_true_iff thm
R25326:25338 Coq.Bool.Bool <> andb_lazy_alt thm
R25326:25338 Coq.Bool.Bool <> andb_lazy_alt thm
R25341:25353 Coq.Bool.Bool <> andb_true_iff thm
R25341:25353 Coq.Bool.Bool <> andb_true_iff thm
R25381:25392 Coq.MSets.MSetGenTree Props subsetl_spec thm
R25395:25400 Coq.MSets.MSetGenTree M subset def
R25381:25392 Coq.MSets.MSetGenTree Props subsetl_spec thm
R25395:25400 Coq.MSets.MSetGenTree M subset def
R25381:25392 Coq.MSets.MSetGenTree Props subsetl_spec thm
R25395:25400 Coq.MSets.MSetGenTree M subset def
R25451:25456 Coq.MSets.MSetGenTree Props Subset def
R25482:25484 Coq.MSets.MSetGenTree Props InT ind
R25489:25492 Coq.MSets.MSetGenTree M Node constr
R25482:25484 Coq.MSets.MSetGenTree Props InT ind
R25489:25492 Coq.MSets.MSetGenTree M Node constr
R25547:25549 Coq.MSets.MSetGenTree Props InT ind
R25554:25557 Coq.MSets.MSetGenTree M Node constr
R25547:25549 Coq.MSets.MSetGenTree Props InT ind
R25554:25557 Coq.MSets.MSetGenTree M Node constr
R25615:25627 Coq.Bool.Bool <> andb_lazy_alt thm
R25630:25642 Coq.Bool.Bool <> andb_true_iff thm
R25615:25627 Coq.Bool.Bool <> andb_lazy_alt thm
R25615:25627 Coq.Bool.Bool <> andb_lazy_alt thm
R25630:25642 Coq.Bool.Bool <> andb_true_iff thm
R25630:25642 Coq.Bool.Bool <> andb_true_iff thm
R25670:25681 Coq.MSets.MSetGenTree Props subsetr_spec thm
R25684:25689 Coq.MSets.MSetGenTree M subset def
R25670:25681 Coq.MSets.MSetGenTree Props subsetr_spec thm
R25684:25689 Coq.MSets.MSetGenTree M subset def
R25670:25681 Coq.MSets.MSetGenTree Props subsetr_spec thm
R25684:25689 Coq.MSets.MSetGenTree M subset def
R25740:25745 Coq.MSets.MSetGenTree Props Subset def
R25771:25773 Coq.MSets.MSetGenTree Props InT ind
R25778:25781 Coq.MSets.MSetGenTree M Node constr
R25771:25773 Coq.MSets.MSetGenTree Props InT ind
R25778:25781 Coq.MSets.MSetGenTree M Node constr
R25836:25838 Coq.MSets.MSetGenTree Props InT ind
R25843:25846 Coq.MSets.MSetGenTree M Node constr
R25836:25838 Coq.MSets.MSetGenTree Props InT ind
R25843:25846 Coq.MSets.MSetGenTree M Node constr
R25976:26005 Coq.MSets.MSetInterface MakeListOrdering <> modtype
R26007:26007 Coq.MSets.MSetGenTree X <> modtype
mod 25971:25971 <> Props.L
def 26022:26023 Props eq
R26028:26032 Coq.MSets.MSetGenTree Props Equal def
inst 26044:26051 Props eq_equiv
R26055:26065 Coq.Classes.RelationClasses <> Equivalence class
R26067:26068 Coq.MSets.MSetGenTree Props eq def
prf 26102:26107 Props eq_Leq
R26131:26135 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26124:26125 Coq.MSets.MSetGenTree Props eq def
R26129:26130 Coq.MSets.MSetGenTree <> s' var
R26127:26127 Coq.MSets.MSetGenTree <> s var
R26136:26139 Coq.MSets.MSetGenTree Props eq def
R26155:26162 Coq.MSets.MSetGenTree M elements def
R26164:26165 Coq.MSets.MSetGenTree <> s' var
R26142:26149 Coq.MSets.MSetGenTree M elements def
R26151:26151 Coq.MSets.MSetGenTree <> s var
R26184:26185 Coq.MSets.MSetGenTree Props eq def
R26188:26192 Coq.MSets.MSetGenTree Props Equal def
R26195:26198 Coq.MSets.MSetGenTree Props eq def
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26225:26238 Coq.MSets.MSetGenTree Props elements_spec1 thm
def 26272:26273 Props lt
R26284:26287 Coq.MSets.MSetGenTree M tree ind
R26301:26307 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26315:26316 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26323:26326 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26317:26318 Coq.MSets.MSetGenTree Props Ok class
R26320:26322 Coq.MSets.MSetGenTree <> s1' var
R26333:26336 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26327:26328 Coq.MSets.MSetGenTree Props Ok class
R26330:26332 Coq.MSets.MSetGenTree <> s2' var
R26346:26349 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26337:26338 Coq.MSets.MSetGenTree Props eq def
R26343:26345 Coq.MSets.MSetGenTree <> s1' var
R26340:26341 Coq.MSets.MSetGenTree <> s1 var
R26359:26365 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26350:26351 Coq.MSets.MSetGenTree Props eq def
R26356:26358 Coq.MSets.MSetGenTree <> s2' var
R26353:26354 Coq.MSets.MSetGenTree <> s2 var
R26366:26369 Coq.MSets.MSetGenTree Props lt def
R26387:26394 Coq.MSets.MSetGenTree M elements def
R26396:26398 Coq.MSets.MSetGenTree <> s2' var
R26372:26379 Coq.MSets.MSetGenTree M elements def
R26381:26383 Coq.MSets.MSetGenTree <> s1' var
R26427:26430 Coq.MSets.MSetGenTree Props eq def
R26432:26441 Coq.Lists.SetoidList <> equivlistA def
inst 26454:26464 Props lt_strorder
R26468:26478 Coq.Classes.RelationClasses <> StrictOrder class
R26480:26481 Coq.MSets.MSetGenTree Props lt def
R26553:26559 Coq.Lists.SetoidList <> eqlistA ind
R26581:26588 Coq.MSets.MSetGenTree M elements def
R26567:26574 Coq.MSets.MSetGenTree M elements def
R26561:26564 Coq.MSets.MSetGenTree X eq defax
R26553:26559 Coq.Lists.SetoidList <> eqlistA ind
R26581:26588 Coq.MSets.MSetGenTree M elements def
R26567:26574 Coq.MSets.MSetGenTree M elements def
R26561:26564 Coq.MSets.MSetGenTree X eq defax
R26640:26643 Coq.MSets.MSetGenTree X lt defax
R26604:26627 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R26640:26643 Coq.MSets.MSetGenTree X lt defax
R26604:26627 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R26673:26678 Coq.MSets.MSetGenTree Props eq_Leq thm
R26673:26678 Coq.MSets.MSetGenTree Props eq_Leq thm
R26673:26678 Coq.MSets.MSetGenTree Props eq_Leq thm
R26744:26766 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R26769:26776 Coq.MSets.MSetGenTree M elements def
R26744:26766 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R26769:26776 Coq.MSets.MSetGenTree M elements def
R26954:26960 Coq.Lists.SetoidList <> eqlistA ind
R26983:26990 Coq.MSets.MSetGenTree M elements def
R26968:26975 Coq.MSets.MSetGenTree M elements def
R26962:26965 Coq.MSets.MSetGenTree X eq defax
R26954:26960 Coq.Lists.SetoidList <> eqlistA ind
R26983:26990 Coq.MSets.MSetGenTree M elements def
R26968:26975 Coq.MSets.MSetGenTree M elements def
R26962:26965 Coq.MSets.MSetGenTree X eq defax
R27044:27047 Coq.MSets.MSetGenTree X lt defax
R27008:27031 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R27044:27047 Coq.MSets.MSetGenTree X lt defax
R27008:27031 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R27077:27082 Coq.MSets.MSetGenTree Props eq_Leq thm
R27077:27082 Coq.MSets.MSetGenTree Props eq_Leq thm
R27077:27082 Coq.MSets.MSetGenTree Props eq_Leq thm
R27139:27146 Coq.MSets.MSetGenTree M elements def
R27139:27146 Coq.MSets.MSetGenTree M elements def
inst 27193:27201 Props lt_compat
R27205:27210 Coq.Classes.Morphisms <> Proper class
R27228:27229 Coq.MSets.MSetGenTree Props lt def
R27215:27217 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R27213:27214 Coq.MSets.MSetGenTree Props eq def
R27220:27222 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R27218:27219 Coq.MSets.MSetGenTree Props eq def
R27223:27225 Coq.Init.Logic <> iff def
def 27785:27793 Props flatten_e
R27800:27810 Coq.MSets.MSetGenTree M enumeration ind
R27815:27818 Coq.Init.Datatypes <> list ind
R27820:27822 Coq.MSets.MSetGenTree M elt def
R27833:27833 Coq.MSets.MSetGenTree <> e var
R27844:27846 Coq.MSets.MSetGenTree M End constr
R27851:27853 Coq.Init.Datatypes <> nil constr
R27859:27862 Coq.MSets.MSetGenTree M More constr
R27874:27877 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27888:27891 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27878:27885 Coq.MSets.MSetGenTree M elements def
R27892:27900 Coq.MSets.MSetGenTree <> flatten_e def
prf 27917:27934 Props flatten_e_elements
R27994:27996 Coq.Init.Logic <> :type_scope:x_'='_x not
R27968:27971 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27958:27965 Coq.MSets.MSetGenTree M elements def
R27967:27967 Coq.MSets.MSetGenTree <> l var
R27972:27980 Coq.MSets.MSetGenTree Props flatten_e def
R27983:27986 Coq.MSets.MSetGenTree M More constr
R27992:27992 Coq.MSets.MSetGenTree <> e var
R27990:27990 Coq.MSets.MSetGenTree <> r var
R27988:27988 Coq.MSets.MSetGenTree <> x var
R28020:28023 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27997:28004 Coq.MSets.MSetGenTree M elements def
R28007:28010 Coq.MSets.MSetGenTree M Node constr
R28018:28018 Coq.MSets.MSetGenTree <> r var
R28016:28016 Coq.MSets.MSetGenTree <> x var
R28014:28014 Coq.MSets.MSetGenTree <> l var
R28012:28012 Coq.MSets.MSetGenTree <> c var
R28024:28032 Coq.MSets.MSetGenTree Props flatten_e def
R28034:28034 Coq.MSets.MSetGenTree <> e var
R28065:28077 Coq.MSets.MSetGenTree Props elements_node thm
R28080:28086 Coq.Lists.List <> app_ass syndef
R28065:28077 Coq.MSets.MSetGenTree Props elements_node thm
R28065:28077 Coq.MSets.MSetGenTree Props elements_node thm
R28080:28086 Coq.Lists.List <> app_ass syndef
R28080:28086 Coq.Lists.List <> app_ass syndef
prf 28101:28106 Props cons_1
R28144:28146 Coq.Init.Logic <> :type_scope:x_'='_x not
R28124:28132 Coq.MSets.MSetGenTree Props flatten_e def
R28135:28138 Coq.MSets.MSetGenTree M cons def
R28142:28142 Coq.MSets.MSetGenTree <> e var
R28140:28140 Coq.MSets.MSetGenTree <> s var
R28157:28160 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28147:28154 Coq.MSets.MSetGenTree M elements def
R28156:28156 Coq.MSets.MSetGenTree <> s var
R28161:28169 Coq.MSets.MSetGenTree Props flatten_e def
R28171:28171 Coq.MSets.MSetGenTree <> e var
R28237:28254 Coq.MSets.MSetGenTree Props flatten_e_elements thm
R28237:28254 Coq.MSets.MSetGenTree Props flatten_e_elements thm
def 28313:28315 Props Cmp
R28326:28333 Coq.Init.Datatypes <> CompSpec def
R28349:28349 Coq.MSets.MSetGenTree <> c var
R28347:28347 Coq.MSets.MSetGenTree <> y var
R28345:28345 Coq.MSets.MSetGenTree <> x var
R28340:28343 Coq.MSets.MSetGenTree Props lt def
R28335:28338 Coq.MSets.MSetGenTree Props eq def
R28371:28373 Coq.MSets.MSetGenTree Props Cmp def
R28375:28378 Coq.Program.Basics <> flip def
prf 28388:28402 Props compare_end_Cmp
R28418:28420 Coq.MSets.MSetGenTree Props Cmp def
R28444:28452 Coq.MSets.MSetGenTree Props flatten_e def
R28454:28455 Coq.MSets.MSetGenTree <> e2 var
R28439:28441 Coq.Init.Datatypes <> nil constr
R28423:28433 Coq.MSets.MSetGenTree M compare_end def
R28435:28436 Coq.MSets.MSetGenTree <> e2 var
prf 28531:28546 Props compare_more_Cmp
R28634:28640 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28641:28643 Coq.MSets.MSetGenTree Props Cmp def
R28699:28707 Coq.MSets.MSetGenTree Props flatten_e def
R28710:28713 Coq.MSets.MSetGenTree M More constr
R28721:28722 Coq.MSets.MSetGenTree <> e2 var
R28718:28719 Coq.MSets.MSetGenTree <> r2 var
R28715:28716 Coq.MSets.MSetGenTree <> x2 var
R28687:28688 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28685:28686 Coq.MSets.MSetGenTree <> x1 var
R28689:28689 Coq.MSets.MSetGenTree <> l var
R28646:28657 Coq.MSets.MSetGenTree M compare_more def
R28668:28671 Coq.MSets.MSetGenTree M More constr
R28679:28680 Coq.MSets.MSetGenTree <> e2 var
R28676:28677 Coq.MSets.MSetGenTree <> r2 var
R28673:28674 Coq.MSets.MSetGenTree <> x2 var
R28662:28665 Coq.MSets.MSetGenTree <> cont var
R28659:28660 Coq.MSets.MSetGenTree <> x1 var
R28579:28581 Coq.MSets.MSetGenTree Props Cmp def
R28617:28620 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28606:28613 Coq.MSets.MSetGenTree M elements def
R28615:28616 Coq.MSets.MSetGenTree <> r2 var
R28621:28629 Coq.MSets.MSetGenTree Props flatten_e def
R28631:28632 Coq.MSets.MSetGenTree <> e2 var
R28603:28603 Coq.MSets.MSetGenTree <> l var
R28584:28587 Coq.MSets.MSetGenTree <> cont var
R28590:28593 Coq.MSets.MSetGenTree M cons def
R28598:28599 Coq.MSets.MSetGenTree <> e2 var
R28595:28596 Coq.MSets.MSetGenTree <> r2 var
prf 28800:28815 Props compare_cont_Cmp
R28841:28841 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28880:28885 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28886:28888 Coq.MSets.MSetGenTree Props Cmp def
R28936:28944 Coq.MSets.MSetGenTree Props flatten_e def
R28946:28947 Coq.MSets.MSetGenTree <> e2 var
R28928:28931 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28917:28924 Coq.MSets.MSetGenTree M elements def
R28926:28927 Coq.MSets.MSetGenTree <> s1 var
R28932:28932 Coq.MSets.MSetGenTree <> l var
R28891:28902 Coq.MSets.MSetGenTree M compare_cont def
R28912:28913 Coq.MSets.MSetGenTree <> e2 var
R28907:28910 Coq.MSets.MSetGenTree <> cont var
R28904:28905 Coq.MSets.MSetGenTree <> s1 var
R28852:28854 Coq.MSets.MSetGenTree Props Cmp def
R28868:28876 Coq.MSets.MSetGenTree Props flatten_e def
R28878:28878 Coq.MSets.MSetGenTree <> e var
R28865:28865 Coq.MSets.MSetGenTree <> l var
R28857:28860 Coq.MSets.MSetGenTree <> cont var
R28862:28862 Coq.MSets.MSetGenTree <> e var
R29022:29034 Coq.MSets.MSetGenTree Props elements_node thm
R29037:29043 Coq.Lists.List <> app_ass syndef
R29022:29034 Coq.MSets.MSetGenTree Props elements_node thm
R29022:29034 Coq.MSets.MSetGenTree Props elements_node thm
R29037:29043 Coq.Lists.List <> app_ass syndef
R29037:29043 Coq.Lists.List <> app_ass syndef
R29122:29137 Coq.MSets.MSetGenTree Props compare_more_Cmp thm
R29122:29137 Coq.MSets.MSetGenTree Props compare_more_Cmp thm
R29152:29157 Coq.MSets.MSetGenTree Props cons_1 thm
R29152:29157 Coq.MSets.MSetGenTree Props cons_1 thm
R29152:29157 Coq.MSets.MSetGenTree Props cons_1 thm
prf 29178:29188 Props compare_Cmp
R29207:29209 Coq.MSets.MSetGenTree Props Cmp def
R29242:29249 Coq.MSets.MSetGenTree M elements def
R29251:29252 Coq.MSets.MSetGenTree <> s2 var
R29228:29235 Coq.MSets.MSetGenTree M elements def
R29237:29238 Coq.MSets.MSetGenTree <> s1 var
R29212:29218 Coq.MSets.MSetGenTree M compare def
R29223:29224 Coq.MSets.MSetGenTree <> s2 var
R29220:29221 Coq.MSets.MSetGenTree <> s1 var
R29279:29285 Coq.MSets.MSetGenTree M compare def
R29301:29309 Coq.Lists.List <> app_nil_r thm
R29312:29319 Coq.MSets.MSetGenTree M elements def
R29301:29309 Coq.Lists.List <> app_nil_r thm
R29312:29319 Coq.MSets.MSetGenTree M elements def
R29301:29309 Coq.Lists.List <> app_nil_r thm
R29312:29319 Coq.MSets.MSetGenTree M elements def
R29337:29344 Coq.MSets.MSetGenTree M elements def
R29356:29364 Coq.MSets.MSetGenTree Props flatten_e def
R29367:29370 Coq.MSets.MSetGenTree M cons def
R29375:29377 Coq.MSets.MSetGenTree M End constr
R29395:29400 Coq.MSets.MSetGenTree Props cons_1 thm
R29418:29426 Coq.Lists.List <> app_nil_r thm
R29337:29344 Coq.MSets.MSetGenTree M elements def
R29356:29364 Coq.MSets.MSetGenTree Props flatten_e def
R29367:29370 Coq.MSets.MSetGenTree M cons def
R29375:29377 Coq.MSets.MSetGenTree M End constr
R29395:29400 Coq.MSets.MSetGenTree Props cons_1 thm
R29395:29400 Coq.MSets.MSetGenTree Props cons_1 thm
R29418:29426 Coq.Lists.List <> app_nil_r thm
R29418:29426 Coq.Lists.List <> app_nil_r thm
R29443:29458 Coq.MSets.MSetGenTree Props compare_cont_Cmp thm
R29443:29458 Coq.MSets.MSetGenTree Props compare_cont_Cmp thm
R29483:29497 Coq.MSets.MSetGenTree Props compare_end_Cmp thm
R29483:29497 Coq.MSets.MSetGenTree Props compare_end_Cmp thm
prf 29518:29529 Props compare_spec
R29548:29549 Coq.MSets.MSetGenTree Props Ok class
R29551:29552 Coq.MSets.MSetGenTree <> s1 var
R29555:29556 Coq.MSets.MSetGenTree Props Ok class
R29558:29559 Coq.MSets.MSetGenTree <> s2 var
R29564:29571 Coq.Init.Datatypes <> CompSpec def
R29586:29592 Coq.MSets.MSetGenTree M compare def
R29597:29598 Coq.MSets.MSetGenTree <> s2 var
R29594:29595 Coq.MSets.MSetGenTree <> s1 var
R29582:29583 Coq.MSets.MSetGenTree <> s2 var
R29579:29580 Coq.MSets.MSetGenTree <> s1 var
R29576:29577 Coq.MSets.MSetGenTree Props lt def
R29573:29574 Coq.MSets.MSetGenTree Props eq def
R29629:29639 Coq.MSets.MSetGenTree Props compare_Cmp thm
R29629:29639 Coq.MSets.MSetGenTree Props compare_Cmp thm
R29671:29676 Coq.MSets.MSetGenTree Props eq_Leq thm
R29671:29676 Coq.MSets.MSetGenTree Props eq_Leq thm
R29671:29676 Coq.MSets.MSetGenTree Props eq_Leq thm
prf 29811:29820 Props equal_spec
R29839:29840 Coq.MSets.MSetGenTree Props Ok class
R29842:29843 Coq.MSets.MSetGenTree <> s1 var
R29846:29847 Coq.MSets.MSetGenTree Props Ok class
R29849:29850 Coq.MSets.MSetGenTree <> s2 var
R29873:29877 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R29866:29868 Coq.Init.Logic <> :type_scope:x_'='_x not
R29855:29859 Coq.MSets.MSetGenTree M equal def
R29864:29865 Coq.MSets.MSetGenTree <> s2 var
R29861:29862 Coq.MSets.MSetGenTree <> s1 var
R29869:29872 Coq.Init.Datatypes <> true constr
R29878:29879 Coq.MSets.MSetGenTree Props eq def
R29884:29885 Coq.MSets.MSetGenTree <> s2 var
R29881:29882 Coq.MSets.MSetGenTree <> s1 var
R29902:29906 Coq.MSets.MSetGenTree M equal def
R29940:29951 Coq.MSets.MSetGenTree Props compare_spec thm
R29940:29951 Coq.MSets.MSetGenTree Props compare_spec thm
R30044:30066 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R30044:30066 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R30102:30124 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R30102:30124 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
prf 30206:30222 Props mindepth_maxdepth
R30238:30241 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R30228:30235 Coq.MSets.MSetGenTree M mindepth def
R30237:30237 Coq.MSets.MSetGenTree <> s var
R30242:30249 Coq.MSets.MSetGenTree M maxdepth def
R30251:30251 Coq.MSets.MSetGenTree <> s var
R30300:30315 Coq.Arith.PeanoNat Nat succ_le_mono thm
R30300:30315 Coq.Arith.PeanoNat Nat succ_le_mono thm
R30300:30315 Coq.Arith.PeanoNat Nat succ_le_mono thm
R30333:30340 Coq.MSets.MSetGenTree M mindepth def
R30333:30340 Coq.MSets.MSetGenTree M mindepth def
R30353:30364 Coq.Arith.PeanoNat Nat le_min_l thm
R30353:30364 Coq.Arith.PeanoNat Nat le_min_l thm
R30382:30389 Coq.MSets.MSetGenTree M maxdepth def
R30382:30389 Coq.MSets.MSetGenTree M maxdepth def
R30411:30422 Coq.Arith.PeanoNat Nat le_max_l thm
R30411:30422 Coq.Arith.PeanoNat Nat le_max_l thm
prf 30437:30453 Props maxdepth_cardinal
R30469:30471 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R30459:30466 Coq.MSets.MSetGenTree M cardinal def
R30468:30468 Coq.MSets.MSetGenTree <> s var
R30473:30474 Coq.Arith.PeanoNat <> :nat_scope:x_'^'_x not
R30485:30485 Coq.Arith.PeanoNat <> :nat_scope:x_'^'_x not
R30475:30482 Coq.MSets.MSetGenTree M maxdepth def
R30484:30484 Coq.MSets.MSetGenTree <> s var
R30503:30510 Coq.Init.Peano <> lt def
R30579:30592 Coq.Arith.PeanoNat Nat add_succ_r thm
R30598:30611 Coq.Arith.PeanoNat Nat add_succ_l thm
R30614:30624 Coq.Arith.PeanoNat Nat add_0_r thm
R30579:30592 Coq.Arith.PeanoNat Nat add_succ_r thm
R30579:30592 Coq.Arith.PeanoNat Nat add_succ_r thm
R30598:30611 Coq.Arith.PeanoNat Nat add_succ_l thm
R30598:30611 Coq.Arith.PeanoNat Nat add_succ_l thm
R30614:30624 Coq.Arith.PeanoNat Nat add_0_r thm
R30614:30624 Coq.Arith.PeanoNat Nat add_0_r thm
R30636:30650 Coq.Arith.PeanoNat Nat add_le_mono thm
R30707:30721 Coq.Arith.PeanoNat Nat pow_le_mono thm
R30636:30650 Coq.Arith.PeanoNat Nat add_le_mono thm
R30707:30721 Coq.Arith.PeanoNat Nat pow_le_mono thm
R30707:30721 Coq.Arith.PeanoNat Nat pow_le_mono thm
R30741:30752 Coq.Arith.PeanoNat Nat le_max_l thm
R30741:30752 Coq.Arith.PeanoNat Nat le_max_l thm
R30766:30777 Coq.Arith.PeanoNat Nat le_max_r thm
R30766:30777 Coq.Arith.PeanoNat Nat le_max_r thm
prf 30792:30808 Props mindepth_cardinal
R30828:30831 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R30815:30816 Coq.Arith.PeanoNat <> :nat_scope:x_'^'_x not
R30827:30827 Coq.Arith.PeanoNat <> :nat_scope:x_'^'_x not
R30817:30824 Coq.MSets.MSetGenTree M mindepth def
R30826:30826 Coq.MSets.MSetGenTree <> s var
R30832:30832 Coq.Init.Datatypes <> S constr
R30835:30842 Coq.MSets.MSetGenTree M cardinal def
R30844:30844 Coq.MSets.MSetGenTree <> s var
R30863:30870 Coq.Init.Peano <> lt def
R30939:30952 Coq.Arith.PeanoNat Nat add_succ_r thm
R30958:30971 Coq.Arith.PeanoNat Nat add_succ_l thm
R30974:30984 Coq.Arith.PeanoNat Nat add_0_r thm
R30939:30952 Coq.Arith.PeanoNat Nat add_succ_r thm
R30939:30952 Coq.Arith.PeanoNat Nat add_succ_r thm
R30958:30971 Coq.Arith.PeanoNat Nat add_succ_l thm
R30958:30971 Coq.Arith.PeanoNat Nat add_succ_l thm
R30974:30984 Coq.Arith.PeanoNat Nat add_0_r thm
R30974:30984 Coq.Arith.PeanoNat Nat add_0_r thm
R30996:31010 Coq.Arith.PeanoNat Nat add_le_mono thm
R31067:31081 Coq.Arith.PeanoNat Nat pow_le_mono thm
R30996:31010 Coq.Arith.PeanoNat Nat add_le_mono thm
R31067:31081 Coq.Arith.PeanoNat Nat pow_le_mono thm
R31067:31081 Coq.Arith.PeanoNat Nat pow_le_mono thm
R31101:31112 Coq.Arith.PeanoNat Nat le_min_l thm
R31101:31112 Coq.Arith.PeanoNat Nat le_min_l thm
R31126:31137 Coq.Arith.PeanoNat Nat le_min_r thm
R31126:31137 Coq.Arith.PeanoNat Nat le_min_r thm
prf 31152:31172 Props maxdepth_log_cardinal
R31187:31191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31213:31215 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R31192:31199 Coq.Arith.PeanoNat Nat log2 def
R31202:31209 Coq.MSets.MSetGenTree M cardinal def
R31211:31211 Coq.MSets.MSetGenTree <> s var
R31216:31223 Coq.MSets.MSetGenTree M maxdepth def
R31225:31225 Coq.MSets.MSetGenTree <> s var
R31179:31182 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R31178:31178 Coq.MSets.MSetGenTree <> s var
R31183:31186 Coq.MSets.MSetGenTree M Leaf constr
R31253:31268 Coq.Arith.PeanoNat Nat log2_lt_pow2 thm
R31253:31268 Coq.Arith.PeanoNat Nat log2_lt_pow2 thm
R31308:31324 Coq.MSets.MSetGenTree Props maxdepth_cardinal thm
R31308:31324 Coq.MSets.MSetGenTree Props maxdepth_cardinal thm
prf 31339:31359 Props mindepth_log_cardinal
R31375:31378 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R31365:31372 Coq.MSets.MSetGenTree M mindepth def
R31374:31374 Coq.MSets.MSetGenTree <> s var
R31379:31386 Coq.Arith.PeanoNat Nat log2 def
R31389:31389 Coq.Init.Datatypes <> S constr
R31392:31399 Coq.MSets.MSetGenTree M cardinal def
R31401:31401 Coq.MSets.MSetGenTree <> s var
R31420:31435 Coq.Arith.PeanoNat Nat log2_le_pow2 thm
R31420:31435 Coq.Arith.PeanoNat Nat log2_le_pow2 thm
R31462:31478 Coq.MSets.MSetGenTree Props mindepth_cardinal thm
R31462:31478 Coq.MSets.MSetGenTree Props mindepth_cardinal thm
R31491:31495 Coq.MSets.MSetGenTree Props <> modtype

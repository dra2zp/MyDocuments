DIGEST 1a227bb13a73d3b2b6b6039b599db33a
FCoq.MSets.MSetRBT
R1416:1426 Coq.MSets.MSetGenTree <> <> lib
R1444:1447 Coq.Bool.Bool <> <> lib
R1449:1452 Coq.Lists.List <> <> lib
R1454:1459 Coq.PArith.BinPos <> <> lib
R1461:1464 Coq.PArith.Pnat <> <> lib
R1466:1471 Coq.Setoids.Setoid <> <> lib
R1473:1482 Coq.Lists.SetoidList <> <> lib
R1484:1491 Coq.Arith.PeanoNat <> <> lib
R1729:1743 Coq.MSets.MSetInterface S <> mod
modtype 1705:1717 <> MSetRemoveMin
ax 1759:1768 MSetRemoveMin remove_min
R1773:1776 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1777:1782 Coq.Init.Datatypes <> option ind
R1788:1790 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R1785:1787 Coq.MSets.MSetRBT M elt def
R1791:1791 Coq.MSets.MSetRBT M t defax
R1772:1772 Coq.MSets.MSetRBT M t defax
ax 1803:1818 MSetRemoveMin remove_min_spec1
R1865:1871 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1890:1893 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1881:1883 Coq.Init.Logic <> :type_scope:x_'='_x not
R1872:1878 Coq.MSets.MSetRBT M min_elt defax
R1880:1880 Coq.MSets.MSetRBT <> s var
R1884:1887 Coq.Init.Datatypes <> Some constr
R1889:1889 Coq.MSets.MSetRBT <> k var
R1904:1908 Coq.MSets.MSetInterface WSetsOn ::x_'[=]'_x not
R1894:1899 Coq.MSets.MSetRBT M remove defax
R1903:1903 Coq.MSets.MSetRBT <> s var
R1901:1901 Coq.MSets.MSetRBT <> k var
R1909:1910 Coq.MSets.MSetRBT <> s' var
R1851:1853 Coq.Init.Logic <> :type_scope:x_'='_x not
R1839:1848 Coq.MSets.MSetRBT MSetRemoveMin remove_min defax
R1850:1850 Coq.MSets.MSetRBT <> s var
R1854:1857 Coq.Init.Datatypes <> Some constr
R1859:1859 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1861:1861 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1864:1864 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1860:1860 Coq.MSets.MSetRBT <> k var
R1862:1863 Coq.MSets.MSetRBT <> s' var
ax 1921:1936 MSetRemoveMin remove_min_spec2
R1969:1972 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1973:1977 Coq.MSets.MSetRBT M Empty def
R1979:1979 Coq.MSets.MSetRBT <> s var
R1962:1964 Coq.Init.Logic <> :type_scope:x_'='_x not
R1950:1959 Coq.MSets.MSetRBT MSetRemoveMin remove_min defax
R1961:1961 Coq.MSets.MSetRBT <> s var
R1965:1968 Coq.Init.Datatypes <> None constr
R1987:1999 Coq.MSets.MSetRBT MSetRemoveMin <> modtype
ind 2051:2055 <> color
constr 2060:2062 <> Red
constr 2066:2070 <> Black
R2063:2063 Coq.MSets.MSetRBT <> color ind
R2071:2071 Coq.MSets.MSetRBT <> color ind
mod 2081:2085 <> Color
def 2100:2100 Color t
R2105:2109 Coq.MSets.MSetRBT <> color ind
R2116:2120 Coq.MSets.MSetRBT Color <> mod
R2173:2190 Coq.Structures.Orders OrderedType <> mod
R2196:2212 Coq.MSets.MSetInterface Ops <> mod
R2214:2214 Coq.MSets.MSetRBT X <> modtype
mod 2166:2168 <> Ops
R2444:2458 Coq.MSets.MSetGenTree Ops <> mod
R2460:2460 Coq.MSets.MSetRBT X <> modtype
R2462:2466 Coq.MSets.MSetRBT Color <> modtype
def 2481:2481 Ops t
R2486:2489 Coq.MSets.MSetRBT Ops tree ind
syndef 2507:2508 Ops Rd
R2514:2517 Coq.MSets.MSetRBT Ops Node constr
R2519:2521 Coq.MSets.MSetRBT <> Red constr
syndef 2540:2541 Ops Bk
R2547:2550 Coq.MSets.MSetRBT Ops Node constr
R2552:2556 Coq.MSets.MSetRBT <> Black constr
def 2594:2602 Ops singleton
R2608:2610 Coq.MSets.MSetRBT Ops elt def
R2615:2618 Coq.MSets.MSetRBT Ops tree ind
R2623:2624 Coq.MSets.MSetRBT Ops Bk syndef
R2633:2636 Coq.MSets.MSetRBT Ops Leaf constr
R2631:2631 Coq.MSets.MSetRBT <> k var
R2626:2629 Coq.MSets.MSetRBT Ops Leaf constr
def 2682:2690 Ops makeBlack
R2704:2704 Coq.MSets.MSetRBT <> t var
R2714:2717 Coq.MSets.MSetRBT Ops Leaf constr
R2722:2725 Coq.MSets.MSetRBT Ops Leaf constr
R2730:2733 Coq.MSets.MSetRBT Ops Node constr
R2746:2747 Coq.MSets.MSetRBT Ops Bk syndef
def 2773:2779 Ops makeRed
R2793:2793 Coq.MSets.MSetRBT <> t var
R2803:2806 Coq.MSets.MSetRBT Ops Leaf constr
R2811:2814 Coq.MSets.MSetRBT Ops Leaf constr
R2819:2822 Coq.MSets.MSetRBT Ops Node constr
R2835:2836 Coq.MSets.MSetRBT Ops Rd syndef
def 2986:2989 Ops lbal
R3007:3007 Coq.MSets.MSetRBT <> l var
R3038:3039 Coq.MSets.MSetRBT Ops Rd syndef
R3055:3056 Coq.MSets.MSetRBT Ops Bk syndef
R3062:3062 Coq.MSets.MSetRBT <> r var
R3060:3060 Coq.MSets.MSetRBT <> k var
R3042:3043 Coq.MSets.MSetRBT Ops Bk syndef
R3089:3090 Coq.MSets.MSetRBT Ops Rd syndef
R3106:3107 Coq.MSets.MSetRBT Ops Bk syndef
R3113:3113 Coq.MSets.MSetRBT <> r var
R3111:3111 Coq.MSets.MSetRBT <> k var
R3093:3094 Coq.MSets.MSetRBT Ops Bk syndef
R3124:3125 Coq.MSets.MSetRBT Ops Bk syndef
R3131:3131 Coq.MSets.MSetRBT <> r var
R3129:3129 Coq.MSets.MSetRBT <> k var
R3127:3127 Coq.MSets.MSetRBT <> l var
def 3151:3154 Ops rbal
R3172:3172 Coq.MSets.MSetRBT <> r var
R3203:3204 Coq.MSets.MSetRBT Ops Rd syndef
R3220:3221 Coq.MSets.MSetRBT Ops Bk syndef
R3207:3208 Coq.MSets.MSetRBT Ops Bk syndef
R3212:3212 Coq.MSets.MSetRBT <> k var
R3210:3210 Coq.MSets.MSetRBT <> l var
R3254:3255 Coq.MSets.MSetRBT Ops Rd syndef
R3271:3272 Coq.MSets.MSetRBT Ops Bk syndef
R3258:3259 Coq.MSets.MSetRBT Ops Bk syndef
R3263:3263 Coq.MSets.MSetRBT <> k var
R3261:3261 Coq.MSets.MSetRBT <> l var
R3289:3290 Coq.MSets.MSetRBT Ops Bk syndef
R3296:3296 Coq.MSets.MSetRBT <> r var
R3294:3294 Coq.MSets.MSetRBT <> k var
R3292:3292 Coq.MSets.MSetRBT <> l var
def 3425:3429 Ops rbal'
R3447:3447 Coq.MSets.MSetRBT <> r var
R3478:3479 Coq.MSets.MSetRBT Ops Rd syndef
R3495:3496 Coq.MSets.MSetRBT Ops Bk syndef
R3482:3483 Coq.MSets.MSetRBT Ops Bk syndef
R3487:3487 Coq.MSets.MSetRBT <> k var
R3485:3485 Coq.MSets.MSetRBT <> l var
R3529:3530 Coq.MSets.MSetRBT Ops Rd syndef
R3546:3547 Coq.MSets.MSetRBT Ops Bk syndef
R3533:3534 Coq.MSets.MSetRBT Ops Bk syndef
R3538:3538 Coq.MSets.MSetRBT <> k var
R3536:3536 Coq.MSets.MSetRBT <> l var
R3564:3565 Coq.MSets.MSetRBT Ops Bk syndef
R3571:3571 Coq.MSets.MSetRBT <> r var
R3569:3569 Coq.MSets.MSetRBT <> k var
R3567:3567 Coq.MSets.MSetRBT <> l var
def 3772:3776 Ops lbalS
R3794:3794 Coq.MSets.MSetRBT <> l var
R3816:3817 Coq.MSets.MSetRBT Ops Rd syndef
R3832:3832 Coq.MSets.MSetRBT <> r var
R3830:3830 Coq.MSets.MSetRBT <> k var
R3820:3821 Coq.MSets.MSetRBT Ops Bk syndef
R3851:3851 Coq.MSets.MSetRBT <> r var
R3875:3879 Coq.MSets.MSetRBT Ops rbal' def
R3886:3887 Coq.MSets.MSetRBT Ops Rd syndef
R3883:3883 Coq.MSets.MSetRBT <> k var
R3881:3881 Coq.MSets.MSetRBT <> l var
R3922:3923 Coq.MSets.MSetRBT Ops Rd syndef
R3939:3943 Coq.MSets.MSetRBT Ops rbal' def
R3950:3956 Coq.MSets.MSetRBT Ops makeRed def
R3926:3927 Coq.MSets.MSetRBT Ops Bk syndef
R3931:3931 Coq.MSets.MSetRBT <> k var
R3929:3929 Coq.MSets.MSetRBT <> l var
R3972:3973 Coq.MSets.MSetRBT Ops Rd syndef
R3979:3979 Coq.MSets.MSetRBT <> r var
R3977:3977 Coq.MSets.MSetRBT <> k var
R3975:3975 Coq.MSets.MSetRBT <> l var
def 4023:4027 Ops rbalS
R4045:4045 Coq.MSets.MSetRBT <> r var
R4067:4068 Coq.MSets.MSetRBT Ops Rd syndef
R4075:4076 Coq.MSets.MSetRBT Ops Bk syndef
R4072:4072 Coq.MSets.MSetRBT <> k var
R4070:4070 Coq.MSets.MSetRBT <> l var
R4102:4102 Coq.MSets.MSetRBT <> l var
R4126:4129 Coq.MSets.MSetRBT Ops lbal def
R4144:4144 Coq.MSets.MSetRBT <> r var
R4142:4142 Coq.MSets.MSetRBT <> k var
R4132:4133 Coq.MSets.MSetRBT Ops Rd syndef
R4172:4173 Coq.MSets.MSetRBT Ops Rd syndef
R4201:4202 Coq.MSets.MSetRBT Ops Bk syndef
R4208:4208 Coq.MSets.MSetRBT <> r var
R4206:4206 Coq.MSets.MSetRBT <> k var
R4176:4179 Coq.MSets.MSetRBT Ops lbal def
R4182:4188 Coq.MSets.MSetRBT Ops makeRed def
R4221:4222 Coq.MSets.MSetRBT Ops Rd syndef
R4228:4228 Coq.MSets.MSetRBT <> r var
R4226:4226 Coq.MSets.MSetRBT <> k var
R4224:4224 Coq.MSets.MSetRBT <> l var
def 4291:4293 Ops ins
R4309:4309 Coq.MSets.MSetRBT <> s var
R4319:4322 Coq.MSets.MSetRBT Ops Leaf constr
R4327:4328 Coq.MSets.MSetRBT Ops Rd syndef
R4337:4340 Coq.MSets.MSetRBT Ops Leaf constr
R4335:4335 Coq.MSets.MSetRBT <> x var
R4330:4333 Coq.MSets.MSetRBT Ops Leaf constr
R4345:4348 Coq.MSets.MSetRBT Ops Node constr
R4370:4378 Coq.MSets.MSetRBT X compare defax
R4380:4380 Coq.MSets.MSetRBT <> x var
R4394:4395 Coq.Init.Datatypes <> Eq constr
R4400:4400 Coq.MSets.MSetRBT <> s var
R4407:4408 Coq.Init.Datatypes <> Lt constr
R4438:4440 Coq.MSets.MSetRBT <> Red constr
R4445:4446 Coq.MSets.MSetRBT Ops Rd syndef
R4449:4451 Coq.MSets.MSetRBT <> ins def
R4453:4453 Coq.MSets.MSetRBT <> x var
R4469:4473 Coq.MSets.MSetRBT <> Black constr
R4478:4481 Coq.MSets.MSetRBT Ops lbal def
R4484:4486 Coq.MSets.MSetRBT <> ins def
R4488:4488 Coq.MSets.MSetRBT <> x var
R4511:4512 Coq.Init.Datatypes <> Gt constr
R4542:4544 Coq.MSets.MSetRBT <> Red constr
R4549:4550 Coq.MSets.MSetRBT Ops Rd syndef
R4557:4559 Coq.MSets.MSetRBT <> ins def
R4561:4561 Coq.MSets.MSetRBT <> x var
R4573:4577 Coq.MSets.MSetRBT <> Black constr
R4582:4585 Coq.MSets.MSetRBT Ops rbal def
R4592:4594 Coq.MSets.MSetRBT <> ins def
R4596:4596 Coq.MSets.MSetRBT <> x var
def 4635:4637 Ops add
R4646:4654 Coq.MSets.MSetRBT Ops makeBlack def
R4657:4659 Coq.MSets.MSetRBT Ops ins def
R4663:4663 Coq.MSets.MSetRBT <> s var
R4661:4661 Coq.MSets.MSetRBT <> x var
def 4697:4702 Ops append
R4707:4710 Coq.MSets.MSetRBT Ops tree ind
R4719:4722 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4723:4726 Coq.MSets.MSetRBT Ops tree ind
R4715:4718 Coq.MSets.MSetRBT Ops tree ind
R4738:4738 Coq.MSets.MSetRBT <> l var
R4748:4751 Coq.MSets.MSetRBT Ops Leaf constr
R4765:4765 Coq.MSets.MSetRBT <> r var
R4770:4773 Coq.MSets.MSetRBT Ops Node constr
R4809:4812 Coq.MSets.MSetRBT Ops tree ind
R4817:4820 Coq.MSets.MSetRBT Ops tree ind
R4834:4834 Coq.MSets.MSetRBT <> r var
R4846:4849 Coq.MSets.MSetRBT Ops Leaf constr
R4854:4854 Coq.MSets.MSetRBT <> l var
R4861:4864 Coq.MSets.MSetRBT Ops Node constr
R4911:4913 Coq.MSets.MSetRBT <> Red constr
R4916:4918 Coq.MSets.MSetRBT <> Red constr
R4941:4946 Coq.MSets.MSetRBT <> append def
R4970:4972 Coq.MSets.MSetRBT <> lrl var
R5004:5005 Coq.MSets.MSetRBT Ops Rd syndef
R5025:5026 Coq.MSets.MSetRBT Ops Rd syndef
R5008:5009 Coq.MSets.MSetRBT Ops Rd syndef
R5053:5054 Coq.MSets.MSetRBT Ops Rd syndef
R5063:5064 Coq.MSets.MSetRBT Ops Rd syndef
R5066:5068 Coq.MSets.MSetRBT <> lrl var
R5095:5099 Coq.MSets.MSetRBT <> Black constr
R5102:5106 Coq.MSets.MSetRBT <> Black constr
R5129:5134 Coq.MSets.MSetRBT <> append def
R5158:5160 Coq.MSets.MSetRBT <> lrl var
R5192:5193 Coq.MSets.MSetRBT Ops Rd syndef
R5213:5214 Coq.MSets.MSetRBT Ops Bk syndef
R5196:5197 Coq.MSets.MSetRBT Ops Bk syndef
R5241:5245 Coq.MSets.MSetRBT Ops lbalS def
R5254:5255 Coq.MSets.MSetRBT Ops Bk syndef
R5257:5259 Coq.MSets.MSetRBT <> lrl var
R5286:5290 Coq.MSets.MSetRBT <> Black constr
R5293:5295 Coq.MSets.MSetRBT <> Red constr
R5300:5301 Coq.MSets.MSetRBT Ops Rd syndef
R5304:5311 Coq.MSets.MSetRBT <> append_l var
R5330:5332 Coq.MSets.MSetRBT <> Red constr
R5335:5339 Coq.MSets.MSetRBT <> Black constr
R5344:5345 Coq.MSets.MSetRBT Ops Rd syndef
R5354:5359 Coq.MSets.MSetRBT <> append def
R5364:5364 Coq.MSets.MSetRBT <> r var
def 5399:5401 Ops del
R5417:5417 Coq.MSets.MSetRBT <> t var
R5427:5430 Coq.MSets.MSetRBT Ops Leaf constr
R5435:5438 Coq.MSets.MSetRBT Ops Leaf constr
R5443:5446 Coq.MSets.MSetRBT Ops Node constr
R5468:5476 Coq.MSets.MSetRBT X compare defax
R5478:5478 Coq.MSets.MSetRBT <> x var
R5492:5493 Coq.Init.Datatypes <> Eq constr
R5498:5503 Coq.MSets.MSetRBT Ops append def
R5514:5515 Coq.Init.Datatypes <> Lt constr
R5557:5561 Coq.MSets.MSetRBT Ops lbalS def
R5564:5566 Coq.MSets.MSetRBT <> del def
R5568:5568 Coq.MSets.MSetRBT <> x var
R5589:5590 Coq.MSets.MSetRBT Ops Rd syndef
R5593:5595 Coq.MSets.MSetRBT <> del def
R5597:5597 Coq.MSets.MSetRBT <> x var
R5620:5621 Coq.Init.Datatypes <> Gt constr
R5663:5667 Coq.MSets.MSetRBT Ops rbalS def
R5674:5676 Coq.MSets.MSetRBT <> del def
R5678:5678 Coq.MSets.MSetRBT <> x var
R5695:5696 Coq.MSets.MSetRBT Ops Rd syndef
R5703:5705 Coq.MSets.MSetRBT <> del def
R5707:5707 Coq.MSets.MSetRBT <> x var
def 5746:5751 Ops remove
R5760:5768 Coq.MSets.MSetRBT Ops makeBlack def
R5771:5773 Coq.MSets.MSetRBT Ops del def
R5777:5777 Coq.MSets.MSetRBT <> t var
R5775:5775 Coq.MSets.MSetRBT <> x var
def 5827:5832 Ops delmin
R5846:5848 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R5843:5845 Coq.MSets.MSetRBT Ops elt def
R5849:5852 Coq.MSets.MSetRBT Ops tree ind
R5865:5865 Coq.MSets.MSetRBT <> l var
R5875:5878 Coq.MSets.MSetRBT Ops Leaf constr
R5883:5883 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5885:5885 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5887:5887 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5884:5884 Coq.MSets.MSetRBT <> x var
R5886:5886 Coq.MSets.MSetRBT <> r var
R5892:5895 Coq.MSets.MSetRBT Ops Node constr
R5929:5934 Coq.MSets.MSetRBT <> delmin def
R5970:5974 Coq.MSets.MSetRBT <> Black constr
R5979:5979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5981:5982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5995:5995 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5980:5980 Coq.MSets.MSetRBT <> k var
R5983:5987 Coq.MSets.MSetRBT Ops lbalS def
R5994:5994 Coq.MSets.MSetRBT <> r var
R5992:5992 Coq.MSets.MSetRBT <> x var
R5989:5990 Coq.MSets.MSetRBT <> l' var
R6002:6004 Coq.MSets.MSetRBT <> Red constr
R6009:6009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6011:6012 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6022:6022 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6010:6010 Coq.MSets.MSetRBT <> k var
R6013:6014 Coq.MSets.MSetRBT Ops Rd syndef
R6021:6021 Coq.MSets.MSetRBT <> r var
R6019:6019 Coq.MSets.MSetRBT <> x var
R6016:6017 Coq.MSets.MSetRBT <> l' var
def 6049:6058 Ops remove_min
R6064:6069 Coq.Init.Datatypes <> option ind
R6075:6077 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6072:6074 Coq.MSets.MSetRBT Ops elt def
R6078:6081 Coq.MSets.MSetRBT Ops tree ind
R6094:6094 Coq.MSets.MSetRBT <> t var
R6104:6107 Coq.MSets.MSetRBT Ops Leaf constr
R6112:6115 Coq.Init.Datatypes <> None constr
R6120:6123 Coq.MSets.MSetRBT Ops Node constr
R6152:6157 Coq.MSets.MSetRBT Ops delmin def
R6171:6174 Coq.Init.Datatypes <> Some constr
R6176:6176 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6178:6179 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6191:6191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6177:6177 Coq.MSets.MSetRBT <> k var
R6180:6188 Coq.MSets.MSetRBT Ops makeBlack def
R6190:6190 Coq.MSets.MSetRBT <> t var
def 6342:6346 Ops bogus
R6354:6356 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6350:6353 Coq.MSets.MSetRBT Ops tree ind
R6357:6360 Coq.Init.Datatypes <> list ind
R6362:6364 Coq.MSets.MSetRBT Ops elt def
R6369:6369 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6374:6375 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6379:6379 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6370:6373 Coq.MSets.MSetRBT Ops Leaf constr
R6376:6378 Coq.Init.Datatypes <> nil constr
syndef 6392:6400 Ops treeify_t
R6414:6417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6422:6424 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6418:6421 Coq.MSets.MSetRBT Ops tree ind
R6425:6428 Coq.Init.Datatypes <> list ind
R6430:6432 Coq.MSets.MSetRBT Ops elt def
R6406:6409 Coq.Init.Datatypes <> list ind
R6411:6413 Coq.MSets.MSetRBT Ops elt def
def 6448:6459 Ops treeify_zero
R6463:6471 Coq.MSets.MSetRBT Ops treeify_t syndef
R6488:6488 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6493:6493 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6497:6497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6489:6492 Coq.MSets.MSetRBT Ops Leaf constr
R6494:6496 Coq.MSets.MSetRBT <> acc var
def 6512:6522 Ops treeify_one
R6526:6534 Coq.MSets.MSetRBT Ops treeify_t syndef
R6557:6559 Coq.MSets.MSetRBT <> acc var
R6570:6571 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6579:6579 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6594:6595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6599:6599 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6580:6581 Coq.MSets.MSetRBT Ops Rd syndef
R6590:6593 Coq.MSets.MSetRBT Ops Leaf constr
R6583:6586 Coq.MSets.MSetRBT Ops Leaf constr
R6596:6598 Coq.MSets.MSetRBT <> acc var
R6609:6613 Coq.MSets.MSetRBT Ops bogus def
def 6633:6644 Ops treeify_cont
R6653:6661 Coq.MSets.MSetRBT Ops treeify_t syndef
R6666:6674 Coq.MSets.MSetRBT Ops treeify_t syndef
R6698:6698 Coq.MSets.MSetRBT <> f var
R6700:6702 Coq.MSets.MSetRBT <> acc var
R6712:6712 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6714:6715 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6722:6722 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6717:6718 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6736:6736 Coq.MSets.MSetRBT <> g var
R6738:6740 Coq.MSets.MSetRBT <> acc var
R6752:6752 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6754:6755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6759:6759 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6764:6764 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6773:6774 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6778:6778 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6765:6766 Coq.MSets.MSetRBT Ops Bk syndef
R6775:6777 Coq.MSets.MSetRBT <> acc var
R6795:6799 Coq.MSets.MSetRBT Ops bogus def
def 6817:6827 Ops treeify_aux
R6835:6838 Coq.Init.Datatypes <> bool ind
R6844:6851 Coq.Numbers.BinNums <> positive ind
R6856:6864 Coq.MSets.MSetRBT Ops treeify_t syndef
R6876:6876 Coq.MSets.MSetRBT <> n var
R6886:6887 Coq.Numbers.BinNums <> xH constr
R6895:6898 Coq.MSets.MSetRBT <> pred var
R6923:6933 Coq.MSets.MSetRBT Ops treeify_one def
R6905:6916 Coq.MSets.MSetRBT Ops treeify_zero def
R6938:6939 Coq.Numbers.BinNums <> xO constr
R6946:6957 Coq.MSets.MSetRBT Ops treeify_cont def
R6981:6991 Coq.MSets.MSetRBT <> treeify_aux def
R6998:6998 Coq.MSets.MSetRBT <> n var
R6993:6996 Coq.Init.Datatypes <> true constr
R6960:6970 Coq.MSets.MSetRBT <> treeify_aux def
R6977:6977 Coq.MSets.MSetRBT <> n var
R6972:6975 Coq.MSets.MSetRBT <> pred var
R7004:7005 Coq.Numbers.BinNums <> xI constr
R7012:7023 Coq.MSets.MSetRBT Ops treeify_cont def
R7048:7058 Coq.MSets.MSetRBT <> treeify_aux def
R7065:7065 Coq.MSets.MSetRBT <> n var
R7060:7063 Coq.MSets.MSetRBT <> pred var
R7026:7036 Coq.MSets.MSetRBT <> treeify_aux def
R7044:7044 Coq.MSets.MSetRBT <> n var
R7038:7042 Coq.Init.Datatypes <> false constr
def 7084:7094 Ops plength_aux
R7099:7102 Coq.Init.Datatypes <> list ind
R7104:7106 Coq.MSets.MSetRBT Ops elt def
R7111:7118 Coq.Numbers.BinNums <> positive ind
R7130:7130 Coq.MSets.MSetRBT <> l var
R7140:7142 Coq.Init.Datatypes <> nil constr
R7147:7147 Coq.MSets.MSetRBT <> p var
R7153:7154 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7160:7170 Coq.MSets.MSetRBT <> plength_aux def
R7175:7182 Coq.PArith.BinPos Pos succ def
R7184:7184 Coq.MSets.MSetRBT <> p var
R7172:7172 Coq.MSets.MSetRBT <> l var
def 7204:7210 Ops plength
R7217:7227 Coq.MSets.MSetRBT Ops plength_aux def
R7229:7229 Coq.MSets.MSetRBT <> l var
def 7246:7252 Ops treeify
R7257:7260 Coq.Init.Datatypes <> list ind
R7262:7264 Coq.MSets.MSetRBT Ops elt def
R7271:7273 Coq.Init.Datatypes <> fst def
R7276:7286 Coq.MSets.MSetRBT Ops treeify_aux def
R7305:7305 Coq.MSets.MSetRBT <> l var
R7294:7300 Coq.MSets.MSetRBT Ops plength def
R7302:7302 Coq.MSets.MSetRBT <> l var
R7288:7291 Coq.Init.Datatypes <> true constr
def 7340:7349 Ops filter_aux
R7358:7361 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7362:7365 Coq.Init.Datatypes <> bool ind
R7355:7357 Coq.MSets.MSetRBT Ops elt def
R7384:7384 Coq.MSets.MSetRBT <> s var
R7394:7397 Coq.MSets.MSetRBT Ops Leaf constr
R7402:7404 Coq.MSets.MSetRBT <> acc var
R7409:7412 Coq.MSets.MSetRBT Ops Node constr
R7439:7448 Coq.MSets.MSetRBT <> filter_aux def
R7454:7456 Coq.MSets.MSetRBT <> acc var
R7450:7450 Coq.MSets.MSetRBT <> f var
R7467:7467 Coq.MSets.MSetRBT <> f var
R7508:7517 Coq.MSets.MSetRBT <> filter_aux def
R7523:7525 Coq.MSets.MSetRBT <> acc var
R7519:7519 Coq.MSets.MSetRBT <> f var
R7476:7485 Coq.MSets.MSetRBT <> filter_aux def
R7493:7494 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7495:7497 Coq.MSets.MSetRBT <> acc var
R7487:7487 Coq.MSets.MSetRBT <> f var
def 7545:7550 Ops filter
R7559:7562 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7563:7566 Coq.Init.Datatypes <> bool ind
R7556:7558 Coq.MSets.MSetRBT Ops elt def
R7573:7573 Coq.MSets.MSetRBT Ops t def
R7578:7578 Coq.MSets.MSetRBT Ops t def
R7584:7590 Coq.MSets.MSetRBT Ops treeify def
R7593:7602 Coq.MSets.MSetRBT Ops filter_aux def
R7608:7610 Coq.Init.Datatypes <> nil constr
R7606:7606 Coq.MSets.MSetRBT <> s var
R7604:7604 Coq.MSets.MSetRBT <> f var
def 7624:7636 Ops partition_aux
R7645:7648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7649:7652 Coq.Init.Datatypes <> bool ind
R7642:7644 Coq.MSets.MSetRBT Ops elt def
R7677:7677 Coq.MSets.MSetRBT <> s var
R7687:7690 Coq.MSets.MSetRBT Ops Leaf constr
R7695:7695 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7700:7700 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7705:7705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7696:7699 Coq.MSets.MSetRBT <> acc1 var
R7701:7704 Coq.MSets.MSetRBT <> acc2 var
R7710:7713 Coq.MSets.MSetRBT Ops Node constr
R7751:7763 Coq.MSets.MSetRBT <> partition_aux def
R7775:7778 Coq.MSets.MSetRBT <> acc2 var
R7770:7773 Coq.MSets.MSetRBT <> acc1 var
R7765:7765 Coq.MSets.MSetRBT <> f var
R7789:7789 Coq.MSets.MSetRBT <> f var
R7840:7852 Coq.MSets.MSetRBT <> partition_aux def
R7866:7867 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7868:7871 Coq.MSets.MSetRBT <> acc2 var
R7859:7862 Coq.MSets.MSetRBT <> acc1 var
R7854:7854 Coq.MSets.MSetRBT <> f var
R7798:7810 Coq.MSets.MSetRBT <> partition_aux def
R7827:7830 Coq.MSets.MSetRBT <> acc2 var
R7819:7820 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7821:7824 Coq.MSets.MSetRBT <> acc1 var
R7812:7812 Coq.MSets.MSetRBT <> f var
def 7892:7900 Ops partition
R7909:7912 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7913:7916 Coq.Init.Datatypes <> bool ind
R7906:7908 Coq.MSets.MSetRBT Ops elt def
R7922:7922 Coq.MSets.MSetRBT Ops t def
R7928:7928 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R7927:7927 Coq.MSets.MSetRBT Ops t def
R7929:7929 Coq.MSets.MSetRBT Ops t def
R7951:7963 Coq.MSets.MSetRBT Ops partition_aux def
R7973:7975 Coq.Init.Datatypes <> nil constr
R7969:7971 Coq.Init.Datatypes <> nil constr
R7967:7967 Coq.MSets.MSetRBT <> s var
R7965:7965 Coq.MSets.MSetRBT <> f var
R7982:7982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7993:7994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8005:8005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7983:7989 Coq.MSets.MSetRBT Ops treeify def
R7991:7992 Coq.MSets.MSetRBT <> ok var
R7995:8001 Coq.MSets.MSetRBT Ops treeify def
R8003:8004 Coq.MSets.MSetRBT <> ko var
def 8133:8142 Ops union_list
R8157:8160 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8169:8172 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8173:8176 Coq.Init.Datatypes <> list ind
R8178:8180 Coq.MSets.MSetRBT Ops elt def
R8161:8164 Coq.Init.Datatypes <> list ind
R8166:8168 Coq.MSets.MSetRBT Ops elt def
R8149:8152 Coq.Init.Datatypes <> list ind
R8154:8156 Coq.MSets.MSetRBT Ops elt def
R8192:8193 Coq.MSets.MSetRBT <> l1 var
R8203:8205 Coq.Init.Datatypes <> nil constr
R8211:8220 Coq.Lists.List <> rev_append def
R8228:8229 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8274:8275 Coq.MSets.MSetRBT <> l2 var
R8288:8290 Coq.Init.Datatypes <> nil constr
R8295:8304 Coq.Lists.List <> rev_append def
R8309:8311 Coq.MSets.MSetRBT <> acc var
R8306:8307 Coq.MSets.MSetRBT <> l1 var
R8320:8321 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8342:8350 Coq.MSets.MSetRBT X compare defax
R8370:8371 Coq.Init.Datatypes <> Eq constr
R8376:8385 Coq.MSets.MSetRBT <> union_list def
R8397:8398 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8399:8401 Coq.MSets.MSetRBT <> acc var
R8413:8414 Coq.Init.Datatypes <> Lt constr
R8419:8426 Coq.MSets.MSetRBT <> union_l1 var
R8434:8435 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8436:8438 Coq.MSets.MSetRBT <> acc var
R8450:8451 Coq.Init.Datatypes <> Gt constr
R8456:8465 Coq.MSets.MSetRBT <> union_list def
R8476:8477 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8478:8480 Coq.MSets.MSetRBT <> acc var
R8471:8472 Coq.MSets.MSetRBT <> l2 var
def 8520:8531 Ops linear_union
R8544:8550 Coq.MSets.MSetRBT Ops treeify def
R8553:8562 Coq.MSets.MSetRBT Ops union_list def
R8600:8602 Coq.Init.Datatypes <> nil constr
R8583:8594 Coq.MSets.MSetRBT Ops rev_elements def
R8596:8597 Coq.MSets.MSetRBT <> s2 var
R8565:8576 Coq.MSets.MSetRBT Ops rev_elements def
R8578:8579 Coq.MSets.MSetRBT <> s1 var
def 8616:8625 Ops inter_list
R8640:8643 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8652:8655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8656:8659 Coq.Init.Datatypes <> list ind
R8661:8663 Coq.MSets.MSetRBT Ops elt def
R8644:8647 Coq.Init.Datatypes <> list ind
R8649:8651 Coq.MSets.MSetRBT Ops elt def
R8632:8635 Coq.Init.Datatypes <> list ind
R8637:8639 Coq.MSets.MSetRBT Ops elt def
R8675:8676 Coq.MSets.MSetRBT <> l1 var
R8686:8688 Coq.Init.Datatypes <> nil constr
R8706:8708 Coq.MSets.MSetRBT <> acc var
R8714:8715 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8760:8761 Coq.MSets.MSetRBT <> l2 var
R8774:8776 Coq.Init.Datatypes <> nil constr
R8781:8783 Coq.MSets.MSetRBT <> acc var
R8792:8793 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8814:8822 Coq.MSets.MSetRBT X compare defax
R8842:8843 Coq.Init.Datatypes <> Eq constr
R8848:8857 Coq.MSets.MSetRBT <> inter_list def
R8869:8870 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8871:8873 Coq.MSets.MSetRBT <> acc var
R8885:8886 Coq.Init.Datatypes <> Lt constr
R8891:8898 Coq.MSets.MSetRBT <> inter_l1 var
R8904:8906 Coq.MSets.MSetRBT <> acc var
R8917:8918 Coq.Init.Datatypes <> Gt constr
R8923:8932 Coq.MSets.MSetRBT <> inter_list def
R8941:8943 Coq.MSets.MSetRBT <> acc var
R8938:8939 Coq.MSets.MSetRBT <> l2 var
def 8982:8993 Ops linear_inter
R9006:9012 Coq.MSets.MSetRBT Ops treeify def
R9015:9024 Coq.MSets.MSetRBT Ops inter_list def
R9062:9064 Coq.Init.Datatypes <> nil constr
R9045:9056 Coq.MSets.MSetRBT Ops rev_elements def
R9058:9059 Coq.MSets.MSetRBT <> s2 var
R9027:9038 Coq.MSets.MSetRBT Ops rev_elements def
R9040:9041 Coq.MSets.MSetRBT <> s1 var
def 9078:9086 Ops diff_list
R9101:9104 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9113:9116 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9117:9120 Coq.Init.Datatypes <> list ind
R9122:9124 Coq.MSets.MSetRBT Ops elt def
R9105:9108 Coq.Init.Datatypes <> list ind
R9110:9112 Coq.MSets.MSetRBT Ops elt def
R9093:9096 Coq.Init.Datatypes <> list ind
R9098:9100 Coq.MSets.MSetRBT Ops elt def
R9136:9137 Coq.MSets.MSetRBT <> l1 var
R9147:9149 Coq.Init.Datatypes <> nil constr
R9167:9169 Coq.MSets.MSetRBT <> acc var
R9175:9176 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9220:9221 Coq.MSets.MSetRBT <> l2 var
R9234:9236 Coq.Init.Datatypes <> nil constr
R9241:9250 Coq.Lists.List <> rev_append def
R9255:9257 Coq.MSets.MSetRBT <> acc var
R9252:9253 Coq.MSets.MSetRBT <> l1 var
R9266:9267 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9288:9296 Coq.MSets.MSetRBT X compare defax
R9316:9317 Coq.Init.Datatypes <> Eq constr
R9322:9330 Coq.MSets.MSetRBT <> diff_list def
R9340:9342 Coq.MSets.MSetRBT <> acc var
R9353:9354 Coq.Init.Datatypes <> Lt constr
R9359:9365 Coq.MSets.MSetRBT <> diff_l1 var
R9371:9373 Coq.MSets.MSetRBT <> acc var
R9384:9385 Coq.Init.Datatypes <> Gt constr
R9390:9398 Coq.MSets.MSetRBT <> diff_list def
R9409:9410 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9411:9413 Coq.MSets.MSetRBT <> acc var
R9404:9405 Coq.MSets.MSetRBT <> l2 var
def 9453:9463 Ops linear_diff
R9476:9482 Coq.MSets.MSetRBT Ops treeify def
R9485:9493 Coq.MSets.MSetRBT Ops diff_list def
R9531:9533 Coq.Init.Datatypes <> nil constr
R9514:9525 Coq.MSets.MSetRBT Ops rev_elements def
R9527:9528 Coq.MSets.MSetRBT <> s2 var
R9496:9507 Coq.MSets.MSetRBT Ops rev_elements def
R9509:9510 Coq.MSets.MSetRBT <> s1 var
def 9804:9811 Ops skip_red
R9825:9825 Coq.MSets.MSetRBT <> t var
R9859:9859 Coq.MSets.MSetRBT <> t var
def 9879:9888 Ops skip_black
R9902:9909 Coq.MSets.MSetRBT Ops skip_red def
R9911:9911 Coq.MSets.MSetRBT <> t var
def 9965:9978 Ops compare_height
R9996:9999 Coq.MSets.MSetRBT Ops tree ind
R10004:10013 Coq.Init.Datatypes <> comparison ind
R10065:10072 Coq.MSets.MSetRBT Ops skip_red def
R10074:10076 Coq.MSets.MSetRBT <> s2x var
R10052:10059 Coq.MSets.MSetRBT Ops skip_red def
R10061:10062 Coq.MSets.MSetRBT <> s2 var
R10039:10046 Coq.MSets.MSetRBT Ops skip_red def
R10048:10049 Coq.MSets.MSetRBT <> s1 var
R10025:10032 Coq.MSets.MSetRBT Ops skip_red def
R10034:10036 Coq.MSets.MSetRBT <> s1x var
R10086:10089 Coq.MSets.MSetRBT Ops Node constr
R10103:10106 Coq.MSets.MSetRBT Ops Node constr
R10119:10122 Coq.MSets.MSetRBT Ops Node constr
R10135:10138 Coq.MSets.MSetRBT Ops Node constr
R10157:10170 Coq.MSets.MSetRBT <> compare_height def
R10199:10208 Coq.MSets.MSetRBT Ops skip_black def
R10173:10182 Coq.MSets.MSetRBT Ops skip_black def
R10222:10225 Coq.MSets.MSetRBT Ops Leaf constr
R10231:10234 Coq.MSets.MSetRBT Ops Node constr
R10247:10248 Coq.Init.Datatypes <> Lt constr
R10253:10256 Coq.MSets.MSetRBT Ops Node constr
R10270:10273 Coq.MSets.MSetRBT Ops Leaf constr
R10281:10282 Coq.Init.Datatypes <> Gt constr
R10287:10290 Coq.MSets.MSetRBT Ops Node constr
R10304:10307 Coq.MSets.MSetRBT Ops Node constr
R10320:10323 Coq.MSets.MSetRBT Ops Node constr
R10336:10339 Coq.MSets.MSetRBT Ops Leaf constr
R10347:10360 Coq.MSets.MSetRBT <> compare_height def
R10388:10391 Coq.MSets.MSetRBT Ops Leaf constr
R10363:10372 Coq.MSets.MSetRBT Ops skip_black def
R10396:10399 Coq.MSets.MSetRBT Ops Leaf constr
R10402:10405 Coq.MSets.MSetRBT Ops Node constr
R10418:10421 Coq.MSets.MSetRBT Ops Node constr
R10434:10437 Coq.MSets.MSetRBT Ops Node constr
R10456:10469 Coq.MSets.MSetRBT <> compare_height def
R10487:10496 Coq.MSets.MSetRBT Ops skip_black def
R10471:10474 Coq.MSets.MSetRBT Ops Leaf constr
R10521:10522 Coq.Init.Datatypes <> Eq constr
def 10727:10731 Ops union
R10741:10741 Coq.MSets.MSetRBT Ops t def
R10746:10746 Coq.MSets.MSetRBT Ops t def
R10758:10771 Coq.MSets.MSetRBT Ops compare_height def
R10782:10783 Coq.MSets.MSetRBT <> t2 var
R10779:10780 Coq.MSets.MSetRBT <> t2 var
R10776:10777 Coq.MSets.MSetRBT <> t1 var
R10773:10774 Coq.MSets.MSetRBT <> t1 var
R10793:10794 Coq.Init.Datatypes <> Lt constr
R10799:10802 Coq.MSets.MSetRBT Ops fold def
R10811:10812 Coq.MSets.MSetRBT <> t2 var
R10808:10809 Coq.MSets.MSetRBT <> t1 var
R10804:10806 Coq.MSets.MSetRBT Ops add def
R10817:10818 Coq.Init.Datatypes <> Gt constr
R10823:10826 Coq.MSets.MSetRBT Ops fold def
R10835:10836 Coq.MSets.MSetRBT <> t1 var
R10832:10833 Coq.MSets.MSetRBT <> t2 var
R10828:10830 Coq.MSets.MSetRBT Ops add def
R10841:10842 Coq.Init.Datatypes <> Eq constr
R10847:10858 Coq.MSets.MSetRBT Ops linear_union def
R10863:10864 Coq.MSets.MSetRBT <> t2 var
R10860:10861 Coq.MSets.MSetRBT <> t1 var
def 10884:10887 Ops diff
R10897:10897 Coq.MSets.MSetRBT Ops t def
R10902:10902 Coq.MSets.MSetRBT Ops t def
R10914:10927 Coq.MSets.MSetRBT Ops compare_height def
R10938:10939 Coq.MSets.MSetRBT <> t2 var
R10935:10936 Coq.MSets.MSetRBT <> t2 var
R10932:10933 Coq.MSets.MSetRBT <> t1 var
R10929:10930 Coq.MSets.MSetRBT <> t1 var
R10949:10950 Coq.Init.Datatypes <> Lt constr
R10955:10960 Coq.MSets.MSetRBT Ops filter def
R10989:10990 Coq.MSets.MSetRBT <> t1 var
R10972:10975 Coq.Init.Datatypes <> negb def
R10978:10980 Coq.MSets.MSetRBT Ops mem def
R10984:10985 Coq.MSets.MSetRBT <> t2 var
R10982:10982 Coq.MSets.MSetRBT <> k var
R10995:10996 Coq.Init.Datatypes <> Gt constr
R11001:11004 Coq.MSets.MSetRBT Ops fold def
R11016:11017 Coq.MSets.MSetRBT <> t1 var
R11013:11014 Coq.MSets.MSetRBT <> t2 var
R11006:11011 Coq.MSets.MSetRBT Ops remove def
R11022:11023 Coq.Init.Datatypes <> Eq constr
R11028:11038 Coq.MSets.MSetRBT Ops linear_diff def
R11043:11044 Coq.MSets.MSetRBT <> t2 var
R11040:11041 Coq.MSets.MSetRBT <> t1 var
def 11064:11068 Ops inter
R11078:11078 Coq.MSets.MSetRBT Ops t def
R11083:11083 Coq.MSets.MSetRBT Ops t def
R11095:11108 Coq.MSets.MSetRBT Ops compare_height def
R11119:11120 Coq.MSets.MSetRBT <> t2 var
R11116:11117 Coq.MSets.MSetRBT <> t2 var
R11113:11114 Coq.MSets.MSetRBT <> t1 var
R11110:11111 Coq.MSets.MSetRBT <> t1 var
R11130:11131 Coq.Init.Datatypes <> Lt constr
R11136:11141 Coq.MSets.MSetRBT Ops filter def
R11163:11164 Coq.MSets.MSetRBT <> t1 var
R11153:11155 Coq.MSets.MSetRBT Ops mem def
R11159:11160 Coq.MSets.MSetRBT <> t2 var
R11157:11157 Coq.MSets.MSetRBT <> k var
R11169:11170 Coq.Init.Datatypes <> Gt constr
R11175:11180 Coq.MSets.MSetRBT Ops filter def
R11202:11203 Coq.MSets.MSetRBT <> t2 var
R11192:11194 Coq.MSets.MSetRBT Ops mem def
R11198:11199 Coq.MSets.MSetRBT <> t1 var
R11196:11196 Coq.MSets.MSetRBT <> k var
R11208:11209 Coq.Init.Datatypes <> Eq constr
R11214:11225 Coq.MSets.MSetRBT Ops linear_inter def
R11230:11231 Coq.MSets.MSetRBT <> t2 var
R11227:11228 Coq.MSets.MSetRBT <> t1 var
R11244:11246 Coq.MSets.MSetRBT Ops <> mod
R11337:11354 Coq.Structures.Orders OrderedType <> mod
R11360:11380 Coq.MSets.MSetInterface RawSets <> mod
R11382:11382 Coq.MSets.MSetRBT X <> modtype
modtype 11326:11332 <> MakeRaw
R11393:11395 Coq.MSets.MSetRBT Ops <> modtype
R11397:11397 Coq.MSets.MSetRBT X <> modtype
R11535:11551 Coq.MSets.MSetGenTree Props <> mod
R11553:11553 Coq.MSets.MSetRBT X <> modtype
R11555:11559 Coq.MSets.MSetRBT Color <> modtype
syndef 11578:11579 MakeRaw Rd
R11585:11588 Coq.MSets.MSetRBT MakeRaw Node constr
R11590:11592 Coq.MSets.MSetRBT <> Red constr
syndef 11611:11612 MakeRaw Bk
R11618:11621 Coq.MSets.MSetRBT MakeRaw Node constr
R11623:11627 Coq.MSets.MSetRBT <> Black constr
R11682:11683 Coq.MSets.MSetRBT MakeRaw In def
R11685:11691 Coq.MSets.MSetRBT MakeRaw lt_tree def
R11693:11699 Coq.MSets.MSetRBT MakeRaw gt_tree def
R11701:11702 Coq.MSets.MSetRBT MakeRaw Ok class
R11729:11731 Coq.MSets.MSetRBT <> InT ind
R11733:11735 Coq.MSets.MSetRBT <> bst ind
prf 12003:12016 MakeRaw singleton_spec
R12043:12047 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12024:12026 Coq.MSets.MSetRBT MakeRaw InT ind
R12031:12039 Coq.MSets.MSetRBT MakeRaw singleton def
R12041:12041 Coq.MSets.MSetRBT <> x var
R12028:12028 Coq.MSets.MSetRBT <> y var
R12048:12051 Coq.MSets.MSetRBT X eq defax
R12055:12055 Coq.MSets.MSetRBT <> x var
R12053:12053 Coq.MSets.MSetRBT <> y var
R12073:12081 Coq.MSets.MSetRBT MakeRaw singleton def
inst 12113:12124 MakeRaw singleton_ok
R12130:12131 Coq.MSets.MSetRBT MakeRaw Ok class
R12134:12142 Coq.MSets.MSetRBT MakeRaw singleton def
R12144:12144 Coq.MSets.MSetRBT <> x var
R12163:12171 Coq.MSets.MSetRBT MakeRaw singleton def
prf 12222:12235 MakeRaw makeBlack_spec
R12262:12266 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12243:12245 Coq.MSets.MSetRBT MakeRaw InT ind
R12250:12258 Coq.MSets.MSetRBT MakeRaw makeBlack def
R12260:12260 Coq.MSets.MSetRBT <> s var
R12247:12247 Coq.MSets.MSetRBT <> x var
R12267:12269 Coq.MSets.MSetRBT MakeRaw InT ind
R12273:12273 Coq.MSets.MSetRBT <> s var
R12271:12271 Coq.MSets.MSetRBT <> x var
prf 12329:12340 MakeRaw makeRed_spec
R12365:12369 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12348:12350 Coq.MSets.MSetRBT MakeRaw InT ind
R12355:12361 Coq.MSets.MSetRBT MakeRaw makeRed def
R12363:12363 Coq.MSets.MSetRBT <> s var
R12352:12352 Coq.MSets.MSetRBT <> x var
R12370:12372 Coq.MSets.MSetRBT MakeRaw InT ind
R12376:12376 Coq.MSets.MSetRBT <> s var
R12374:12374 Coq.MSets.MSetRBT <> x var
inst 12435:12446 MakeRaw makeBlack_ok
R12452:12453 Coq.MSets.MSetRBT MakeRaw Ok class
R12455:12455 Coq.MSets.MSetRBT <> s var
R12460:12461 Coq.MSets.MSetRBT MakeRaw Ok class
R12464:12472 Coq.MSets.MSetRBT MakeRaw makeBlack def
R12474:12474 Coq.MSets.MSetRBT <> s var
inst 12524:12533 MakeRaw makeRed_ok
R12539:12540 Coq.MSets.MSetRBT MakeRaw Ok class
R12542:12542 Coq.MSets.MSetRBT <> s var
R12547:12548 Coq.MSets.MSetRBT MakeRaw Ok class
R12551:12557 Coq.MSets.MSetRBT MakeRaw makeRed def
R12559:12559 Coq.MSets.MSetRBT <> s var
def 12677:12683 MakeRaw isblack
R12697:12697 Coq.MSets.MSetRBT <> t var
R12716:12719 Coq.Init.Logic <> True ind
R12728:12732 Coq.Init.Logic <> False ind
def 12751:12758 MakeRaw notblack
R12772:12772 Coq.MSets.MSetRBT <> t var
R12791:12795 Coq.Init.Logic <> False ind
R12804:12807 Coq.Init.Logic <> True ind
def 12826:12831 MakeRaw notred
R12845:12845 Coq.MSets.MSetRBT <> t var
R12864:12868 Coq.Init.Logic <> False ind
R12877:12880 Coq.Init.Logic <> True ind
def 12899:12903 MakeRaw rcase
R12917:12917 Coq.MSets.MSetRBT <> A var
R12929:12929 Coq.MSets.MSetRBT <> t var
R12951:12951 Coq.MSets.MSetRBT <> f var
R12967:12967 Coq.MSets.MSetRBT <> g var
R12969:12969 Coq.MSets.MSetRBT <> t var
ind 12988:12992 MakeRaw rspec
constr 13028:13031 MakeRaw rred
constr 13075:13079 MakeRaw relse
R13008:13011 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13013:13016 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13004:13007 Coq.MSets.MSetRBT MakeRaw tree ind
R13041:13045 Coq.MSets.MSetRBT <> rspec ind
R13069:13069 Coq.MSets.MSetRBT <> b var
R13067:13067 Coq.MSets.MSetRBT <> x var
R13065:13065 Coq.MSets.MSetRBT <> a var
R13052:13053 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13059:13059 Coq.MSets.MSetRBT <> b var
R13057:13057 Coq.MSets.MSetRBT <> x var
R13055:13055 Coq.MSets.MSetRBT <> a var
R13093:13096 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13097:13101 Coq.MSets.MSetRBT <> rspec ind
R13112:13112 Coq.MSets.MSetRBT <> t var
R13107:13107 Coq.MSets.MSetRBT <> t var
R13085:13090 Coq.MSets.MSetRBT MakeRaw notred def
R13092:13092 Coq.MSets.MSetRBT <> t var
prf 13122:13127 MakeRaw rmatch
R13141:13145 Coq.MSets.MSetRBT MakeRaw rspec ind
R13161:13165 Coq.MSets.MSetRBT MakeRaw rcase def
R13171:13171 Coq.MSets.MSetRBT <> t var
R13169:13169 Coq.MSets.MSetRBT <> g var
R13167:13167 Coq.MSets.MSetRBT <> f var
R13158:13158 Coq.MSets.MSetRBT <> t var
R13156:13156 Coq.MSets.MSetRBT <> g var
R13154:13154 Coq.MSets.MSetRBT <> f var
R13151:13151 Coq.MSets.MSetRBT <> A var
def 13251:13256 MakeRaw rrcase
R13270:13270 Coq.MSets.MSetRBT <> A var
R13282:13282 Coq.MSets.MSetRBT <> t var
R13313:13313 Coq.MSets.MSetRBT <> f var
R13349:13349 Coq.MSets.MSetRBT <> f var
R13369:13369 Coq.MSets.MSetRBT <> g var
R13371:13371 Coq.MSets.MSetRBT <> t var
syndef 13389:13397 MakeRaw notredred
R13403:13408 Coq.MSets.MSetRBT MakeRaw rrcase def
R13445:13448 Coq.Init.Logic <> True ind
R13428:13432 Coq.Init.Logic <> False ind
ind 13464:13469 MakeRaw rrspec
constr 13505:13510 MakeRaw rrleft
constr 13572:13578 MakeRaw rrright
constr 13640:13645 MakeRaw rrelse
R13485:13488 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13490:13493 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13481:13484 Coq.MSets.MSetRBT MakeRaw tree ind
R13524:13529 Coq.MSets.MSetRBT <> rrspec ind
R13566:13566 Coq.MSets.MSetRBT <> c var
R13564:13564 Coq.MSets.MSetRBT <> y var
R13562:13562 Coq.MSets.MSetRBT <> b var
R13560:13560 Coq.MSets.MSetRBT <> x var
R13558:13558 Coq.MSets.MSetRBT <> a var
R13536:13537 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13552:13552 Coq.MSets.MSetRBT <> c var
R13550:13550 Coq.MSets.MSetRBT <> y var
R13540:13541 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13547:13547 Coq.MSets.MSetRBT <> b var
R13545:13545 Coq.MSets.MSetRBT <> x var
R13543:13543 Coq.MSets.MSetRBT <> a var
R13592:13597 Coq.MSets.MSetRBT <> rrspec ind
R13634:13634 Coq.MSets.MSetRBT <> c var
R13632:13632 Coq.MSets.MSetRBT <> y var
R13630:13630 Coq.MSets.MSetRBT <> b var
R13628:13628 Coq.MSets.MSetRBT <> x var
R13626:13626 Coq.MSets.MSetRBT <> a var
R13604:13605 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13612:13613 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13619:13619 Coq.MSets.MSetRBT <> c var
R13617:13617 Coq.MSets.MSetRBT <> y var
R13615:13615 Coq.MSets.MSetRBT <> b var
R13609:13609 Coq.MSets.MSetRBT <> x var
R13607:13607 Coq.MSets.MSetRBT <> a var
R13662:13665 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13666:13671 Coq.MSets.MSetRBT <> rrspec ind
R13682:13682 Coq.MSets.MSetRBT <> t var
R13677:13677 Coq.MSets.MSetRBT <> t var
R13651:13659 Coq.MSets.MSetRBT MakeRaw notredred syndef
R13661:13661 Coq.MSets.MSetRBT <> t var
prf 13692:13698 MakeRaw rrmatch
R13712:13717 Coq.MSets.MSetRBT MakeRaw rrspec ind
R13733:13738 Coq.MSets.MSetRBT MakeRaw rrcase def
R13744:13744 Coq.MSets.MSetRBT <> t var
R13742:13742 Coq.MSets.MSetRBT <> g var
R13740:13740 Coq.MSets.MSetRBT <> f var
R13730:13730 Coq.MSets.MSetRBT <> t var
R13728:13728 Coq.MSets.MSetRBT <> g var
R13726:13726 Coq.MSets.MSetRBT <> f var
R13723:13723 Coq.MSets.MSetRBT <> A var
def 13898:13904 MakeRaw rrcase'
R13918:13918 Coq.MSets.MSetRBT <> A var
R13930:13930 Coq.MSets.MSetRBT <> t var
R13961:13961 Coq.MSets.MSetRBT <> f var
R13997:13997 Coq.MSets.MSetRBT <> f var
R14017:14017 Coq.MSets.MSetRBT <> g var
R14019:14019 Coq.MSets.MSetRBT <> t var
prf 14033:14040 MakeRaw rrmatch'
R14054:14059 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14075:14081 Coq.MSets.MSetRBT MakeRaw rrcase' def
R14087:14087 Coq.MSets.MSetRBT <> t var
R14085:14085 Coq.MSets.MSetRBT <> g var
R14083:14083 Coq.MSets.MSetRBT <> f var
R14072:14072 Coq.MSets.MSetRBT <> t var
R14070:14070 Coq.MSets.MSetRBT <> g var
R14068:14068 Coq.MSets.MSetRBT <> f var
R14065:14065 Coq.MSets.MSetRBT <> A var
prf 14295:14304 MakeRaw lbal_match
R14315:14320 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14403:14406 Coq.MSets.MSetRBT MakeRaw lbal def
R14412:14412 Coq.MSets.MSetRBT <> r var
R14410:14410 Coq.MSets.MSetRBT <> k var
R14408:14408 Coq.MSets.MSetRBT <> l var
R14397:14397 Coq.MSets.MSetRBT <> l var
R14384:14385 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14391:14391 Coq.MSets.MSetRBT <> r var
R14389:14389 Coq.MSets.MSetRBT <> k var
R14387:14387 Coq.MSets.MSetRBT <> l var
R14343:14344 Coq.MSets.MSetRBT MakeRaw Rd syndef
R14360:14361 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14367:14367 Coq.MSets.MSetRBT <> r var
R14365:14365 Coq.MSets.MSetRBT <> k var
R14363:14363 Coq.MSets.MSetRBT <> c var
R14357:14357 Coq.MSets.MSetRBT <> y var
R14347:14348 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14354:14354 Coq.MSets.MSetRBT <> b var
R14352:14352 Coq.MSets.MSetRBT <> x var
R14350:14350 Coq.MSets.MSetRBT <> a var
R14431:14437 Coq.MSets.MSetRBT MakeRaw rrmatch thm
R14431:14437 Coq.MSets.MSetRBT MakeRaw rrmatch thm
prf 14458:14467 MakeRaw rbal_match
R14478:14483 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14566:14569 Coq.MSets.MSetRBT MakeRaw rbal def
R14575:14575 Coq.MSets.MSetRBT <> r var
R14573:14573 Coq.MSets.MSetRBT <> k var
R14571:14571 Coq.MSets.MSetRBT <> l var
R14560:14560 Coq.MSets.MSetRBT <> r var
R14547:14548 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14554:14554 Coq.MSets.MSetRBT <> r var
R14552:14552 Coq.MSets.MSetRBT <> k var
R14550:14550 Coq.MSets.MSetRBT <> l var
R14506:14507 Coq.MSets.MSetRBT MakeRaw Rd syndef
R14523:14524 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14530:14530 Coq.MSets.MSetRBT <> c var
R14528:14528 Coq.MSets.MSetRBT <> y var
R14526:14526 Coq.MSets.MSetRBT <> b var
R14520:14520 Coq.MSets.MSetRBT <> x var
R14510:14511 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14517:14517 Coq.MSets.MSetRBT <> a var
R14515:14515 Coq.MSets.MSetRBT <> k var
R14513:14513 Coq.MSets.MSetRBT <> l var
R14594:14600 Coq.MSets.MSetRBT MakeRaw rrmatch thm
R14594:14600 Coq.MSets.MSetRBT MakeRaw rrmatch thm
prf 14621:14631 MakeRaw rbal'_match
R14642:14647 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14730:14734 Coq.MSets.MSetRBT MakeRaw rbal' def
R14740:14740 Coq.MSets.MSetRBT <> r var
R14738:14738 Coq.MSets.MSetRBT <> k var
R14736:14736 Coq.MSets.MSetRBT <> l var
R14724:14724 Coq.MSets.MSetRBT <> r var
R14711:14712 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14718:14718 Coq.MSets.MSetRBT <> r var
R14716:14716 Coq.MSets.MSetRBT <> k var
R14714:14714 Coq.MSets.MSetRBT <> l var
R14670:14671 Coq.MSets.MSetRBT MakeRaw Rd syndef
R14687:14688 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14694:14694 Coq.MSets.MSetRBT <> c var
R14692:14692 Coq.MSets.MSetRBT <> y var
R14690:14690 Coq.MSets.MSetRBT <> b var
R14684:14684 Coq.MSets.MSetRBT <> x var
R14674:14675 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14681:14681 Coq.MSets.MSetRBT <> a var
R14679:14679 Coq.MSets.MSetRBT <> k var
R14677:14677 Coq.MSets.MSetRBT <> l var
R14759:14766 Coq.MSets.MSetRBT MakeRaw rrmatch' thm
R14759:14766 Coq.MSets.MSetRBT MakeRaw rrmatch' thm
prf 14787:14797 MakeRaw lbalS_match
R14808:14812 Coq.MSets.MSetRBT MakeRaw rspec ind
R15020:15024 Coq.MSets.MSetRBT MakeRaw lbalS def
R15030:15030 Coq.MSets.MSetRBT <> r var
R15028:15028 Coq.MSets.MSetRBT <> x var
R15026:15026 Coq.MSets.MSetRBT <> l var
R15015:15015 Coq.MSets.MSetRBT <> l var
R14871:14871 Coq.MSets.MSetRBT <> r var
R14896:14900 Coq.MSets.MSetRBT MakeRaw rbal' def
R14907:14908 Coq.MSets.MSetRBT MakeRaw Rd syndef
R14904:14904 Coq.MSets.MSetRBT <> x var
R14902:14902 Coq.MSets.MSetRBT <> l var
R14944:14945 Coq.MSets.MSetRBT MakeRaw Rd syndef
R14961:14965 Coq.MSets.MSetRBT MakeRaw rbal' def
R14972:14978 Coq.MSets.MSetRBT MakeRaw makeRed def
R14948:14949 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14953:14953 Coq.MSets.MSetRBT <> x var
R14951:14951 Coq.MSets.MSetRBT <> l var
R14995:14996 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15002:15002 Coq.MSets.MSetRBT <> r var
R15000:15000 Coq.MSets.MSetRBT <> x var
R14998:14998 Coq.MSets.MSetRBT <> l var
R14830:14831 Coq.MSets.MSetRBT MakeRaw Rd syndef
R14846:14846 Coq.MSets.MSetRBT <> r var
R14844:14844 Coq.MSets.MSetRBT <> x var
R14834:14835 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14841:14841 Coq.MSets.MSetRBT <> b var
R14839:14839 Coq.MSets.MSetRBT <> y var
R14837:14837 Coq.MSets.MSetRBT <> a var
R15049:15054 Coq.MSets.MSetRBT MakeRaw rmatch thm
R15049:15054 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 15075:15085 MakeRaw rbalS_match
R15096:15100 Coq.MSets.MSetRBT MakeRaw rspec ind
R15306:15310 Coq.MSets.MSetRBT MakeRaw rbalS def
R15316:15316 Coq.MSets.MSetRBT <> r var
R15314:15314 Coq.MSets.MSetRBT <> x var
R15312:15312 Coq.MSets.MSetRBT <> l var
R15301:15301 Coq.MSets.MSetRBT <> r var
R15159:15159 Coq.MSets.MSetRBT <> l var
R15184:15187 Coq.MSets.MSetRBT MakeRaw lbal def
R15202:15202 Coq.MSets.MSetRBT <> r var
R15200:15200 Coq.MSets.MSetRBT <> x var
R15190:15191 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15231:15232 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15260:15261 Coq.MSets.MSetRBT MakeRaw Bk syndef
R15267:15267 Coq.MSets.MSetRBT <> r var
R15265:15265 Coq.MSets.MSetRBT <> x var
R15235:15238 Coq.MSets.MSetRBT MakeRaw lbal def
R15241:15247 Coq.MSets.MSetRBT MakeRaw makeRed def
R15281:15282 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15288:15288 Coq.MSets.MSetRBT <> r var
R15286:15286 Coq.MSets.MSetRBT <> x var
R15284:15284 Coq.MSets.MSetRBT <> l var
R15118:15119 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15126:15127 Coq.MSets.MSetRBT MakeRaw Bk syndef
R15133:15133 Coq.MSets.MSetRBT <> b var
R15131:15131 Coq.MSets.MSetRBT <> y var
R15129:15129 Coq.MSets.MSetRBT <> a var
R15123:15123 Coq.MSets.MSetRBT <> x var
R15121:15121 Coq.MSets.MSetRBT <> l var
R15335:15340 Coq.MSets.MSetRBT MakeRaw rmatch thm
R15335:15340 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 15397:15405 MakeRaw lbal_spec
R15438:15442 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15420:15422 Coq.MSets.MSetRBT MakeRaw InT ind
R15427:15430 Coq.MSets.MSetRBT MakeRaw lbal def
R15436:15436 Coq.MSets.MSetRBT <> r var
R15434:15434 Coq.MSets.MSetRBT <> x var
R15432:15432 Coq.MSets.MSetRBT <> l var
R15424:15424 Coq.MSets.MSetRBT <> y var
R15451:15454 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15443:15446 Coq.MSets.MSetRBT X eq defax
R15450:15450 Coq.MSets.MSetRBT <> x var
R15448:15448 Coq.MSets.MSetRBT <> y var
R15462:15465 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15455:15457 Coq.MSets.MSetRBT MakeRaw InT ind
R15461:15461 Coq.MSets.MSetRBT <> l var
R15459:15459 Coq.MSets.MSetRBT <> y var
R15466:15468 Coq.MSets.MSetRBT MakeRaw InT ind
R15472:15472 Coq.MSets.MSetRBT <> r var
R15470:15470 Coq.MSets.MSetRBT <> y var
R15488:15497 Coq.MSets.MSetRBT MakeRaw lbal_match thm
R15488:15497 Coq.MSets.MSetRBT MakeRaw lbal_match thm
inst 15529:15535 MakeRaw lbal_ok
R15545:15546 Coq.MSets.MSetRBT MakeRaw Ok class
R15548:15548 Coq.MSets.MSetRBT <> l var
R15551:15552 Coq.MSets.MSetRBT MakeRaw Ok class
R15554:15554 Coq.MSets.MSetRBT <> r var
R15557:15563 Coq.MSets.MSetRBT MakeRaw lt_tree def
R15567:15567 Coq.MSets.MSetRBT <> l var
R15565:15565 Coq.MSets.MSetRBT <> x var
R15570:15576 Coq.MSets.MSetRBT MakeRaw gt_tree def
R15580:15580 Coq.MSets.MSetRBT <> r var
R15578:15578 Coq.MSets.MSetRBT <> x var
R15586:15587 Coq.MSets.MSetRBT MakeRaw Ok class
R15590:15593 Coq.MSets.MSetRBT MakeRaw lbal def
R15599:15599 Coq.MSets.MSetRBT <> r var
R15597:15597 Coq.MSets.MSetRBT <> x var
R15595:15595 Coq.MSets.MSetRBT <> l var
R15621:15630 Coq.MSets.MSetRBT MakeRaw lbal_match thm
R15621:15630 Coq.MSets.MSetRBT MakeRaw lbal_match thm
prf 15656:15664 MakeRaw rbal_spec
R15697:15701 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15679:15681 Coq.MSets.MSetRBT MakeRaw InT ind
R15686:15689 Coq.MSets.MSetRBT MakeRaw rbal def
R15695:15695 Coq.MSets.MSetRBT <> r var
R15693:15693 Coq.MSets.MSetRBT <> x var
R15691:15691 Coq.MSets.MSetRBT <> l var
R15683:15683 Coq.MSets.MSetRBT <> y var
R15710:15713 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15702:15705 Coq.MSets.MSetRBT X eq defax
R15709:15709 Coq.MSets.MSetRBT <> x var
R15707:15707 Coq.MSets.MSetRBT <> y var
R15721:15724 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15714:15716 Coq.MSets.MSetRBT MakeRaw InT ind
R15720:15720 Coq.MSets.MSetRBT <> l var
R15718:15718 Coq.MSets.MSetRBT <> y var
R15725:15727 Coq.MSets.MSetRBT MakeRaw InT ind
R15731:15731 Coq.MSets.MSetRBT <> r var
R15729:15729 Coq.MSets.MSetRBT <> y var
R15747:15756 Coq.MSets.MSetRBT MakeRaw rbal_match thm
R15747:15756 Coq.MSets.MSetRBT MakeRaw rbal_match thm
inst 15788:15794 MakeRaw rbal_ok
R15804:15805 Coq.MSets.MSetRBT MakeRaw Ok class
R15807:15807 Coq.MSets.MSetRBT <> l var
R15810:15811 Coq.MSets.MSetRBT MakeRaw Ok class
R15813:15813 Coq.MSets.MSetRBT <> r var
R15816:15822 Coq.MSets.MSetRBT MakeRaw lt_tree def
R15826:15826 Coq.MSets.MSetRBT <> l var
R15824:15824 Coq.MSets.MSetRBT <> x var
R15829:15835 Coq.MSets.MSetRBT MakeRaw gt_tree def
R15839:15839 Coq.MSets.MSetRBT <> r var
R15837:15837 Coq.MSets.MSetRBT <> x var
R15845:15846 Coq.MSets.MSetRBT MakeRaw Ok class
R15849:15852 Coq.MSets.MSetRBT MakeRaw rbal def
R15858:15858 Coq.MSets.MSetRBT <> r var
R15856:15856 Coq.MSets.MSetRBT <> x var
R15854:15854 Coq.MSets.MSetRBT <> l var
R15880:15889 Coq.MSets.MSetRBT MakeRaw rbal_match thm
R15880:15889 Coq.MSets.MSetRBT MakeRaw rbal_match thm
prf 15915:15924 MakeRaw rbal'_spec
R15958:15962 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15939:15941 Coq.MSets.MSetRBT MakeRaw InT ind
R15946:15950 Coq.MSets.MSetRBT MakeRaw rbal' def
R15956:15956 Coq.MSets.MSetRBT <> r var
R15954:15954 Coq.MSets.MSetRBT <> x var
R15952:15952 Coq.MSets.MSetRBT <> l var
R15943:15943 Coq.MSets.MSetRBT <> y var
R15971:15974 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15963:15966 Coq.MSets.MSetRBT X eq defax
R15970:15970 Coq.MSets.MSetRBT <> x var
R15968:15968 Coq.MSets.MSetRBT <> y var
R15982:15985 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15975:15977 Coq.MSets.MSetRBT MakeRaw InT ind
R15981:15981 Coq.MSets.MSetRBT <> l var
R15979:15979 Coq.MSets.MSetRBT <> y var
R15986:15988 Coq.MSets.MSetRBT MakeRaw InT ind
R15992:15992 Coq.MSets.MSetRBT <> r var
R15990:15990 Coq.MSets.MSetRBT <> y var
R16008:16018 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
R16008:16018 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
inst 16050:16057 MakeRaw rbal'_ok
R16067:16068 Coq.MSets.MSetRBT MakeRaw Ok class
R16070:16070 Coq.MSets.MSetRBT <> l var
R16073:16074 Coq.MSets.MSetRBT MakeRaw Ok class
R16076:16076 Coq.MSets.MSetRBT <> r var
R16079:16085 Coq.MSets.MSetRBT MakeRaw lt_tree def
R16089:16089 Coq.MSets.MSetRBT <> l var
R16087:16087 Coq.MSets.MSetRBT <> x var
R16092:16098 Coq.MSets.MSetRBT MakeRaw gt_tree def
R16102:16102 Coq.MSets.MSetRBT <> r var
R16100:16100 Coq.MSets.MSetRBT <> x var
R16108:16109 Coq.MSets.MSetRBT MakeRaw Ok class
R16112:16116 Coq.MSets.MSetRBT MakeRaw rbal' def
R16122:16122 Coq.MSets.MSetRBT <> r var
R16120:16120 Coq.MSets.MSetRBT <> x var
R16118:16118 Coq.MSets.MSetRBT <> l var
R16144:16154 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
R16144:16154 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
R16187:16197 Coq.MSets.MSetRBT MakeRaw In_node_iff thm
R16199:16209 Coq.MSets.MSetRBT MakeRaw In_leaf_iff thm
R16212:16223 Coq.MSets.MSetRBT MakeRaw makeRed_spec thm
R16225:16238 Coq.MSets.MSetRBT MakeRaw makeBlack_spec thm
R16240:16248 Coq.MSets.MSetRBT MakeRaw lbal_spec thm
R16250:16258 Coq.MSets.MSetRBT MakeRaw rbal_spec thm
R16260:16269 Coq.MSets.MSetRBT MakeRaw rbal'_spec thm
prf 16497:16504 MakeRaw ins_spec
R16538:16542 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16523:16525 Coq.MSets.MSetRBT MakeRaw InT ind
R16530:16532 Coq.MSets.MSetRBT MakeRaw ins def
R16536:16536 Coq.MSets.MSetRBT <> s var
R16534:16534 Coq.MSets.MSetRBT <> x var
R16527:16527 Coq.MSets.MSetRBT <> y var
R16551:16554 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16543:16546 Coq.MSets.MSetRBT X eq defax
R16550:16550 Coq.MSets.MSetRBT <> x var
R16548:16548 Coq.MSets.MSetRBT <> y var
R16555:16557 Coq.MSets.MSetRBT MakeRaw InT ind
R16561:16561 Coq.MSets.MSetRBT <> s var
R16559:16559 Coq.MSets.MSetRBT <> y var
R16766:16773 Coq.MSets.MSetRBT MakeRaw ins_spec thm
inst 16791:16796 MakeRaw ins_ok
R16804:16805 Coq.MSets.MSetRBT MakeRaw Ok class
R16807:16807 Coq.MSets.MSetRBT <> s var
R16812:16813 Coq.MSets.MSetRBT MakeRaw Ok class
R16816:16818 Coq.MSets.MSetRBT MakeRaw ins def
R16822:16822 Coq.MSets.MSetRBT <> s var
R16820:16820 Coq.MSets.MSetRBT <> x var
R16887:16893 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
R16870:16876 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R16870:16876 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R16887:16893 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
R16870:16876 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R16870:16876 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R16887:16893 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
R16870:16876 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R16887:16893 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
prf 16959:16967 MakeRaw add_spec'
R16993:16997 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16978:16980 Coq.MSets.MSetRBT MakeRaw InT ind
R16985:16987 Coq.MSets.MSetRBT MakeRaw add def
R16991:16991 Coq.MSets.MSetRBT <> s var
R16989:16989 Coq.MSets.MSetRBT <> x var
R16982:16982 Coq.MSets.MSetRBT <> y var
R17006:17009 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16998:17001 Coq.MSets.MSetRBT X eq defax
R17005:17005 Coq.MSets.MSetRBT <> x var
R17003:17003 Coq.MSets.MSetRBT <> y var
R17010:17012 Coq.MSets.MSetRBT MakeRaw InT ind
R17016:17016 Coq.MSets.MSetRBT <> s var
R17014:17014 Coq.MSets.MSetRBT <> y var
R17034:17036 Coq.MSets.MSetRBT MakeRaw add def
R17071:17079 Coq.MSets.MSetRBT MakeRaw add_spec' thm
prf 17094:17101 MakeRaw add_spec
R17111:17112 Coq.MSets.MSetRBT MakeRaw Ok class
R17114:17114 Coq.MSets.MSetRBT <> s var
R17135:17139 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17120:17122 Coq.MSets.MSetRBT MakeRaw InT ind
R17127:17129 Coq.MSets.MSetRBT MakeRaw add def
R17133:17133 Coq.MSets.MSetRBT <> s var
R17131:17131 Coq.MSets.MSetRBT <> x var
R17124:17124 Coq.MSets.MSetRBT <> y var
R17148:17151 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17140:17143 Coq.MSets.MSetRBT X eq defax
R17147:17147 Coq.MSets.MSetRBT <> x var
R17145:17145 Coq.MSets.MSetRBT <> y var
R17152:17154 Coq.MSets.MSetRBT MakeRaw InT ind
R17158:17158 Coq.MSets.MSetRBT <> s var
R17156:17156 Coq.MSets.MSetRBT <> y var
R17175:17183 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R17175:17183 Coq.MSets.MSetRBT MakeRaw add_spec' thm
inst 17201:17206 MakeRaw add_ok
R17214:17215 Coq.MSets.MSetRBT MakeRaw Ok class
R17217:17217 Coq.MSets.MSetRBT <> s var
R17222:17223 Coq.MSets.MSetRBT MakeRaw Ok class
R17226:17228 Coq.MSets.MSetRBT MakeRaw add def
R17232:17232 Coq.MSets.MSetRBT <> s var
R17230:17230 Coq.MSets.MSetRBT <> x var
R17251:17253 Coq.MSets.MSetRBT MakeRaw add def
prf 17311:17320 MakeRaw lbalS_spec
R17353:17357 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17334:17336 Coq.MSets.MSetRBT MakeRaw InT ind
R17341:17345 Coq.MSets.MSetRBT MakeRaw lbalS def
R17351:17351 Coq.MSets.MSetRBT <> r var
R17349:17349 Coq.MSets.MSetRBT <> x var
R17347:17347 Coq.MSets.MSetRBT <> l var
R17338:17338 Coq.MSets.MSetRBT <> y var
R17366:17369 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17358:17361 Coq.MSets.MSetRBT X eq defax
R17365:17365 Coq.MSets.MSetRBT <> x var
R17363:17363 Coq.MSets.MSetRBT <> y var
R17377:17380 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17370:17372 Coq.MSets.MSetRBT MakeRaw InT ind
R17376:17376 Coq.MSets.MSetRBT <> l var
R17374:17374 Coq.MSets.MSetRBT <> y var
R17381:17383 Coq.MSets.MSetRBT MakeRaw InT ind
R17387:17387 Coq.MSets.MSetRBT <> r var
R17385:17385 Coq.MSets.MSetRBT <> y var
R17403:17413 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
R17403:17413 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
inst 17619:17626 MakeRaw lbalS_ok
R17646:17647 Coq.MSets.MSetRBT MakeRaw Ok class
R17649:17649 Coq.MSets.MSetRBT <> l var
R17652:17653 Coq.MSets.MSetRBT MakeRaw Ok class
R17655:17655 Coq.MSets.MSetRBT <> r var
R17658:17664 Coq.MSets.MSetRBT MakeRaw lt_tree def
R17668:17668 Coq.MSets.MSetRBT <> l var
R17666:17666 Coq.MSets.MSetRBT <> x var
R17671:17677 Coq.MSets.MSetRBT MakeRaw gt_tree def
R17681:17681 Coq.MSets.MSetRBT <> r var
R17679:17679 Coq.MSets.MSetRBT <> x var
R17685:17686 Coq.MSets.MSetRBT MakeRaw Ok class
R17689:17693 Coq.MSets.MSetRBT MakeRaw lbalS def
R17699:17699 Coq.MSets.MSetRBT <> r var
R17697:17697 Coq.MSets.MSetRBT <> x var
R17695:17695 Coq.MSets.MSetRBT <> l var
R17716:17726 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
R17716:17726 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
R17852:17859 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
R17852:17859 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
R18006:18013 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
R18006:18013 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
prf 18032:18041 MakeRaw rbalS_spec
R18074:18078 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18055:18057 Coq.MSets.MSetRBT MakeRaw InT ind
R18062:18066 Coq.MSets.MSetRBT MakeRaw rbalS def
R18072:18072 Coq.MSets.MSetRBT <> r var
R18070:18070 Coq.MSets.MSetRBT <> x var
R18068:18068 Coq.MSets.MSetRBT <> l var
R18059:18059 Coq.MSets.MSetRBT <> y var
R18087:18090 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18079:18082 Coq.MSets.MSetRBT X eq defax
R18086:18086 Coq.MSets.MSetRBT <> x var
R18084:18084 Coq.MSets.MSetRBT <> y var
R18098:18101 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18091:18093 Coq.MSets.MSetRBT MakeRaw InT ind
R18097:18097 Coq.MSets.MSetRBT <> l var
R18095:18095 Coq.MSets.MSetRBT <> y var
R18102:18104 Coq.MSets.MSetRBT MakeRaw InT ind
R18108:18108 Coq.MSets.MSetRBT <> r var
R18106:18106 Coq.MSets.MSetRBT <> y var
R18124:18134 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
R18124:18134 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
inst 18354:18361 MakeRaw rbalS_ok
R18381:18382 Coq.MSets.MSetRBT MakeRaw Ok class
R18384:18384 Coq.MSets.MSetRBT <> l var
R18387:18388 Coq.MSets.MSetRBT MakeRaw Ok class
R18390:18390 Coq.MSets.MSetRBT <> r var
R18393:18399 Coq.MSets.MSetRBT MakeRaw lt_tree def
R18403:18403 Coq.MSets.MSetRBT <> l var
R18401:18401 Coq.MSets.MSetRBT <> x var
R18406:18412 Coq.MSets.MSetRBT MakeRaw gt_tree def
R18416:18416 Coq.MSets.MSetRBT <> r var
R18414:18414 Coq.MSets.MSetRBT <> x var
R18420:18421 Coq.MSets.MSetRBT MakeRaw Ok class
R18424:18428 Coq.MSets.MSetRBT MakeRaw rbalS def
R18434:18434 Coq.MSets.MSetRBT <> r var
R18432:18432 Coq.MSets.MSetRBT <> x var
R18430:18430 Coq.MSets.MSetRBT <> l var
R18451:18461 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
R18451:18461 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
R18587:18593 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18587:18593 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18731:18737 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18731:18737 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18763:18772 Coq.MSets.MSetRBT MakeRaw lbalS_spec thm
R18774:18783 Coq.MSets.MSetRBT MakeRaw rbalS_spec thm
R19044:19049 Coq.MSets.MSetRBT MakeRaw notred def
R19052:19053 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19101:19102 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19212:19213 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19216:19221 Coq.MSets.MSetRBT MakeRaw append def
R19224:19225 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19194:19199 Coq.MSets.MSetRBT MakeRaw append def
R19266:19271 Coq.MSets.MSetRBT MakeRaw notred def
R19274:19275 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19323:19324 Coq.MSets.MSetRBT MakeRaw Bk syndef
prf 19424:19438 MakeRaw append_rr_match
R19461:19465 Coq.MSets.MSetRBT MakeRaw rspec ind
R19570:19575 Coq.MSets.MSetRBT MakeRaw append def
R19592:19593 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19601:19602 Coq.MSets.MSetRBT <> rr var
R19598:19599 Coq.MSets.MSetRBT <> rx var
R19595:19596 Coq.MSets.MSetRBT <> rl var
R19578:19579 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19587:19588 Coq.MSets.MSetRBT <> lr var
R19584:19585 Coq.MSets.MSetRBT <> lx var
R19581:19582 Coq.MSets.MSetRBT <> ll var
R19553:19558 Coq.MSets.MSetRBT MakeRaw append def
R19563:19564 Coq.MSets.MSetRBT <> rl var
R19560:19561 Coq.MSets.MSetRBT <> lr var
R19527:19528 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19537:19538 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19545:19546 Coq.MSets.MSetRBT <> rr var
R19542:19543 Coq.MSets.MSetRBT <> rx var
R19540:19540 Coq.MSets.MSetRBT <> t var
R19533:19534 Coq.MSets.MSetRBT <> lx var
R19530:19531 Coq.MSets.MSetRBT <> ll var
R19483:19484 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19502:19503 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19510:19511 Coq.MSets.MSetRBT <> rr var
R19507:19508 Coq.MSets.MSetRBT <> rx var
R19505:19505 Coq.MSets.MSetRBT <> b var
R19499:19499 Coq.MSets.MSetRBT <> x var
R19487:19488 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19496:19496 Coq.MSets.MSetRBT <> a var
R19493:19494 Coq.MSets.MSetRBT <> lx var
R19490:19491 Coq.MSets.MSetRBT <> ll var
R19622:19627 Coq.MSets.MSetRBT MakeRaw rmatch thm
R19622:19627 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 19648:19662 MakeRaw append_bb_match
R19685:19689 Coq.MSets.MSetRBT MakeRaw rspec ind
R19797:19802 Coq.MSets.MSetRBT MakeRaw append def
R19819:19820 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19828:19829 Coq.MSets.MSetRBT <> rr var
R19825:19826 Coq.MSets.MSetRBT <> rx var
R19822:19823 Coq.MSets.MSetRBT <> rl var
R19805:19806 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19814:19815 Coq.MSets.MSetRBT <> lr var
R19811:19812 Coq.MSets.MSetRBT <> lx var
R19808:19809 Coq.MSets.MSetRBT <> ll var
R19780:19785 Coq.MSets.MSetRBT MakeRaw append def
R19790:19791 Coq.MSets.MSetRBT <> rl var
R19787:19788 Coq.MSets.MSetRBT <> lr var
R19751:19755 Coq.MSets.MSetRBT MakeRaw lbalS def
R19764:19765 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19772:19773 Coq.MSets.MSetRBT <> rr var
R19769:19770 Coq.MSets.MSetRBT <> rx var
R19767:19767 Coq.MSets.MSetRBT <> t var
R19760:19761 Coq.MSets.MSetRBT <> lx var
R19757:19758 Coq.MSets.MSetRBT <> ll var
R19707:19708 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19726:19727 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19734:19735 Coq.MSets.MSetRBT <> rr var
R19731:19732 Coq.MSets.MSetRBT <> rx var
R19729:19729 Coq.MSets.MSetRBT <> b var
R19723:19723 Coq.MSets.MSetRBT <> x var
R19711:19712 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19720:19720 Coq.MSets.MSetRBT <> a var
R19717:19718 Coq.MSets.MSetRBT <> lx var
R19714:19715 Coq.MSets.MSetRBT <> ll var
R19849:19854 Coq.MSets.MSetRBT MakeRaw rmatch thm
R19849:19854 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 19876:19886 MakeRaw append_spec
R19915:19919 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19897:19899 Coq.MSets.MSetRBT MakeRaw InT ind
R19904:19909 Coq.MSets.MSetRBT MakeRaw append def
R19913:19913 Coq.MSets.MSetRBT <> r var
R19911:19911 Coq.MSets.MSetRBT <> l var
R19901:19901 Coq.MSets.MSetRBT <> x var
R19927:19930 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19920:19922 Coq.MSets.MSetRBT MakeRaw InT ind
R19926:19926 Coq.MSets.MSetRBT <> l var
R19924:19924 Coq.MSets.MSetRBT <> x var
R19931:19933 Coq.MSets.MSetRBT MakeRaw InT ind
R19937:19937 Coq.MSets.MSetRBT <> r var
R19935:19935 Coq.MSets.MSetRBT <> x var
R20035:20049 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R20035:20049 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R20146:20160 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R20146:20160 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R20232:20242 Coq.MSets.MSetRBT MakeRaw append_spec thm
prf 20257:20265 MakeRaw append_ok
R20284:20285 Coq.MSets.MSetRBT MakeRaw Ok class
R20287:20287 Coq.MSets.MSetRBT <> l var
R20290:20291 Coq.MSets.MSetRBT MakeRaw Ok class
R20293:20293 Coq.MSets.MSetRBT <> r var
R20309:20312 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20324:20327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20328:20329 Coq.MSets.MSetRBT MakeRaw Ok class
R20332:20337 Coq.MSets.MSetRBT MakeRaw append def
R20341:20341 Coq.MSets.MSetRBT <> r var
R20339:20339 Coq.MSets.MSetRBT <> l var
R20313:20319 Coq.MSets.MSetRBT MakeRaw gt_tree def
R20323:20323 Coq.MSets.MSetRBT <> r var
R20321:20321 Coq.MSets.MSetRBT <> x var
R20298:20304 Coq.MSets.MSetRBT MakeRaw lt_tree def
R20308:20308 Coq.MSets.MSetRBT <> l var
R20306:20306 Coq.MSets.MSetRBT <> x var
R20480:20481 Coq.MSets.MSetRBT MakeRaw Ok class
R20484:20489 Coq.MSets.MSetRBT MakeRaw append def
R20480:20481 Coq.MSets.MSetRBT MakeRaw Ok class
R20484:20489 Coq.MSets.MSetRBT MakeRaw append def
R20546:20549 Coq.MSets.MSetRBT X lt defax
R20546:20549 Coq.MSets.MSetRBT X lt defax
R20601:20607 Coq.MSets.MSetRBT MakeRaw gt_tree def
R20613:20618 Coq.MSets.MSetRBT MakeRaw append def
R20601:20607 Coq.MSets.MSetRBT MakeRaw gt_tree def
R20613:20618 Coq.MSets.MSetRBT MakeRaw append def
R20709:20715 Coq.MSets.MSetRBT MakeRaw lt_tree def
R20721:20726 Coq.MSets.MSetRBT MakeRaw append def
R20709:20715 Coq.MSets.MSetRBT MakeRaw lt_tree def
R20721:20726 Coq.MSets.MSetRBT MakeRaw append def
R20825:20839 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R20825:20839 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R21063:21064 Coq.MSets.MSetRBT MakeRaw Ok class
R21067:21072 Coq.MSets.MSetRBT MakeRaw append def
R21063:21064 Coq.MSets.MSetRBT MakeRaw Ok class
R21067:21072 Coq.MSets.MSetRBT MakeRaw append def
R21129:21132 Coq.MSets.MSetRBT X lt defax
R21129:21132 Coq.MSets.MSetRBT X lt defax
R21184:21190 Coq.MSets.MSetRBT MakeRaw gt_tree def
R21196:21201 Coq.MSets.MSetRBT MakeRaw append def
R21184:21190 Coq.MSets.MSetRBT MakeRaw gt_tree def
R21196:21201 Coq.MSets.MSetRBT MakeRaw append def
R21292:21298 Coq.MSets.MSetRBT MakeRaw lt_tree def
R21304:21309 Coq.MSets.MSetRBT MakeRaw append def
R21292:21298 Coq.MSets.MSetRBT MakeRaw lt_tree def
R21304:21309 Coq.MSets.MSetRBT MakeRaw append def
R21408:21422 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R21408:21422 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R21447:21454 Coq.MSets.MSetRBT MakeRaw lbalS_ok inst
R21447:21454 Coq.MSets.MSetRBT MakeRaw lbalS_ok inst
prf 21493:21500 MakeRaw del_spec
R21519:21520 Coq.MSets.MSetRBT MakeRaw Ok class
R21522:21522 Coq.MSets.MSetRBT <> s var
R21542:21546 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21527:21529 Coq.MSets.MSetRBT MakeRaw InT ind
R21534:21536 Coq.MSets.MSetRBT MakeRaw del def
R21540:21540 Coq.MSets.MSetRBT <> s var
R21538:21538 Coq.MSets.MSetRBT <> x var
R21531:21531 Coq.MSets.MSetRBT <> y var
R21554:21557 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21547:21549 Coq.MSets.MSetRBT MakeRaw InT ind
R21553:21553 Coq.MSets.MSetRBT <> s var
R21551:21551 Coq.MSets.MSetRBT <> y var
R21558:21558 Coq.Init.Logic <> :type_scope:'~'_x not
R21559:21562 Coq.MSets.MSetRBT X eq defax
R21566:21566 Coq.MSets.MSetRBT <> x var
R21564:21564 Coq.MSets.MSetRBT <> y var
R21639:21642 Coq.MSets.MSetRBT X lt defax
R21639:21642 Coq.MSets.MSetRBT X lt defax
R21677:21680 Coq.MSets.MSetRBT X lt defax
R21677:21680 Coq.MSets.MSetRBT X lt defax
R21913:21920 Coq.MSets.MSetRBT MakeRaw del_spec thm
inst 21938:21943 MakeRaw del_ok
R21951:21952 Coq.MSets.MSetRBT MakeRaw Ok class
R21954:21954 Coq.MSets.MSetRBT <> s var
R21959:21960 Coq.MSets.MSetRBT MakeRaw Ok class
R21963:21965 Coq.MSets.MSetRBT MakeRaw del def
R21969:21969 Coq.MSets.MSetRBT <> s var
R21967:21967 Coq.MSets.MSetRBT <> x var
R22012:22020 Coq.MSets.MSetRBT MakeRaw append_ok thm
R22012:22020 Coq.MSets.MSetRBT MakeRaw append_ok thm
R22040:22046 Coq.MSets.MSetRBT MakeRaw lt_tree def
R22052:22054 Coq.MSets.MSetRBT MakeRaw del def
R22040:22046 Coq.MSets.MSetRBT MakeRaw lt_tree def
R22052:22054 Coq.MSets.MSetRBT MakeRaw del def
R22167:22173 Coq.MSets.MSetRBT MakeRaw gt_tree def
R22179:22181 Coq.MSets.MSetRBT MakeRaw del def
R22167:22173 Coq.MSets.MSetRBT MakeRaw gt_tree def
R22179:22181 Coq.MSets.MSetRBT MakeRaw del def
prf 22296:22306 MakeRaw remove_spec
R22316:22317 Coq.MSets.MSetRBT MakeRaw Ok class
R22319:22319 Coq.MSets.MSetRBT <> s var
R22343:22347 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R22325:22327 Coq.MSets.MSetRBT MakeRaw InT ind
R22332:22337 Coq.MSets.MSetRBT MakeRaw remove def
R22341:22341 Coq.MSets.MSetRBT <> s var
R22339:22339 Coq.MSets.MSetRBT <> x var
R22329:22329 Coq.MSets.MSetRBT <> y var
R22355:22358 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22348:22350 Coq.MSets.MSetRBT MakeRaw InT ind
R22354:22354 Coq.MSets.MSetRBT <> s var
R22352:22352 Coq.MSets.MSetRBT <> y var
R22359:22359 Coq.Init.Logic <> :type_scope:'~'_x not
R22360:22363 Coq.MSets.MSetRBT X eq defax
R22367:22367 Coq.MSets.MSetRBT <> x var
R22365:22365 Coq.MSets.MSetRBT <> y var
R22384:22389 Coq.MSets.MSetRBT MakeRaw remove def
R22424:22434 Coq.MSets.MSetRBT MakeRaw remove_spec thm
inst 22452:22460 MakeRaw remove_ok
R22468:22469 Coq.MSets.MSetRBT MakeRaw Ok class
R22471:22471 Coq.MSets.MSetRBT <> s var
R22476:22477 Coq.MSets.MSetRBT MakeRaw Ok class
R22480:22485 Coq.MSets.MSetRBT MakeRaw remove def
R22489:22489 Coq.MSets.MSetRBT <> s var
R22487:22487 Coq.MSets.MSetRBT <> x var
R22507:22512 Coq.MSets.MSetRBT MakeRaw remove def
prf 22576:22586 MakeRaw delmin_spec
R22607:22608 Coq.MSets.MSetRBT MakeRaw Ok class
R22611:22614 Coq.MSets.MSetRBT MakeRaw Node constr
R22622:22622 Coq.MSets.MSetRBT <> r var
R22620:22620 Coq.MSets.MSetRBT <> y var
R22618:22618 Coq.MSets.MSetRBT <> l var
R22616:22616 Coq.MSets.MSetRBT <> c var
R22650:22655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22687:22690 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22678:22680 Coq.Init.Logic <> :type_scope:x_'='_x not
R22656:22662 Coq.MSets.MSetRBT MakeRaw min_elt def
R22665:22668 Coq.MSets.MSetRBT MakeRaw Node constr
R22676:22676 Coq.MSets.MSetRBT <> r var
R22674:22674 Coq.MSets.MSetRBT <> y var
R22672:22672 Coq.MSets.MSetRBT <> l var
R22670:22670 Coq.MSets.MSetRBT <> c var
R22681:22684 Coq.Init.Datatypes <> Some constr
R22686:22686 Coq.MSets.MSetRBT <> x var
R22711:22713 Coq.Init.Logic <> :type_scope:x_'='_x not
R22691:22693 Coq.MSets.MSetRBT MakeRaw del def
R22698:22701 Coq.MSets.MSetRBT MakeRaw Node constr
R22709:22709 Coq.MSets.MSetRBT <> r var
R22707:22707 Coq.MSets.MSetRBT <> y var
R22705:22705 Coq.MSets.MSetRBT <> l var
R22703:22703 Coq.MSets.MSetRBT <> c var
R22695:22695 Coq.MSets.MSetRBT <> x var
R22714:22715 Coq.MSets.MSetRBT <> s' var
R22641:22643 Coq.Init.Logic <> :type_scope:x_'='_x not
R22629:22634 Coq.MSets.MSetRBT MakeRaw delmin def
R22640:22640 Coq.MSets.MSetRBT <> r var
R22638:22638 Coq.MSets.MSetRBT <> y var
R22636:22636 Coq.MSets.MSetRBT <> l var
R22644:22644 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22646:22646 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22649:22649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22645:22645 Coq.MSets.MSetRBT <> x var
R22647:22648 Coq.MSets.MSetRBT <> s' var
R22858:22872 Coq.MSets.MSetRBT MakeRaw compare_refl thm
R22858:22872 Coq.MSets.MSetRBT MakeRaw compare_refl thm
R22858:22872 Coq.MSets.MSetRBT MakeRaw compare_refl thm
R22951:22956 Coq.MSets.MSetRBT MakeRaw delmin def
R23035:23038 Coq.MSets.MSetRBT MakeRaw Node constr
R23035:23038 Coq.MSets.MSetRBT MakeRaw Node constr
R23204:23207 Coq.MSets.MSetRBT X lt defax
R23204:23207 Coq.MSets.MSetRBT X lt defax
R23256:23258 Coq.MSets.MSetRBT MakeRaw InT ind
R23278:23290 Coq.MSets.MSetRBT MakeRaw min_elt_spec1 thm
R23256:23258 Coq.MSets.MSetRBT MakeRaw InT ind
R23278:23290 Coq.MSets.MSetRBT MakeRaw min_elt_spec1 thm
R23318:23331 Coq.MSets.MSetRBT X compare_spec prfax
R23318:23331 Coq.MSets.MSetRBT X compare_spec prfax
prf 23406:23421 MakeRaw remove_min_spec1
R23432:23433 Coq.MSets.MSetRBT MakeRaw Ok class
R23435:23435 Coq.MSets.MSetRBT <> s var
R23466:23471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23490:23493 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23481:23483 Coq.Init.Logic <> :type_scope:x_'='_x not
R23472:23478 Coq.MSets.MSetRBT MakeRaw min_elt def
R23480:23480 Coq.MSets.MSetRBT <> s var
R23484:23487 Coq.Init.Datatypes <> Some constr
R23489:23489 Coq.MSets.MSetRBT <> x var
R23504:23506 Coq.Init.Logic <> :type_scope:x_'='_x not
R23494:23499 Coq.MSets.MSetRBT MakeRaw remove def
R23503:23503 Coq.MSets.MSetRBT <> s var
R23501:23501 Coq.MSets.MSetRBT <> x var
R23507:23508 Coq.MSets.MSetRBT <> s' var
R23452:23454 Coq.Init.Logic <> :type_scope:x_'='_x not
R23440:23449 Coq.MSets.MSetRBT MakeRaw remove_min def
R23451:23451 Coq.MSets.MSetRBT <> s var
R23455:23458 Coq.Init.Datatypes <> Some constr
R23460:23460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23462:23462 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23465:23465 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23461:23461 Coq.MSets.MSetRBT <> x var
R23463:23464 Coq.MSets.MSetRBT <> s' var
R23526:23535 Coq.MSets.MSetRBT MakeRaw remove_min def
R23588:23598 Coq.MSets.MSetRBT MakeRaw delmin_spec thm
R23588:23598 Coq.MSets.MSetRBT MakeRaw delmin_spec thm
R23620:23625 Coq.MSets.MSetRBT MakeRaw delmin def
R23694:23699 Coq.MSets.MSetRBT MakeRaw remove def
R23705:23708 Coq.MSets.MSetRBT MakeRaw Node constr
R23694:23699 Coq.MSets.MSetRBT MakeRaw remove def
R23705:23708 Coq.MSets.MSetRBT MakeRaw Node constr
prf 23759:23774 MakeRaw remove_min_spec2
R23799:23802 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23803:23807 Coq.MSets.MSetRBT MakeRaw Empty def
R23809:23809 Coq.MSets.MSetRBT <> s var
R23792:23794 Coq.Init.Logic <> :type_scope:x_'='_x not
R23780:23789 Coq.MSets.MSetRBT MakeRaw remove_min def
R23791:23791 Coq.MSets.MSetRBT <> s var
R23795:23798 Coq.Init.Datatypes <> None constr
R23827:23836 Coq.MSets.MSetRBT MakeRaw remove_min def
R23891:23896 Coq.MSets.MSetRBT MakeRaw delmin def
prf 23911:23923 MakeRaw remove_min_ok
R23928:23928 Coq.MSets.MSetRBT MakeRaw t def
R23933:23934 Coq.MSets.MSetRBT MakeRaw Ok class
R23936:23936 Coq.MSets.MSetRBT <> s var
R23947:23956 Coq.MSets.MSetRBT MakeRaw remove_min def
R23958:23958 Coq.MSets.MSetRBT <> s var
R23968:23971 Coq.Init.Datatypes <> Some constr
R23973:23973 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23975:23975 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23978:23978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23983:23984 Coq.MSets.MSetRBT MakeRaw Ok class
R23992:23995 Coq.Init.Datatypes <> None constr
R24000:24003 Coq.Init.Logic <> True ind
R24031:24046 Coq.MSets.MSetRBT MakeRaw remove_min_spec1 thm
R24031:24046 Coq.MSets.MSetRBT MakeRaw remove_min_spec1 thm
R24062:24071 Coq.MSets.MSetRBT MakeRaw remove_min def
syndef 24184:24189 MakeRaw ifpred
R24209:24212 Coq.Init.Peano <> pred syndef
def 24241:24257 MakeRaw treeify_invariant
R24267:24275 Coq.MSets.MSetRBT MakeRaw treeify_t syndef
R24313:24317 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24334:24334 Coq.MSets.MSetRBT <> f var
R24336:24338 Coq.MSets.MSetRBT <> acc var
R24361:24364 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24354:24356 Coq.Init.Logic <> :type_scope:x_'='_x not
R24344:24351 Coq.MSets.MSetRBT MakeRaw cardinal def
R24353:24353 Coq.MSets.MSetRBT <> t var
R24357:24360 Coq.MSets.MSetRBT <> size var
R24368:24370 Coq.Init.Logic <> :type_scope:x_'='_x not
R24365:24367 Coq.MSets.MSetRBT <> acc var
R24381:24384 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24371:24378 Coq.MSets.MSetRBT MakeRaw elements def
R24380:24380 Coq.MSets.MSetRBT <> t var
R24385:24388 Coq.MSets.MSetRBT <> acc' var
R24299:24302 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R24295:24298 Coq.MSets.MSetRBT <> size var
R24303:24308 Coq.Init.Datatypes <> length def
R24310:24312 Coq.MSets.MSetRBT <> acc var
prf 24398:24414 MakeRaw treeify_zero_spec
R24418:24434 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24438:24449 Coq.MSets.MSetRBT MakeRaw treeify_zero def
prf 24492:24507 MakeRaw treeify_one_spec
R24511:24527 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24531:24541 Coq.MSets.MSetRBT MakeRaw treeify_one def
prf 24607:24623 MakeRaw treeify_cont_spec
R24674:24678 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24704:24708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24733:24737 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24738:24754 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24762:24773 Coq.MSets.MSetRBT MakeRaw treeify_cont def
R24777:24777 Coq.MSets.MSetRBT <> g var
R24775:24775 Coq.MSets.MSetRBT <> f var
R24756:24759 Coq.MSets.MSetRBT <> size var
R24713:24715 Coq.Init.Logic <> :type_scope:x_'='_x not
R24709:24712 Coq.MSets.MSetRBT <> size var
R24716:24716 Coq.Init.Datatypes <> S constr
R24724:24726 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24719:24723 Coq.MSets.MSetRBT <> size1 var
R24727:24731 Coq.MSets.MSetRBT <> size2 var
R24679:24695 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24703:24703 Coq.MSets.MSetRBT <> g var
R24697:24701 Coq.MSets.MSetRBT <> size2 var
R24649:24665 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24673:24673 Coq.MSets.MSetRBT <> f var
R24667:24671 Coq.MSets.MSetRBT <> size1 var
R24820:24831 Coq.MSets.MSetRBT MakeRaw treeify_cont def
R25032:25041 Coq.Arith.PeanoNat Nat lt_nge thm
R25032:25041 Coq.Arith.PeanoNat Nat lt_nge thm
R25063:25071 Coq.Lists.List <> app_nil_r thm
R25077:25093 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25063:25071 Coq.Lists.List <> app_nil_r thm
R25063:25071 Coq.Lists.List <> app_nil_r thm
R25077:25093 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25077:25093 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25232:25241 Coq.Lists.List <> app_length thm
R25247:25263 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25232:25241 Coq.Lists.List <> app_length thm
R25232:25241 Coq.Lists.List <> app_length thm
R25247:25263 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25247:25263 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25285:25298 Coq.Arith.PeanoNat Nat add_succ_r thm
R25304:25319 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25285:25298 Coq.Arith.PeanoNat Nat add_succ_r thm
R25285:25298 Coq.Arith.PeanoNat Nat add_succ_r thm
R25304:25319 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25304:25319 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25332:25348 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R25332:25348 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R25362:25374 Coq.MSets.MSetRBT MakeRaw elements_node thm
R25377:25383 Coq.Lists.List <> app_ass syndef
R25362:25374 Coq.MSets.MSetRBT MakeRaw elements_node thm
R25362:25374 Coq.MSets.MSetRBT MakeRaw elements_node thm
R25377:25383 Coq.Lists.List <> app_ass syndef
R25377:25383 Coq.Lists.List <> app_ass syndef
prf 25409:25424 MakeRaw treeify_aux_spec
R25431:25434 Coq.Init.Datatypes <> bool ind
R25440:25456 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R25485:25495 Coq.MSets.MSetRBT MakeRaw treeify_aux def
R25499:25499 Coq.MSets.MSetRBT <> n var
R25497:25497 Coq.MSets.MSetRBT <> p var
R25459:25464 Coq.MSets.MSetRBT MakeRaw ifpred syndef
R25469:25478 Coq.PArith.BinPos Pos to_nat def
R25480:25480 Coq.MSets.MSetRBT <> n var
R25469:25478 Coq.PArith.BinPos Pos to_nat def
R25480:25480 Coq.MSets.MSetRBT <> n var
R25466:25466 Coq.MSets.MSetRBT <> p var
R25584:25600 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R25616:25620 Coq.Init.Datatypes <> false constr
R25584:25600 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R25616:25620 Coq.Init.Datatypes <> false constr
R25655:25668 Coq.PArith.Pnat Pos2Nat inj_xI thm
R25655:25668 Coq.PArith.Pnat Pos2Nat inj_xI thm
R25655:25668 Coq.PArith.Pnat Pos2Nat inj_xI thm
R25687:25700 Coq.PArith.Pnat Pos2Nat is_pos thm
R25687:25700 Coq.PArith.Pnat Pos2Nat is_pos thm
R25712:25725 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R25712:25725 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R25771:25781 Coq.Arith.PeanoNat Nat add_0_r thm
R25771:25781 Coq.Arith.PeanoNat Nat add_0_r thm
R25771:25781 Coq.Arith.PeanoNat Nat add_0_r thm
R25771:25781 Coq.Arith.PeanoNat Nat add_0_r thm
R25771:25781 Coq.Arith.PeanoNat Nat add_0_r thm
R25811:25824 Coq.Arith.PeanoNat Nat add_succ_r thm
R25827:25839 Coq.Arith.PeanoNat Nat succ_pred thm
R25811:25824 Coq.Arith.PeanoNat Nat add_succ_r thm
R25811:25824 Coq.Arith.PeanoNat Nat add_succ_r thm
R25827:25839 Coq.Arith.PeanoNat Nat succ_pred thm
R25827:25839 Coq.Arith.PeanoNat Nat succ_pred thm
R25827:25839 Coq.Arith.PeanoNat Nat succ_pred thm
R25861:25877 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R25909:25912 Coq.Init.Datatypes <> true constr
R25861:25877 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R25909:25912 Coq.Init.Datatypes <> true constr
R25931:25944 Coq.PArith.Pnat Pos2Nat inj_xO thm
R25931:25944 Coq.PArith.Pnat Pos2Nat inj_xO thm
R25931:25944 Coq.PArith.Pnat Pos2Nat inj_xO thm
R25963:25976 Coq.PArith.Pnat Pos2Nat is_pos thm
R25963:25976 Coq.PArith.Pnat Pos2Nat is_pos thm
R25988:26001 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R25988:26001 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R26023:26036 Coq.Arith.PeanoNat Nat add_succ_r thm
R26039:26051 Coq.Arith.PeanoNat Nat succ_pred thm
R26023:26036 Coq.Arith.PeanoNat Nat add_succ_r thm
R26023:26036 Coq.Arith.PeanoNat Nat add_succ_r thm
R26039:26051 Coq.Arith.PeanoNat Nat succ_pred thm
R26039:26051 Coq.Arith.PeanoNat Nat succ_pred thm
R26103:26113 Coq.Arith.PeanoNat Nat add_0_r thm
R26103:26113 Coq.Arith.PeanoNat Nat add_0_r thm
R26103:26113 Coq.Arith.PeanoNat Nat add_0_r thm
R26103:26113 Coq.Arith.PeanoNat Nat add_0_r thm
R26103:26113 Coq.Arith.PeanoNat Nat add_0_r thm
R26148:26161 Coq.Arith.PeanoNat Nat add_pred_l thm
R26148:26161 Coq.Arith.PeanoNat Nat add_pred_l thm
R26187:26203 Coq.MSets.MSetRBT MakeRaw treeify_zero_spec thm
R26213:26228 Coq.MSets.MSetRBT MakeRaw treeify_one_spec thm
R26187:26203 Coq.MSets.MSetRBT MakeRaw treeify_zero_spec thm
R26213:26228 Coq.MSets.MSetRBT MakeRaw treeify_one_spec thm
prf 26245:26260 MakeRaw plength_aux_spec
R26298:26300 Coq.Init.Logic <> :type_scope:x_'='_x not
R26270:26279 Coq.PArith.BinPos Pos to_nat def
R26282:26292 Coq.MSets.MSetRBT MakeRaw plength_aux def
R26296:26296 Coq.MSets.MSetRBT <> p var
R26294:26294 Coq.MSets.MSetRBT <> l var
R26309:26311 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26301:26306 Coq.Init.Datatypes <> length def
R26308:26308 Coq.MSets.MSetRBT <> l var
R26312:26321 Coq.PArith.BinPos Pos to_nat def
R26323:26323 Coq.MSets.MSetRBT <> p var
R26411:26426 Coq.PArith.Pnat Pos2Nat inj_succ thm
R26429:26442 Coq.Arith.PeanoNat Nat add_succ_r thm
R26411:26426 Coq.PArith.Pnat Pos2Nat inj_succ thm
R26411:26426 Coq.PArith.Pnat Pos2Nat inj_succ thm
R26429:26442 Coq.Arith.PeanoNat Nat add_succ_r thm
R26429:26442 Coq.Arith.PeanoNat Nat add_succ_r thm
prf 26457:26468 MakeRaw plength_spec
R26496:26498 Coq.Init.Logic <> :type_scope:x_'='_x not
R26474:26483 Coq.PArith.BinPos Pos to_nat def
R26486:26492 Coq.MSets.MSetRBT MakeRaw plength def
R26494:26494 Coq.MSets.MSetRBT <> l var
R26499:26499 Coq.Init.Datatypes <> S constr
R26502:26507 Coq.Init.Datatypes <> length def
R26509:26509 Coq.MSets.MSetRBT <> l var
R26528:26534 Coq.MSets.MSetRBT MakeRaw plength def
R26545:26560 Coq.MSets.MSetRBT MakeRaw plength_aux_spec thm
R26545:26560 Coq.MSets.MSetRBT MakeRaw plength_aux_spec thm
R26545:26560 Coq.MSets.MSetRBT MakeRaw plength_aux_spec thm
R26569:26579 Coq.Arith.PeanoNat Nat add_1_r thm
R26569:26579 Coq.Arith.PeanoNat Nat add_1_r thm
prf 26594:26609 MakeRaw treeify_elements
R26635:26637 Coq.Init.Logic <> :type_scope:x_'='_x not
R26615:26622 Coq.MSets.MSetRBT MakeRaw elements def
R26625:26631 Coq.MSets.MSetRBT MakeRaw treeify def
R26633:26633 Coq.MSets.MSetRBT <> l var
R26638:26638 Coq.MSets.MSetRBT <> l var
R26662:26677 Coq.MSets.MSetRBT MakeRaw treeify_aux_spec thm
R26691:26694 Coq.Init.Datatypes <> true constr
R26680:26686 Coq.MSets.MSetRBT MakeRaw plength def
R26662:26677 Coq.MSets.MSetRBT MakeRaw treeify_aux_spec thm
R26691:26694 Coq.Init.Datatypes <> true constr
R26680:26686 Coq.MSets.MSetRBT MakeRaw plength def
R26708:26714 Coq.MSets.MSetRBT MakeRaw treeify def
R26726:26736 Coq.MSets.MSetRBT MakeRaw treeify_aux def
R26799:26810 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R26799:26810 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R26799:26810 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R26833:26844 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R26847:26856 Coq.Lists.List <> app_length thm
R26862:26878 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R26833:26844 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R26833:26844 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R26847:26856 Coq.Lists.List <> app_length thm
R26847:26856 Coq.Lists.List <> app_length thm
R26862:26878 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R26862:26878 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R26916:26924 Coq.Lists.List <> app_nil_r thm
R26916:26924 Coq.Lists.List <> app_nil_r thm
R26916:26924 Coq.Lists.List <> app_nil_r thm
R26967:26980 Coq.Arith.PeanoNat Nat add_succ_r thm
R26983:26994 Coq.Arith.PeanoNat Nat add_comm thm
R26967:26980 Coq.Arith.PeanoNat Nat add_succ_r thm
R26967:26980 Coq.Arith.PeanoNat Nat add_succ_r thm
R26983:26994 Coq.Arith.PeanoNat Nat add_comm thm
R26983:26994 Coq.Arith.PeanoNat Nat add_comm thm
R27006:27023 Coq.Arith.PeanoNat Nat succ_add_discr thm
R27006:27023 Coq.Arith.PeanoNat Nat succ_add_discr thm
prf 27038:27049 MakeRaw treeify_spec
R27074:27078 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27057:27059 Coq.MSets.MSetRBT MakeRaw InT ind
R27064:27070 Coq.MSets.MSetRBT MakeRaw treeify def
R27072:27072 Coq.MSets.MSetRBT <> l var
R27061:27061 Coq.MSets.MSetRBT <> x var
R27079:27081 Coq.Lists.SetoidList <> InA ind
R27090:27090 Coq.MSets.MSetRBT <> l var
R27088:27088 Coq.MSets.MSetRBT <> x var
R27083:27086 Coq.MSets.MSetRBT X eq defax
R27124:27137 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R27140:27155 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27124:27137 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R27124:27137 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R27140:27155 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27140:27155 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
prf 27170:27179 MakeRaw treeify_ok
R27196:27199 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27200:27201 Coq.MSets.MSetRBT MakeRaw Ok class
R27204:27210 Coq.MSets.MSetRBT MakeRaw treeify def
R27212:27212 Coq.MSets.MSetRBT <> l var
R27185:27188 Coq.Sorting.Sorted <> sort syndef
R27195:27195 Coq.MSets.MSetRBT <> l var
R27190:27193 Coq.MSets.MSetRBT X lt defax
R27238:27253 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R27238:27253 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R27264:27279 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27264:27279 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27264:27279 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
prf 27319:27328 MakeRaw filter_app
R27340:27343 Coq.Init.Datatypes <> list ind
R27345:27345 Coq.MSets.MSetRBT <> A var
R27374:27376 Coq.Init.Logic <> :type_scope:x_'='_x not
R27351:27361 Coq.Lists.List <> filter def
R27367:27370 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27366:27366 Coq.MSets.MSetRBT <> l var
R27371:27372 Coq.MSets.MSetRBT <> l' var
R27363:27363 Coq.MSets.MSetRBT <> f var
R27392:27395 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27377:27387 Coq.Lists.List <> filter def
R27391:27391 Coq.MSets.MSetRBT <> l var
R27389:27389 Coq.MSets.MSetRBT <> f var
R27396:27406 Coq.Lists.List <> filter def
R27410:27411 Coq.MSets.MSetRBT <> l' var
R27408:27408 Coq.MSets.MSetRBT <> f var
prf 27516:27534 MakeRaw filter_aux_elements
R27565:27567 Coq.Init.Logic <> :type_scope:x_'='_x not
R27547:27556 Coq.MSets.MSetRBT MakeRaw filter_aux def
R27562:27564 Coq.MSets.MSetRBT <> acc var
R27560:27560 Coq.MSets.MSetRBT <> s var
R27558:27558 Coq.MSets.MSetRBT <> f var
R27594:27597 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R27568:27578 Coq.Lists.List <> filter def
R27583:27590 Coq.MSets.MSetRBT MakeRaw elements def
R27592:27592 Coq.MSets.MSetRBT <> s var
R27580:27580 Coq.MSets.MSetRBT <> f var
R27598:27600 Coq.MSets.MSetRBT <> acc var
R27690:27702 Coq.MSets.MSetRBT MakeRaw elements_node thm
R27705:27714 Coq.MSets.MSetRBT MakeRaw filter_app thm
R27690:27702 Coq.MSets.MSetRBT MakeRaw elements_node thm
R27690:27702 Coq.MSets.MSetRBT MakeRaw elements_node thm
R27705:27714 Coq.MSets.MSetRBT MakeRaw filter_app thm
R27705:27714 Coq.MSets.MSetRBT MakeRaw filter_app thm
R27763:27769 Coq.Lists.List <> app_ass syndef
R27763:27769 Coq.Lists.List <> app_ass syndef
R27763:27769 Coq.Lists.List <> app_ass syndef
R27763:27769 Coq.Lists.List <> app_ass syndef
R27763:27769 Coq.Lists.List <> app_ass syndef
prf 27784:27798 MakeRaw filter_elements
R27828:27830 Coq.Init.Logic <> :type_scope:x_'='_x not
R27807:27814 Coq.MSets.MSetRBT MakeRaw elements def
R27817:27822 Coq.MSets.MSetRBT MakeRaw filter def
R27826:27826 Coq.MSets.MSetRBT <> s var
R27824:27824 Coq.MSets.MSetRBT <> f var
R27831:27841 Coq.Lists.List <> filter def
R27846:27853 Coq.MSets.MSetRBT MakeRaw elements def
R27855:27855 Coq.MSets.MSetRBT <> s var
R27843:27843 Coq.MSets.MSetRBT <> f var
R27874:27879 Coq.MSets.MSetRBT MakeRaw filter def
R27895:27910 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27913:27931 Coq.MSets.MSetRBT MakeRaw filter_aux_elements thm
R27934:27942 Coq.Lists.List <> app_nil_r thm
R27895:27910 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27895:27910 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27913:27931 Coq.MSets.MSetRBT MakeRaw filter_aux_elements thm
R27913:27931 Coq.MSets.MSetRBT MakeRaw filter_aux_elements thm
R27934:27942 Coq.Lists.List <> app_nil_r thm
R27934:27942 Coq.Lists.List <> app_nil_r thm
prf 27957:27967 MakeRaw filter_spec
R28004:28009 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28054:28054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28028:28032 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R28010:28012 Coq.MSets.MSetRBT MakeRaw InT ind
R28017:28022 Coq.MSets.MSetRBT MakeRaw filter def
R28026:28026 Coq.MSets.MSetRBT <> s var
R28024:28024 Coq.MSets.MSetRBT <> f var
R28014:28014 Coq.MSets.MSetRBT <> x var
R28040:28043 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R28033:28035 Coq.MSets.MSetRBT MakeRaw InT ind
R28039:28039 Coq.MSets.MSetRBT <> s var
R28037:28037 Coq.MSets.MSetRBT <> x var
R28047:28049 Coq.Init.Logic <> :type_scope:x_'='_x not
R28044:28044 Coq.MSets.MSetRBT <> f var
R28046:28046 Coq.MSets.MSetRBT <> x var
R28050:28053 Coq.Init.Datatypes <> true constr
R27978:27983 Coq.Classes.Morphisms <> Proper class
R28003:28003 Coq.MSets.MSetRBT <> f var
R27990:27992 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R27986:27989 Coq.MSets.MSetRBT X eq defax
R27993:28000 Coq.Init.Logic <> eq ind
R28088:28101 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28104:28118 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28121:28130 Coq.Lists.SetoidList <> filter_InA thm
R28133:28146 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28088:28101 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28088:28101 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28104:28118 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28104:28118 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28121:28130 Coq.Lists.SetoidList <> filter_InA thm
R28121:28130 Coq.Lists.SetoidList <> filter_InA thm
R28121:28130 Coq.Lists.SetoidList <> filter_InA thm
R28133:28146 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28133:28146 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
inst 28179:28187 MakeRaw filter_ok
R28195:28196 Coq.MSets.MSetRBT MakeRaw Ok class
R28198:28198 Coq.MSets.MSetRBT <> s var
R28203:28204 Coq.MSets.MSetRBT MakeRaw Ok class
R28207:28212 Coq.MSets.MSetRBT MakeRaw filter def
R28216:28216 Coq.MSets.MSetRBT <> s var
R28214:28214 Coq.MSets.MSetRBT <> f var
R28234:28249 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R28234:28249 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R28261:28275 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28261:28275 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28261:28275 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28302:28305 Coq.MSets.MSetRBT X eq defax
R28285:28295 Coq.Lists.SetoidList <> filter_sort thm
R28302:28305 Coq.MSets.MSetRBT X eq defax
R28285:28295 Coq.Lists.SetoidList <> filter_sort thm
prf 28350:28367 MakeRaw partition_aux_spec
R28413:28417 Coq.Init.Logic <> :type_scope:x_'='_x not
R28386:28398 Coq.MSets.MSetRBT MakeRaw partition_aux def
R28409:28412 Coq.MSets.MSetRBT <> acc2 var
R28404:28407 Coq.MSets.MSetRBT <> acc1 var
R28402:28402 Coq.MSets.MSetRBT <> s var
R28400:28400 Coq.MSets.MSetRBT <> f var
R28418:28418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28438:28439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28479:28479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28419:28428 Coq.MSets.MSetRBT MakeRaw filter_aux def
R28434:28437 Coq.MSets.MSetRBT <> acc1 var
R28432:28432 Coq.MSets.MSetRBT <> s var
R28430:28430 Coq.MSets.MSetRBT <> f var
R28440:28449 Coq.MSets.MSetRBT MakeRaw filter_aux def
R28475:28478 Coq.MSets.MSetRBT <> acc2 var
R28473:28473 Coq.MSets.MSetRBT <> s var
R28461:28464 Coq.Init.Datatypes <> negb def
R28467:28467 Coq.MSets.MSetRBT <> f var
R28469:28469 Coq.MSets.MSetRBT <> x var
prf 28643:28656 MakeRaw partition_spec
R28678:28680 Coq.Init.Logic <> :type_scope:x_'='_x not
R28665:28673 Coq.MSets.MSetRBT MakeRaw partition def
R28677:28677 Coq.MSets.MSetRBT <> s var
R28675:28675 Coq.MSets.MSetRBT <> f var
R28681:28681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28692:28693 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28724:28724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28682:28687 Coq.MSets.MSetRBT MakeRaw filter def
R28691:28691 Coq.MSets.MSetRBT <> s var
R28689:28689 Coq.MSets.MSetRBT <> f var
R28694:28699 Coq.MSets.MSetRBT MakeRaw filter def
R28723:28723 Coq.MSets.MSetRBT <> s var
R28711:28714 Coq.Init.Datatypes <> negb def
R28717:28717 Coq.MSets.MSetRBT <> f var
R28719:28719 Coq.MSets.MSetRBT <> x var
R28742:28750 Coq.MSets.MSetRBT MakeRaw partition def
R28753:28758 Coq.MSets.MSetRBT MakeRaw filter def
R28773:28790 Coq.MSets.MSetRBT MakeRaw partition_aux_spec thm
R28773:28790 Coq.MSets.MSetRBT MakeRaw partition_aux_spec thm
R28773:28790 Coq.MSets.MSetRBT MakeRaw partition_aux_spec thm
prf 28805:28819 MakeRaw partition_spec1
R28854:28858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28859:28863 Coq.MSets.MSetRBT MakeRaw Equal def
R28888:28893 Coq.MSets.MSetRBT MakeRaw filter def
R28897:28897 Coq.MSets.MSetRBT <> s var
R28895:28895 Coq.MSets.MSetRBT <> f var
R28866:28868 Coq.Init.Datatypes <> fst def
R28871:28879 Coq.MSets.MSetRBT MakeRaw partition def
R28883:28883 Coq.MSets.MSetRBT <> s var
R28881:28881 Coq.MSets.MSetRBT <> f var
R28828:28833 Coq.Classes.Morphisms <> Proper class
R28853:28853 Coq.MSets.MSetRBT <> f var
R28840:28842 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R28836:28839 Coq.MSets.MSetRBT X eq defax
R28843:28850 Coq.Init.Logic <> eq ind
R28920:28933 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R28920:28933 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R28920:28933 Coq.MSets.MSetRBT MakeRaw partition_spec thm
prf 28948:28962 MakeRaw partition_spec2
R28997:29001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29002:29006 Coq.MSets.MSetRBT MakeRaw Equal def
R29031:29036 Coq.MSets.MSetRBT MakeRaw filter def
R29060:29060 Coq.MSets.MSetRBT <> s var
R29048:29051 Coq.Init.Datatypes <> negb def
R29054:29054 Coq.MSets.MSetRBT <> f var
R29056:29056 Coq.MSets.MSetRBT <> x var
R29009:29011 Coq.Init.Datatypes <> snd def
R29014:29022 Coq.MSets.MSetRBT MakeRaw partition def
R29026:29026 Coq.MSets.MSetRBT <> s var
R29024:29024 Coq.MSets.MSetRBT <> f var
R28971:28976 Coq.Classes.Morphisms <> Proper class
R28996:28996 Coq.MSets.MSetRBT <> f var
R28983:28985 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R28979:28982 Coq.MSets.MSetRBT X eq defax
R28986:28993 Coq.Init.Logic <> eq ind
R29083:29096 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29083:29096 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29083:29096 Coq.MSets.MSetRBT MakeRaw partition_spec thm
inst 29114:29126 MakeRaw partition_ok1
R29134:29135 Coq.MSets.MSetRBT MakeRaw Ok class
R29137:29137 Coq.MSets.MSetRBT <> s var
R29142:29143 Coq.MSets.MSetRBT MakeRaw Ok class
R29146:29148 Coq.Init.Datatypes <> fst def
R29151:29159 Coq.MSets.MSetRBT MakeRaw partition def
R29163:29163 Coq.MSets.MSetRBT <> s var
R29161:29161 Coq.MSets.MSetRBT <> f var
R29183:29196 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29209:29217 Coq.MSets.MSetRBT MakeRaw filter_ok inst
R29183:29196 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29183:29196 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29209:29217 Coq.MSets.MSetRBT MakeRaw filter_ok inst
inst 29235:29247 MakeRaw partition_ok2
R29255:29256 Coq.MSets.MSetRBT MakeRaw Ok class
R29258:29258 Coq.MSets.MSetRBT <> s var
R29263:29264 Coq.MSets.MSetRBT MakeRaw Ok class
R29267:29269 Coq.Init.Datatypes <> snd def
R29272:29280 Coq.MSets.MSetRBT MakeRaw partition def
R29284:29284 Coq.MSets.MSetRBT <> s var
R29282:29282 Coq.MSets.MSetRBT <> f var
R29304:29317 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29330:29338 Coq.MSets.MSetRBT MakeRaw filter_ok inst
R29304:29317 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29304:29317 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29330:29338 Coq.MSets.MSetRBT MakeRaw filter_ok inst
R29438:29448 Coq.Lists.SetoidList <> InA_app_iff thm
R29452:29459 Coq.Lists.SetoidList <> InA_cons thm
R29463:29469 Coq.Lists.SetoidList <> InA_nil thm
R29473:29479 Coq.Lists.SetoidList <> InA_rev thm
rec 29504:29506 MakeRaw INV
proj 29531:29539 MakeRaw l1_sorted
proj 29564:29572 MakeRaw l2_sorted
proj 29597:29606 MakeRaw acc_sorted
proj 29626:29634 MakeRaw l1_lt_acc
proj 29688:29696 MakeRaw l2_lt_acc
R29543:29546 Coq.Sorting.Sorted <> sort syndef
R29554:29556 Coq.Lists.List <> rev def
R29558:29559 Coq.MSets.MSetRBT <> l1 var
R29548:29551 Coq.MSets.MSetRBT X lt defax
R29576:29579 Coq.Sorting.Sorted <> sort syndef
R29587:29589 Coq.Lists.List <> rev def
R29591:29592 Coq.MSets.MSetRBT <> l2 var
R29581:29584 Coq.MSets.MSetRBT X lt defax
R29610:29613 Coq.Sorting.Sorted <> sort syndef
R29620:29622 Coq.MSets.MSetRBT <> acc var
R29615:29618 Coq.MSets.MSetRBT X lt defax
R29655:29658 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29673:29676 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29677:29680 Coq.MSets.MSetRBT X lt defax
R29684:29684 Coq.MSets.MSetRBT <> y var
R29682:29682 Coq.MSets.MSetRBT <> x var
R29659:29661 Coq.Lists.SetoidList <> InA ind
R29670:29672 Coq.MSets.MSetRBT <> acc var
R29668:29668 Coq.MSets.MSetRBT <> y var
R29663:29666 Coq.MSets.MSetRBT X eq defax
R29642:29644 Coq.Lists.SetoidList <> InA ind
R29653:29654 Coq.MSets.MSetRBT <> l1 var
R29651:29651 Coq.MSets.MSetRBT <> x var
R29646:29649 Coq.MSets.MSetRBT X eq defax
R29717:29720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29735:29738 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29739:29742 Coq.MSets.MSetRBT X lt defax
R29746:29746 Coq.MSets.MSetRBT <> y var
R29744:29744 Coq.MSets.MSetRBT <> x var
R29721:29723 Coq.Lists.SetoidList <> InA ind
R29732:29734 Coq.MSets.MSetRBT <> acc var
R29730:29730 Coq.MSets.MSetRBT <> y var
R29725:29728 Coq.MSets.MSetRBT X eq defax
R29704:29706 Coq.Lists.SetoidList <> InA ind
R29715:29716 Coq.MSets.MSetRBT <> l2 var
R29713:29713 Coq.MSets.MSetRBT <> x var
R29708:29711 Coq.MSets.MSetRBT X eq defax
prf 29808:29815 MakeRaw INV_init
R29825:29826 Coq.MSets.MSetRBT MakeRaw Ok class
R29828:29829 Coq.MSets.MSetRBT <> s1 var
R29832:29833 Coq.MSets.MSetRBT MakeRaw Ok class
R29835:29836 Coq.MSets.MSetRBT <> s2 var
R29842:29844 Coq.MSets.MSetRBT MakeRaw INV rec
R29882:29884 Coq.Init.Datatypes <> nil constr
R29865:29876 Coq.MSets.MSetRBT MakeRaw rev_elements def
R29878:29879 Coq.MSets.MSetRBT <> s2 var
R29847:29858 Coq.MSets.MSetRBT MakeRaw rev_elements def
R29860:29861 Coq.MSets.MSetRBT <> s1 var
R29904:29919 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R29904:29919 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R29904:29919 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R29904:29919 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R29904:29919 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
R29939:29952 Coq.Lists.List <> rev_involutive thm
prf 29990:29996 MakeRaw INV_sym
R30023:30026 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30027:30029 Coq.MSets.MSetRBT MakeRaw INV rec
R30037:30039 Coq.MSets.MSetRBT <> acc var
R30034:30035 Coq.MSets.MSetRBT <> l1 var
R30031:30032 Coq.MSets.MSetRBT <> l2 var
R30010:30012 Coq.MSets.MSetRBT MakeRaw INV rec
R30020:30022 Coq.MSets.MSetRBT <> acc var
R30017:30018 Coq.MSets.MSetRBT <> l2 var
R30014:30015 Coq.MSets.MSetRBT <> l1 var
prf 30085:30092 MakeRaw INV_drop
R30132:30135 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30136:30138 Coq.MSets.MSetRBT MakeRaw INV rec
R30146:30148 Coq.MSets.MSetRBT <> acc var
R30143:30144 Coq.MSets.MSetRBT <> l2 var
R30140:30141 Coq.MSets.MSetRBT <> l1 var
R30111:30113 Coq.MSets.MSetRBT MakeRaw INV rec
R30129:30131 Coq.MSets.MSetRBT <> acc var
R30126:30127 Coq.MSets.MSetRBT <> l2 var
R30118:30121 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30116:30117 Coq.MSets.MSetRBT <> x1 var
R30122:30123 Coq.MSets.MSetRBT <> l1 var
R30213:30226 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30213:30226 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
prf 30285:30290 MakeRaw INV_eq
R30341:30344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30355:30360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30361:30363 Coq.MSets.MSetRBT MakeRaw INV rec
R30374:30377 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30372:30373 Coq.MSets.MSetRBT <> x1 var
R30378:30380 Coq.MSets.MSetRBT <> acc var
R30368:30369 Coq.MSets.MSetRBT <> l2 var
R30365:30366 Coq.MSets.MSetRBT <> l1 var
R30345:30348 Coq.MSets.MSetRBT X eq defax
R30353:30354 Coq.MSets.MSetRBT <> x2 var
R30350:30351 Coq.MSets.MSetRBT <> x1 var
R30312:30314 Coq.MSets.MSetRBT MakeRaw INV rec
R30338:30340 Coq.MSets.MSetRBT <> acc var
R30330:30333 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30328:30329 Coq.MSets.MSetRBT <> x2 var
R30334:30335 Coq.MSets.MSetRBT <> l2 var
R30319:30322 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30317:30318 Coq.MSets.MSetRBT <> x1 var
R30323:30324 Coq.MSets.MSetRBT <> l1 var
R30438:30451 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30438:30451 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30496:30509 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30496:30509 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30599:30602 Coq.MSets.MSetRBT X eq defax
R30585:30592 Coq.Lists.SetoidList <> InA_InfA thm
R30599:30602 Coq.MSets.MSetRBT X eq defax
R30585:30592 Coq.Lists.SetoidList <> InA_InfA thm
prf 30798:30803 MakeRaw INV_lt
R30854:30857 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30868:30873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30874:30876 Coq.MSets.MSetRBT MakeRaw INV rec
R30895:30898 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30893:30894 Coq.MSets.MSetRBT <> x2 var
R30899:30901 Coq.MSets.MSetRBT <> acc var
R30889:30890 Coq.MSets.MSetRBT <> l2 var
R30881:30884 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30879:30880 Coq.MSets.MSetRBT <> x1 var
R30885:30886 Coq.MSets.MSetRBT <> l1 var
R30858:30861 Coq.MSets.MSetRBT X lt defax
R30866:30867 Coq.MSets.MSetRBT <> x2 var
R30863:30864 Coq.MSets.MSetRBT <> x1 var
R30825:30827 Coq.MSets.MSetRBT MakeRaw INV rec
R30851:30853 Coq.MSets.MSetRBT <> acc var
R30843:30846 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30841:30842 Coq.MSets.MSetRBT <> x2 var
R30847:30848 Coq.MSets.MSetRBT <> l2 var
R30832:30835 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30830:30831 Coq.MSets.MSetRBT <> x1 var
R30836:30837 Coq.MSets.MSetRBT <> l1 var
R30959:30972 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30959:30972 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31017:31030 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31017:31030 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31120:31123 Coq.MSets.MSetRBT X eq defax
R31106:31113 Coq.Lists.SetoidList <> InA_InfA thm
R31120:31123 Coq.MSets.MSetRBT X eq defax
R31106:31113 Coq.Lists.SetoidList <> InA_InfA thm
prf 31388:31394 MakeRaw INV_rev
R31422:31425 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31426:31431 Coq.Sorting.Sorted <> Sorted ind
R31439:31448 Coq.Lists.List <> rev_append def
R31453:31455 Coq.MSets.MSetRBT <> acc var
R31450:31451 Coq.MSets.MSetRBT <> l1 var
R31433:31436 Coq.MSets.MSetRBT X lt defax
R31409:31411 Coq.MSets.MSetRBT MakeRaw INV rec
R31419:31421 Coq.MSets.MSetRBT <> acc var
R31416:31417 Coq.MSets.MSetRBT <> l2 var
R31413:31414 Coq.MSets.MSetRBT <> l1 var
R31483:31496 Coq.Lists.List <> rev_append_rev thm
R31483:31496 Coq.Lists.List <> rev_append_rev thm
R31483:31496 Coq.Lists.List <> rev_append_rev thm
R31521:31524 Coq.MSets.MSetRBT X eq defax
R31506:31514 Coq.Lists.SetoidList <> SortA_app thm
R31521:31524 Coq.MSets.MSetRBT X eq defax
R31506:31514 Coq.Lists.SetoidList <> SortA_app thm
R31567:31575 Coq.MSets.MSetRBT MakeRaw l1_lt_acc proj
R31567:31575 Coq.MSets.MSetRBT MakeRaw l1_lt_acc proj
prf 31614:31626 MakeRaw union_list_ok
R31654:31657 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31658:31661 Coq.Sorting.Sorted <> sort syndef
R31669:31678 Coq.MSets.MSetRBT MakeRaw union_list def
R31686:31688 Coq.MSets.MSetRBT <> acc var
R31683:31684 Coq.MSets.MSetRBT <> l2 var
R31680:31681 Coq.MSets.MSetRBT <> l1 var
R31663:31666 Coq.MSets.MSetRBT X lt defax
R31641:31643 Coq.MSets.MSetRBT MakeRaw INV rec
R31651:31653 Coq.MSets.MSetRBT <> acc var
R31648:31649 Coq.MSets.MSetRBT <> l2 var
R31645:31646 Coq.MSets.MSetRBT <> l1 var
R31818:31824 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R31827:31833 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R31818:31824 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R31827:31833 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R31853:31859 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R31853:31859 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R31884:31897 Coq.MSets.MSetRBT X compare_spec prfax
R31884:31897 Coq.MSets.MSetRBT X compare_spec prfax
R31932:31937 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R31932:31937 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R31966:31967 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R31966:31967 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R31982:31987 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R31982:31987 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32020:32026 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32029:32034 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32020:32026 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32029:32034 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32054:32060 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32054:32060 Coq.MSets.MSetRBT MakeRaw INV_sym thm
inst 32078:32092 MakeRaw linear_union_ok
R32102:32103 Coq.MSets.MSetRBT MakeRaw Ok class
R32105:32106 Coq.MSets.MSetRBT <> s1 var
R32109:32110 Coq.MSets.MSetRBT MakeRaw Ok class
R32112:32113 Coq.MSets.MSetRBT <> s2 var
R32119:32120 Coq.MSets.MSetRBT MakeRaw Ok class
R32123:32134 Coq.MSets.MSetRBT MakeRaw linear_union def
R32139:32140 Coq.MSets.MSetRBT <> s2 var
R32136:32137 Coq.MSets.MSetRBT <> s1 var
R32159:32170 Coq.MSets.MSetRBT MakeRaw linear_union def
R32183:32192 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R32195:32207 Coq.MSets.MSetRBT MakeRaw union_list_ok thm
R32210:32217 Coq.MSets.MSetRBT MakeRaw INV_init thm
R32183:32192 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R32195:32207 Coq.MSets.MSetRBT MakeRaw union_list_ok thm
R32210:32217 Coq.MSets.MSetRBT MakeRaw INV_init thm
inst 32235:32245 MakeRaw fold_add_ok
R32255:32256 Coq.MSets.MSetRBT MakeRaw Ok class
R32258:32259 Coq.MSets.MSetRBT <> s1 var
R32262:32263 Coq.MSets.MSetRBT MakeRaw Ok class
R32265:32266 Coq.MSets.MSetRBT <> s2 var
R32272:32273 Coq.MSets.MSetRBT MakeRaw Ok class
R32276:32279 Coq.MSets.MSetRBT MakeRaw fold def
R32288:32289 Coq.MSets.MSetRBT <> s2 var
R32285:32286 Coq.MSets.MSetRBT <> s1 var
R32281:32283 Coq.MSets.MSetRBT MakeRaw add def
R32309:32317 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R32323:32341 Coq.Lists.List <> fold_left_rev_right thm
R32309:32317 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R32309:32317 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R32323:32341 Coq.Lists.List <> fold_left_rev_right thm
R32323:32341 Coq.Lists.List <> fold_left_rev_right thm
R32352:32354 Coq.MSets.MSetRBT MakeRaw elt def
R32374:32376 Coq.Lists.List <> rev def
R32379:32386 Coq.MSets.MSetRBT MakeRaw elements def
R32408:32411 Coq.Program.Basics <> flip def
R32374:32376 Coq.Lists.List <> rev def
R32379:32386 Coq.MSets.MSetRBT MakeRaw elements def
inst 32443:32450 MakeRaw union_ok
R32460:32461 Coq.MSets.MSetRBT MakeRaw Ok class
R32463:32464 Coq.MSets.MSetRBT <> s1 var
R32467:32468 Coq.MSets.MSetRBT MakeRaw Ok class
R32470:32471 Coq.MSets.MSetRBT <> s2 var
R32476:32477 Coq.MSets.MSetRBT MakeRaw Ok class
R32480:32484 Coq.MSets.MSetRBT MakeRaw union def
R32489:32490 Coq.MSets.MSetRBT <> s2 var
R32486:32487 Coq.MSets.MSetRBT <> s1 var
R32509:32513 Coq.MSets.MSetRBT MakeRaw union def
R32525:32538 Coq.MSets.MSetRBT MakeRaw compare_height def
prf 32562:32576 MakeRaw union_list_spec
R32626:32632 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R32593:32595 Coq.Lists.SetoidList <> InA ind
R32605:32614 Coq.MSets.MSetRBT MakeRaw union_list def
R32622:32624 Coq.MSets.MSetRBT <> acc var
R32619:32620 Coq.MSets.MSetRBT <> l2 var
R32616:32617 Coq.MSets.MSetRBT <> l1 var
R32602:32602 Coq.MSets.MSetRBT <> x var
R32597:32600 Coq.MSets.MSetRBT X eq defax
R32646:32649 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R32633:32635 Coq.Lists.SetoidList <> InA ind
R32644:32645 Coq.MSets.MSetRBT <> l1 var
R32642:32642 Coq.MSets.MSetRBT <> x var
R32637:32640 Coq.MSets.MSetRBT X eq defax
R32663:32666 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R32650:32652 Coq.Lists.SetoidList <> InA ind
R32661:32662 Coq.MSets.MSetRBT <> l2 var
R32659:32659 Coq.MSets.MSetRBT <> x var
R32654:32657 Coq.MSets.MSetRBT X eq defax
R32667:32669 Coq.Lists.SetoidList <> InA ind
R32678:32680 Coq.MSets.MSetRBT <> acc var
R32676:32676 Coq.MSets.MSetRBT <> x var
R32671:32674 Coq.MSets.MSetRBT X eq defax
R32770:32783 Coq.Lists.List <> rev_append_rev thm
R32770:32783 Coq.Lists.List <> rev_append_rev thm
R32770:32783 Coq.Lists.List <> rev_append_rev thm
R32863:32876 Coq.Lists.List <> rev_append_rev thm
R32863:32876 Coq.Lists.List <> rev_append_rev thm
R32863:32876 Coq.Lists.List <> rev_append_rev thm
R32901:32914 Coq.MSets.MSetRBT X compare_spec prfax
R32901:32914 Coq.MSets.MSetRBT X compare_spec prfax
R32947:32954 Coq.Lists.SetoidList <> InA_cons thm
R32947:32954 Coq.Lists.SetoidList <> InA_cons thm
R32947:32954 Coq.Lists.SetoidList <> InA_cons thm
R32947:32954 Coq.Lists.SetoidList <> InA_cons thm
R32947:32954 Coq.Lists.SetoidList <> InA_cons thm
R32947:32954 Coq.Lists.SetoidList <> InA_cons thm
R32990:32991 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R33000:33007 Coq.Lists.SetoidList <> InA_cons thm
R32990:32991 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32990:32991 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R33000:33007 Coq.Lists.SetoidList <> InA_cons thm
R33000:33007 Coq.Lists.SetoidList <> InA_cons thm
R33000:33007 Coq.Lists.SetoidList <> InA_cons thm
R33000:33007 Coq.Lists.SetoidList <> InA_cons thm
R33000:33007 Coq.Lists.SetoidList <> InA_cons thm
R33038:33045 Coq.Lists.SetoidList <> InA_cons thm
R33038:33045 Coq.Lists.SetoidList <> InA_cons thm
R33038:33045 Coq.Lists.SetoidList <> InA_cons thm
R33038:33045 Coq.Lists.SetoidList <> InA_cons thm
R33038:33045 Coq.Lists.SetoidList <> InA_cons thm
R33038:33045 Coq.Lists.SetoidList <> InA_cons thm
prf 33067:33083 MakeRaw linear_union_spec
R33122:33126 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R33096:33098 Coq.MSets.MSetRBT MakeRaw InT ind
R33103:33114 Coq.MSets.MSetRBT MakeRaw linear_union def
R33119:33120 Coq.MSets.MSetRBT <> s2 var
R33116:33117 Coq.MSets.MSetRBT <> s1 var
R33100:33100 Coq.MSets.MSetRBT <> x var
R33135:33138 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R33127:33129 Coq.MSets.MSetRBT MakeRaw InT ind
R33133:33134 Coq.MSets.MSetRBT <> s1 var
R33131:33131 Coq.MSets.MSetRBT <> x var
R33139:33141 Coq.MSets.MSetRBT MakeRaw InT ind
R33145:33146 Coq.MSets.MSetRBT <> s2 var
R33143:33143 Coq.MSets.MSetRBT <> x var
R33164:33175 Coq.MSets.MSetRBT MakeRaw linear_union def
R33187:33198 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R33201:33215 Coq.MSets.MSetRBT MakeRaw union_list_spec thm
R33219:33234 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33187:33198 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R33187:33198 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R33201:33215 Coq.MSets.MSetRBT MakeRaw union_list_spec thm
R33201:33215 Coq.MSets.MSetRBT MakeRaw union_list_spec thm
R33219:33234 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33219:33234 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33219:33234 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33219:33234 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33247:33253 Coq.Lists.SetoidList <> InA_rev thm
R33256:33262 Coq.Lists.SetoidList <> InA_nil thm
R33266:33279 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33247:33253 Coq.Lists.SetoidList <> InA_rev thm
R33247:33253 Coq.Lists.SetoidList <> InA_rev thm
R33247:33253 Coq.Lists.SetoidList <> InA_rev thm
R33247:33253 Coq.Lists.SetoidList <> InA_rev thm
R33256:33262 Coq.Lists.SetoidList <> InA_nil thm
R33256:33262 Coq.Lists.SetoidList <> InA_nil thm
R33266:33279 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33266:33279 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33266:33279 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33266:33279 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
prf 33313:33325 MakeRaw fold_add_spec
R33360:33364 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R33338:33340 Coq.MSets.MSetRBT MakeRaw InT ind
R33345:33348 Coq.MSets.MSetRBT MakeRaw fold def
R33357:33358 Coq.MSets.MSetRBT <> s2 var
R33354:33355 Coq.MSets.MSetRBT <> s1 var
R33350:33352 Coq.MSets.MSetRBT MakeRaw add def
R33342:33342 Coq.MSets.MSetRBT <> x var
R33373:33376 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R33365:33367 Coq.MSets.MSetRBT MakeRaw InT ind
R33371:33372 Coq.MSets.MSetRBT <> s1 var
R33369:33369 Coq.MSets.MSetRBT <> x var
R33377:33379 Coq.MSets.MSetRBT MakeRaw InT ind
R33383:33384 Coq.MSets.MSetRBT <> s2 var
R33381:33381 Coq.MSets.MSetRBT <> x var
R33403:33411 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R33417:33435 Coq.Lists.List <> fold_left_rev_right thm
R33403:33411 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R33403:33411 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R33417:33435 Coq.Lists.List <> fold_left_rev_right thm
R33417:33435 Coq.Lists.List <> fold_left_rev_right thm
R33451:33464 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33474:33480 Coq.Lists.SetoidList <> InA_rev thm
R33451:33464 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33451:33464 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33474:33480 Coq.Lists.SetoidList <> InA_rev thm
R33474:33480 Coq.Lists.SetoidList <> InA_rev thm
R33502:33504 Coq.MSets.MSetRBT MakeRaw elt def
R33524:33526 Coq.Lists.List <> rev def
R33529:33536 Coq.MSets.MSetRBT MakeRaw elements def
R33524:33526 Coq.Lists.List <> rev def
R33529:33536 Coq.MSets.MSetRBT MakeRaw elements def
R33562:33568 Coq.Lists.SetoidList <> InA_nil thm
R33562:33568 Coq.Lists.SetoidList <> InA_nil thm
R33562:33568 Coq.Lists.SetoidList <> InA_nil thm
R33588:33591 Coq.Program.Basics <> flip def
R33602:33610 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R33618:33625 Coq.Lists.SetoidList <> InA_cons thm
R33602:33610 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R33602:33610 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R33618:33625 Coq.Lists.SetoidList <> InA_cons thm
R33618:33625 Coq.Lists.SetoidList <> InA_cons thm
prf 33647:33657 MakeRaw union_spec'
R33689:33693 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R33670:33672 Coq.MSets.MSetRBT MakeRaw InT ind
R33677:33681 Coq.MSets.MSetRBT MakeRaw union def
R33686:33687 Coq.MSets.MSetRBT <> s2 var
R33683:33684 Coq.MSets.MSetRBT <> s1 var
R33674:33674 Coq.MSets.MSetRBT <> x var
R33702:33705 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R33694:33696 Coq.MSets.MSetRBT MakeRaw InT ind
R33700:33701 Coq.MSets.MSetRBT <> s1 var
R33698:33698 Coq.MSets.MSetRBT <> x var
R33706:33708 Coq.MSets.MSetRBT MakeRaw InT ind
R33712:33713 Coq.MSets.MSetRBT <> s2 var
R33710:33710 Coq.MSets.MSetRBT <> x var
R33731:33735 Coq.MSets.MSetRBT MakeRaw union def
R33747:33760 Coq.MSets.MSetRBT MakeRaw compare_height def
R33772:33788 Coq.MSets.MSetRBT MakeRaw linear_union_spec thm
R33772:33788 Coq.MSets.MSetRBT MakeRaw linear_union_spec thm
R33800:33812 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R33800:33812 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R33826:33838 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R33826:33838 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R33826:33838 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
prf 33860:33869 MakeRaw union_spec
R33890:33891 Coq.MSets.MSetRBT MakeRaw Ok class
R33893:33894 Coq.MSets.MSetRBT <> s1 var
R33897:33898 Coq.MSets.MSetRBT MakeRaw Ok class
R33900:33901 Coq.MSets.MSetRBT <> s2 var
R33926:33930 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R33907:33909 Coq.MSets.MSetRBT MakeRaw InT ind
R33914:33918 Coq.MSets.MSetRBT MakeRaw union def
R33923:33924 Coq.MSets.MSetRBT <> s2 var
R33920:33921 Coq.MSets.MSetRBT <> s1 var
R33911:33911 Coq.MSets.MSetRBT <> y var
R33939:33942 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R33931:33933 Coq.MSets.MSetRBT MakeRaw InT ind
R33937:33938 Coq.MSets.MSetRBT <> s1 var
R33935:33935 Coq.MSets.MSetRBT <> y var
R33943:33945 Coq.MSets.MSetRBT MakeRaw InT ind
R33949:33950 Coq.MSets.MSetRBT <> s2 var
R33947:33947 Coq.MSets.MSetRBT <> y var
R33976:33986 Coq.MSets.MSetRBT MakeRaw union_spec' thm
R33976:33986 Coq.MSets.MSetRBT MakeRaw union_spec' thm
prf 34018:34030 MakeRaw inter_list_ok
R34058:34061 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34062:34065 Coq.Sorting.Sorted <> sort syndef
R34073:34082 Coq.MSets.MSetRBT MakeRaw inter_list def
R34090:34092 Coq.MSets.MSetRBT <> acc var
R34087:34088 Coq.MSets.MSetRBT <> l2 var
R34084:34085 Coq.MSets.MSetRBT <> l1 var
R34067:34070 Coq.MSets.MSetRBT X lt defax
R34045:34047 Coq.MSets.MSetRBT MakeRaw INV rec
R34055:34057 Coq.MSets.MSetRBT <> acc var
R34052:34053 Coq.MSets.MSetRBT <> l2 var
R34049:34050 Coq.MSets.MSetRBT <> l1 var
R34237:34250 Coq.MSets.MSetRBT X compare_spec prfax
R34237:34250 Coq.MSets.MSetRBT X compare_spec prfax
R34285:34290 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R34285:34290 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R34329:34335 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34338:34345 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R34348:34354 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34329:34335 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34338:34345 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R34348:34354 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34387:34394 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R34387:34394 Coq.MSets.MSetRBT MakeRaw INV_drop thm
inst 34419:34433 MakeRaw linear_inter_ok
R34443:34444 Coq.MSets.MSetRBT MakeRaw Ok class
R34446:34447 Coq.MSets.MSetRBT <> s1 var
R34450:34451 Coq.MSets.MSetRBT MakeRaw Ok class
R34453:34454 Coq.MSets.MSetRBT <> s2 var
R34460:34461 Coq.MSets.MSetRBT MakeRaw Ok class
R34464:34475 Coq.MSets.MSetRBT MakeRaw linear_inter def
R34480:34481 Coq.MSets.MSetRBT <> s2 var
R34477:34478 Coq.MSets.MSetRBT <> s1 var
R34500:34511 Coq.MSets.MSetRBT MakeRaw linear_inter def
R34524:34533 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R34536:34548 Coq.MSets.MSetRBT MakeRaw inter_list_ok thm
R34551:34558 Coq.MSets.MSetRBT MakeRaw INV_init thm
R34524:34533 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R34536:34548 Coq.MSets.MSetRBT MakeRaw inter_list_ok thm
R34551:34558 Coq.MSets.MSetRBT MakeRaw INV_init thm
inst 34576:34583 MakeRaw inter_ok
R34593:34594 Coq.MSets.MSetRBT MakeRaw Ok class
R34596:34597 Coq.MSets.MSetRBT <> s1 var
R34600:34601 Coq.MSets.MSetRBT MakeRaw Ok class
R34603:34604 Coq.MSets.MSetRBT <> s2 var
R34609:34610 Coq.MSets.MSetRBT MakeRaw Ok class
R34613:34617 Coq.MSets.MSetRBT MakeRaw inter def
R34622:34623 Coq.MSets.MSetRBT <> s2 var
R34619:34620 Coq.MSets.MSetRBT <> s1 var
R34642:34646 Coq.MSets.MSetRBT MakeRaw inter def
R34658:34671 Coq.MSets.MSetRBT MakeRaw compare_height def
prf 34695:34709 MakeRaw inter_list_spec
R34744:34748 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34767:34772 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34864:34864 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34806:34813 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R34773:34775 Coq.Lists.SetoidList <> InA ind
R34785:34794 Coq.MSets.MSetRBT MakeRaw inter_list def
R34802:34804 Coq.MSets.MSetRBT <> acc var
R34799:34800 Coq.MSets.MSetRBT <> l2 var
R34796:34797 Coq.MSets.MSetRBT <> l1 var
R34782:34782 Coq.MSets.MSetRBT <> x var
R34777:34780 Coq.MSets.MSetRBT X eq defax
R34814:34814 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R34845:34849 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R34828:34831 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R34815:34817 Coq.Lists.SetoidList <> InA ind
R34826:34827 Coq.MSets.MSetRBT <> l1 var
R34824:34824 Coq.MSets.MSetRBT <> x var
R34819:34822 Coq.MSets.MSetRBT X eq defax
R34832:34834 Coq.Lists.SetoidList <> InA ind
R34843:34844 Coq.MSets.MSetRBT <> l2 var
R34841:34841 Coq.MSets.MSetRBT <> x var
R34836:34839 Coq.MSets.MSetRBT X eq defax
R34850:34852 Coq.Lists.SetoidList <> InA ind
R34861:34863 Coq.MSets.MSetRBT <> acc var
R34859:34859 Coq.MSets.MSetRBT <> x var
R34854:34857 Coq.MSets.MSetRBT X eq defax
R34749:34752 Coq.Sorting.Sorted <> sort syndef
R34760:34762 Coq.Lists.List <> rev def
R34764:34765 Coq.MSets.MSetRBT <> l2 var
R34754:34757 Coq.MSets.MSetRBT X lt defax
R34726:34729 Coq.Sorting.Sorted <> sort syndef
R34737:34739 Coq.Lists.List <> rev def
R34741:34742 Coq.MSets.MSetRBT <> l1 var
R34731:34734 Coq.MSets.MSetRBT X lt defax
R35066:35079 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35066:35079 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35128:35141 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35128:35141 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35185:35198 Coq.MSets.MSetRBT X compare_spec prfax
R35185:35198 Coq.MSets.MSetRBT X compare_spec prfax
R35231:35238 Coq.Lists.SetoidList <> InA_cons thm
R35231:35238 Coq.Lists.SetoidList <> InA_cons thm
R35231:35238 Coq.Lists.SetoidList <> InA_cons thm
R35231:35238 Coq.Lists.SetoidList <> InA_cons thm
R35231:35238 Coq.Lists.SetoidList <> InA_cons thm
R35231:35238 Coq.Lists.SetoidList <> InA_cons thm
R35325:35328 Coq.MSets.MSetRBT X lt defax
R35325:35328 Coq.MSets.MSetRBT X lt defax
R35431:35434 Coq.MSets.MSetRBT X lt defax
R35431:35434 Coq.MSets.MSetRBT X lt defax
prf 35481:35497 MakeRaw linear_inter_spec
R35509:35510 Coq.MSets.MSetRBT MakeRaw Ok class
R35512:35513 Coq.MSets.MSetRBT <> s1 var
R35516:35517 Coq.MSets.MSetRBT MakeRaw Ok class
R35519:35520 Coq.MSets.MSetRBT <> s2 var
R35552:35556 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R35526:35528 Coq.MSets.MSetRBT MakeRaw InT ind
R35533:35544 Coq.MSets.MSetRBT MakeRaw linear_inter def
R35549:35550 Coq.MSets.MSetRBT <> s2 var
R35546:35547 Coq.MSets.MSetRBT <> s1 var
R35530:35530 Coq.MSets.MSetRBT <> x var
R35565:35568 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R35557:35559 Coq.MSets.MSetRBT MakeRaw InT ind
R35563:35564 Coq.MSets.MSetRBT <> s1 var
R35561:35561 Coq.MSets.MSetRBT <> x var
R35569:35571 Coq.MSets.MSetRBT MakeRaw InT ind
R35575:35576 Coq.MSets.MSetRBT <> s2 var
R35573:35573 Coq.MSets.MSetRBT <> x var
R35594:35605 Coq.MSets.MSetRBT MakeRaw linear_inter def
R35680:35693 Coq.Lists.List <> rev_involutive thm
R35618:35633 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35636:35647 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R35650:35664 Coq.MSets.MSetRBT MakeRaw inter_list_spec thm
R35618:35633 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35618:35633 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35618:35633 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35618:35633 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35636:35647 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R35636:35647 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R35650:35664 Coq.MSets.MSetRBT MakeRaw inter_list_spec thm
R35680:35693 Coq.Lists.List <> rev_involutive thm
R35680:35693 Coq.Lists.List <> rev_involutive thm
R35680:35693 Coq.Lists.List <> rev_involutive thm
R35680:35693 Coq.Lists.List <> rev_involutive thm
R35650:35664 Coq.MSets.MSetRBT MakeRaw inter_list_spec thm
R35716:35722 Coq.Lists.SetoidList <> InA_rev thm
R35725:35731 Coq.Lists.SetoidList <> InA_nil thm
R35735:35748 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R35716:35722 Coq.Lists.SetoidList <> InA_rev thm
R35716:35722 Coq.Lists.SetoidList <> InA_rev thm
R35716:35722 Coq.Lists.SetoidList <> InA_rev thm
R35716:35722 Coq.Lists.SetoidList <> InA_rev thm
R35725:35731 Coq.Lists.SetoidList <> InA_nil thm
R35725:35731 Coq.Lists.SetoidList <> InA_nil thm
R35735:35748 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R35735:35748 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R35735:35748 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R35735:35748 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
inst 35790:35799 MakeRaw mem_proper
R35805:35806 Coq.MSets.MSetRBT MakeRaw Ok class
R35808:35808 Coq.MSets.MSetRBT <> s var
R35814:35819 Coq.Classes.Morphisms <> Proper class
R35851:35853 Coq.MSets.MSetRBT MakeRaw mem def
R35857:35857 Coq.MSets.MSetRBT <> s var
R35855:35855 Coq.MSets.MSetRBT <> k var
R35826:35830 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R35822:35825 Coq.MSets.MSetRBT X eq defax
R35831:35838 Coq.Init.Logic <> eq ind
R35890:35908 Coq.Bool.Bool <> eq_iff_eq_true thm
R35920:35927 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R35890:35908 Coq.Bool.Bool <> eq_iff_eq_true thm
R35920:35927 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R35920:35927 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R35920:35927 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R35920:35927 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R35920:35927 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R35920:35927 Coq.MSets.MSetRBT MakeRaw mem_spec thm
prf 35965:35974 MakeRaw inter_spec
R35986:35987 Coq.MSets.MSetRBT MakeRaw Ok class
R35989:35990 Coq.MSets.MSetRBT <> s1 var
R35993:35994 Coq.MSets.MSetRBT MakeRaw Ok class
R35996:35997 Coq.MSets.MSetRBT <> s2 var
R36022:36026 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R36003:36005 Coq.MSets.MSetRBT MakeRaw InT ind
R36010:36014 Coq.MSets.MSetRBT MakeRaw inter def
R36019:36020 Coq.MSets.MSetRBT <> s2 var
R36016:36017 Coq.MSets.MSetRBT <> s1 var
R36007:36007 Coq.MSets.MSetRBT <> y var
R36035:36038 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36027:36029 Coq.MSets.MSetRBT MakeRaw InT ind
R36033:36034 Coq.MSets.MSetRBT <> s1 var
R36031:36031 Coq.MSets.MSetRBT <> y var
R36039:36041 Coq.MSets.MSetRBT MakeRaw InT ind
R36045:36046 Coq.MSets.MSetRBT <> s2 var
R36043:36043 Coq.MSets.MSetRBT <> y var
R36064:36068 Coq.MSets.MSetRBT MakeRaw inter def
R36080:36093 Coq.MSets.MSetRBT MakeRaw compare_height def
R36109:36125 Coq.MSets.MSetRBT MakeRaw linear_inter_spec thm
R36109:36125 Coq.MSets.MSetRBT MakeRaw linear_inter_spec thm
R36139:36149 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36152:36159 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36139:36149 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36139:36149 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36152:36159 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36152:36159 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36191:36201 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36204:36211 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36191:36201 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36191:36201 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36204:36211 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36204:36211 Coq.MSets.MSetRBT MakeRaw mem_spec thm
prf 36266:36277 MakeRaw diff_list_ok
R36305:36308 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36309:36312 Coq.Sorting.Sorted <> sort syndef
R36320:36328 Coq.MSets.MSetRBT MakeRaw diff_list def
R36336:36338 Coq.MSets.MSetRBT <> acc var
R36333:36334 Coq.MSets.MSetRBT <> l2 var
R36330:36331 Coq.MSets.MSetRBT <> l1 var
R36314:36317 Coq.MSets.MSetRBT X lt defax
R36292:36294 Coq.MSets.MSetRBT MakeRaw INV rec
R36302:36304 Coq.MSets.MSetRBT <> acc var
R36299:36300 Coq.MSets.MSetRBT <> l2 var
R36296:36297 Coq.MSets.MSetRBT <> l1 var
R36479:36487 Coq.MSets.MSetRBT MakeRaw diff_list def
R36497:36503 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R36497:36503 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R36528:36541 Coq.MSets.MSetRBT X compare_spec prfax
R36528:36541 Coq.MSets.MSetRBT X compare_spec prfax
R36576:36583 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36586:36592 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36595:36602 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36605:36611 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36576:36583 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36586:36592 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36595:36602 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36605:36611 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36650:36656 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36659:36666 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36669:36675 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36650:36656 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36659:36666 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36669:36675 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36708:36714 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36717:36722 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R36708:36714 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36717:36722 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R36742:36748 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36742:36748 Coq.MSets.MSetRBT MakeRaw INV_sym thm
inst 36766:36778 MakeRaw diff_inter_ok
R36788:36789 Coq.MSets.MSetRBT MakeRaw Ok class
R36791:36792 Coq.MSets.MSetRBT <> s1 var
R36795:36796 Coq.MSets.MSetRBT MakeRaw Ok class
R36798:36799 Coq.MSets.MSetRBT <> s2 var
R36805:36806 Coq.MSets.MSetRBT MakeRaw Ok class
R36809:36819 Coq.MSets.MSetRBT MakeRaw linear_diff def
R36824:36825 Coq.MSets.MSetRBT <> s2 var
R36821:36822 Coq.MSets.MSetRBT <> s1 var
R36844:36855 Coq.MSets.MSetRBT MakeRaw linear_inter def
R36868:36877 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R36880:36891 Coq.MSets.MSetRBT MakeRaw diff_list_ok thm
R36894:36901 Coq.MSets.MSetRBT MakeRaw INV_init thm
R36868:36877 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R36880:36891 Coq.MSets.MSetRBT MakeRaw diff_list_ok thm
R36894:36901 Coq.MSets.MSetRBT MakeRaw INV_init thm
inst 36919:36932 MakeRaw fold_remove_ok
R36942:36943 Coq.MSets.MSetRBT MakeRaw Ok class
R36945:36946 Coq.MSets.MSetRBT <> s2 var
R36952:36953 Coq.MSets.MSetRBT MakeRaw Ok class
R36956:36959 Coq.MSets.MSetRBT MakeRaw fold def
R36971:36972 Coq.MSets.MSetRBT <> s2 var
R36968:36969 Coq.MSets.MSetRBT <> s1 var
R36961:36966 Coq.MSets.MSetRBT MakeRaw remove def
R36992:37000 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R37006:37024 Coq.Lists.List <> fold_left_rev_right thm
R36992:37000 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R36992:37000 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R37006:37024 Coq.Lists.List <> fold_left_rev_right thm
R37006:37024 Coq.Lists.List <> fold_left_rev_right thm
R37035:37037 Coq.MSets.MSetRBT MakeRaw elt def
R37057:37059 Coq.Lists.List <> rev def
R37062:37069 Coq.MSets.MSetRBT MakeRaw elements def
R37091:37094 Coq.Program.Basics <> flip def
R37057:37059 Coq.Lists.List <> rev def
R37062:37069 Coq.MSets.MSetRBT MakeRaw elements def
inst 37126:37132 MakeRaw diff_ok
R37142:37143 Coq.MSets.MSetRBT MakeRaw Ok class
R37145:37146 Coq.MSets.MSetRBT <> s1 var
R37149:37150 Coq.MSets.MSetRBT MakeRaw Ok class
R37152:37153 Coq.MSets.MSetRBT <> s2 var
R37158:37159 Coq.MSets.MSetRBT MakeRaw Ok class
R37162:37165 Coq.MSets.MSetRBT MakeRaw diff def
R37170:37171 Coq.MSets.MSetRBT <> s2 var
R37167:37168 Coq.MSets.MSetRBT <> s1 var
R37190:37193 Coq.MSets.MSetRBT MakeRaw diff def
R37205:37218 Coq.MSets.MSetRBT MakeRaw compare_height def
prf 37242:37255 MakeRaw diff_list_spec
R37290:37294 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37313:37318 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37410:37410 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37351:37358 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R37319:37321 Coq.Lists.SetoidList <> InA ind
R37331:37339 Coq.MSets.MSetRBT MakeRaw diff_list def
R37347:37349 Coq.MSets.MSetRBT <> acc var
R37344:37345 Coq.MSets.MSetRBT <> l2 var
R37341:37342 Coq.MSets.MSetRBT <> l1 var
R37328:37328 Coq.MSets.MSetRBT <> x var
R37323:37326 Coq.MSets.MSetRBT X eq defax
R37359:37359 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37391:37395 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37373:37376 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R37360:37362 Coq.Lists.SetoidList <> InA ind
R37371:37372 Coq.MSets.MSetRBT <> l1 var
R37369:37369 Coq.MSets.MSetRBT <> x var
R37364:37367 Coq.MSets.MSetRBT X eq defax
R37377:37377 Coq.Init.Logic <> :type_scope:'~'_x not
R37378:37380 Coq.Lists.SetoidList <> InA ind
R37389:37390 Coq.MSets.MSetRBT <> l2 var
R37387:37387 Coq.MSets.MSetRBT <> x var
R37382:37385 Coq.MSets.MSetRBT X eq defax
R37396:37398 Coq.Lists.SetoidList <> InA ind
R37407:37409 Coq.MSets.MSetRBT <> acc var
R37405:37405 Coq.MSets.MSetRBT <> x var
R37400:37403 Coq.MSets.MSetRBT X eq defax
R37295:37298 Coq.Sorting.Sorted <> sort syndef
R37306:37308 Coq.Lists.List <> rev def
R37310:37311 Coq.MSets.MSetRBT <> l2 var
R37300:37303 Coq.MSets.MSetRBT X lt defax
R37272:37275 Coq.Sorting.Sorted <> sort syndef
R37283:37285 Coq.Lists.List <> rev def
R37287:37288 Coq.MSets.MSetRBT <> l1 var
R37277:37280 Coq.MSets.MSetRBT X lt defax
R37577:37590 Coq.Lists.List <> rev_append_rev thm
R37577:37590 Coq.Lists.List <> rev_append_rev thm
R37577:37590 Coq.Lists.List <> rev_append_rev thm
R37644:37657 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R37644:37657 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R37706:37719 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R37706:37719 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R37763:37776 Coq.MSets.MSetRBT X compare_spec prfax
R37763:37776 Coq.MSets.MSetRBT X compare_spec prfax
R37865:37868 Coq.MSets.MSetRBT X lt defax
R37865:37868 Coq.MSets.MSetRBT X lt defax
R37986:37989 Coq.MSets.MSetRBT X lt defax
R37986:37989 Coq.MSets.MSetRBT X lt defax
R38137:38140 Coq.MSets.MSetRBT X lt defax
R38137:38140 Coq.MSets.MSetRBT X lt defax
prf 38187:38202 MakeRaw linear_diff_spec
R38214:38215 Coq.MSets.MSetRBT MakeRaw Ok class
R38217:38218 Coq.MSets.MSetRBT <> s1 var
R38221:38222 Coq.MSets.MSetRBT MakeRaw Ok class
R38224:38225 Coq.MSets.MSetRBT <> s2 var
R38256:38260 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R38231:38233 Coq.MSets.MSetRBT MakeRaw InT ind
R38238:38248 Coq.MSets.MSetRBT MakeRaw linear_diff def
R38253:38254 Coq.MSets.MSetRBT <> s2 var
R38250:38251 Coq.MSets.MSetRBT <> s1 var
R38235:38235 Coq.MSets.MSetRBT <> x var
R38269:38272 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38261:38263 Coq.MSets.MSetRBT MakeRaw InT ind
R38267:38268 Coq.MSets.MSetRBT <> s1 var
R38265:38265 Coq.MSets.MSetRBT <> x var
R38273:38273 Coq.Init.Logic <> :type_scope:'~'_x not
R38274:38276 Coq.MSets.MSetRBT MakeRaw InT ind
R38280:38281 Coq.MSets.MSetRBT <> s2 var
R38278:38278 Coq.MSets.MSetRBT <> x var
R38299:38309 Coq.MSets.MSetRBT MakeRaw linear_diff def
R38383:38396 Coq.Lists.List <> rev_involutive thm
R38322:38337 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38340:38351 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R38354:38367 Coq.MSets.MSetRBT MakeRaw diff_list_spec thm
R38322:38337 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38322:38337 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38322:38337 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38322:38337 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38340:38351 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R38340:38351 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R38354:38367 Coq.MSets.MSetRBT MakeRaw diff_list_spec thm
R38383:38396 Coq.Lists.List <> rev_involutive thm
R38383:38396 Coq.Lists.List <> rev_involutive thm
R38383:38396 Coq.Lists.List <> rev_involutive thm
R38383:38396 Coq.Lists.List <> rev_involutive thm
R38354:38367 Coq.MSets.MSetRBT MakeRaw diff_list_spec thm
R38419:38425 Coq.Lists.SetoidList <> InA_rev thm
R38428:38434 Coq.Lists.SetoidList <> InA_nil thm
R38438:38451 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38419:38425 Coq.Lists.SetoidList <> InA_rev thm
R38419:38425 Coq.Lists.SetoidList <> InA_rev thm
R38419:38425 Coq.Lists.SetoidList <> InA_rev thm
R38419:38425 Coq.Lists.SetoidList <> InA_rev thm
R38428:38434 Coq.Lists.SetoidList <> InA_nil thm
R38428:38434 Coq.Lists.SetoidList <> InA_nil thm
R38438:38451 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38438:38451 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38438:38451 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38438:38451 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
prf 38484:38499 MakeRaw fold_remove_spec
R38511:38512 Coq.MSets.MSetRBT MakeRaw Ok class
R38514:38515 Coq.MSets.MSetRBT <> s2 var
R38547:38551 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R38522:38524 Coq.MSets.MSetRBT MakeRaw InT ind
R38529:38532 Coq.MSets.MSetRBT MakeRaw fold def
R38544:38545 Coq.MSets.MSetRBT <> s2 var
R38541:38542 Coq.MSets.MSetRBT <> s1 var
R38534:38539 Coq.MSets.MSetRBT MakeRaw remove def
R38526:38526 Coq.MSets.MSetRBT <> x var
R38560:38563 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38552:38554 Coq.MSets.MSetRBT MakeRaw InT ind
R38558:38559 Coq.MSets.MSetRBT <> s2 var
R38556:38556 Coq.MSets.MSetRBT <> x var
R38564:38564 Coq.Init.Logic <> :type_scope:'~'_x not
R38565:38567 Coq.MSets.MSetRBT MakeRaw InT ind
R38571:38572 Coq.MSets.MSetRBT <> s1 var
R38569:38569 Coq.MSets.MSetRBT <> x var
R38591:38599 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R38605:38623 Coq.Lists.List <> fold_left_rev_right thm
R38591:38599 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R38591:38599 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R38605:38623 Coq.Lists.List <> fold_left_rev_right thm
R38605:38623 Coq.Lists.List <> fold_left_rev_right thm
R38639:38652 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38662:38668 Coq.Lists.SetoidList <> InA_rev thm
R38639:38652 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38639:38652 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38662:38668 Coq.Lists.SetoidList <> InA_rev thm
R38662:38668 Coq.Lists.SetoidList <> InA_rev thm
R38690:38692 Coq.MSets.MSetRBT MakeRaw elt def
R38712:38714 Coq.Lists.List <> rev def
R38717:38724 Coq.MSets.MSetRBT MakeRaw elements def
R38712:38714 Coq.Lists.List <> rev def
R38717:38724 Coq.MSets.MSetRBT MakeRaw elements def
R38758:38764 Coq.Lists.SetoidList <> InA_nil thm
R38758:38764 Coq.Lists.SetoidList <> InA_nil thm
R38758:38764 Coq.Lists.SetoidList <> InA_nil thm
R38788:38791 Coq.Program.Basics <> flip def
R38807:38817 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R38825:38832 Coq.Lists.SetoidList <> InA_cons thm
R38807:38817 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R38807:38817 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R38807:38817 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R38825:38832 Coq.Lists.SetoidList <> InA_cons thm
R38825:38832 Coq.Lists.SetoidList <> InA_cons thm
prf 38897:38905 MakeRaw diff_spec
R38917:38918 Coq.MSets.MSetRBT MakeRaw Ok class
R38920:38921 Coq.MSets.MSetRBT <> s1 var
R38924:38925 Coq.MSets.MSetRBT MakeRaw Ok class
R38927:38928 Coq.MSets.MSetRBT <> s2 var
R38952:38956 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R38934:38936 Coq.MSets.MSetRBT MakeRaw InT ind
R38941:38944 Coq.MSets.MSetRBT MakeRaw diff def
R38949:38950 Coq.MSets.MSetRBT <> s2 var
R38946:38947 Coq.MSets.MSetRBT <> s1 var
R38938:38938 Coq.MSets.MSetRBT <> y var
R38965:38968 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38957:38959 Coq.MSets.MSetRBT MakeRaw InT ind
R38963:38964 Coq.MSets.MSetRBT <> s1 var
R38961:38961 Coq.MSets.MSetRBT <> y var
R38969:38969 Coq.Init.Logic <> :type_scope:'~'_x not
R38970:38972 Coq.MSets.MSetRBT MakeRaw InT ind
R38976:38977 Coq.MSets.MSetRBT <> s2 var
R38974:38974 Coq.MSets.MSetRBT <> y var
R38995:38998 Coq.MSets.MSetRBT MakeRaw diff def
R39010:39023 Coq.MSets.MSetRBT MakeRaw compare_height def
R39039:39054 Coq.MSets.MSetRBT MakeRaw linear_diff_spec thm
R39039:39054 Coq.MSets.MSetRBT MakeRaw linear_diff_spec thm
R39068:39078 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39081:39098 Coq.Bool.Bool <> negb_true_iff thm
R39109:39131 Coq.Bool.Bool <> not_true_iff_false thm
R39134:39141 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39068:39078 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39068:39078 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39068:39078 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39081:39098 Coq.Bool.Bool <> negb_true_iff thm
R39081:39098 Coq.Bool.Bool <> negb_true_iff thm
R39109:39131 Coq.Bool.Bool <> not_true_iff_false thm
R39109:39131 Coq.Bool.Bool <> not_true_iff_false thm
R39134:39141 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39134:39141 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39134:39141 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39199:39208 Coq.MSets.MSetRBT MakeRaw mem_proper inst
R39199:39208 Coq.MSets.MSetRBT MakeRaw mem_proper inst
R39224:39239 Coq.MSets.MSetRBT MakeRaw fold_remove_spec thm
R39224:39239 Coq.MSets.MSetRBT MakeRaw fold_remove_spec thm
R39252:39258 Coq.MSets.MSetRBT MakeRaw <> modtype
R39436:39453 Coq.Structures.Orders OrderedType <> mod
R39467:39473 Coq.MSets.MSetRBT MakeRaw <> mod
R39475:39475 Coq.MSets.MSetRBT X <> modtype
mod 39421:39432 <> BalanceProps
syndef 39495:39496 BalanceProps Rd
R39502:39505 Coq.MSets.MSetRBT M Node constr
R39507:39509 Coq.MSets.MSetRBT <> Red constr
syndef 39528:39529 BalanceProps Bk
R39535:39538 Coq.MSets.MSetRBT M Node constr
R39540:39544 Coq.MSets.MSetRBT <> Black constr
ind 39793:39795 BalanceProps rbt
constr 39825:39831 BalanceProps RB_Leaf
constr 39849:39853 BalanceProps RB_Rd
constr 39934:39938 BalanceProps RB_Bk
R39802:39805 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39810:39813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39806:39809 Coq.MSets.MSetRBT M tree ind
R39799:39801 Coq.Init.Datatypes <> nat ind
R39835:39837 Coq.MSets.MSetRBT <> rbt ind
R39841:39844 Coq.MSets.MSetRBT M Leaf constr
R39876:39879 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39888:39891 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39899:39902 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39910:39913 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39914:39916 Coq.MSets.MSetRBT <> rbt ind
R39921:39922 Coq.MSets.MSetRBT BalanceProps Rd syndef
R39928:39928 Coq.MSets.MSetRBT <> r var
R39926:39926 Coq.MSets.MSetRBT <> k var
R39924:39924 Coq.MSets.MSetRBT <> l var
R39918:39918 Coq.MSets.MSetRBT <> n var
R39903:39905 Coq.MSets.MSetRBT <> rbt ind
R39909:39909 Coq.MSets.MSetRBT <> r var
R39907:39907 Coq.MSets.MSetRBT <> n var
R39892:39894 Coq.MSets.MSetRBT <> rbt ind
R39898:39898 Coq.MSets.MSetRBT <> l var
R39896:39896 Coq.MSets.MSetRBT <> n var
R39880:39885 Coq.MSets.MSetRBT M notred def
R39887:39887 Coq.MSets.MSetRBT <> r var
R39868:39873 Coq.MSets.MSetRBT M notred def
R39875:39875 Coq.MSets.MSetRBT <> l var
R39957:39960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39968:39971 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39972:39974 Coq.MSets.MSetRBT <> rbt ind
R39983:39984 Coq.MSets.MSetRBT BalanceProps Bk syndef
R39990:39990 Coq.MSets.MSetRBT <> r var
R39988:39988 Coq.MSets.MSetRBT <> k var
R39986:39986 Coq.MSets.MSetRBT <> l var
R39977:39977 Coq.Init.Datatypes <> S constr
R39979:39979 Coq.MSets.MSetRBT <> n var
R39961:39963 Coq.MSets.MSetRBT <> rbt ind
R39967:39967 Coq.MSets.MSetRBT <> r var
R39965:39965 Coq.MSets.MSetRBT <> n var
R39950:39952 Coq.MSets.MSetRBT <> rbt ind
R39956:39956 Coq.MSets.MSetRBT <> l var
R39954:39954 Coq.MSets.MSetRBT <> n var
ind 40224:40226 BalanceProps rrt
constr 40257:40261 BalanceProps RR_Rd
R40231:40233 Coq.Init.Datatypes <> nat ind
R40242:40245 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40238:40241 Coq.MSets.MSetRBT M tree ind
R40278:40281 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40289:40292 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40293:40295 Coq.MSets.MSetRBT <> rrt ind
R40300:40301 Coq.MSets.MSetRBT BalanceProps Rd syndef
R40307:40307 Coq.MSets.MSetRBT <> r var
R40305:40305 Coq.MSets.MSetRBT <> k var
R40303:40303 Coq.MSets.MSetRBT <> l var
R40282:40284 Coq.MSets.MSetRBT BalanceProps rbt ind
R40288:40288 Coq.MSets.MSetRBT <> r var
R40271:40273 Coq.MSets.MSetRBT BalanceProps rbt ind
R40277:40277 Coq.MSets.MSetRBT <> l var
ind 40587:40590 BalanceProps arbt
constr 40621:40626 BalanceProps ARB_RB
constr 40653:40658 BalanceProps ARB_RR
R40595:40597 Coq.Init.Datatypes <> nat ind
R40602:40605 Coq.MSets.MSetRBT M tree ind
R40637:40640 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40641:40644 Coq.MSets.MSetRBT <> arbt ind
R40630:40632 Coq.MSets.MSetRBT BalanceProps rbt ind
R40669:40672 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40673:40676 Coq.MSets.MSetRBT <> arbt ind
R40662:40664 Coq.MSets.MSetRBT BalanceProps rrt ind
ind 40777:40779 BalanceProps Rbt
constr 40794:40796 BalanceProps RBT
rec 40777:40779 BalanceProps Rbt
proj 40794:40796 BalanceProps RBT
R40784:40787 Coq.MSets.MSetRBT M tree ind
R40800:40806 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40808:40809 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40810:40812 Coq.MSets.MSetRBT BalanceProps rbt ind
R40816:40816 Coq.MSets.MSetRBT <> t var
R40814:40814 Coq.MSets.MSetRBT <> d var
def 40880:40886 BalanceProps rbt_ind
R40905:40907 Coq.MSets.MSetRBT BalanceProps rbt ind
R40944:40946 Coq.MSets.MSetRBT <> rbt ind
R40948:40950 Coq.MSets.MSetRBT <> rrt ind
R40952:40955 Coq.MSets.MSetRBT <> arbt ind
R40979:40984 Coq.MSets.MSetRBT M notred def
R40999:40999 Coq.Init.Logic <> I constr
R41103:41106 Coq.MSets.MSetRBT BalanceProps arbt ind
R41103:41106 Coq.MSets.MSetRBT BalanceProps arbt ind
prf 41202:41210 BalanceProps rr_nrr_rb
R41226:41229 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41241:41244 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41245:41247 Coq.MSets.MSetRBT BalanceProps rbt ind
R41251:41251 Coq.MSets.MSetRBT <> t var
R41249:41249 Coq.MSets.MSetRBT <> n var
R41230:41238 Coq.MSets.MSetRBT M notredred syndef
R41240:41240 Coq.MSets.MSetRBT <> t var
R41219:41221 Coq.MSets.MSetRBT BalanceProps rrt ind
R41225:41225 Coq.MSets.MSetRBT <> t var
R41223:41223 Coq.MSets.MSetRBT <> n var
prf 41373:41382 BalanceProps arb_nrr_rb
R41399:41402 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41414:41417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41418:41420 Coq.MSets.MSetRBT BalanceProps rbt ind
R41424:41424 Coq.MSets.MSetRBT <> t var
R41422:41422 Coq.MSets.MSetRBT <> n var
R41403:41411 Coq.MSets.MSetRBT M notredred syndef
R41413:41413 Coq.MSets.MSetRBT <> t var
R41391:41394 Coq.MSets.MSetRBT BalanceProps arbt ind
R41398:41398 Coq.MSets.MSetRBT <> t var
R41396:41396 Coq.MSets.MSetRBT <> n var
prf 41465:41473 BalanceProps arb_nr_rb
R41490:41493 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41502:41505 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41506:41508 Coq.MSets.MSetRBT BalanceProps rbt ind
R41512:41512 Coq.MSets.MSetRBT <> t var
R41510:41510 Coq.MSets.MSetRBT <> n var
R41494:41499 Coq.MSets.MSetRBT M notred def
R41501:41501 Coq.MSets.MSetRBT <> t var
R41482:41485 Coq.MSets.MSetRBT BalanceProps arbt ind
R41489:41489 Coq.MSets.MSetRBT <> t var
R41487:41487 Coq.MSets.MSetRBT <> n var
def 41688:41695 BalanceProps redcarac
R41702:41706 Coq.MSets.MSetRBT M rcase def
R41738:41738 Coq.MSets.MSetRBT <> s var
prf 41748:41758 BalanceProps rb_maxdepth
R41773:41776 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41787:41790 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R41777:41784 Coq.MSets.MSetRBT M maxdepth def
R41786:41786 Coq.MSets.MSetRBT <> s var
R41794:41796 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R41792:41792 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R41793:41793 Coq.MSets.MSetRBT <> n var
R41797:41804 Coq.MSets.MSetRBT BalanceProps redcarac def
R41806:41806 Coq.MSets.MSetRBT <> s var
R41766:41768 Coq.MSets.MSetRBT BalanceProps rbt ind
R41772:41772 Coq.MSets.MSetRBT <> s var
R41770:41770 Coq.MSets.MSetRBT <> n var
R41858:41865 Coq.MSets.MSetRBT BalanceProps redcarac def
R41858:41865 Coq.MSets.MSetRBT BalanceProps redcarac def
R41912:41919 Coq.MSets.MSetRBT BalanceProps redcarac def
R41912:41919 Coq.MSets.MSetRBT BalanceProps redcarac def
R42000:42013 Coq.Arith.PeanoNat Nat add_succ_r thm
R42019:42034 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42000:42013 Coq.Arith.PeanoNat Nat add_succ_r thm
R42000:42013 Coq.Arith.PeanoNat Nat add_succ_r thm
R42019:42034 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42019:42034 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42050:42060 Coq.Arith.PeanoNat Nat max_lub thm
R42050:42060 Coq.Arith.PeanoNat Nat max_lub thm
R42084:42099 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42084:42099 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42084:42099 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42111:42121 Coq.Arith.PeanoNat Nat max_lub thm
R42131:42142 Coq.Arith.PeanoNat Nat le_trans thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42111:42121 Coq.Arith.PeanoNat Nat max_lub thm
R42131:42142 Coq.Arith.PeanoNat Nat le_trans thm
R42131:42142 Coq.Arith.PeanoNat Nat le_trans thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42199:42209 Coq.Arith.PeanoNat Nat add_0_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
R42213:42223 Coq.Arith.PeanoNat Nat add_1_r thm
prf 42255:42265 BalanceProps rb_mindepth
R42280:42283 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42298:42301 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R42285:42287 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42284:42284 Coq.MSets.MSetRBT <> n var
R42288:42295 Coq.MSets.MSetRBT BalanceProps redcarac def
R42297:42297 Coq.MSets.MSetRBT <> s var
R42302:42309 Coq.MSets.MSetRBT M mindepth def
R42311:42311 Coq.MSets.MSetRBT <> s var
R42273:42275 Coq.MSets.MSetRBT BalanceProps rbt ind
R42279:42279 Coq.MSets.MSetRBT <> s var
R42277:42277 Coq.MSets.MSetRBT <> n var
R42365:42378 Coq.Arith.PeanoNat Nat add_succ_r thm
R42365:42378 Coq.Arith.PeanoNat Nat add_succ_r thm
R42365:42378 Coq.Arith.PeanoNat Nat add_succ_r thm
R42393:42408 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42393:42408 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42423:42430 Coq.MSets.MSetRBT BalanceProps redcarac def
R42423:42430 Coq.MSets.MSetRBT BalanceProps redcarac def
R42477:42484 Coq.MSets.MSetRBT BalanceProps redcarac def
R42477:42484 Coq.MSets.MSetRBT BalanceProps redcarac def
R42532:42542 Coq.Arith.PeanoNat Nat min_glb thm
R42532:42542 Coq.Arith.PeanoNat Nat min_glb thm
R42557:42572 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42557:42572 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42583:42593 Coq.Arith.PeanoNat Nat add_0_r thm
R42583:42593 Coq.Arith.PeanoNat Nat add_0_r thm
R42583:42593 Coq.Arith.PeanoNat Nat add_0_r thm
R42605:42615 Coq.Arith.PeanoNat Nat min_glb thm
R42605:42615 Coq.Arith.PeanoNat Nat min_glb thm
prf 42648:42666 BalanceProps maxdepth_upperbound
R42677:42681 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42692:42695 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R42682:42689 Coq.MSets.MSetRBT M maxdepth def
R42691:42691 Coq.MSets.MSetRBT <> s var
R42697:42699 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42700:42707 Coq.Arith.PeanoNat Nat log2 def
R42710:42710 Coq.Init.Datatypes <> S constr
R42713:42720 Coq.MSets.MSetRBT M cardinal def
R42722:42722 Coq.MSets.MSetRBT <> s var
R42672:42674 Coq.MSets.MSetRBT BalanceProps Rbt class
R42676:42676 Coq.MSets.MSetRBT <> s var
R42757:42768 Coq.Arith.PeanoNat Nat le_trans thm
R42779:42789 Coq.MSets.MSetRBT BalanceProps rb_maxdepth thm
R42757:42768 Coq.Arith.PeanoNat Nat le_trans thm
R42779:42789 Coq.MSets.MSetRBT BalanceProps rb_maxdepth thm
R42817:42818 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42831:42831 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42820:42820 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42821:42828 Coq.MSets.MSetRBT BalanceProps redcarac def
R42817:42818 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42831:42831 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42820:42820 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42821:42828 Coq.MSets.MSetRBT BalanceProps redcarac def
R42846:42864 Coq.Arith.PeanoNat Nat mul_add_distr_l thm
R42846:42864 Coq.Arith.PeanoNat Nat mul_add_distr_l thm
R42846:42864 Coq.Arith.PeanoNat Nat mul_add_distr_l thm
R42873:42889 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R42873:42889 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R42906:42916 Coq.Arith.PeanoNat Nat mul_1_l thm
R42906:42916 Coq.Arith.PeanoNat Nat mul_1_l thm
R42906:42916 Coq.Arith.PeanoNat Nat mul_1_l thm
R42930:42946 Coq.Arith.PeanoNat Nat mul_le_mono_r thm
R42930:42946 Coq.Arith.PeanoNat Nat mul_le_mono_r thm
R42978:42994 Coq.Arith.PeanoNat Nat mul_le_mono_l thm
R42978:42994 Coq.Arith.PeanoNat Nat mul_le_mono_l thm
R43014:43021 Coq.MSets.MSetRBT M mindepth def
R43014:43021 Coq.MSets.MSetRBT M mindepth def
R43042:43052 Coq.MSets.MSetRBT BalanceProps rb_mindepth thm
R43042:43052 Coq.MSets.MSetRBT BalanceProps rb_mindepth thm
R43066:43086 Coq.MSets.MSetRBT M mindepth_log_cardinal thm
R43066:43086 Coq.MSets.MSetRBT M mindepth_log_cardinal thm
prf 43101:43119 BalanceProps maxdepth_lowerbound
R43132:43136 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43158:43160 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R43137:43144 Coq.Arith.PeanoNat Nat log2 def
R43147:43154 Coq.MSets.MSetRBT M cardinal def
R43156:43156 Coq.MSets.MSetRBT <> s var
R43161:43168 Coq.MSets.MSetRBT M maxdepth def
R43170:43170 Coq.MSets.MSetRBT <> s var
R43126:43127 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R43125:43125 Coq.MSets.MSetRBT <> s var
R43128:43131 Coq.MSets.MSetRBT M Leaf constr
R43187:43207 Coq.MSets.MSetRBT M maxdepth_log_cardinal thm
R43187:43207 Coq.MSets.MSetRBT M maxdepth_log_cardinal thm
prf 43244:43255 BalanceProps singleton_rb
R43261:43263 Coq.MSets.MSetRBT BalanceProps Rbt class
R43266:43274 Coq.MSets.MSetRBT M singleton def
R43276:43276 Coq.MSets.MSetRBT <> x var
R43295:43303 Coq.MSets.MSetRBT M singleton def
prf 43371:43382 BalanceProps makeBlack_rb
R43398:43401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43402:43404 Coq.MSets.MSetRBT BalanceProps Rbt class
R43407:43415 Coq.MSets.MSetRBT M makeBlack def
R43417:43417 Coq.MSets.MSetRBT <> t var
R43390:43393 Coq.MSets.MSetRBT BalanceProps arbt ind
R43397:43397 Coq.MSets.MSetRBT <> t var
R43395:43395 Coq.MSets.MSetRBT <> n var
R43506:43506 Coq.Init.Datatypes <> S constr
R43506:43506 Coq.Init.Datatypes <> S constr
R43506:43506 Coq.Init.Datatypes <> S constr
prf 43556:43565 BalanceProps makeRed_rr
R43585:43588 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43597:43600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43601:43603 Coq.MSets.MSetRBT BalanceProps rrt ind
R43608:43614 Coq.MSets.MSetRBT M makeRed def
R43616:43616 Coq.MSets.MSetRBT <> t var
R43605:43605 Coq.MSets.MSetRBT <> n var
R43589:43594 Coq.MSets.MSetRBT M notred def
R43596:43596 Coq.MSets.MSetRBT <> t var
R43574:43576 Coq.MSets.MSetRBT BalanceProps rbt ind
R43584:43584 Coq.MSets.MSetRBT <> t var
R43579:43579 Coq.Init.Datatypes <> S constr
R43581:43581 Coq.MSets.MSetRBT <> n var
prf 43709:43715 BalanceProps lbal_rb
R43736:43739 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43747:43750 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43751:43753 Coq.MSets.MSetRBT BalanceProps rbt ind
R43762:43765 Coq.MSets.MSetRBT M lbal def
R43771:43771 Coq.MSets.MSetRBT <> r var
R43769:43769 Coq.MSets.MSetRBT <> k var
R43767:43767 Coq.MSets.MSetRBT <> l var
R43756:43756 Coq.Init.Datatypes <> S constr
R43758:43758 Coq.MSets.MSetRBT <> n var
R43740:43742 Coq.MSets.MSetRBT BalanceProps rbt ind
R43746:43746 Coq.MSets.MSetRBT <> r var
R43744:43744 Coq.MSets.MSetRBT <> n var
R43728:43731 Coq.MSets.MSetRBT BalanceProps arbt ind
R43735:43735 Coq.MSets.MSetRBT <> l var
R43733:43733 Coq.MSets.MSetRBT <> n var
R43787:43796 Coq.MSets.MSetRBT M lbal_match thm
R43787:43796 Coq.MSets.MSetRBT M lbal_match thm
prf 43840:43846 BalanceProps rbal_rb
R43866:43869 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43878:43881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43882:43884 Coq.MSets.MSetRBT BalanceProps rbt ind
R43893:43896 Coq.MSets.MSetRBT M rbal def
R43902:43902 Coq.MSets.MSetRBT <> r var
R43900:43900 Coq.MSets.MSetRBT <> k var
R43898:43898 Coq.MSets.MSetRBT <> l var
R43887:43887 Coq.Init.Datatypes <> S constr
R43889:43889 Coq.MSets.MSetRBT <> n var
R43870:43873 Coq.MSets.MSetRBT BalanceProps arbt ind
R43877:43877 Coq.MSets.MSetRBT <> r var
R43875:43875 Coq.MSets.MSetRBT <> n var
R43859:43861 Coq.MSets.MSetRBT BalanceProps rbt ind
R43865:43865 Coq.MSets.MSetRBT <> l var
R43863:43863 Coq.MSets.MSetRBT <> n var
R43918:43927 Coq.MSets.MSetRBT M rbal_match thm
R43918:43927 Coq.MSets.MSetRBT M rbal_match thm
prf 43971:43978 BalanceProps rbal'_rb
R43998:44001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44010:44013 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44014:44016 Coq.MSets.MSetRBT BalanceProps rbt ind
R44025:44029 Coq.MSets.MSetRBT M rbal' def
R44035:44035 Coq.MSets.MSetRBT <> r var
R44033:44033 Coq.MSets.MSetRBT <> k var
R44031:44031 Coq.MSets.MSetRBT <> l var
R44019:44019 Coq.Init.Datatypes <> S constr
R44021:44021 Coq.MSets.MSetRBT <> n var
R44002:44005 Coq.MSets.MSetRBT BalanceProps arbt ind
R44009:44009 Coq.MSets.MSetRBT <> r var
R44007:44007 Coq.MSets.MSetRBT <> n var
R43991:43993 Coq.MSets.MSetRBT BalanceProps rbt ind
R43997:43997 Coq.MSets.MSetRBT <> l var
R43995:43995 Coq.MSets.MSetRBT <> n var
R44051:44061 Coq.MSets.MSetRBT M rbal'_match thm
R44051:44061 Coq.MSets.MSetRBT M rbal'_match thm
prf 44105:44112 BalanceProps lbalS_rb
R44133:44136 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44148:44151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44160:44163 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44164:44166 Coq.MSets.MSetRBT BalanceProps rbt ind
R44175:44179 Coq.MSets.MSetRBT M lbalS def
R44185:44185 Coq.MSets.MSetRBT <> r var
R44183:44183 Coq.MSets.MSetRBT <> x var
R44181:44181 Coq.MSets.MSetRBT <> l var
R44169:44169 Coq.Init.Datatypes <> S constr
R44171:44171 Coq.MSets.MSetRBT <> n var
R44152:44157 Coq.MSets.MSetRBT M notred def
R44159:44159 Coq.MSets.MSetRBT <> r var
R44137:44139 Coq.MSets.MSetRBT BalanceProps rbt ind
R44147:44147 Coq.MSets.MSetRBT <> r var
R44142:44142 Coq.Init.Datatypes <> S constr
R44144:44144 Coq.MSets.MSetRBT <> n var
R44125:44128 Coq.MSets.MSetRBT BalanceProps arbt ind
R44132:44132 Coq.MSets.MSetRBT <> l var
R44130:44130 Coq.MSets.MSetRBT <> n var
R44283:44293 Coq.MSets.MSetRBT M lbalS_match thm
R44283:44293 Coq.MSets.MSetRBT M lbalS_match thm
R44341:44348 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44341:44348 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
prf 44369:44377 BalanceProps lbalS_arb
R44398:44401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44413:44416 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44417:44420 Coq.MSets.MSetRBT BalanceProps arbt ind
R44429:44433 Coq.MSets.MSetRBT M lbalS def
R44439:44439 Coq.MSets.MSetRBT <> r var
R44437:44437 Coq.MSets.MSetRBT <> x var
R44435:44435 Coq.MSets.MSetRBT <> l var
R44423:44423 Coq.Init.Datatypes <> S constr
R44425:44425 Coq.MSets.MSetRBT <> n var
R44402:44404 Coq.MSets.MSetRBT BalanceProps rbt ind
R44412:44412 Coq.MSets.MSetRBT <> r var
R44407:44407 Coq.Init.Datatypes <> S constr
R44409:44409 Coq.MSets.MSetRBT <> n var
R44390:44393 Coq.MSets.MSetRBT BalanceProps arbt ind
R44397:44397 Coq.MSets.MSetRBT <> l var
R44395:44395 Coq.MSets.MSetRBT <> n var
R44456:44466 Coq.MSets.MSetRBT M lbalS_match thm
R44456:44466 Coq.MSets.MSetRBT M lbalS_match thm
R44640:44647 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44650:44659 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R44640:44647 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44650:44659 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R44679:44686 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44679:44686 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
prf 44707:44714 BalanceProps rbalS_rb
R44738:44741 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44750:44753 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44762:44765 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44766:44768 Coq.MSets.MSetRBT BalanceProps rbt ind
R44777:44781 Coq.MSets.MSetRBT M rbalS def
R44787:44787 Coq.MSets.MSetRBT <> r var
R44785:44785 Coq.MSets.MSetRBT <> x var
R44783:44783 Coq.MSets.MSetRBT <> l var
R44771:44771 Coq.Init.Datatypes <> S constr
R44773:44773 Coq.MSets.MSetRBT <> n var
R44754:44757 Coq.MSets.MSetRBT BalanceProps arbt ind
R44761:44761 Coq.MSets.MSetRBT <> r var
R44759:44759 Coq.MSets.MSetRBT <> n var
R44742:44747 Coq.MSets.MSetRBT M notred def
R44749:44749 Coq.MSets.MSetRBT <> l var
R44727:44729 Coq.MSets.MSetRBT BalanceProps rbt ind
R44737:44737 Coq.MSets.MSetRBT <> l var
R44732:44732 Coq.Init.Datatypes <> S constr
R44734:44734 Coq.MSets.MSetRBT <> n var
R44885:44895 Coq.MSets.MSetRBT M rbalS_match thm
R44885:44895 Coq.MSets.MSetRBT M rbalS_match thm
R44943:44949 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R44943:44949 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
prf 44970:44978 BalanceProps rbalS_arb
R45002:45005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45014:45017 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45018:45021 Coq.MSets.MSetRBT BalanceProps arbt ind
R45030:45034 Coq.MSets.MSetRBT M rbalS def
R45040:45040 Coq.MSets.MSetRBT <> r var
R45038:45038 Coq.MSets.MSetRBT <> x var
R45036:45036 Coq.MSets.MSetRBT <> l var
R45024:45024 Coq.Init.Datatypes <> S constr
R45026:45026 Coq.MSets.MSetRBT <> n var
R45006:45009 Coq.MSets.MSetRBT BalanceProps arbt ind
R45013:45013 Coq.MSets.MSetRBT <> r var
R45011:45011 Coq.MSets.MSetRBT <> n var
R44991:44993 Coq.MSets.MSetRBT BalanceProps rbt ind
R45001:45001 Coq.MSets.MSetRBT <> l var
R44996:44996 Coq.Init.Datatypes <> S constr
R44998:44998 Coq.MSets.MSetRBT <> n var
R45057:45067 Coq.MSets.MSetRBT M rbalS_match thm
R45057:45067 Coq.MSets.MSetRBT M rbalS_match thm
R45241:45247 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45250:45259 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R45241:45247 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45250:45259 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R45279:45285 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45279:45285 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
def 45471:45475 BalanceProps ifred
R45493:45497 Coq.MSets.MSetRBT M rcase def
R45529:45529 Coq.MSets.MSetRBT <> s var
R45526:45526 Coq.MSets.MSetRBT <> B var
R45513:45513 Coq.MSets.MSetRBT <> A var
prf 45539:45550 BalanceProps ifred_notred
R45568:45572 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45590:45590 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45584:45588 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45573:45577 Coq.MSets.MSetRBT BalanceProps ifred def
R45583:45583 Coq.MSets.MSetRBT <> B var
R45581:45581 Coq.MSets.MSetRBT <> A var
R45579:45579 Coq.MSets.MSetRBT <> s var
R45589:45589 Coq.MSets.MSetRBT <> B var
R45560:45565 Coq.MSets.MSetRBT M notred def
R45567:45567 Coq.MSets.MSetRBT <> s var
prf 45653:45660 BalanceProps ifred_or
R45681:45684 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45686:45687 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R45685:45685 Coq.MSets.MSetRBT <> A var
R45688:45688 Coq.MSets.MSetRBT <> B var
R45670:45674 Coq.MSets.MSetRBT BalanceProps ifred def
R45680:45680 Coq.MSets.MSetRBT <> B var
R45678:45678 Coq.MSets.MSetRBT <> A var
R45676:45676 Coq.MSets.MSetRBT <> s var
prf 45751:45759 BalanceProps ins_rr_rb
R45776:45780 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45781:45785 Coq.MSets.MSetRBT BalanceProps ifred def
R45808:45810 Coq.MSets.MSetRBT BalanceProps rbt ind
R45815:45817 Coq.MSets.MSetRBT M ins def
R45821:45821 Coq.MSets.MSetRBT <> s var
R45819:45819 Coq.MSets.MSetRBT <> x var
R45812:45812 Coq.MSets.MSetRBT <> n var
R45790:45792 Coq.MSets.MSetRBT BalanceProps rrt ind
R45797:45799 Coq.MSets.MSetRBT M ins def
R45803:45803 Coq.MSets.MSetRBT <> s var
R45801:45801 Coq.MSets.MSetRBT <> x var
R45794:45794 Coq.MSets.MSetRBT <> n var
R45787:45787 Coq.MSets.MSetRBT <> s var
R45769:45771 Coq.MSets.MSetRBT BalanceProps rbt ind
R45775:45775 Coq.MSets.MSetRBT <> s var
R45773:45773 Coq.MSets.MSetRBT <> n var
R45919:45930 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R45919:45930 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R45919:45930 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R45985:45996 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R45985:45996 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R45985:45996 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46019:46021 Coq.MSets.MSetRBT M ins def
R46029:46031 Coq.MSets.MSetRBT M ins def
R46029:46031 Coq.MSets.MSetRBT M ins def
R46107:46113 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R46107:46113 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R46131:46138 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46131:46138 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46169:46175 Coq.MSets.MSetRBT BalanceProps rbal_rb thm
R46169:46175 Coq.MSets.MSetRBT BalanceProps rbal_rb thm
R46193:46200 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46193:46200 Coq.MSets.MSetRBT BalanceProps ifred_or thm
prf 46233:46239 BalanceProps ins_arb
R46256:46259 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46260:46263 Coq.MSets.MSetRBT BalanceProps arbt ind
R46268:46270 Coq.MSets.MSetRBT M ins def
R46274:46274 Coq.MSets.MSetRBT <> s var
R46272:46272 Coq.MSets.MSetRBT <> x var
R46265:46265 Coq.MSets.MSetRBT <> n var
R46249:46251 Coq.MSets.MSetRBT BalanceProps rbt ind
R46255:46255 Coq.MSets.MSetRBT <> s var
R46253:46253 Coq.MSets.MSetRBT <> n var
R46303:46311 Coq.MSets.MSetRBT BalanceProps ins_rr_rb thm
R46317:46324 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46303:46311 Coq.MSets.MSetRBT BalanceProps ins_rr_rb thm
R46317:46324 Coq.MSets.MSetRBT BalanceProps ifred_or thm
inst 46358:46363 BalanceProps add_rb
R46376:46379 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46380:46382 Coq.MSets.MSetRBT BalanceProps Rbt class
R46385:46387 Coq.MSets.MSetRBT M add def
R46391:46391 Coq.MSets.MSetRBT <> s var
R46389:46389 Coq.MSets.MSetRBT <> x var
R46371:46373 Coq.MSets.MSetRBT BalanceProps Rbt class
R46375:46375 Coq.MSets.MSetRBT <> s var
R46424:46426 Coq.MSets.MSetRBT M add def
R46440:46451 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R46457:46463 Coq.MSets.MSetRBT BalanceProps ins_arb thm
R46440:46451 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R46457:46463 Coq.MSets.MSetRBT BalanceProps ins_arb thm
prf 46556:46568 BalanceProps append_arb_rb
R46585:46588 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46596:46600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46601:46601 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46621:46627 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46670:46670 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46602:46605 Coq.MSets.MSetRBT BalanceProps arbt ind
R46610:46615 Coq.MSets.MSetRBT M append def
R46619:46619 Coq.MSets.MSetRBT <> r var
R46617:46617 Coq.MSets.MSetRBT <> l var
R46607:46607 Coq.MSets.MSetRBT <> n var
R46636:46639 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46648:46651 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46652:46654 Coq.MSets.MSetRBT BalanceProps rbt ind
R46659:46664 Coq.MSets.MSetRBT M append def
R46668:46668 Coq.MSets.MSetRBT <> r var
R46666:46666 Coq.MSets.MSetRBT <> l var
R46656:46656 Coq.MSets.MSetRBT <> n var
R46640:46645 Coq.MSets.MSetRBT M notred def
R46647:46647 Coq.MSets.MSetRBT <> r var
R46628:46633 Coq.MSets.MSetRBT M notred def
R46635:46635 Coq.MSets.MSetRBT <> l var
R46589:46591 Coq.MSets.MSetRBT BalanceProps rbt ind
R46595:46595 Coq.MSets.MSetRBT <> r var
R46593:46593 Coq.MSets.MSetRBT <> n var
R46578:46580 Coq.MSets.MSetRBT BalanceProps rbt ind
R46584:46584 Coq.MSets.MSetRBT <> l var
R46582:46582 Coq.MSets.MSetRBT <> n var
R46817:46831 Coq.MSets.MSetRBT M append_rr_match thm
R46817:46831 Coq.MSets.MSetRBT M append_rr_match thm
R46882:46884 Coq.MSets.MSetRBT BalanceProps rbt ind
R46889:46890 Coq.MSets.MSetRBT BalanceProps Rd syndef
R46882:46884 Coq.MSets.MSetRBT BalanceProps rbt ind
R46889:46890 Coq.MSets.MSetRBT BalanceProps Rd syndef
R47201:47215 Coq.MSets.MSetRBT M append_bb_match thm
R47201:47215 Coq.MSets.MSetRBT M append_bb_match thm
R47310:47317 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R47310:47317 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R47310:47317 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
prf 47378:47384 BalanceProps del_arb
prf 47444:47449 BalanceProps del_rb
R47405:47408 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47418:47421 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47422:47425 Coq.MSets.MSetRBT BalanceProps arbt ind
R47430:47432 Coq.MSets.MSetRBT M del def
R47436:47436 Coq.MSets.MSetRBT <> s var
R47434:47434 Coq.MSets.MSetRBT <> x var
R47427:47427 Coq.MSets.MSetRBT <> n var
R47409:47415 Coq.MSets.MSetRBT M isblack def
R47417:47417 Coq.MSets.MSetRBT <> s var
R47394:47396 Coq.MSets.MSetRBT BalanceProps rbt ind
R47404:47404 Coq.MSets.MSetRBT <> s var
R47399:47399 Coq.Init.Datatypes <> S constr
R47401:47401 Coq.MSets.MSetRBT <> n var
R47466:47469 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47480:47483 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47484:47486 Coq.MSets.MSetRBT BalanceProps rbt ind
R47491:47493 Coq.MSets.MSetRBT M del def
R47497:47497 Coq.MSets.MSetRBT <> s var
R47495:47495 Coq.MSets.MSetRBT <> x var
R47488:47488 Coq.MSets.MSetRBT <> n var
R47470:47477 Coq.MSets.MSetRBT M notblack def
R47479:47479 Coq.MSets.MSetRBT <> s var
R47459:47461 Coq.MSets.MSetRBT BalanceProps rbt ind
R47465:47465 Coq.MSets.MSetRBT <> s var
R47463:47463 Coq.MSets.MSetRBT <> n var
R47586:47598 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R47586:47598 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R47734:47742 Coq.MSets.MSetRBT BalanceProps lbalS_arb thm
R47734:47742 Coq.MSets.MSetRBT BalanceProps lbalS_arb thm
R47872:47880 Coq.MSets.MSetRBT BalanceProps rbalS_arb thm
R47872:47880 Coq.MSets.MSetRBT BalanceProps rbalS_arb thm
R47985:47997 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R47985:47997 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R48164:48171 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R48164:48171 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R48164:48171 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R48302:48309 Coq.MSets.MSetRBT BalanceProps rbalS_rb thm
R48302:48309 Coq.MSets.MSetRBT BalanceProps rbalS_rb thm
inst 48335:48343 BalanceProps remove_rb
R48356:48359 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48360:48362 Coq.MSets.MSetRBT BalanceProps Rbt class
R48365:48370 Coq.MSets.MSetRBT M remove def
R48374:48374 Coq.MSets.MSetRBT <> s var
R48372:48372 Coq.MSets.MSetRBT <> x var
R48351:48353 Coq.MSets.MSetRBT BalanceProps Rbt class
R48355:48355 Coq.MSets.MSetRBT <> s var
R48407:48412 Coq.MSets.MSetRBT M remove def
R48454:48465 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48454:48465 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48487:48498 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48487:48498 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48516:48521 Coq.MSets.MSetRBT BalanceProps del_rb thm
R48516:48521 Coq.MSets.MSetRBT BalanceProps del_rb thm
R48558:48569 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48558:48569 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48581:48587 Coq.MSets.MSetRBT BalanceProps del_arb thm
R48581:48587 Coq.MSets.MSetRBT BalanceProps del_arb thm
def 48639:48658 BalanceProps treeify_rb_invariant
R48674:48682 Coq.MSets.MSetRBT M treeify_t syndef
R48720:48725 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48749:48754 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R48726:48728 Coq.MSets.MSetRBT BalanceProps rbt ind
R48737:48739 Coq.Init.Datatypes <> fst def
R48742:48742 Coq.MSets.MSetRBT <> f var
R48744:48746 Coq.MSets.MSetRBT <> acc var
R48730:48734 Coq.MSets.MSetRBT <> depth var
R48782:48784 Coq.Init.Logic <> :type_scope:x_'='_x not
R48759:48761 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R48755:48758 Coq.MSets.MSetRBT <> size var
R48762:48767 Coq.Init.Datatypes <> length def
R48770:48772 Coq.Init.Datatypes <> snd def
R48775:48775 Coq.MSets.MSetRBT <> f var
R48777:48779 Coq.MSets.MSetRBT <> acc var
R48785:48790 Coq.Init.Datatypes <> length def
R48792:48794 Coq.MSets.MSetRBT <> acc var
R48706:48709 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R48702:48705 Coq.MSets.MSetRBT <> size var
R48710:48715 Coq.Init.Datatypes <> length def
R48717:48719 Coq.MSets.MSetRBT <> acc var
prf 48804:48818 BalanceProps treeify_zero_rb
R48822:48841 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R48847:48858 Coq.MSets.MSetRBT M treeify_zero def
prf 48908:48921 BalanceProps treeify_one_rb
R48925:48944 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R48950:48960 Coq.MSets.MSetRBT M treeify_one def
prf 49026:49040 BalanceProps treeify_cont_rb
R49098:49102 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49133:49137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49162:49166 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49167:49186 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49200:49211 Coq.MSets.MSetRBT M treeify_cont def
R49215:49215 Coq.MSets.MSetRBT <> g var
R49213:49213 Coq.MSets.MSetRBT <> f var
R49194:49194 Coq.Init.Datatypes <> S constr
R49196:49196 Coq.MSets.MSetRBT <> d var
R49188:49191 Coq.MSets.MSetRBT <> size var
R49142:49144 Coq.Init.Logic <> :type_scope:x_'='_x not
R49138:49141 Coq.MSets.MSetRBT <> size var
R49145:49145 Coq.Init.Datatypes <> S constr
R49153:49155 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R49148:49152 Coq.MSets.MSetRBT <> size1 var
R49156:49160 Coq.MSets.MSetRBT <> size2 var
R49103:49122 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49132:49132 Coq.MSets.MSetRBT <> g var
R49130:49130 Coq.MSets.MSetRBT <> d var
R49124:49128 Coq.MSets.MSetRBT <> size2 var
R49068:49087 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49097:49097 Coq.MSets.MSetRBT <> f var
R49095:49095 Coq.MSets.MSetRBT <> d var
R49089:49093 Coq.MSets.MSetRBT <> size1 var
R49260:49271 Coq.MSets.MSetRBT M treeify_cont def
R49469:49478 Coq.Arith.PeanoNat Nat lt_nge thm
R49469:49478 Coq.Arith.PeanoNat Nat lt_nge thm
R49664:49677 Coq.Arith.PeanoNat Nat add_succ_r thm
R49683:49698 Coq.Arith.PeanoNat Nat succ_le_mono thm
R49664:49677 Coq.Arith.PeanoNat Nat add_succ_r thm
R49664:49677 Coq.Arith.PeanoNat Nat add_succ_r thm
R49683:49698 Coq.Arith.PeanoNat Nat succ_le_mono thm
R49683:49698 Coq.Arith.PeanoNat Nat succ_le_mono thm
R49712:49728 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R49712:49728 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R49783:49796 Coq.Arith.PeanoNat Nat add_succ_r thm
R49799:49811 Coq.Arith.PeanoNat Nat add_assoc thm
R49783:49796 Coq.Arith.PeanoNat Nat add_succ_r thm
R49783:49796 Coq.Arith.PeanoNat Nat add_succ_r thm
R49799:49811 Coq.Arith.PeanoNat Nat add_assoc thm
R49799:49811 Coq.Arith.PeanoNat Nat add_assoc thm
prf 49826:49839 BalanceProps treeify_aux_rb
R49846:49852 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49854:49855 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49866:49869 Coq.Init.Datatypes <> bool ind
R49875:49894 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49925:49935 Coq.MSets.MSetRBT M treeify_aux def
R49939:49939 Coq.MSets.MSetRBT <> n var
R49937:49937 Coq.MSets.MSetRBT <> b var
R49922:49922 Coq.MSets.MSetRBT <> d var
R49897:49902 Coq.MSets.MSetRBT M ifpred syndef
R49907:49916 Coq.PArith.BinPos Pos to_nat def
R49918:49918 Coq.MSets.MSetRBT <> n var
R49907:49916 Coq.PArith.BinPos Pos to_nat def
R49918:49918 Coq.MSets.MSetRBT <> n var
R49904:49904 Coq.MSets.MSetRBT <> b var
R50002:50002 Coq.Init.Datatypes <> S constr
R50002:50002 Coq.Init.Datatypes <> S constr
R50028:50042 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50058:50062 Coq.Init.Datatypes <> false constr
R50028:50042 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50058:50062 Coq.Init.Datatypes <> false constr
R50097:50110 Coq.PArith.Pnat Pos2Nat inj_xI thm
R50097:50110 Coq.PArith.Pnat Pos2Nat inj_xI thm
R50097:50110 Coq.PArith.Pnat Pos2Nat inj_xI thm
R50129:50142 Coq.PArith.Pnat Pos2Nat is_pos thm
R50129:50142 Coq.PArith.Pnat Pos2Nat is_pos thm
R50154:50167 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50154:50167 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50213:50223 Coq.Arith.PeanoNat Nat add_0_r thm
R50213:50223 Coq.Arith.PeanoNat Nat add_0_r thm
R50213:50223 Coq.Arith.PeanoNat Nat add_0_r thm
R50213:50223 Coq.Arith.PeanoNat Nat add_0_r thm
R50213:50223 Coq.Arith.PeanoNat Nat add_0_r thm
R50253:50266 Coq.Arith.PeanoNat Nat add_succ_r thm
R50269:50281 Coq.Arith.PeanoNat Nat succ_pred thm
R50253:50266 Coq.Arith.PeanoNat Nat add_succ_r thm
R50253:50266 Coq.Arith.PeanoNat Nat add_succ_r thm
R50269:50281 Coq.Arith.PeanoNat Nat succ_pred thm
R50269:50281 Coq.Arith.PeanoNat Nat succ_pred thm
R50269:50281 Coq.Arith.PeanoNat Nat succ_pred thm
R50304:50304 Coq.Init.Datatypes <> S constr
R50304:50304 Coq.Init.Datatypes <> S constr
R50330:50344 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50376:50379 Coq.Init.Datatypes <> true constr
R50330:50344 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50376:50379 Coq.Init.Datatypes <> true constr
R50398:50411 Coq.PArith.Pnat Pos2Nat inj_xO thm
R50398:50411 Coq.PArith.Pnat Pos2Nat inj_xO thm
R50398:50411 Coq.PArith.Pnat Pos2Nat inj_xO thm
R50430:50443 Coq.PArith.Pnat Pos2Nat is_pos thm
R50430:50443 Coq.PArith.Pnat Pos2Nat is_pos thm
R50455:50468 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50455:50468 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50490:50503 Coq.Arith.PeanoNat Nat add_succ_r thm
R50506:50518 Coq.Arith.PeanoNat Nat succ_pred thm
R50490:50503 Coq.Arith.PeanoNat Nat add_succ_r thm
R50490:50503 Coq.Arith.PeanoNat Nat add_succ_r thm
R50506:50518 Coq.Arith.PeanoNat Nat succ_pred thm
R50506:50518 Coq.Arith.PeanoNat Nat succ_pred thm
R50570:50580 Coq.Arith.PeanoNat Nat add_0_r thm
R50570:50580 Coq.Arith.PeanoNat Nat add_0_r thm
R50570:50580 Coq.Arith.PeanoNat Nat add_0_r thm
R50570:50580 Coq.Arith.PeanoNat Nat add_0_r thm
R50570:50580 Coq.Arith.PeanoNat Nat add_0_r thm
R50615:50628 Coq.Arith.PeanoNat Nat add_pred_l thm
R50615:50628 Coq.Arith.PeanoNat Nat add_pred_l thm
R50668:50682 Coq.MSets.MSetRBT BalanceProps treeify_zero_rb thm
R50692:50705 Coq.MSets.MSetRBT BalanceProps treeify_one_rb thm
R50668:50682 Coq.MSets.MSetRBT BalanceProps treeify_zero_rb thm
R50692:50705 Coq.MSets.MSetRBT BalanceProps treeify_one_rb thm
inst 50823:50832 BalanceProps treeify_rb
R50838:50840 Coq.MSets.MSetRBT BalanceProps Rbt class
R50843:50849 Coq.MSets.MSetRBT M treeify def
R50851:50851 Coq.MSets.MSetRBT <> l var
R50870:50876 Coq.MSets.MSetRBT M treeify def
R50890:50903 Coq.MSets.MSetRBT BalanceProps treeify_aux_rb thm
R50906:50912 Coq.MSets.MSetRBT M plength def
R50890:50903 Coq.MSets.MSetRBT BalanceProps treeify_aux_rb thm
R50906:50912 Coq.MSets.MSetRBT M plength def
R50962:50973 Coq.MSets.MSetRBT M plength_spec thm
R50962:50973 Coq.MSets.MSetRBT M plength_spec thm
R50962:50973 Coq.MSets.MSetRBT M plength_spec thm
inst 51012:51020 BalanceProps filter_rb
R51028:51030 Coq.MSets.MSetRBT BalanceProps Rbt class
R51033:51038 Coq.MSets.MSetRBT M filter def
R51042:51042 Coq.MSets.MSetRBT <> s var
R51040:51040 Coq.MSets.MSetRBT <> f var
R51061:51066 Coq.MSets.MSetRBT M filter def
inst 51093:51105 BalanceProps partition_rb1
R51113:51115 Coq.MSets.MSetRBT BalanceProps Rbt class
R51118:51120 Coq.Init.Datatypes <> fst def
R51123:51131 Coq.MSets.MSetRBT M partition def
R51135:51135 Coq.MSets.MSetRBT <> s var
R51133:51133 Coq.MSets.MSetRBT <> f var
R51155:51163 Coq.MSets.MSetRBT M partition def
R51175:51187 Coq.MSets.MSetRBT M partition_aux def
inst 51221:51233 BalanceProps partition_rb2
R51241:51243 Coq.MSets.MSetRBT BalanceProps Rbt class
R51246:51248 Coq.Init.Datatypes <> snd def
R51251:51259 Coq.MSets.MSetRBT M partition def
R51263:51263 Coq.MSets.MSetRBT <> s var
R51261:51261 Coq.MSets.MSetRBT <> f var
R51283:51291 Coq.MSets.MSetRBT M partition def
R51303:51315 Coq.MSets.MSetRBT M partition_aux def
inst 51392:51402 BalanceProps fold_add_rb
R51418:51421 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51422:51424 Coq.MSets.MSetRBT BalanceProps Rbt class
R51427:51430 Coq.MSets.MSetRBT M fold def
R51439:51440 Coq.MSets.MSetRBT <> s2 var
R51436:51437 Coq.MSets.MSetRBT <> s1 var
R51432:51434 Coq.MSets.MSetRBT M add def
R51412:51414 Coq.MSets.MSetRBT BalanceProps Rbt class
R51416:51417 Coq.MSets.MSetRBT <> s2 var
R51468:51476 Coq.MSets.MSetRBT M fold_spec thm
R51482:51500 Coq.Lists.List <> fold_left_rev_right thm
R51468:51476 Coq.MSets.MSetRBT M fold_spec thm
R51468:51476 Coq.MSets.MSetRBT M fold_spec thm
R51482:51500 Coq.Lists.List <> fold_left_rev_right thm
R51482:51500 Coq.Lists.List <> fold_left_rev_right thm
R51510:51512 Coq.MSets.MSetRBT M elt def
R51532:51534 Coq.Lists.List <> rev def
R51537:51544 Coq.MSets.MSetRBT M elements def
R51566:51569 Coq.Program.Basics <> flip def
R51532:51534 Coq.Lists.List <> rev def
R51537:51544 Coq.MSets.MSetRBT M elements def
inst 51601:51614 BalanceProps fold_remove_rb
R51630:51633 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51634:51636 Coq.MSets.MSetRBT BalanceProps Rbt class
R51639:51642 Coq.MSets.MSetRBT M fold def
R51654:51655 Coq.MSets.MSetRBT <> s2 var
R51651:51652 Coq.MSets.MSetRBT <> s1 var
R51644:51649 Coq.MSets.MSetRBT M remove def
R51624:51626 Coq.MSets.MSetRBT BalanceProps Rbt class
R51628:51629 Coq.MSets.MSetRBT <> s2 var
R51683:51691 Coq.MSets.MSetRBT M fold_spec thm
R51697:51715 Coq.Lists.List <> fold_left_rev_right thm
R51683:51691 Coq.MSets.MSetRBT M fold_spec thm
R51683:51691 Coq.MSets.MSetRBT M fold_spec thm
R51697:51715 Coq.Lists.List <> fold_left_rev_right thm
R51697:51715 Coq.Lists.List <> fold_left_rev_right thm
R51725:51727 Coq.MSets.MSetRBT M elt def
R51747:51749 Coq.Lists.List <> rev def
R51752:51759 Coq.MSets.MSetRBT M elements def
R51781:51784 Coq.Program.Basics <> flip def
R51747:51749 Coq.Lists.List <> rev def
R51752:51759 Coq.MSets.MSetRBT M elements def
prf 51813:51820 BalanceProps union_rb
R51836:51839 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51846:51849 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51850:51852 Coq.MSets.MSetRBT BalanceProps Rbt class
R51855:51859 Coq.MSets.MSetRBT M union def
R51864:51865 Coq.MSets.MSetRBT <> s2 var
R51861:51862 Coq.MSets.MSetRBT <> s1 var
R51840:51842 Coq.MSets.MSetRBT BalanceProps Rbt class
R51844:51845 Coq.MSets.MSetRBT <> s2 var
R51830:51832 Coq.MSets.MSetRBT BalanceProps Rbt class
R51834:51835 Coq.MSets.MSetRBT <> s1 var
R51892:51896 Coq.MSets.MSetRBT M union def
R51899:51910 Coq.MSets.MSetRBT M linear_union def
R51922:51935 Coq.MSets.MSetRBT M compare_height def
prf 51959:51966 BalanceProps inter_rb
R51982:51985 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51992:51995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51996:51998 Coq.MSets.MSetRBT BalanceProps Rbt class
R52001:52005 Coq.MSets.MSetRBT M inter def
R52010:52011 Coq.MSets.MSetRBT <> s2 var
R52007:52008 Coq.MSets.MSetRBT <> s1 var
R51986:51988 Coq.MSets.MSetRBT BalanceProps Rbt class
R51990:51991 Coq.MSets.MSetRBT <> s2 var
R51976:51978 Coq.MSets.MSetRBT BalanceProps Rbt class
R51980:51981 Coq.MSets.MSetRBT <> s1 var
R52038:52042 Coq.MSets.MSetRBT M inter def
R52045:52056 Coq.MSets.MSetRBT M linear_inter def
R52068:52081 Coq.MSets.MSetRBT M compare_height def
prf 52105:52111 BalanceProps diff_rb
R52127:52130 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52137:52140 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52141:52143 Coq.MSets.MSetRBT BalanceProps Rbt class
R52146:52149 Coq.MSets.MSetRBT M diff def
R52154:52155 Coq.MSets.MSetRBT <> s2 var
R52151:52152 Coq.MSets.MSetRBT <> s1 var
R52131:52133 Coq.MSets.MSetRBT BalanceProps Rbt class
R52135:52136 Coq.MSets.MSetRBT <> s2 var
R52121:52123 Coq.MSets.MSetRBT BalanceProps Rbt class
R52125:52126 Coq.MSets.MSetRBT <> s1 var
R52182:52185 Coq.MSets.MSetRBT M diff def
R52188:52198 Coq.MSets.MSetRBT M linear_diff def
R52210:52223 Coq.MSets.MSetRBT M compare_height def
R52245:52256 Coq.MSets.MSetRBT BalanceProps <> mod
R52664:52678 Coq.MSets.MSetInterface S <> mod
R52683:52695 Coq.MSets.MSetRBT MSetRemoveMin <> mod
modtype 52641:52659 <> MSetInterface_S_Ext
R52715:52732 Coq.Structures.Orders OrderedType <> mod
R52739:52757 Coq.MSets.MSetRBT MSetInterface_S_Ext <> mod
R52776:52776 Coq.MSets.MSetRBT X <> modtype
mod 52706:52709 <> Make
mod 52787:52789 <> Make.Raw
R52800:52806 Coq.MSets.MSetRBT MakeRaw <> mod
R52808:52808 Coq.MSets.MSetRBT X <> modtype
R52815:52817 Coq.MSets.MSetRBT Make.Raw <> mod
R52829:52850 Coq.MSets.MSetInterface Raw2Sets <> modtype
R52852:52852 Coq.MSets.MSetRBT X <> modtype
R52854:52856 Coq.MSets.MSetRBT Make.Raw <> modtype
def 52872:52877 Make opt_ok
R52882:52887 Coq.Init.Datatypes <> option ind
R52893:52895 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R52890:52892 Coq.MSets.MSetRBT Make elt def
R52896:52900 Coq.MSets.MSetRBT Make t def
R52915:52915 Coq.MSets.MSetRBT <> x var
R52922:52925 Coq.Init.Datatypes <> Some constr
R52927:52927 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52929:52929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52931:52931 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52936:52941 Coq.MSets.MSetRBT Make Ok class
R52947:52950 Coq.Init.Datatypes <> None constr
R52955:52958 Coq.Init.Logic <> True ind
def 52978:52985 Make mk_opt_t
R52991:52996 Coq.Init.Datatypes <> option ind
R53002:53004 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R52999:53001 Coq.MSets.MSetRBT Make elt def
R53005:53009 Coq.MSets.MSetRBT Make t def
R53016:53021 Coq.MSets.MSetRBT Make opt_ok def
R53023:53023 Coq.MSets.MSetRBT <> x var
R53031:53036 Coq.Init.Datatypes <> option ind
R53042:53044 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R53039:53041 Coq.MSets.MSetRBT Make elt def
R53045:53045 Coq.MSets.MSetRBT Make t def
R53058:53058 Coq.MSets.MSetRBT <> x var
R53080:53083 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53084:53089 Coq.Init.Datatypes <> option ind
R53095:53097 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R53092:53094 Coq.MSets.MSetRBT Make elt def
R53098:53098 Coq.MSets.MSetRBT Make t def
R53072:53077 Coq.MSets.MSetRBT Make opt_ok def
R53079:53079 Coq.MSets.MSetRBT <> o var
R53109:53112 Coq.Init.Datatypes <> Some constr
R53114:53114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53116:53116 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53119:53119 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53132:53137 Coq.MSets.MSetRBT Make Ok class
R53145:53148 Coq.Init.Datatypes <> Some constr
R53150:53150 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53152:53153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53160:53160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53154:53156 Coq.MSets.MSetRBT Make Mkt constr
R53165:53168 Coq.Init.Datatypes <> None constr
R53182:53185 Coq.Init.Datatypes <> None constr
R53192:53192 Coq.MSets.MSetRBT <> P var
def 53208:53217 Make remove_min
R53223:53228 Coq.Init.Datatypes <> option ind
R53234:53236 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R53231:53233 Coq.MSets.MSetRBT Make elt def
R53237:53237 Coq.MSets.MSetRBT Make t def
R53245:53252 Coq.MSets.MSetRBT Make mk_opt_t def
R53281:53297 Coq.MSets.MSetRBT Make remove_min_ok thm
R53299:53299 Coq.MSets.MSetRBT <> s var
R53255:53268 Coq.MSets.MSetRBT Make remove_min def
R53271:53274 Coq.MSets.MSetRBT Make this proj
R53276:53276 Coq.MSets.MSetRBT <> s var
prf 53311:53326 Make remove_min_spec1
R53365:53371 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53390:53393 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53381:53383 Coq.Init.Logic <> :type_scope:x_'='_x not
R53372:53378 Coq.MSets.MSetRBT Make min_elt def
R53380:53380 Coq.MSets.MSetRBT <> s var
R53384:53387 Coq.Init.Datatypes <> Some constr
R53389:53389 Coq.MSets.MSetRBT <> x var
R53394:53398 Coq.MSets.MSetRBT Make Equal def
R53413:53414 Coq.MSets.MSetRBT <> s' var
R53401:53406 Coq.MSets.MSetRBT Make remove def
R53410:53410 Coq.MSets.MSetRBT <> s var
R53408:53408 Coq.MSets.MSetRBT <> x var
R53351:53353 Coq.Init.Logic <> :type_scope:x_'='_x not
R53339:53348 Coq.MSets.MSetRBT Make remove_min def
R53350:53350 Coq.MSets.MSetRBT <> s var
R53354:53357 Coq.Init.Datatypes <> Some constr
R53359:53359 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53361:53361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53364:53364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53360:53360 Coq.MSets.MSetRBT <> x var
R53362:53363 Coq.MSets.MSetRBT <> s' var
R53456:53465 Coq.MSets.MSetRBT Make remove_min def
R53468:53475 Coq.MSets.MSetRBT Make mk_opt_t def
R53478:53484 Coq.MSets.MSetRBT Make min_elt def
R53487:53492 Coq.MSets.MSetRBT Make remove def
R53495:53499 Coq.MSets.MSetRBT Make Equal def
R53502:53503 Coq.MSets.MSetRBT Make In def
R53539:53558 Coq.MSets.MSetRBT Make remove_min_spec1 thm
R53564:53565 Coq.MSets.MSetRBT <> s' var
R53562:53562 Coq.MSets.MSetRBT <> x var
R53539:53558 Coq.MSets.MSetRBT Make remove_min_spec1 thm
R53564:53565 Coq.MSets.MSetRBT <> s' var
R53562:53562 Coq.MSets.MSetRBT <> x var
R53583:53599 Coq.MSets.MSetRBT Make remove_min_ok thm
R53583:53599 Coq.MSets.MSetRBT Make remove_min_ok thm
R53629:53642 Coq.MSets.MSetRBT Make remove_min def
R53629:53642 Coq.MSets.MSetRBT Make remove_min def
prf 53772:53787 Make remove_min_spec2
R53812:53815 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53816:53820 Coq.MSets.MSetRBT Make Empty def
R53822:53822 Coq.MSets.MSetRBT <> s var
R53805:53807 Coq.Init.Logic <> :type_scope:x_'='_x not
R53793:53802 Coq.MSets.MSetRBT Make remove_min def
R53804:53804 Coq.MSets.MSetRBT <> s var
R53808:53811 Coq.Init.Datatypes <> None constr
R53864:53873 Coq.MSets.MSetRBT Make remove_min def
R53876:53883 Coq.MSets.MSetRBT Make mk_opt_t def
R53886:53890 Coq.MSets.MSetRBT Make Empty def
R53893:53894 Coq.MSets.MSetRBT Make In def
R53917:53936 Coq.MSets.MSetRBT Make remove_min_spec2 thm
R53917:53936 Coq.MSets.MSetRBT Make remove_min_spec2 thm
R53953:53969 Coq.MSets.MSetRBT Make remove_min_ok thm
R53953:53969 Coq.MSets.MSetRBT Make remove_min_ok thm
R53999:54012 Coq.MSets.MSetRBT Make remove_min def
R53999:54012 Coq.MSets.MSetRBT Make remove_min def
R54058:54061 Coq.MSets.MSetRBT Make <> mod

DIGEST e0ec3e08165724ea885e1b631c4a679e
FCoq.MSets.MSetWeakList
R698:710 Coq.MSets.MSetInterface <> <> lib
R1063:1075 Coq.Structures.Equalities DecidableType <> mod
R1081:1084 Coq.MSets.MSetInterface WOps <> mod
R1086:1086 Coq.MSets.MSetWeakList X <> modtype
mod 1055:1057 <> Ops
def 1103:1105 Ops elt
R1110:1112 Coq.MSets.MSetWeakList X t defax
def 1128:1128 Ops t
R1133:1136 Coq.Init.Datatypes <> list ind
R1138:1140 Coq.MSets.MSetWeakList Ops elt def
def 1157:1161 Ops empty
R1165:1165 Coq.MSets.MSetWeakList Ops t def
R1170:1172 Coq.Init.Datatypes <> nil constr
def 1189:1196 Ops is_empty
R1203:1203 Coq.MSets.MSetWeakList Ops t def
R1208:1211 Coq.Init.Datatypes <> bool ind
R1219:1219 Coq.MSets.MSetWeakList <> l var
R1236:1240 Coq.Init.Datatypes <> false constr
R1226:1229 Coq.Init.Datatypes <> true constr
def 1255:1257 Ops mem
R1264:1266 Coq.MSets.MSetWeakList Ops elt def
R1274:1274 Coq.MSets.MSetWeakList Ops t def
R1279:1282 Coq.Init.Datatypes <> bool ind
R1297:1297 Coq.MSets.MSetWeakList <> s var
R1310:1312 Coq.Init.Datatypes <> nil constr
R1317:1321 Coq.Init.Datatypes <> false constr
R1330:1333 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1353:1360 Coq.MSets.MSetWeakList X eq_dec defax
R1362:1362 Coq.MSets.MSetWeakList <> x var
R1381:1383 Coq.MSets.MSetWeakList <> mem def
R1385:1385 Coq.MSets.MSetWeakList <> x var
R1371:1374 Coq.Init.Datatypes <> true constr
def 1410:1412 Ops add
R1419:1421 Coq.MSets.MSetWeakList Ops elt def
R1429:1429 Coq.MSets.MSetWeakList Ops t def
R1434:1434 Coq.MSets.MSetWeakList Ops t def
R1449:1449 Coq.MSets.MSetWeakList <> s var
R1462:1464 Coq.Init.Datatypes <> nil constr
R1470:1473 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1469:1469 Coq.MSets.MSetWeakList <> x var
R1474:1476 Coq.Init.Datatypes <> nil constr
R1485:1488 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1505:1512 Coq.MSets.MSetWeakList X eq_dec defax
R1514:1514 Coq.MSets.MSetWeakList <> x var
R1531:1534 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1535:1537 Coq.MSets.MSetWeakList <> add def
R1539:1539 Coq.MSets.MSetWeakList <> x var
R1523:1523 Coq.MSets.MSetWeakList <> s var
def 1566:1574 Ops singleton
R1581:1583 Coq.MSets.MSetWeakList Ops elt def
R1588:1588 Coq.MSets.MSetWeakList Ops t def
R1594:1597 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1593:1593 Coq.MSets.MSetWeakList <> x var
R1598:1600 Coq.Init.Datatypes <> nil constr
def 1615:1620 Ops remove
R1627:1629 Coq.MSets.MSetWeakList Ops elt def
R1637:1637 Coq.MSets.MSetWeakList Ops t def
R1642:1642 Coq.MSets.MSetWeakList Ops t def
R1657:1657 Coq.MSets.MSetWeakList <> s var
R1670:1672 Coq.Init.Datatypes <> nil constr
R1677:1679 Coq.Init.Datatypes <> nil constr
R1688:1691 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1708:1715 Coq.MSets.MSetWeakList X eq_dec defax
R1717:1717 Coq.MSets.MSetWeakList <> x var
R1734:1737 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1738:1743 Coq.MSets.MSetWeakList <> remove def
R1745:1745 Coq.MSets.MSetWeakList <> x var
def 1772:1775 Ops fold
R1796:1799 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1801:1804 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1805:1805 Coq.MSets.MSetWeakList <> B var
R1800:1800 Coq.MSets.MSetWeakList <> B var
R1793:1795 Coq.MSets.MSetWeakList Ops elt def
R1811:1814 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1816:1819 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1820:1820 Coq.MSets.MSetWeakList <> B var
R1815:1815 Coq.MSets.MSetWeakList <> B var
R1810:1810 Coq.MSets.MSetWeakList Ops t def
R1829:1837 Coq.Lists.List <> fold_left def
R1840:1843 Coq.Program.Basics <> flip def
R1845:1845 Coq.MSets.MSetWeakList <> f var
def 1863:1867 Ops union
R1874:1874 Coq.MSets.MSetWeakList Ops t def
R1880:1883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1884:1884 Coq.MSets.MSetWeakList Ops t def
R1879:1879 Coq.MSets.MSetWeakList Ops t def
R1889:1892 Coq.MSets.MSetWeakList Ops fold def
R1898:1898 Coq.MSets.MSetWeakList <> s var
R1894:1896 Coq.MSets.MSetWeakList Ops add def
def 1915:1918 Ops diff
R1928:1928 Coq.MSets.MSetWeakList Ops t def
R1933:1933 Coq.MSets.MSetWeakList Ops t def
R1938:1941 Coq.MSets.MSetWeakList Ops fold def
R1953:1953 Coq.MSets.MSetWeakList <> s var
R1950:1951 Coq.MSets.MSetWeakList <> s' var
R1943:1948 Coq.MSets.MSetWeakList Ops remove def
def 1970:1974 Ops inter
R1983:1983 Coq.MSets.MSetWeakList Ops t def
R1988:1988 Coq.MSets.MSetWeakList Ops t def
R1997:2000 Coq.MSets.MSetWeakList Ops fold def
R2049:2051 Coq.Init.Datatypes <> nil constr
R2047:2047 Coq.MSets.MSetWeakList <> s var
R2017:2019 Coq.MSets.MSetWeakList Ops mem def
R2023:2024 Coq.MSets.MSetWeakList <> s' var
R2021:2021 Coq.MSets.MSetWeakList <> x var
R2044:2044 Coq.MSets.MSetWeakList <> s var
R2031:2033 Coq.MSets.MSetWeakList Ops add def
R2037:2037 Coq.MSets.MSetWeakList <> s var
R2035:2035 Coq.MSets.MSetWeakList <> x var
def 2068:2073 Ops subset
R2083:2083 Coq.MSets.MSetWeakList Ops t def
R2088:2091 Coq.Init.Datatypes <> bool ind
R2096:2103 Coq.MSets.MSetWeakList Ops is_empty def
R2106:2109 Coq.MSets.MSetWeakList Ops diff def
R2113:2114 Coq.MSets.MSetWeakList <> s' var
R2111:2111 Coq.MSets.MSetWeakList <> s var
def 2132:2136 Ops equal
R2146:2146 Coq.MSets.MSetWeakList Ops t def
R2151:2154 Coq.Init.Datatypes <> bool ind
R2159:2162 Coq.Init.Datatypes <> andb def
R2179:2184 Coq.MSets.MSetWeakList Ops subset def
R2189:2189 Coq.MSets.MSetWeakList <> s var
R2186:2187 Coq.MSets.MSetWeakList <> s' var
R2165:2170 Coq.MSets.MSetWeakList Ops subset def
R2174:2175 Coq.MSets.MSetWeakList <> s' var
R2172:2172 Coq.MSets.MSetWeakList <> s var
def 2205:2210 Ops filter
R2220:2223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2224:2227 Coq.Init.Datatypes <> bool ind
R2217:2219 Coq.MSets.MSetWeakList Ops elt def
R2235:2235 Coq.MSets.MSetWeakList Ops t def
R2240:2240 Coq.MSets.MSetWeakList Ops t def
R2255:2255 Coq.MSets.MSetWeakList <> s var
R2268:2270 Coq.Init.Datatypes <> nil constr
R2275:2277 Coq.Init.Datatypes <> nil constr
R2286:2289 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2298:2298 Coq.MSets.MSetWeakList <> f var
R2328:2333 Coq.MSets.MSetWeakList <> filter def
R2335:2335 Coq.MSets.MSetWeakList <> f var
R2308:2311 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2312:2317 Coq.MSets.MSetWeakList <> filter def
R2319:2319 Coq.MSets.MSetWeakList <> f var
def 2360:2366 Ops for_all
R2376:2379 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2380:2383 Coq.Init.Datatypes <> bool ind
R2373:2375 Coq.MSets.MSetWeakList Ops elt def
R2391:2391 Coq.MSets.MSetWeakList Ops t def
R2396:2399 Coq.Init.Datatypes <> bool ind
R2414:2414 Coq.MSets.MSetWeakList <> s var
R2427:2429 Coq.Init.Datatypes <> nil constr
R2434:2437 Coq.Init.Datatypes <> true constr
R2446:2449 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2458:2458 Coq.MSets.MSetWeakList <> f var
R2484:2488 Coq.Init.Datatypes <> false constr
R2467:2473 Coq.MSets.MSetWeakList <> for_all def
R2475:2475 Coq.MSets.MSetWeakList <> f var
def 2511:2517 Ops exists_
R2527:2530 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2531:2534 Coq.Init.Datatypes <> bool ind
R2524:2526 Coq.MSets.MSetWeakList Ops elt def
R2542:2542 Coq.MSets.MSetWeakList Ops t def
R2547:2550 Coq.Init.Datatypes <> bool ind
R2565:2565 Coq.MSets.MSetWeakList <> s var
R2578:2580 Coq.Init.Datatypes <> nil constr
R2585:2589 Coq.Init.Datatypes <> false constr
R2598:2601 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2610:2610 Coq.MSets.MSetWeakList <> f var
R2629:2635 Coq.MSets.MSetWeakList <> exists_ def
R2637:2637 Coq.MSets.MSetWeakList <> f var
R2619:2622 Coq.Init.Datatypes <> true constr
def 2662:2670 Ops partition
R2680:2683 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2684:2687 Coq.Init.Datatypes <> bool ind
R2677:2679 Coq.MSets.MSetWeakList Ops elt def
R2695:2695 Coq.MSets.MSetWeakList Ops t def
R2701:2703 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2700:2700 Coq.MSets.MSetWeakList Ops t def
R2704:2704 Coq.MSets.MSetWeakList Ops t def
R2719:2719 Coq.MSets.MSetWeakList <> s var
R2732:2734 Coq.Init.Datatypes <> nil constr
R2739:2739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2743:2744 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2748:2748 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2740:2742 Coq.Init.Datatypes <> nil constr
R2745:2747 Coq.Init.Datatypes <> nil constr
R2757:2760 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2790:2798 Coq.MSets.MSetWeakList <> partition def
R2800:2800 Coq.MSets.MSetWeakList <> f var
R2818:2818 Coq.MSets.MSetWeakList <> f var
R2846:2846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2849:2850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2858:2858 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2847:2848 Coq.MSets.MSetWeakList <> s1 var
R2852:2855 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2856:2857 Coq.MSets.MSetWeakList <> s2 var
R2827:2827 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2835:2836 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2839:2839 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2829:2832 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2833:2834 Coq.MSets.MSetWeakList <> s1 var
R2837:2838 Coq.MSets.MSetWeakList <> s2 var
def 2883:2890 Ops cardinal
R2897:2897 Coq.MSets.MSetWeakList Ops t def
R2902:2904 Coq.Init.Datatypes <> nat ind
R2909:2914 Coq.Init.Datatypes <> length def
R2916:2916 Coq.MSets.MSetWeakList <> s var
def 2933:2940 Ops elements
R2947:2947 Coq.MSets.MSetWeakList Ops t def
R2952:2955 Coq.Init.Datatypes <> list ind
R2957:2959 Coq.MSets.MSetWeakList Ops elt def
R2964:2964 Coq.MSets.MSetWeakList <> s var
def 2981:2986 Ops choose
R2993:2993 Coq.MSets.MSetWeakList Ops t def
R2998:3003 Coq.Init.Datatypes <> option ind
R3005:3007 Coq.MSets.MSetWeakList Ops elt def
R3023:3023 Coq.MSets.MSetWeakList <> s var
R3038:3040 Coq.Init.Datatypes <> nil constr
R3045:3048 Coq.Init.Datatypes <> None constr
R3059:3060 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3066:3069 Coq.Init.Datatypes <> Some constr
R3088:3090 Coq.MSets.MSetWeakList Ops <> mod
R3163:3175 Coq.Structures.Equalities DecidableType <> mod
R3181:3188 Coq.MSets.MSetInterface WRawSets <> mod
R3190:3190 Coq.MSets.MSetWeakList X <> modtype
mod 3152:3158 <> MakeRaw
R3203:3205 Coq.MSets.MSetWeakList Ops <> modtype
R3207:3207 Coq.MSets.MSetWeakList X <> modtype
sec 3221:3232 MakeRaw ForNotations
syndef 3246:3250 MakeRaw NoDup
R3256:3261 Coq.Lists.SetoidList <> NoDupA ind
R3263:3266 Coq.MSets.MSetWeakList X eq defax
syndef 3281:3282 MakeRaw In
R3288:3290 Coq.Lists.SetoidList <> InA ind
R3292:3295 Coq.MSets.MSetWeakList X eq defax
var 3364:3366 MakeRaw.ForNotations eqr
R3372:3392 Coq.Classes.RelationClasses <> Equivalence_Reflexive meth
R3398:3407 Coq.MSets.MSetWeakList X eq_equiv prfax
var 3417:3421 MakeRaw.ForNotations eqsym
R3427:3447 Coq.Classes.RelationClasses <> Equivalence_Symmetric meth
R3453:3462 Coq.MSets.MSetWeakList X eq_equiv prfax
var 3472:3478 MakeRaw.ForNotations eqtrans
R3484:3505 Coq.Classes.RelationClasses <> Equivalence_Transitive meth
R3511:3520 Coq.MSets.MSetWeakList X eq_equiv prfax
def 3590:3593 MakeRaw IsOk
R3598:3602 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
ind 3614:3615 MakeRaw Ok
constr 3633:3634 MakeRaw ok
rec 3614:3615 MakeRaw Ok
proj 3633:3634 MakeRaw ok
R3620:3620 Coq.MSets.MSetWeakList MakeRaw t def
R3638:3642 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R3644:3644 Coq.MSets.MSetWeakList <> s var
R3662:3663 Coq.MSets.MSetWeakList MakeRaw Ok class
inst 3697:3704 MakeRaw NoDup_Ok
R3714:3718 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R3720:3720 Coq.MSets.MSetWeakList <> s var
R3725:3726 Coq.MSets.MSetWeakList MakeRaw Ok class
R3728:3728 Coq.MSets.MSetWeakList <> s var
R3735:3736 Coq.MSets.MSetWeakList MakeRaw ok def
R3788:3789 Coq.MSets.MSetWeakList MakeRaw Ok class
R3793:3796 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3788:3789 Coq.MSets.MSetWeakList MakeRaw Ok class
R3793:3796 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3841:3842 Coq.MSets.MSetWeakList MakeRaw Ok class
R3844:3846 Coq.Init.Datatypes <> nil constr
R3841:3842 Coq.MSets.MSetWeakList MakeRaw Ok class
R3844:3846 Coq.Init.Datatypes <> nil constr
R3879:3883 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R3879:3883 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R3904:3905 Coq.MSets.MSetWeakList MakeRaw Ok class
def 4037:4040 MakeRaw isok
R4053:4053 Coq.MSets.MSetWeakList <> l var
R4065:4067 Coq.Init.Datatypes <> nil constr
R4072:4075 Coq.Init.Datatypes <> true constr
R4083:4084 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R4104:4107 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R4090:4093 Coq.Init.Datatypes <> negb def
R4096:4098 Coq.MSets.MSetWeakList MakeRaw mem def
R4102:4102 Coq.MSets.MSetWeakList <> l var
R4108:4111 Coq.MSets.MSetWeakList <> isok def
R4113:4113 Coq.MSets.MSetWeakList <> l var
def 4136:4140 MakeRaw Equal
R4161:4163 Coq.MSets.MSetWeakList MakeRaw elt def
R4172:4176 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4166:4167 Coq.MSets.MSetWeakList MakeRaw In syndef
R4171:4171 Coq.MSets.MSetWeakList <> s var
R4169:4169 Coq.MSets.MSetWeakList <> a var
R4177:4178 Coq.MSets.MSetWeakList MakeRaw In syndef
R4182:4183 Coq.MSets.MSetWeakList <> s' var
R4180:4180 Coq.MSets.MSetWeakList <> a var
def 4199:4204 MakeRaw Subset
R4225:4227 Coq.MSets.MSetWeakList MakeRaw elt def
R4236:4239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4240:4241 Coq.MSets.MSetWeakList MakeRaw In syndef
R4245:4246 Coq.MSets.MSetWeakList <> s' var
R4243:4243 Coq.MSets.MSetWeakList <> a var
R4230:4231 Coq.MSets.MSetWeakList MakeRaw In syndef
R4235:4235 Coq.MSets.MSetWeakList <> s var
R4233:4233 Coq.MSets.MSetWeakList <> a var
def 4262:4266 MakeRaw Empty
R4284:4286 Coq.MSets.MSetWeakList MakeRaw elt def
R4289:4290 Coq.Init.Logic <> :type_scope:'~'_x not
R4291:4292 Coq.MSets.MSetWeakList MakeRaw In syndef
R4296:4296 Coq.MSets.MSetWeakList <> s var
R4294:4294 Coq.MSets.MSetWeakList <> a var
def 4312:4318 MakeRaw For_all
R4328:4331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4325:4327 Coq.MSets.MSetWeakList MakeRaw elt def
R4359:4362 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4363:4363 Coq.MSets.MSetWeakList <> P var
R4365:4365 Coq.MSets.MSetWeakList <> x var
R4353:4354 Coq.MSets.MSetWeakList MakeRaw In syndef
R4358:4358 Coq.MSets.MSetWeakList <> s var
R4356:4356 Coq.MSets.MSetWeakList <> x var
def 4381:4386 MakeRaw Exists
R4396:4399 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4393:4395 Coq.MSets.MSetWeakList MakeRaw elt def
R4411:4417 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4419:4420 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4427:4430 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4421:4422 Coq.MSets.MSetWeakList MakeRaw In syndef
R4426:4426 Coq.MSets.MSetWeakList <> s var
R4424:4424 Coq.MSets.MSetWeakList <> x var
R4431:4431 Coq.MSets.MSetWeakList <> P var
R4433:4433 Coq.MSets.MSetWeakList <> x var
prf 4445:4453 MakeRaw In_compat
R4457:4462 Coq.Classes.Morphisms <> Proper class
R4482:4483 Coq.MSets.MSetWeakList MakeRaw In syndef
R4469:4471 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R4465:4468 Coq.MSets.MSetWeakList X eq defax
R4474:4476 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R4472:4473 Coq.Init.Logic <> eq ind
R4477:4479 Coq.Init.Logic <> iff def
prf 4557:4564 MakeRaw mem_spec
R4581:4582 Coq.MSets.MSetWeakList MakeRaw Ok class
R4584:4584 Coq.MSets.MSetWeakList <> s var
R4605:4609 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4598:4600 Coq.Init.Logic <> :type_scope:x_'='_x not
R4591:4593 Coq.MSets.MSetWeakList MakeRaw mem def
R4597:4597 Coq.MSets.MSetWeakList <> s var
R4595:4595 Coq.MSets.MSetWeakList <> x var
R4601:4604 Coq.Init.Datatypes <> true constr
R4610:4611 Coq.MSets.MSetWeakList MakeRaw In syndef
R4615:4615 Coq.MSets.MSetWeakList <> s var
R4613:4613 Coq.MSets.MSetWeakList <> x var
R4705:4712 Coq.MSets.MSetWeakList X eq_dec defax
R4705:4712 Coq.MSets.MSetWeakList X eq_dec defax
prf 4814:4821 MakeRaw isok_iff
R4839:4843 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4835:4836 Coq.MSets.MSetWeakList MakeRaw Ok class
R4838:4838 Coq.MSets.MSetWeakList <> l var
R4850:4852 Coq.Init.Logic <> :type_scope:x_'='_x not
R4844:4847 Coq.MSets.MSetWeakList MakeRaw isok def
R4849:4849 Coq.MSets.MSetWeakList <> l var
R4853:4856 Coq.Init.Datatypes <> true constr
R4915:4927 Coq.Bool.Bool <> andb_true_iff thm
R4915:4927 Coq.Bool.Bool <> andb_true_iff thm
R4915:4927 Coq.Bool.Bool <> andb_true_iff thm
R4940:4952 Coq.Bool.Bool <> negb_true_iff thm
R4940:4952 Coq.Bool.Bool <> negb_true_iff thm
R4940:4952 Coq.Bool.Bool <> negb_true_iff thm
R5020:5036 Coq.Bool.Bool <> not_true_is_false thm
R5020:5036 Coq.Bool.Bool <> not_true_is_false thm
R5047:5054 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5047:5054 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5047:5054 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5047:5054 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5110:5117 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5110:5117 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5110:5117 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5110:5117 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
inst 5164:5170 MakeRaw isok_Ok
R5189:5192 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5193:5194 Coq.MSets.MSetWeakList MakeRaw Ok class
R5196:5196 Coq.MSets.MSetWeakList <> l var
R5182:5184 Coq.Init.Logic <> :type_scope:x_'='_x not
R5176:5179 Coq.MSets.MSetWeakList MakeRaw isok def
R5181:5181 Coq.MSets.MSetWeakList <> l var
R5185:5188 Coq.Init.Datatypes <> true constr
R5232:5239 Coq.MSets.MSetWeakList MakeRaw isok_iff thm
R5232:5239 Coq.MSets.MSetWeakList MakeRaw isok_iff thm
prf 5264:5271 MakeRaw add_spec
R5290:5290 Coq.MSets.MSetWeakList MakeRaw t def
R5300:5302 Coq.MSets.MSetWeakList MakeRaw elt def
R5311:5312 Coq.MSets.MSetWeakList MakeRaw Ok class
R5314:5314 Coq.MSets.MSetWeakList <> s var
R5337:5341 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5323:5324 Coq.MSets.MSetWeakList MakeRaw In syndef
R5329:5331 Coq.MSets.MSetWeakList MakeRaw add def
R5335:5335 Coq.MSets.MSetWeakList <> s var
R5333:5333 Coq.MSets.MSetWeakList <> x var
R5326:5326 Coq.MSets.MSetWeakList <> y var
R5350:5353 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R5342:5345 Coq.MSets.MSetWeakList X eq defax
R5349:5349 Coq.MSets.MSetWeakList <> x var
R5347:5347 Coq.MSets.MSetWeakList <> y var
R5354:5355 Coq.MSets.MSetWeakList MakeRaw In syndef
R5359:5359 Coq.MSets.MSetWeakList <> s var
R5357:5357 Coq.MSets.MSetWeakList <> y var
R5436:5443 Coq.MSets.MSetWeakList X eq_dec defax
R5459:5466 Coq.Lists.SetoidList <> InA_cons thm
R5436:5443 Coq.MSets.MSetWeakList X eq_dec defax
R5459:5466 Coq.Lists.SetoidList <> InA_cons thm
R5459:5466 Coq.Lists.SetoidList <> InA_cons thm
R5459:5466 Coq.Lists.SetoidList <> InA_cons thm
R5459:5466 Coq.Lists.SetoidList <> InA_cons thm
inst 5540:5545 MakeRaw add_ok
R5553:5554 Coq.MSets.MSetWeakList MakeRaw Ok class
R5556:5556 Coq.MSets.MSetWeakList <> s var
R5561:5562 Coq.MSets.MSetWeakList MakeRaw Ok class
R5565:5567 Coq.MSets.MSetWeakList MakeRaw add def
R5571:5571 Coq.MSets.MSetWeakList <> s var
R5569:5569 Coq.MSets.MSetWeakList <> x var
R5652:5659 Coq.MSets.MSetWeakList X eq_dec defax
R5652:5659 Coq.MSets.MSetWeakList X eq_dec defax
R5720:5727 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R5720:5727 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R5720:5727 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R5720:5727 Coq.MSets.MSetWeakList MakeRaw add_spec thm
prf 5762:5772 MakeRaw remove_spec
R5791:5791 Coq.MSets.MSetWeakList MakeRaw t def
R5801:5803 Coq.MSets.MSetWeakList MakeRaw elt def
R5812:5813 Coq.MSets.MSetWeakList MakeRaw Ok class
R5815:5815 Coq.MSets.MSetWeakList <> s var
R5841:5845 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5824:5825 Coq.MSets.MSetWeakList MakeRaw In syndef
R5830:5835 Coq.MSets.MSetWeakList MakeRaw remove def
R5839:5839 Coq.MSets.MSetWeakList <> s var
R5837:5837 Coq.MSets.MSetWeakList <> x var
R5827:5827 Coq.MSets.MSetWeakList <> y var
R5852:5855 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5846:5847 Coq.MSets.MSetWeakList MakeRaw In syndef
R5851:5851 Coq.MSets.MSetWeakList <> s var
R5849:5849 Coq.MSets.MSetWeakList <> y var
R5856:5856 Coq.Init.Logic <> :type_scope:'~'_x not
R5857:5860 Coq.MSets.MSetWeakList X eq defax
R5864:5864 Coq.MSets.MSetWeakList <> x var
R5862:5862 Coq.MSets.MSetWeakList <> y var
R5941:5948 Coq.MSets.MSetWeakList X eq_dec defax
R5976:5983 Coq.Lists.SetoidList <> InA_cons thm
R5941:5948 Coq.MSets.MSetWeakList X eq_dec defax
R5976:5983 Coq.Lists.SetoidList <> InA_cons thm
R5976:5983 Coq.Lists.SetoidList <> InA_cons thm
R5976:5983 Coq.Lists.SetoidList <> InA_cons thm
R5976:5983 Coq.Lists.SetoidList <> InA_cons thm
R5976:5983 Coq.Lists.SetoidList <> InA_cons thm
R5976:5983 Coq.Lists.SetoidList <> InA_cons thm
R5976:5983 Coq.Lists.SetoidList <> InA_cons thm
inst 6134:6142 MakeRaw remove_ok
R6150:6151 Coq.MSets.MSetWeakList MakeRaw Ok class
R6153:6153 Coq.MSets.MSetWeakList <> s var
R6158:6159 Coq.MSets.MSetWeakList MakeRaw Ok class
R6162:6167 Coq.MSets.MSetWeakList MakeRaw remove def
R6171:6171 Coq.MSets.MSetWeakList <> s var
R6169:6169 Coq.MSets.MSetWeakList <> x var
R6233:6240 Coq.MSets.MSetWeakList X eq_dec defax
R6233:6240 Coq.MSets.MSetWeakList X eq_dec defax
R6286:6296 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R6286:6296 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R6286:6296 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R6286:6296 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
prf 6326:6337 MakeRaw singleton_ok
R6352:6354 Coq.MSets.MSetWeakList MakeRaw elt def
R6357:6358 Coq.MSets.MSetWeakList MakeRaw Ok class
R6361:6369 Coq.MSets.MSetWeakList MakeRaw singleton def
R6371:6371 Coq.MSets.MSetWeakList <> x var
R6393:6401 Coq.MSets.MSetWeakList MakeRaw singleton def
prf 6459:6472 MakeRaw singleton_spec
R6489:6491 Coq.MSets.MSetWeakList MakeRaw elt def
R6512:6516 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6494:6495 Coq.MSets.MSetWeakList MakeRaw In syndef
R6500:6508 Coq.MSets.MSetWeakList MakeRaw singleton def
R6510:6510 Coq.MSets.MSetWeakList <> x var
R6497:6497 Coq.MSets.MSetWeakList <> y var
R6517:6520 Coq.MSets.MSetWeakList X eq defax
R6524:6524 Coq.MSets.MSetWeakList <> x var
R6522:6522 Coq.MSets.MSetWeakList <> y var
R6545:6553 Coq.MSets.MSetWeakList MakeRaw singleton def
prf 6617:6624 MakeRaw empty_ok
R6628:6629 Coq.MSets.MSetWeakList MakeRaw Ok class
R6631:6635 Coq.MSets.MSetWeakList MakeRaw empty def
R6656:6660 Coq.MSets.MSetWeakList MakeRaw empty def
prf 6693:6702 MakeRaw empty_spec
R6706:6710 Coq.MSets.MSetWeakList MakeRaw Empty def
R6712:6716 Coq.MSets.MSetWeakList MakeRaw empty def
R6737:6741 Coq.MSets.MSetWeakList MakeRaw Empty def
R6744:6748 Coq.MSets.MSetWeakList MakeRaw empty def
prf 6785:6797 MakeRaw is_empty_spec
R6812:6812 Coq.MSets.MSetWeakList MakeRaw t def
R6832:6836 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6825:6827 Coq.Init.Logic <> :type_scope:x_'='_x not
R6815:6822 Coq.MSets.MSetWeakList MakeRaw is_empty def
R6824:6824 Coq.MSets.MSetWeakList <> s var
R6828:6831 Coq.Init.Datatypes <> true constr
R6837:6841 Coq.MSets.MSetWeakList MakeRaw Empty def
R6843:6843 Coq.MSets.MSetWeakList <> s var
R6864:6868 Coq.MSets.MSetWeakList MakeRaw Empty def
prf 6977:6990 MakeRaw elements_spec1
R7006:7006 Coq.MSets.MSetWeakList MakeRaw t def
R7014:7016 Coq.MSets.MSetWeakList MakeRaw elt def
R7037:7041 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R7020:7021 Coq.MSets.MSetWeakList MakeRaw In syndef
R7026:7033 Coq.MSets.MSetWeakList MakeRaw elements def
R7035:7035 Coq.MSets.MSetWeakList <> s var
R7023:7023 Coq.MSets.MSetWeakList <> x var
R7042:7043 Coq.MSets.MSetWeakList MakeRaw In syndef
R7047:7047 Coq.MSets.MSetWeakList <> s var
R7045:7045 Coq.MSets.MSetWeakList <> x var
R7068:7075 Coq.MSets.MSetWeakList MakeRaw elements def
prf 7105:7119 MakeRaw elements_spec2w
R7135:7135 Coq.MSets.MSetWeakList MakeRaw t def
R7144:7145 Coq.MSets.MSetWeakList MakeRaw Ok class
R7147:7147 Coq.MSets.MSetWeakList <> s var
R7151:7155 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R7158:7165 Coq.MSets.MSetWeakList MakeRaw elements def
R7167:7167 Coq.MSets.MSetWeakList <> s var
R7189:7196 Coq.MSets.MSetWeakList MakeRaw elements def
prf 7221:7229 MakeRaw fold_spec
R7248:7248 Coq.MSets.MSetWeakList MakeRaw t def
R7267:7267 Coq.MSets.MSetWeakList <> A var
R7278:7281 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7283:7286 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7287:7287 Coq.MSets.MSetWeakList <> A var
R7282:7282 Coq.MSets.MSetWeakList <> A var
R7275:7277 Coq.MSets.MSetWeakList MakeRaw elt def
R7304:7306 Coq.Init.Logic <> :type_scope:x_'='_x not
R7294:7297 Coq.MSets.MSetWeakList MakeRaw fold def
R7303:7303 Coq.MSets.MSetWeakList <> i var
R7301:7301 Coq.MSets.MSetWeakList <> s var
R7299:7299 Coq.MSets.MSetWeakList <> f var
R7307:7315 Coq.Lists.List <> fold_left def
R7339:7339 Coq.MSets.MSetWeakList <> i var
R7327:7334 Coq.MSets.MSetWeakList MakeRaw elements def
R7336:7336 Coq.MSets.MSetWeakList <> s var
R7318:7321 Coq.Program.Basics <> flip def
R7323:7323 Coq.MSets.MSetWeakList <> f var
inst 7392:7399 MakeRaw union_ok
R7417:7418 Coq.MSets.MSetWeakList MakeRaw Ok class
R7420:7420 Coq.MSets.MSetWeakList <> s var
R7423:7424 Coq.MSets.MSetWeakList MakeRaw Ok class
R7426:7427 Coq.MSets.MSetWeakList <> s' var
R7431:7432 Coq.MSets.MSetWeakList MakeRaw Ok class
R7435:7439 Coq.MSets.MSetWeakList MakeRaw union def
R7443:7444 Coq.MSets.MSetWeakList <> s' var
R7441:7441 Coq.MSets.MSetWeakList <> s var
R7505:7508 Coq.Program.Basics <> flip def
prf 7540:7549 MakeRaw union_spec
R7571:7571 Coq.MSets.MSetWeakList MakeRaw t def
R7579:7581 Coq.MSets.MSetWeakList MakeRaw elt def
R7590:7591 Coq.MSets.MSetWeakList MakeRaw Ok class
R7593:7593 Coq.MSets.MSetWeakList <> s var
R7603:7604 Coq.MSets.MSetWeakList MakeRaw Ok class
R7606:7607 Coq.MSets.MSetWeakList <> s' var
R7631:7635 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R7614:7615 Coq.MSets.MSetWeakList MakeRaw In syndef
R7620:7624 Coq.MSets.MSetWeakList MakeRaw union def
R7628:7629 Coq.MSets.MSetWeakList <> s' var
R7626:7626 Coq.MSets.MSetWeakList <> s var
R7617:7617 Coq.MSets.MSetWeakList <> x var
R7642:7645 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7636:7637 Coq.MSets.MSetWeakList MakeRaw In syndef
R7641:7641 Coq.MSets.MSetWeakList <> s var
R7639:7639 Coq.MSets.MSetWeakList <> x var
R7646:7647 Coq.MSets.MSetWeakList MakeRaw In syndef
R7651:7652 Coq.MSets.MSetWeakList <> s' var
R7649:7649 Coq.MSets.MSetWeakList <> x var
R7698:7701 Coq.Program.Basics <> flip def
R7756:7763 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R7766:7773 Coq.Lists.SetoidList <> InA_cons thm
R7756:7763 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R7756:7763 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R7756:7763 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R7766:7773 Coq.Lists.SetoidList <> InA_cons thm
R7766:7773 Coq.Lists.SetoidList <> InA_cons thm
inst 7813:7820 MakeRaw inter_ok
R7829:7830 Coq.MSets.MSetWeakList MakeRaw Ok class
R7832:7832 Coq.MSets.MSetWeakList <> s var
R7835:7836 Coq.MSets.MSetWeakList MakeRaw Ok class
R7838:7839 Coq.MSets.MSetWeakList <> s' var
R7844:7845 Coq.MSets.MSetWeakList MakeRaw Ok class
R7848:7852 Coq.MSets.MSetWeakList MakeRaw inter def
R7856:7857 Coq.MSets.MSetWeakList <> s' var
R7854:7854 Coq.MSets.MSetWeakList <> s var
R7879:7883 Coq.MSets.MSetWeakList MakeRaw inter def
R7886:7889 Coq.MSets.MSetWeakList MakeRaw fold def
R7892:7895 Coq.Program.Basics <> flip def
R7912:7914 Coq.Init.Datatypes <> nil constr
R7920:7922 Coq.MSets.MSetWeakList MakeRaw elt def
R7912:7914 Coq.Init.Datatypes <> nil constr
R7920:7922 Coq.MSets.MSetWeakList MakeRaw elt def
R7944:7945 Coq.MSets.MSetWeakList MakeRaw Ok class
R7944:7945 Coq.MSets.MSetWeakList MakeRaw Ok class
R8075:8077 Coq.MSets.MSetWeakList MakeRaw mem def
R8075:8077 Coq.MSets.MSetWeakList MakeRaw mem def
prf 8115:8124 MakeRaw inter_spec
R8147:8147 Coq.MSets.MSetWeakList MakeRaw t def
R8155:8157 Coq.MSets.MSetWeakList MakeRaw elt def
R8166:8167 Coq.MSets.MSetWeakList MakeRaw Ok class
R8169:8169 Coq.MSets.MSetWeakList <> s var
R8179:8180 Coq.MSets.MSetWeakList MakeRaw Ok class
R8182:8183 Coq.MSets.MSetWeakList <> s' var
R8207:8211 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8190:8191 Coq.MSets.MSetWeakList MakeRaw In syndef
R8196:8200 Coq.MSets.MSetWeakList MakeRaw inter def
R8204:8205 Coq.MSets.MSetWeakList <> s' var
R8202:8202 Coq.MSets.MSetWeakList <> s var
R8193:8193 Coq.MSets.MSetWeakList <> x var
R8218:8221 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8212:8213 Coq.MSets.MSetWeakList MakeRaw In syndef
R8217:8217 Coq.MSets.MSetWeakList <> s var
R8215:8215 Coq.MSets.MSetWeakList <> x var
R8222:8223 Coq.MSets.MSetWeakList MakeRaw In syndef
R8227:8228 Coq.MSets.MSetWeakList <> s' var
R8225:8225 Coq.MSets.MSetWeakList <> x var
R8249:8253 Coq.MSets.MSetWeakList MakeRaw inter def
R8256:8259 Coq.MSets.MSetWeakList MakeRaw fold def
R8262:8265 Coq.Program.Basics <> flip def
R8290:8292 Coq.Init.Datatypes <> nil constr
R8298:8300 Coq.MSets.MSetWeakList MakeRaw elt def
R8290:8292 Coq.Init.Datatypes <> nil constr
R8298:8300 Coq.MSets.MSetWeakList MakeRaw elt def
R8327:8328 Coq.MSets.MSetWeakList MakeRaw Ok class
R8327:8328 Coq.MSets.MSetWeakList MakeRaw Ok class
R8368:8368 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8386:8391 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8375:8378 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8369:8370 Coq.MSets.MSetWeakList MakeRaw In syndef
R8379:8380 Coq.MSets.MSetWeakList MakeRaw In syndef
R8392:8392 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8410:8414 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8399:8402 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8393:8394 Coq.MSets.MSetWeakList MakeRaw In syndef
R8403:8404 Coq.MSets.MSetWeakList MakeRaw In syndef
R8415:8416 Coq.MSets.MSetWeakList MakeRaw In syndef
R8368:8368 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8386:8391 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8375:8378 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8369:8370 Coq.MSets.MSetWeakList MakeRaw In syndef
R8379:8380 Coq.MSets.MSetWeakList MakeRaw In syndef
R8392:8392 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8410:8414 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8399:8402 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8393:8394 Coq.MSets.MSetWeakList MakeRaw In syndef
R8403:8404 Coq.MSets.MSetWeakList MakeRaw In syndef
R8415:8416 Coq.MSets.MSetWeakList MakeRaw In syndef
R8600:8602 Coq.MSets.MSetWeakList MakeRaw mem def
R8600:8602 Coq.MSets.MSetWeakList MakeRaw mem def
R8637:8644 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R8647:8654 Coq.Lists.SetoidList <> InA_cons thm
R8637:8644 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R8637:8644 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R8637:8644 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R8647:8654 Coq.Lists.SetoidList <> InA_cons thm
R8647:8654 Coq.Lists.SetoidList <> InA_cons thm
R8678:8685 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8678:8685 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8678:8685 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8678:8685 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8754:8761 Coq.Lists.SetoidList <> InA_cons thm
R8754:8761 Coq.Lists.SetoidList <> InA_cons thm
R8754:8761 Coq.Lists.SetoidList <> InA_cons thm
R8792:8799 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8792:8799 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8792:8799 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8792:8799 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
inst 8852:8858 MakeRaw diff_ok
R8876:8877 Coq.MSets.MSetWeakList MakeRaw Ok class
R8879:8879 Coq.MSets.MSetWeakList <> s var
R8882:8883 Coq.MSets.MSetWeakList MakeRaw Ok class
R8885:8886 Coq.MSets.MSetWeakList <> s' var
R8890:8891 Coq.MSets.MSetWeakList MakeRaw Ok class
R8894:8897 Coq.MSets.MSetWeakList MakeRaw diff def
R8901:8902 Coq.MSets.MSetWeakList <> s' var
R8899:8899 Coq.MSets.MSetWeakList <> s var
R8924:8927 Coq.MSets.MSetWeakList MakeRaw diff def
R8983:8986 Coq.Program.Basics <> flip def
prf 9037:9045 MakeRaw diff_spec
R9068:9068 Coq.MSets.MSetWeakList MakeRaw t def
R9076:9078 Coq.MSets.MSetWeakList MakeRaw elt def
R9087:9088 Coq.MSets.MSetWeakList MakeRaw Ok class
R9090:9090 Coq.MSets.MSetWeakList <> s var
R9100:9101 Coq.MSets.MSetWeakList MakeRaw Ok class
R9103:9104 Coq.MSets.MSetWeakList <> s' var
R9127:9131 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9111:9112 Coq.MSets.MSetWeakList MakeRaw In syndef
R9117:9120 Coq.MSets.MSetWeakList MakeRaw diff def
R9124:9125 Coq.MSets.MSetWeakList <> s' var
R9122:9122 Coq.MSets.MSetWeakList <> s var
R9114:9114 Coq.MSets.MSetWeakList <> x var
R9138:9141 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9132:9133 Coq.MSets.MSetWeakList MakeRaw In syndef
R9137:9137 Coq.MSets.MSetWeakList <> s var
R9135:9135 Coq.MSets.MSetWeakList <> x var
R9142:9142 Coq.Init.Logic <> :type_scope:'~'_x not
R9143:9144 Coq.MSets.MSetWeakList MakeRaw In syndef
R9148:9149 Coq.MSets.MSetWeakList <> s' var
R9146:9146 Coq.MSets.MSetWeakList <> x var
R9170:9173 Coq.MSets.MSetWeakList MakeRaw diff def
R9229:9232 Coq.Program.Basics <> flip def
R9284:9294 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R9297:9304 Coq.Lists.SetoidList <> InA_cons thm
R9284:9294 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R9284:9294 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R9284:9294 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R9297:9304 Coq.Lists.SetoidList <> InA_cons thm
R9297:9304 Coq.Lists.SetoidList <> InA_cons thm
prf 9334:9344 MakeRaw subset_spec
R9366:9366 Coq.MSets.MSetWeakList MakeRaw t def
R9375:9376 Coq.MSets.MSetWeakList MakeRaw Ok class
R9378:9378 Coq.MSets.MSetWeakList <> s var
R9388:9389 Coq.MSets.MSetWeakList MakeRaw Ok class
R9391:9392 Coq.MSets.MSetWeakList <> s' var
R9417:9421 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9410:9412 Coq.Init.Logic <> :type_scope:x_'='_x not
R9399:9404 Coq.MSets.MSetWeakList MakeRaw subset def
R9408:9409 Coq.MSets.MSetWeakList <> s' var
R9406:9406 Coq.MSets.MSetWeakList <> s var
R9413:9416 Coq.Init.Datatypes <> true constr
R9422:9427 Coq.MSets.MSetWeakList MakeRaw Subset def
R9431:9432 Coq.MSets.MSetWeakList <> s' var
R9429:9429 Coq.MSets.MSetWeakList <> s var
R9453:9458 Coq.MSets.MSetWeakList MakeRaw subset def
R9461:9466 Coq.MSets.MSetWeakList MakeRaw Subset def
R9487:9499 Coq.MSets.MSetWeakList MakeRaw is_empty_spec thm
R9487:9499 Coq.MSets.MSetWeakList MakeRaw is_empty_spec thm
R9487:9499 Coq.MSets.MSetWeakList MakeRaw is_empty_spec thm
R9511:9515 Coq.MSets.MSetWeakList MakeRaw Empty def
R9567:9575 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9567:9575 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9567:9575 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9567:9575 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9567:9575 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9608:9615 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R9608:9615 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R9608:9615 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R9641:9643 Coq.MSets.MSetWeakList MakeRaw mem def
R9641:9643 Coq.MSets.MSetWeakList MakeRaw mem def
R9673:9681 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9673:9681 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9673:9681 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9673:9681 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9673:9681 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
prf 9717:9726 MakeRaw equal_spec
R9748:9748 Coq.MSets.MSetWeakList MakeRaw t def
R9757:9758 Coq.MSets.MSetWeakList MakeRaw Ok class
R9760:9760 Coq.MSets.MSetWeakList <> s var
R9770:9771 Coq.MSets.MSetWeakList MakeRaw Ok class
R9773:9774 Coq.MSets.MSetWeakList <> s' var
R9798:9802 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9791:9793 Coq.Init.Logic <> :type_scope:x_'='_x not
R9781:9785 Coq.MSets.MSetWeakList MakeRaw equal def
R9789:9790 Coq.MSets.MSetWeakList <> s' var
R9787:9787 Coq.MSets.MSetWeakList <> s var
R9794:9797 Coq.Init.Datatypes <> true constr
R9803:9807 Coq.MSets.MSetWeakList MakeRaw Equal def
R9811:9812 Coq.MSets.MSetWeakList <> s' var
R9809:9809 Coq.MSets.MSetWeakList <> s var
R9833:9837 Coq.MSets.MSetWeakList MakeRaw Equal def
R9840:9844 Coq.MSets.MSetWeakList MakeRaw equal def
R9865:9877 Coq.Bool.Bool <> andb_true_iff thm
R9881:9891 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R9865:9877 Coq.Bool.Bool <> andb_true_iff thm
R9865:9877 Coq.Bool.Bool <> andb_true_iff thm
R9881:9891 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R9881:9891 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R9881:9891 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R9881:9891 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R9903:9908 Coq.MSets.MSetWeakList MakeRaw Subset def
def 9980:9991 MakeRaw choose_spec1
R10011:10011 Coq.MSets.MSetWeakList MakeRaw t def
R10019:10021 Coq.MSets.MSetWeakList MakeRaw elt def
R10042:10045 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10046:10047 Coq.MSets.MSetWeakList MakeRaw In syndef
R10051:10051 Coq.MSets.MSetWeakList <> s var
R10049:10049 Coq.MSets.MSetWeakList <> x var
R10033:10035 Coq.Init.Logic <> :type_scope:x_'='_x not
R10025:10030 Coq.MSets.MSetWeakList MakeRaw choose def
R10032:10032 Coq.MSets.MSetWeakList <> s var
R10036:10039 Coq.Init.Datatypes <> Some constr
R10041:10041 Coq.MSets.MSetWeakList <> x var
def 10132:10143 MakeRaw choose_spec2
R10158:10158 Coq.MSets.MSetWeakList MakeRaw t def
R10176:10179 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10180:10184 Coq.MSets.MSetWeakList MakeRaw Empty def
R10186:10186 Coq.MSets.MSetWeakList <> s var
R10169:10171 Coq.Init.Logic <> :type_scope:x_'='_x not
R10161:10166 Coq.MSets.MSetWeakList MakeRaw choose def
R10168:10168 Coq.MSets.MSetWeakList <> s var
R10172:10175 Coq.Init.Datatypes <> None constr
prf 10287:10299 MakeRaw cardinal_spec
R10318:10318 Coq.MSets.MSetWeakList MakeRaw t def
R10327:10328 Coq.MSets.MSetWeakList MakeRaw Ok class
R10330:10330 Coq.MSets.MSetWeakList <> s var
R10344:10346 Coq.Init.Logic <> :type_scope:x_'='_x not
R10334:10341 Coq.MSets.MSetWeakList MakeRaw cardinal def
R10343:10343 Coq.MSets.MSetWeakList <> s var
R10347:10352 Coq.Init.Datatypes <> length def
R10355:10362 Coq.MSets.MSetWeakList MakeRaw elements def
R10364:10364 Coq.MSets.MSetWeakList <> s var
prf 10401:10412 MakeRaw filter_spec'
R10450:10453 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10454:10455 Coq.MSets.MSetWeakList MakeRaw In syndef
R10459:10459 Coq.MSets.MSetWeakList <> s var
R10457:10457 Coq.MSets.MSetWeakList <> x var
R10433:10434 Coq.MSets.MSetWeakList MakeRaw In syndef
R10439:10444 Coq.MSets.MSetWeakList MakeRaw filter def
R10448:10448 Coq.MSets.MSetWeakList <> s var
R10446:10446 Coq.MSets.MSetWeakList <> f var
R10436:10436 Coq.MSets.MSetWeakList <> x var
prf 10583:10593 MakeRaw filter_spec
R10612:10612 Coq.MSets.MSetWeakList MakeRaw t def
R10620:10622 Coq.MSets.MSetWeakList MakeRaw elt def
R10633:10636 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10637:10640 Coq.Init.Datatypes <> bool ind
R10630:10632 Coq.MSets.MSetWeakList MakeRaw elt def
R10667:10674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10717:10717 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10692:10696 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10675:10676 Coq.MSets.MSetWeakList MakeRaw In syndef
R10681:10686 Coq.MSets.MSetWeakList MakeRaw filter def
R10690:10690 Coq.MSets.MSetWeakList <> s var
R10688:10688 Coq.MSets.MSetWeakList <> f var
R10678:10678 Coq.MSets.MSetWeakList <> x var
R10703:10706 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10697:10698 Coq.MSets.MSetWeakList MakeRaw In syndef
R10702:10702 Coq.MSets.MSetWeakList <> s var
R10700:10700 Coq.MSets.MSetWeakList <> x var
R10710:10712 Coq.Init.Logic <> :type_scope:x_'='_x not
R10707:10707 Coq.MSets.MSetWeakList <> f var
R10709:10709 Coq.MSets.MSetWeakList <> x var
R10713:10716 Coq.Init.Datatypes <> true constr
R10647:10652 Coq.Classes.Morphisms <> Proper class
R10666:10666 Coq.MSets.MSetWeakList <> f var
R10659:10661 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R10655:10658 Coq.MSets.MSetWeakList X eq defax
R10662:10663 Coq.Init.Logic <> eq ind
R10812:10819 Coq.Lists.SetoidList <> InA_cons thm
R10812:10819 Coq.Lists.SetoidList <> InA_cons thm
R10812:10819 Coq.Lists.SetoidList <> InA_cons thm
R10812:10819 Coq.Lists.SetoidList <> InA_cons thm
R10812:10819 Coq.Lists.SetoidList <> InA_cons thm
R10812:10819 Coq.Lists.SetoidList <> InA_cons thm
R10812:10819 Coq.Lists.SetoidList <> InA_cons thm
R10812:10819 Coq.Lists.SetoidList <> InA_cons thm
inst 10947:10955 MakeRaw filter_ok
R10963:10964 Coq.MSets.MSetWeakList MakeRaw Ok class
R10966:10966 Coq.MSets.MSetWeakList <> s var
R10971:10972 Coq.MSets.MSetWeakList MakeRaw Ok class
R10975:10980 Coq.MSets.MSetWeakList MakeRaw filter def
R10984:10984 Coq.MSets.MSetWeakList <> s var
R10982:10982 Coq.MSets.MSetWeakList <> f var
R11110:11121 Coq.MSets.MSetWeakList MakeRaw filter_spec' thm
R11110:11121 Coq.MSets.MSetWeakList MakeRaw filter_spec' thm
prf 11147:11158 MakeRaw for_all_spec
R11177:11177 Coq.MSets.MSetWeakList MakeRaw t def
R11188:11191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11192:11195 Coq.Init.Datatypes <> bool ind
R11185:11187 Coq.MSets.MSetWeakList MakeRaw elt def
R11222:11229 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11284:11284 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11248:11252 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11241:11243 Coq.Init.Logic <> :type_scope:x_'='_x not
R11230:11236 Coq.MSets.MSetWeakList MakeRaw for_all def
R11240:11240 Coq.MSets.MSetWeakList <> s var
R11238:11238 Coq.MSets.MSetWeakList <> f var
R11244:11247 Coq.Init.Datatypes <> true constr
R11253:11259 Coq.MSets.MSetWeakList MakeRaw For_all def
R11283:11283 Coq.MSets.MSetWeakList <> s var
R11274:11276 Coq.Init.Logic <> :type_scope:x_'='_x not
R11271:11271 Coq.MSets.MSetWeakList <> f var
R11273:11273 Coq.MSets.MSetWeakList <> x var
R11277:11280 Coq.Init.Datatypes <> true constr
R11202:11207 Coq.Classes.Morphisms <> Proper class
R11221:11221 Coq.MSets.MSetWeakList <> f var
R11214:11216 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R11210:11213 Coq.MSets.MSetWeakList X eq defax
R11217:11218 Coq.Init.Logic <> eq ind
R11305:11311 Coq.MSets.MSetWeakList MakeRaw For_all def
prf 11558:11568 MakeRaw exists_spec
R11587:11587 Coq.MSets.MSetWeakList MakeRaw t def
R11598:11601 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11602:11605 Coq.Init.Datatypes <> bool ind
R11595:11597 Coq.MSets.MSetWeakList MakeRaw elt def
R11632:11639 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11693:11693 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11658:11662 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11651:11653 Coq.Init.Logic <> :type_scope:x_'='_x not
R11640:11646 Coq.MSets.MSetWeakList MakeRaw exists_ def
R11650:11650 Coq.MSets.MSetWeakList <> s var
R11648:11648 Coq.MSets.MSetWeakList <> f var
R11654:11657 Coq.Init.Datatypes <> true constr
R11663:11668 Coq.MSets.MSetWeakList MakeRaw Exists def
R11692:11692 Coq.MSets.MSetWeakList <> s var
R11683:11685 Coq.Init.Logic <> :type_scope:x_'='_x not
R11680:11680 Coq.MSets.MSetWeakList <> f var
R11682:11682 Coq.MSets.MSetWeakList <> x var
R11686:11689 Coq.Init.Datatypes <> true constr
R11612:11617 Coq.Classes.Morphisms <> Proper class
R11631:11631 Coq.MSets.MSetWeakList <> f var
R11624:11626 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R11620:11623 Coq.MSets.MSetWeakList X eq defax
R11627:11628 Coq.Init.Logic <> eq ind
R11714:11719 Coq.MSets.MSetWeakList MakeRaw Exists def
prf 11978:11992 MakeRaw partition_spec1
R12011:12011 Coq.MSets.MSetWeakList MakeRaw t def
R12022:12025 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12026:12029 Coq.Init.Datatypes <> bool ind
R12019:12021 Coq.MSets.MSetWeakList MakeRaw elt def
R12056:12062 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12063:12067 Coq.MSets.MSetWeakList MakeRaw Equal def
R12092:12097 Coq.MSets.MSetWeakList MakeRaw filter def
R12101:12101 Coq.MSets.MSetWeakList <> s var
R12099:12099 Coq.MSets.MSetWeakList <> f var
R12070:12072 Coq.Init.Datatypes <> fst def
R12075:12083 Coq.MSets.MSetWeakList MakeRaw partition def
R12087:12087 Coq.MSets.MSetWeakList <> s var
R12085:12085 Coq.MSets.MSetWeakList <> f var
R12036:12041 Coq.Classes.Morphisms <> Proper class
R12055:12055 Coq.MSets.MSetWeakList <> f var
R12048:12050 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R12044:12047 Coq.MSets.MSetWeakList X eq defax
R12051:12052 Coq.Init.Logic <> eq ind
R12156:12160 Coq.MSets.MSetWeakList MakeRaw Equal def
R12247:12255 Coq.MSets.MSetWeakList MakeRaw partition def
R12247:12255 Coq.MSets.MSetWeakList MakeRaw partition def
prf 12375:12389 MakeRaw partition_spec2
R12408:12408 Coq.MSets.MSetWeakList MakeRaw t def
R12419:12422 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12423:12426 Coq.Init.Datatypes <> bool ind
R12416:12418 Coq.MSets.MSetWeakList MakeRaw elt def
R12453:12459 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12460:12464 Coq.MSets.MSetWeakList MakeRaw Equal def
R12489:12494 Coq.MSets.MSetWeakList MakeRaw filter def
R12518:12518 Coq.MSets.MSetWeakList <> s var
R12506:12509 Coq.Init.Datatypes <> negb def
R12512:12512 Coq.MSets.MSetWeakList <> f var
R12514:12514 Coq.MSets.MSetWeakList <> x var
R12467:12469 Coq.Init.Datatypes <> snd def
R12472:12480 Coq.MSets.MSetWeakList MakeRaw partition def
R12484:12484 Coq.MSets.MSetWeakList <> s var
R12482:12482 Coq.MSets.MSetWeakList <> f var
R12433:12438 Coq.Classes.Morphisms <> Proper class
R12452:12452 Coq.MSets.MSetWeakList <> f var
R12445:12447 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R12441:12444 Coq.MSets.MSetWeakList X eq defax
R12448:12449 Coq.Init.Logic <> eq ind
R12573:12577 Coq.MSets.MSetWeakList MakeRaw Equal def
R12664:12672 Coq.MSets.MSetWeakList MakeRaw partition def
R12664:12672 Coq.MSets.MSetWeakList MakeRaw partition def
prf 12792:12805 MakeRaw partition_ok1'
R12824:12824 Coq.MSets.MSetWeakList MakeRaw t def
R12833:12834 Coq.MSets.MSetWeakList MakeRaw Ok class
R12836:12836 Coq.MSets.MSetWeakList <> s var
R12847:12850 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12851:12854 Coq.Init.Datatypes <> bool ind
R12844:12846 Coq.MSets.MSetWeakList MakeRaw elt def
R12859:12861 Coq.MSets.MSetWeakList MakeRaw elt def
R12895:12898 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12899:12900 Coq.MSets.MSetWeakList MakeRaw In syndef
R12904:12904 Coq.MSets.MSetWeakList <> s var
R12902:12902 Coq.MSets.MSetWeakList <> x var
R12869:12870 Coq.MSets.MSetWeakList MakeRaw In syndef
R12875:12877 Coq.Init.Datatypes <> fst def
R12880:12888 Coq.MSets.MSetWeakList MakeRaw partition def
R12892:12892 Coq.MSets.MSetWeakList <> s var
R12890:12890 Coq.MSets.MSetWeakList <> f var
R12872:12872 Coq.MSets.MSetWeakList <> x var
R13012:13020 Coq.MSets.MSetWeakList MakeRaw partition def
R13012:13020 Coq.MSets.MSetWeakList MakeRaw partition def
R13012:13020 Coq.MSets.MSetWeakList MakeRaw partition def
prf 13089:13102 MakeRaw partition_ok2'
R13121:13121 Coq.MSets.MSetWeakList MakeRaw t def
R13130:13131 Coq.MSets.MSetWeakList MakeRaw Ok class
R13133:13133 Coq.MSets.MSetWeakList <> s var
R13144:13147 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13148:13151 Coq.Init.Datatypes <> bool ind
R13141:13143 Coq.MSets.MSetWeakList MakeRaw elt def
R13156:13158 Coq.MSets.MSetWeakList MakeRaw elt def
R13192:13195 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13196:13197 Coq.MSets.MSetWeakList MakeRaw In syndef
R13201:13201 Coq.MSets.MSetWeakList <> s var
R13199:13199 Coq.MSets.MSetWeakList <> x var
R13166:13167 Coq.MSets.MSetWeakList MakeRaw In syndef
R13172:13174 Coq.Init.Datatypes <> snd def
R13177:13185 Coq.MSets.MSetWeakList MakeRaw partition def
R13189:13189 Coq.MSets.MSetWeakList <> s var
R13187:13187 Coq.MSets.MSetWeakList <> f var
R13169:13169 Coq.MSets.MSetWeakList <> x var
R13309:13317 Coq.MSets.MSetWeakList MakeRaw partition def
R13309:13317 Coq.MSets.MSetWeakList MakeRaw partition def
R13309:13317 Coq.MSets.MSetWeakList MakeRaw partition def
inst 13396:13408 MakeRaw partition_ok1
R13425:13426 Coq.MSets.MSetWeakList MakeRaw Ok class
R13428:13428 Coq.MSets.MSetWeakList <> s var
R13432:13433 Coq.MSets.MSetWeakList MakeRaw Ok class
R13436:13438 Coq.Init.Datatypes <> fst def
R13441:13449 Coq.MSets.MSetWeakList MakeRaw partition def
R13453:13453 Coq.MSets.MSetWeakList <> s var
R13451:13451 Coq.MSets.MSetWeakList <> f var
R13548:13561 Coq.MSets.MSetWeakList MakeRaw partition_ok1' thm
R13548:13561 Coq.MSets.MSetWeakList MakeRaw partition_ok1' thm
R13619:13627 Coq.MSets.MSetWeakList MakeRaw partition def
R13619:13627 Coq.MSets.MSetWeakList MakeRaw partition def
R13619:13627 Coq.MSets.MSetWeakList MakeRaw partition def
inst 13688:13700 MakeRaw partition_ok2
R13717:13718 Coq.MSets.MSetWeakList MakeRaw Ok class
R13720:13720 Coq.MSets.MSetWeakList <> s var
R13724:13725 Coq.MSets.MSetWeakList MakeRaw Ok class
R13728:13730 Coq.Init.Datatypes <> snd def
R13733:13741 Coq.MSets.MSetWeakList MakeRaw partition def
R13745:13745 Coq.MSets.MSetWeakList <> s var
R13743:13743 Coq.MSets.MSetWeakList <> f var
R13840:13853 Coq.MSets.MSetWeakList MakeRaw partition_ok2' thm
R13840:13853 Coq.MSets.MSetWeakList MakeRaw partition_ok2' thm
R13911:13919 Coq.MSets.MSetWeakList MakeRaw partition def
R13911:13919 Coq.MSets.MSetWeakList MakeRaw partition def
R13911:13919 Coq.MSets.MSetWeakList MakeRaw partition def
R13968:13979 Coq.MSets.MSetWeakList MakeRaw.ForNotations <> sec
def 13996:13997 MakeRaw In
R14002:14004 Coq.Lists.SetoidList <> InA ind
R14006:14009 Coq.MSets.MSetWeakList X eq defax
def 14025:14026 MakeRaw eq
R14031:14035 Coq.MSets.MSetWeakList MakeRaw Equal def
inst 14049:14056 MakeRaw eq_equiv
R14060:14070 Coq.Classes.RelationClasses <> Equivalence class
R14072:14073 Coq.MSets.MSetWeakList MakeRaw eq def
R14086:14092 Coq.MSets.MSetWeakList MakeRaw <> mod
R14278:14290 Coq.Structures.Equalities DecidableType <> mod
R14296:14300 Coq.MSets.MSetInterface WSets <> mod
R14319:14319 Coq.MSets.MSetWeakList X <> modtype
mod 14269:14272 <> Make
R14337:14343 Coq.MSets.MSetWeakList MakeRaw <> modtype
R14345:14345 Coq.MSets.MSetWeakList X <> modtype
mod 14330:14332 <> Make.Raw
R14357:14365 Coq.MSets.MSetInterface WRaw2Sets <> modtype
R14367:14367 Coq.MSets.MSetWeakList X <> modtype
R14369:14371 Coq.MSets.MSetWeakList Make.Raw <> modtype
R14378:14381 Coq.MSets.MSetWeakList Make <> mod

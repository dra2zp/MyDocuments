DIGEST 6742794a4d739d4a62ed9308e3550e1d
FCoq.FSets.FSetBridge
R673:685 Coq.FSets.FSetInterface <> <> lib
R863:863 Coq.FSets.FSetInterface S <> mod
R869:872 Coq.FSets.FSetInterface Sdep <> mod
R891:893 Coq.FSets.FSetBridge M.E <> modtype
mod 841:850 <> DepOfNodep
def 910:914 DepOfNodep empty
R918:918 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R920:922 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R924:926 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R934:934 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R923:923 Coq.FSets.FSetBridge M t defax
R927:931 Coq.FSets.FSetBridge M Empty def
R957:961 Coq.FSets.FSetBridge M empty defax
R957:961 Coq.FSets.FSetBridge M empty defax
def 1000:1007 DepOfNodep is_empty
R1022:1022 Coq.FSets.FSetBridge M t defax
R1025:1025 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1033:1037 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1047:1047 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1026:1030 Coq.FSets.FSetBridge M Empty def
R1032:1032 Coq.FSets.FSetBridge <> s var
R1038:1039 Coq.Init.Logic <> :type_scope:'~'_x not
R1040:1044 Coq.FSets.FSetBridge M Empty def
R1046:1046 Coq.FSets.FSetBridge <> s var
R1083:1092 Coq.FSets.FSetBridge M is_empty_1 defax
R1103:1112 Coq.FSets.FSetBridge M is_empty_2 defax
R1083:1092 Coq.FSets.FSetBridge M is_empty_1 defax
R1103:1112 Coq.FSets.FSetBridge M is_empty_2 defax
R1133:1140 Coq.FSets.FSetBridge M is_empty defax
R1133:1140 Coq.FSets.FSetBridge M is_empty defax
def 1179:1181 DepOfNodep mem
R1197:1199 Coq.FSets.FSetBridge M elt def
R1207:1207 Coq.FSets.FSetBridge M t defax
R1211:1211 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1218:1222 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1231:1231 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1212:1213 Coq.FSets.FSetBridge M In defax
R1217:1217 Coq.FSets.FSetBridge <> s var
R1215:1215 Coq.FSets.FSetBridge <> x var
R1223:1224 Coq.Init.Logic <> :type_scope:'~'_x not
R1225:1226 Coq.FSets.FSetBridge M In defax
R1230:1230 Coq.FSets.FSetBridge <> s var
R1228:1228 Coq.FSets.FSetBridge <> x var
R1267:1271 Coq.FSets.FSetBridge M mem_1 defax
R1289:1293 Coq.FSets.FSetBridge M mem_2 defax
R1267:1271 Coq.FSets.FSetBridge M mem_1 defax
R1289:1293 Coq.FSets.FSetBridge M mem_2 defax
R1321:1323 Coq.FSets.FSetBridge M mem defax
R1321:1323 Coq.FSets.FSetBridge M mem defax
def 1363:1365 DepOfNodep Add
R1372:1374 Coq.FSets.FSetBridge M elt def
R1385:1385 Coq.FSets.FSetBridge M t defax
R1406:1408 Coq.FSets.FSetBridge M elt def
R1418:1422 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R1411:1412 Coq.FSets.FSetBridge M In defax
R1416:1417 Coq.FSets.FSetBridge <> s' var
R1414:1414 Coq.FSets.FSetBridge <> y var
R1431:1434 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R1423:1426 Coq.FSets.FSetBridge M.E eq defax
R1430:1430 Coq.FSets.FSetBridge <> y var
R1428:1428 Coq.FSets.FSetBridge <> x var
R1435:1436 Coq.FSets.FSetBridge M In defax
R1440:1440 Coq.FSets.FSetBridge <> s var
R1438:1438 Coq.FSets.FSetBridge <> y var
def 1457:1459 DepOfNodep add
R1475:1477 Coq.FSets.FSetBridge M elt def
R1485:1485 Coq.FSets.FSetBridge M t defax
R1489:1489 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R1492:1494 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R1496:1498 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R1509:1509 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R1495:1495 Coq.FSets.FSetBridge M t defax
R1499:1501 Coq.FSets.FSetBridge DepOfNodep Add def
R1505:1505 Coq.FSets.FSetBridge <> s var
R1503:1503 Coq.FSets.FSetBridge <> x var
R1541:1543 Coq.FSets.FSetBridge M add defax
R1541:1543 Coq.FSets.FSetBridge M add defax
R1568:1570 Coq.FSets.FSetBridge DepOfNodep Add def
R1594:1601 Coq.FSets.FSetBridge M.E eq_dec defax
R1594:1601 Coq.FSets.FSetBridge M.E eq_dec defax
R1645:1649 Coq.FSets.FSetBridge M add_3 defax
R1645:1649 Coq.FSets.FSetBridge M add_3 defax
def 1680:1688 DepOfNodep singleton
R1707:1709 Coq.FSets.FSetBridge M elt def
R1712:1712 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R1714:1716 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R1718:1720 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R1756:1756 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R1717:1717 Coq.FSets.FSetBridge M t defax
R1732:1734 Coq.FSets.FSetBridge M elt def
R1743:1747 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R1737:1738 Coq.FSets.FSetBridge M In defax
R1740:1740 Coq.FSets.FSetBridge <> y var
R1748:1751 Coq.FSets.FSetBridge M.E eq defax
R1755:1755 Coq.FSets.FSetBridge <> y var
R1753:1753 Coq.FSets.FSetBridge <> x var
R1788:1796 Coq.FSets.FSetBridge M singleton defax
R1788:1796 Coq.FSets.FSetBridge M singleton defax
def 1834:1839 DepOfNodep remove
R1859:1861 Coq.FSets.FSetBridge M elt def
R1869:1869 Coq.FSets.FSetBridge M t defax
R1877:1877 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R1880:1882 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R1884:1886 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R1935:1935 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R1883:1883 Coq.FSets.FSetBridge M t defax
R1898:1900 Coq.FSets.FSetBridge M elt def
R1910:1914 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R1903:1904 Coq.FSets.FSetBridge M In defax
R1906:1906 Coq.FSets.FSetBridge <> y var
R1925:1928 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1915:1916 Coq.Init.Logic <> :type_scope:'~'_x not
R1917:1920 Coq.FSets.FSetBridge M.E eq defax
R1924:1924 Coq.FSets.FSetBridge <> y var
R1922:1922 Coq.FSets.FSetBridge <> x var
R1929:1930 Coq.FSets.FSetBridge M In defax
R1934:1934 Coq.FSets.FSetBridge <> s var
R1932:1932 Coq.FSets.FSetBridge <> y var
R1967:1972 Coq.FSets.FSetBridge M remove defax
R1967:1972 Coq.FSets.FSetBridge M remove defax
R2003:2004 Coq.FSets.FSetBridge M In defax
R2009:2014 Coq.FSets.FSetBridge M remove defax
R2003:2004 Coq.FSets.FSetBridge M In defax
R2009:2014 Coq.FSets.FSetBridge M remove defax
R2048:2051 Coq.FSets.FSetBridge M In_1 defax
R2048:2051 Coq.FSets.FSetBridge M In_1 defax
R2077:2084 Coq.FSets.FSetBridge M.E eq_dec defax
R2077:2084 Coq.FSets.FSetBridge M.E eq_dec defax
R2118:2119 Coq.FSets.FSetBridge M In defax
R2124:2129 Coq.FSets.FSetBridge M remove defax
R2118:2119 Coq.FSets.FSetBridge M In defax
R2124:2129 Coq.FSets.FSetBridge M remove defax
R2163:2166 Coq.FSets.FSetBridge M In_1 defax
R2163:2166 Coq.FSets.FSetBridge M In_1 defax
def 2223:2227 DepOfNodep union
R2249:2249 Coq.FSets.FSetBridge M t defax
R2252:2252 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R2256:2258 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R2260:2262 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R2309:2309 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R2259:2259 Coq.FSets.FSetBridge M t defax
R2274:2276 Coq.FSets.FSetBridge M elt def
R2287:2291 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R2279:2280 Coq.FSets.FSetBridge M In defax
R2282:2282 Coq.FSets.FSetBridge <> x var
R2298:2301 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R2292:2293 Coq.FSets.FSetBridge M In defax
R2297:2297 Coq.FSets.FSetBridge <> s var
R2295:2295 Coq.FSets.FSetBridge <> x var
R2302:2303 Coq.FSets.FSetBridge M In defax
R2307:2308 Coq.FSets.FSetBridge <> s' var
R2305:2305 Coq.FSets.FSetBridge <> x var
R2341:2345 Coq.FSets.FSetBridge M union defax
R2341:2345 Coq.FSets.FSetBridge M union defax
def 2386:2390 DepOfNodep inter
R2412:2412 Coq.FSets.FSetBridge M t defax
R2415:2415 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R2419:2421 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R2423:2425 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R2472:2472 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R2422:2422 Coq.FSets.FSetBridge M t defax
R2437:2439 Coq.FSets.FSetBridge M elt def
R2450:2454 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R2442:2443 Coq.FSets.FSetBridge M In defax
R2445:2445 Coq.FSets.FSetBridge <> x var
R2461:2464 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2455:2456 Coq.FSets.FSetBridge M In defax
R2460:2460 Coq.FSets.FSetBridge <> s var
R2458:2458 Coq.FSets.FSetBridge <> x var
R2465:2466 Coq.FSets.FSetBridge M In defax
R2470:2471 Coq.FSets.FSetBridge <> s' var
R2468:2468 Coq.FSets.FSetBridge <> x var
R2504:2508 Coq.FSets.FSetBridge M inter defax
R2504:2508 Coq.FSets.FSetBridge M inter defax
def 2565:2568 DepOfNodep diff
R2590:2590 Coq.FSets.FSetBridge M t defax
R2593:2593 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R2597:2599 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R2601:2603 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R2652:2652 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R2600:2600 Coq.FSets.FSetBridge M t defax
R2615:2617 Coq.FSets.FSetBridge M elt def
R2628:2632 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R2620:2621 Coq.FSets.FSetBridge M In defax
R2623:2623 Coq.FSets.FSetBridge <> x var
R2639:2642 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2633:2634 Coq.FSets.FSetBridge M In defax
R2638:2638 Coq.FSets.FSetBridge <> s var
R2636:2636 Coq.FSets.FSetBridge <> x var
R2643:2644 Coq.Init.Logic <> :type_scope:'~'_x not
R2645:2646 Coq.FSets.FSetBridge M In defax
R2650:2651 Coq.FSets.FSetBridge <> s' var
R2648:2648 Coq.FSets.FSetBridge <> x var
R2684:2687 Coq.FSets.FSetBridge M diff defax
R2684:2687 Coq.FSets.FSetBridge M diff defax
R2735:2736 Coq.FSets.FSetBridge M In defax
R2735:2736 Coq.FSets.FSetBridge M In defax
def 2782:2786 DepOfNodep equal
R2804:2804 Coq.FSets.FSetBridge M t defax
R2807:2807 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2818:2822 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2835:2835 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2808:2812 Coq.FSets.FSetBridge M Equal def
R2816:2817 Coq.FSets.FSetBridge <> s' var
R2814:2814 Coq.FSets.FSetBridge <> s var
R2823:2824 Coq.Init.Logic <> :type_scope:'~'_x not
R2825:2829 Coq.FSets.FSetBridge M Equal def
R2833:2834 Coq.FSets.FSetBridge <> s' var
R2831:2831 Coq.FSets.FSetBridge <> s var
R2875:2881 Coq.FSets.FSetBridge M equal_1 defax
R2901:2907 Coq.FSets.FSetBridge M equal_2 defax
R2875:2881 Coq.FSets.FSetBridge M equal_1 defax
R2901:2907 Coq.FSets.FSetBridge M equal_2 defax
R2937:2941 Coq.FSets.FSetBridge M equal defax
R2937:2941 Coq.FSets.FSetBridge M equal defax
def 2982:2987 DepOfNodep subset
R3005:3005 Coq.FSets.FSetBridge M t defax
R3008:3008 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3020:3024 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3037:3037 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3009:3014 Coq.FSets.FSetBridge M Subset def
R3018:3019 Coq.FSets.FSetBridge <> s' var
R3016:3016 Coq.FSets.FSetBridge <> s var
R3025:3025 Coq.Init.Logic <> :type_scope:'~'_x not
R3026:3031 Coq.FSets.FSetBridge M Subset def
R3035:3036 Coq.FSets.FSetBridge <> s' var
R3033:3033 Coq.FSets.FSetBridge <> s var
R3077:3084 Coq.FSets.FSetBridge M subset_1 defax
R3104:3111 Coq.FSets.FSetBridge M subset_2 defax
R3077:3084 Coq.FSets.FSetBridge M subset_1 defax
R3104:3111 Coq.FSets.FSetBridge M subset_2 defax
R3141:3146 Coq.FSets.FSetBridge M subset defax
R3141:3146 Coq.FSets.FSetBridge M subset defax
def 3187:3194 DepOfNodep elements
R3213:3213 Coq.FSets.FSetBridge M t defax
R3220:3220 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R3222:3224 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R3233:3235 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R3292:3292 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R3225:3228 Coq.Init.Datatypes <> list ind
R3230:3232 Coq.FSets.FSetBridge M elt def
R3247:3251 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3291:3291 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3236:3239 Coq.Sorting.Sorted <> sort syndef
R3241:3244 Coq.FSets.FSetBridge M.E lt defax
R3263:3265 Coq.FSets.FSetBridge M elt def
R3274:3278 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3268:3269 Coq.FSets.FSetBridge M In defax
R3273:3273 Coq.FSets.FSetBridge <> s var
R3271:3271 Coq.FSets.FSetBridge <> x var
R3279:3281 Coq.Lists.SetoidList <> InA ind
R3288:3288 Coq.FSets.FSetBridge <> x var
R3283:3286 Coq.FSets.FSetBridge M.E eq defax
R3326:3333 Coq.FSets.FSetBridge M elements defax
R3326:3333 Coq.FSets.FSetBridge M elements defax
def 3376:3379 DepOfNodep fold
R3413:3416 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3418:3421 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3422:3422 Coq.FSets.FSetBridge <> A var
R3417:3417 Coq.FSets.FSetBridge <> A var
R3410:3412 Coq.FSets.FSetBridge M elt def
R3430:3430 Coq.FSets.FSetBridge M t defax
R3438:3438 Coq.FSets.FSetBridge <> A var
R3446:3446 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R3448:3450 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R3452:3456 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R3538:3538 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R3451:3451 Coq.FSets.FSetBridge <> A var
R3470:3477 Coq.FSets.FSetBridge DepOfNodep elements def
R3479:3479 Coq.FSets.FSetBridge <> s var
R3503:3505 Coq.Init.Logic <> :type_scope:x_'='_x not
R3506:3514 Coq.Lists.List <> fold_left def
R3537:3537 Coq.FSets.FSetBridge <> i var
R3535:3535 Coq.FSets.FSetBridge <> l var
R3528:3528 Coq.FSets.FSetBridge <> f var
R3532:3532 Coq.FSets.FSetBridge <> a var
R3530:3530 Coq.FSets.FSetBridge <> e var
R3568:3571 Coq.FSets.FSetBridge M fold defax
R3595:3600 Coq.FSets.FSetBridge M fold_1 defax
R3568:3571 Coq.FSets.FSetBridge M fold defax
R3595:3600 Coq.FSets.FSetBridge M fold_1 defax
def 3631:3638 DepOfNodep cardinal
R3659:3659 Coq.FSets.FSetBridge M t defax
R3668:3668 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R3670:3672 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R3676:3678 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R3718:3719 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R3673:3675 Coq.Init.Datatypes <> nat ind
R3692:3699 Coq.FSets.FSetBridge DepOfNodep elements def
R3701:3701 Coq.FSets.FSetBridge <> s var
R3707:3709 Coq.Init.Logic <> :type_scope:x_'='_x not
R3710:3715 Coq.Init.Datatypes <> length def
R3717:3717 Coq.FSets.FSetBridge <> l var
R3751:3758 Coq.FSets.FSetBridge M cardinal defax
R3771:3780 Coq.FSets.FSetBridge M cardinal_1 defax
R3751:3758 Coq.FSets.FSetBridge M cardinal defax
R3771:3780 Coq.FSets.FSetBridge M cardinal_1 defax
def 3807:3810 DepOfNodep fdec
R3820:3823 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3817:3819 Coq.FSets.FSetBridge M elt def
R3849:3851 Coq.FSets.FSetBridge M elt def
R3854:3854 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3858:3862 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3868:3868 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3855:3855 Coq.FSets.FSetBridge <> P var
R3857:3857 Coq.FSets.FSetBridge <> x var
R3863:3864 Coq.Init.Logic <> :type_scope:'~'_x not
R3865:3865 Coq.FSets.FSetBridge <> P var
R3867:3867 Coq.FSets.FSetBridge <> x var
R3880:3882 Coq.FSets.FSetBridge M elt def
R3891:3894 Coq.FSets.FSetBridge <> Pdec var
R3896:3896 Coq.FSets.FSetBridge <> x var
R3913:3917 Coq.Init.Datatypes <> false constr
R3903:3906 Coq.Init.Datatypes <> true constr
prf 3929:3940 DepOfNodep compat_P_aux
R3962:3965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3959:3961 Coq.FSets.FSetBridge M elt def
R3991:3993 Coq.FSets.FSetBridge M elt def
R3996:3996 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4000:4004 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4010:4010 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3997:3997 Coq.FSets.FSetBridge <> P var
R3999:3999 Coq.FSets.FSetBridge <> x var
R4005:4006 Coq.Init.Logic <> :type_scope:'~'_x not
R4007:4007 Coq.FSets.FSetBridge <> P var
R4009:4009 Coq.FSets.FSetBridge <> x var
R4032:4035 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4036:4046 Coq.Lists.SetoidList <> compat_bool def
R4054:4057 Coq.FSets.FSetBridge DepOfNodep fdec def
R4059:4062 Coq.FSets.FSetBridge <> Pdec var
R4048:4051 Coq.FSets.FSetBridge M.E eq defax
R4017:4024 Coq.Lists.SetoidList <> compat_P def
R4031:4031 Coq.FSets.FSetBridge <> P var
R4026:4029 Coq.FSets.FSetBridge M.E eq defax
R4086:4093 Coq.Lists.SetoidList <> compat_P def
R4096:4106 Coq.Lists.SetoidList <> compat_bool def
R4109:4114 Coq.Classes.Morphisms <> Proper class
R4117:4126 Coq.Classes.Morphisms <> respectful def
R4129:4132 Coq.FSets.FSetBridge DepOfNodep fdec def
R4159:4166 Coq.FSets.FSetBridge M.E eq_sym prfax
R4159:4166 Coq.FSets.FSetBridge M.E eq_sym prfax
def 4266:4271 DepOfNodep filter
R4294:4297 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4291:4293 Coq.FSets.FSetBridge M elt def
R4323:4325 Coq.FSets.FSetBridge M elt def
R4328:4328 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4332:4336 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4342:4342 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4329:4329 Coq.FSets.FSetBridge <> P var
R4331:4331 Coq.FSets.FSetBridge <> x var
R4337:4338 Coq.Init.Logic <> :type_scope:'~'_x not
R4339:4339 Coq.FSets.FSetBridge <> P var
R4341:4341 Coq.FSets.FSetBridge <> x var
R4350:4350 Coq.FSets.FSetBridge M t defax
R4358:4358 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R4361:4363 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R4365:4367 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R4428:4428 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R4364:4364 Coq.FSets.FSetBridge M t defax
R4383:4386 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4398:4400 Coq.FSets.FSetBridge M elt def
R4410:4414 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4403:4404 Coq.FSets.FSetBridge M In defax
R4406:4406 Coq.FSets.FSetBridge <> x var
R4421:4424 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4415:4416 Coq.FSets.FSetBridge M In defax
R4420:4420 Coq.FSets.FSetBridge <> s var
R4418:4418 Coq.FSets.FSetBridge <> x var
R4425:4425 Coq.FSets.FSetBridge <> P var
R4427:4427 Coq.FSets.FSetBridge <> x var
R4368:4375 Coq.Lists.SetoidList <> compat_P def
R4382:4382 Coq.FSets.FSetBridge <> P var
R4377:4380 Coq.FSets.FSetBridge M.E eq defax
R4464:4469 Coq.FSets.FSetBridge M filter defax
R4472:4475 Coq.FSets.FSetBridge DepOfNodep fdec def
R4464:4469 Coq.FSets.FSetBridge M filter defax
R4472:4475 Coq.FSets.FSetBridge DepOfNodep fdec def
R4508:4518 Coq.Lists.SetoidList <> compat_bool def
R4526:4529 Coq.FSets.FSetBridge DepOfNodep fdec def
R4520:4523 Coq.FSets.FSetBridge M.E eq defax
R4508:4518 Coq.Lists.SetoidList <> compat_bool def
R4526:4529 Coq.FSets.FSetBridge DepOfNodep fdec def
R4520:4523 Coq.FSets.FSetBridge M.E eq defax
R4596:4603 Coq.FSets.FSetBridge M filter_2 defax
R4596:4603 Coq.FSets.FSetBridge M filter_2 defax
R4624:4627 Coq.FSets.FSetBridge DepOfNodep fdec def
R4688:4695 Coq.FSets.FSetBridge M filter_3 defax
R4688:4695 Coq.FSets.FSetBridge M filter_3 defax
R4715:4718 Coq.FSets.FSetBridge DepOfNodep fdec def
def 4779:4785 DepOfNodep for_all
R4808:4811 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4805:4807 Coq.FSets.FSetBridge M elt def
R4837:4839 Coq.FSets.FSetBridge M elt def
R4842:4842 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4846:4850 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4856:4856 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4843:4843 Coq.FSets.FSetBridge <> P var
R4845:4845 Coq.FSets.FSetBridge <> x var
R4851:4852 Coq.Init.Logic <> :type_scope:'~'_x not
R4853:4853 Coq.FSets.FSetBridge <> P var
R4855:4855 Coq.FSets.FSetBridge <> x var
R4864:4864 Coq.FSets.FSetBridge M t defax
R4872:4872 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4903:4907 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4940:4940 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4888:4891 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4892:4898 Coq.FSets.FSetBridge M For_all def
R4902:4902 Coq.FSets.FSetBridge <> s var
R4900:4900 Coq.FSets.FSetBridge <> P var
R4873:4880 Coq.Lists.SetoidList <> compat_P def
R4887:4887 Coq.FSets.FSetBridge <> P var
R4882:4885 Coq.FSets.FSetBridge M.E eq defax
R4923:4926 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4927:4928 Coq.Init.Logic <> :type_scope:'~'_x not
R4929:4935 Coq.FSets.FSetBridge M For_all def
R4939:4939 Coq.FSets.FSetBridge <> s var
R4937:4937 Coq.FSets.FSetBridge <> P var
R4908:4915 Coq.Lists.SetoidList <> compat_P def
R4922:4922 Coq.FSets.FSetBridge <> P var
R4917:4920 Coq.FSets.FSetBridge M.E eq defax
R4980:4988 Coq.FSets.FSetBridge M for_all_1 defax
R5001:5004 Coq.FSets.FSetBridge DepOfNodep fdec def
R5019:5027 Coq.FSets.FSetBridge M for_all_2 defax
R5040:5043 Coq.FSets.FSetBridge DepOfNodep fdec def
R4980:4988 Coq.FSets.FSetBridge M for_all_1 defax
R5001:5004 Coq.FSets.FSetBridge DepOfNodep fdec def
R5019:5027 Coq.FSets.FSetBridge M for_all_2 defax
R5040:5043 Coq.FSets.FSetBridge DepOfNodep fdec def
R5063:5069 Coq.FSets.FSetBridge M for_all defax
R5072:5075 Coq.FSets.FSetBridge DepOfNodep fdec def
R5094:5100 Coq.FSets.FSetBridge M For_all def
R5063:5069 Coq.FSets.FSetBridge M for_all defax
R5072:5075 Coq.FSets.FSetBridge DepOfNodep fdec def
R5146:5156 Coq.Lists.SetoidList <> compat_bool def
R5164:5167 Coq.FSets.FSetBridge DepOfNodep fdec def
R5158:5161 Coq.FSets.FSetBridge M.E eq defax
R5146:5156 Coq.Lists.SetoidList <> compat_bool def
R5164:5167 Coq.FSets.FSetBridge DepOfNodep fdec def
R5158:5161 Coq.FSets.FSetBridge M.E eq defax
R5205:5217 Coq.Init.Logic <> eq_refl constr
R5205:5217 Coq.Init.Logic <> eq_refl constr
R5237:5240 Coq.FSets.FSetBridge DepOfNodep fdec def
R5323:5325 Coq.Init.Logic <> :type_scope:x_'='_x not
R5318:5322 Coq.Init.Datatypes <> false constr
R5326:5329 Coq.Init.Datatypes <> true constr
R5323:5325 Coq.Init.Logic <> :type_scope:x_'='_x not
R5318:5322 Coq.Init.Datatypes <> false constr
R5326:5329 Coq.Init.Datatypes <> true constr
R5391:5394 Coq.FSets.FSetBridge DepOfNodep fdec def
def 5448:5454 DepOfNodep exists_
R5477:5480 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5474:5476 Coq.FSets.FSetBridge M elt def
R5506:5508 Coq.FSets.FSetBridge M elt def
R5511:5511 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5515:5519 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5525:5525 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5512:5512 Coq.FSets.FSetBridge <> P var
R5514:5514 Coq.FSets.FSetBridge <> x var
R5520:5521 Coq.Init.Logic <> :type_scope:'~'_x not
R5522:5522 Coq.FSets.FSetBridge <> P var
R5524:5524 Coq.FSets.FSetBridge <> x var
R5533:5533 Coq.FSets.FSetBridge M t defax
R5541:5541 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5571:5575 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5607:5607 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5557:5560 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5561:5566 Coq.FSets.FSetBridge M Exists def
R5570:5570 Coq.FSets.FSetBridge <> s var
R5568:5568 Coq.FSets.FSetBridge <> P var
R5542:5549 Coq.Lists.SetoidList <> compat_P def
R5556:5556 Coq.FSets.FSetBridge <> P var
R5551:5554 Coq.FSets.FSetBridge M.E eq defax
R5591:5594 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5595:5596 Coq.Init.Logic <> :type_scope:'~'_x not
R5597:5602 Coq.FSets.FSetBridge M Exists def
R5606:5606 Coq.FSets.FSetBridge <> s var
R5604:5604 Coq.FSets.FSetBridge <> P var
R5576:5583 Coq.Lists.SetoidList <> compat_P def
R5590:5590 Coq.FSets.FSetBridge <> P var
R5585:5588 Coq.FSets.FSetBridge M.E eq defax
R5647:5654 Coq.FSets.FSetBridge M exists_1 defax
R5667:5670 Coq.FSets.FSetBridge DepOfNodep fdec def
R5685:5692 Coq.FSets.FSetBridge M exists_2 defax
R5705:5708 Coq.FSets.FSetBridge DepOfNodep fdec def
R5647:5654 Coq.FSets.FSetBridge M exists_1 defax
R5667:5670 Coq.FSets.FSetBridge DepOfNodep fdec def
R5685:5692 Coq.FSets.FSetBridge M exists_2 defax
R5705:5708 Coq.FSets.FSetBridge DepOfNodep fdec def
R5728:5734 Coq.FSets.FSetBridge M exists_ defax
R5737:5740 Coq.FSets.FSetBridge DepOfNodep fdec def
R5759:5764 Coq.FSets.FSetBridge M Exists def
R5728:5734 Coq.FSets.FSetBridge M exists_ defax
R5737:5740 Coq.FSets.FSetBridge DepOfNodep fdec def
R5880:5883 Coq.FSets.FSetBridge DepOfNodep fdec def
R5987:5989 Coq.Init.Logic <> :type_scope:x_'='_x not
R5982:5986 Coq.Init.Datatypes <> false constr
R5990:5993 Coq.Init.Datatypes <> true constr
R5987:5989 Coq.Init.Logic <> :type_scope:x_'='_x not
R5982:5986 Coq.Init.Datatypes <> false constr
R5990:5993 Coq.Init.Datatypes <> true constr
R6069:6072 Coq.FSets.FSetBridge DepOfNodep fdec def
def 6126:6134 DepOfNodep partition
R6157:6160 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6154:6156 Coq.FSets.FSetBridge M elt def
R6186:6188 Coq.FSets.FSetBridge M elt def
R6191:6191 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6195:6199 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6205:6205 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6192:6192 Coq.FSets.FSetBridge <> P var
R6194:6194 Coq.FSets.FSetBridge <> x var
R6200:6201 Coq.Init.Logic <> :type_scope:'~'_x not
R6202:6202 Coq.FSets.FSetBridge <> P var
R6204:6204 Coq.FSets.FSetBridge <> x var
R6213:6213 Coq.FSets.FSetBridge M t defax
R6221:6221 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R6231:6233 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R6239:6245 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R6404:6404 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R6235:6237 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6234:6234 Coq.FSets.FSetBridge M t defax
R6238:6238 Coq.FSets.FSetBridge M t defax
R6294:6301 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6314:6321 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6302:6308 Coq.FSets.FSetBridge M For_all def
R6312:6313 Coq.FSets.FSetBridge <> s1 var
R6310:6310 Coq.FSets.FSetBridge <> P var
R6349:6357 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6403:6403 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6322:6328 Coq.FSets.FSetBridge M For_all def
R6347:6348 Coq.FSets.FSetBridge <> s2 var
R6340:6341 Coq.Init.Logic <> :type_scope:'~'_x not
R6342:6342 Coq.FSets.FSetBridge <> P var
R6344:6344 Coq.FSets.FSetBridge <> x var
R6369:6371 Coq.FSets.FSetBridge M elt def
R6380:6384 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6374:6375 Coq.FSets.FSetBridge M In defax
R6379:6379 Coq.FSets.FSetBridge <> s var
R6377:6377 Coq.FSets.FSetBridge <> x var
R6392:6395 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6385:6386 Coq.FSets.FSetBridge M In defax
R6390:6391 Coq.FSets.FSetBridge <> s1 var
R6388:6388 Coq.FSets.FSetBridge <> x var
R6396:6397 Coq.FSets.FSetBridge M In defax
R6401:6402 Coq.FSets.FSetBridge <> s2 var
R6399:6399 Coq.FSets.FSetBridge <> x var
R6279:6286 Coq.Lists.SetoidList <> compat_P def
R6293:6293 Coq.FSets.FSetBridge <> P var
R6288:6291 Coq.FSets.FSetBridge M.E eq defax
R6440:6448 Coq.FSets.FSetBridge M partition defax
R6451:6454 Coq.FSets.FSetBridge DepOfNodep fdec def
R6440:6448 Coq.FSets.FSetBridge M partition defax
R6451:6454 Coq.FSets.FSetBridge DepOfNodep fdec def
R6482:6492 Coq.FSets.FSetBridge M partition_1 defax
R6500:6503 Coq.FSets.FSetBridge DepOfNodep fdec def
R6513:6523 Coq.FSets.FSetBridge M partition_2 defax
R6531:6534 Coq.FSets.FSetBridge DepOfNodep fdec def
R6482:6492 Coq.FSets.FSetBridge M partition_1 defax
R6500:6503 Coq.FSets.FSetBridge DepOfNodep fdec def
R6513:6523 Coq.FSets.FSetBridge M partition_2 defax
R6531:6534 Coq.FSets.FSetBridge DepOfNodep fdec def
R6554:6562 Coq.FSets.FSetBridge M partition defax
R6565:6568 Coq.FSets.FSetBridge DepOfNodep fdec def
R6554:6562 Coq.FSets.FSetBridge M partition defax
R6565:6568 Coq.FSets.FSetBridge DepOfNodep fdec def
R6625:6635 Coq.Lists.SetoidList <> compat_bool def
R6643:6646 Coq.FSets.FSetBridge DepOfNodep fdec def
R6637:6640 Coq.FSets.FSetBridge M.E eq defax
R6625:6635 Coq.Lists.SetoidList <> compat_bool def
R6643:6646 Coq.FSets.FSetBridge DepOfNodep fdec def
R6637:6640 Coq.FSets.FSetBridge M.E eq defax
R6682:6692 Coq.Lists.SetoidList <> compat_bool def
R6709:6712 Coq.Init.Datatypes <> negb def
R6715:6718 Coq.FSets.FSetBridge DepOfNodep fdec def
R6725:6725 Coq.FSets.FSetBridge <> x var
R6694:6697 Coq.FSets.FSetBridge M.E eq defax
R6682:6692 Coq.Lists.SetoidList <> compat_bool def
R6709:6712 Coq.Init.Datatypes <> negb def
R6715:6718 Coq.FSets.FSetBridge DepOfNodep fdec def
R6725:6725 Coq.FSets.FSetBridge <> x var
R6694:6697 Coq.FSets.FSetBridge M.E eq defax
R6757:6767 Coq.Lists.SetoidList <> compat_bool def
R6770:6775 Coq.Classes.Morphisms <> Proper class
R6778:6787 Coq.Classes.Morphisms <> respectful def
R6813:6819 Coq.Init.Logic <> f_equal thm
R6821:6824 Coq.Init.Datatypes <> negb def
R6813:6819 Coq.Init.Logic <> f_equal thm
R6821:6824 Coq.Init.Datatypes <> negb def
R6875:6881 Coq.FSets.FSetBridge M For_all def
R6884:6888 Coq.FSets.FSetBridge M Equal def
R6950:6952 Coq.Init.Logic <> :type_scope:x_'='_x not
R6939:6942 Coq.FSets.FSetBridge DepOfNodep fdec def
R6953:6956 Coq.Init.Datatypes <> true constr
R6950:6952 Coq.Init.Logic <> :type_scope:x_'='_x not
R6939:6942 Coq.FSets.FSetBridge DepOfNodep fdec def
R6953:6956 Coq.Init.Datatypes <> true constr
R6972:6979 Coq.FSets.FSetBridge M filter_2 defax
R6972:6979 Coq.FSets.FSetBridge M filter_2 defax
R7024:7027 Coq.FSets.FSetBridge DepOfNodep fdec def
R7099:7105 Coq.FSets.FSetBridge M For_all def
R7108:7112 Coq.FSets.FSetBridge M Equal def
R7191:7193 Coq.Init.Logic <> :type_scope:x_'='_x not
R7170:7173 Coq.Init.Datatypes <> negb def
R7176:7179 Coq.FSets.FSetBridge DepOfNodep fdec def
R7186:7186 Coq.FSets.FSetBridge <> x var
R7194:7197 Coq.Init.Datatypes <> true constr
R7191:7193 Coq.Init.Logic <> :type_scope:x_'='_x not
R7170:7173 Coq.Init.Datatypes <> negb def
R7176:7179 Coq.FSets.FSetBridge DepOfNodep fdec def
R7186:7186 Coq.FSets.FSetBridge <> x var
R7194:7197 Coq.Init.Datatypes <> true constr
R7212:7215 Coq.FSets.FSetBridge DepOfNodep fdec def
R7289:7291 Coq.Init.Logic <> :type_scope:x_'='_x not
R7268:7271 Coq.Init.Datatypes <> negb def
R7274:7277 Coq.FSets.FSetBridge DepOfNodep fdec def
R7284:7284 Coq.FSets.FSetBridge <> x var
R7292:7295 Coq.Init.Datatypes <> true constr
R7289:7291 Coq.Init.Logic <> :type_scope:x_'='_x not
R7268:7271 Coq.Init.Datatypes <> negb def
R7274:7277 Coq.FSets.FSetBridge DepOfNodep fdec def
R7284:7284 Coq.FSets.FSetBridge <> x var
R7292:7295 Coq.Init.Datatypes <> true constr
R7312:7319 Coq.FSets.FSetBridge M filter_2 defax
R7312:7319 Coq.FSets.FSetBridge M filter_2 defax
R7357:7360 Coq.FSets.FSetBridge DepOfNodep fdec def
R7388:7400 Coq.Init.Logic <> eq_refl constr
R7357:7360 Coq.FSets.FSetBridge DepOfNodep fdec def
R7388:7400 Coq.Init.Logic <> eq_refl constr
R7584:7591 Coq.FSets.FSetBridge M filter_3 defax
R7584:7591 Coq.FSets.FSetBridge M filter_3 defax
R7634:7641 Coq.FSets.FSetBridge M filter_1 defax
R7634:7641 Coq.FSets.FSetBridge M filter_1 defax
R7719:7726 Coq.FSets.FSetBridge M filter_1 defax
R7719:7726 Coq.FSets.FSetBridge M filter_1 defax
def 7807:7816 DepOfNodep choose_aux
R7830:7830 Coq.FSets.FSetBridge M t defax
R7870:7874 Coq.Init.Specif <> :type_scope:x_'+'_'{'_x_'}' not
R7892:7893 Coq.Init.Specif <> :type_scope:x_'+'_'{'_x_'}' not
R7837:7838 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R7840:7842 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R7846:7848 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R7868:7869 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R7843:7845 Coq.FSets.FSetBridge M elt def
R7859:7861 Coq.Init.Logic <> :type_scope:x_'='_x not
R7849:7856 Coq.FSets.FSetBridge M choose defax
R7858:7858 Coq.FSets.FSetBridge <> s var
R7862:7865 Coq.Init.Datatypes <> Some constr
R7885:7887 Coq.Init.Logic <> :type_scope:x_'='_x not
R7875:7882 Coq.FSets.FSetBridge M choose defax
R7884:7884 Coq.FSets.FSetBridge <> s var
R7888:7891 Coq.Init.Datatypes <> None constr
R7929:7936 Coq.FSets.FSetBridge M choose defax
R7929:7936 Coq.FSets.FSetBridge M choose defax
def 8004:8009 DepOfNodep choose
R8024:8024 Coq.FSets.FSetBridge M t defax
R8045:8048 Coq.Init.Specif <> :type_scope:x_'+'_'{'_x_'}' not
R8056:8056 Coq.Init.Specif <> :type_scope:x_'+'_'{'_x_'}' not
R8027:8027 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R8029:8031 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R8035:8037 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R8044:8044 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R8032:8034 Coq.FSets.FSetBridge M elt def
R8038:8039 Coq.FSets.FSetBridge M In defax
R8043:8043 Coq.FSets.FSetBridge <> s var
R8049:8053 Coq.FSets.FSetBridge M Empty def
R8055:8055 Coq.FSets.FSetBridge <> s var
R8089:8098 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8089:8098 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8143:8150 Coq.FSets.FSetBridge M choose_1 defax
R8143:8150 Coq.FSets.FSetBridge M choose_1 defax
R8175:8182 Coq.FSets.FSetBridge M choose_2 defax
R8175:8182 Coq.FSets.FSetBridge M choose_2 defax
prf 8211:8220 DepOfNodep choose_ok1
R8258:8262 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8249:8251 Coq.Init.Logic <> :type_scope:x_'='_x not
R8239:8246 Coq.FSets.FSetBridge M choose defax
R8248:8248 Coq.FSets.FSetBridge <> s var
R8252:8255 Coq.Init.Datatypes <> Some constr
R8257:8257 Coq.FSets.FSetBridge <> x var
R8263:8269 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8278:8285 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8272:8273 Coq.FSets.FSetBridge M In defax
R8277:8277 Coq.FSets.FSetBridge <> s var
R8275:8275 Coq.FSets.FSetBridge <> x var
R8294:8296 Coq.Init.Logic <> :type_scope:x_'='_x not
R8286:8291 Coq.FSets.FSetBridge DepOfNodep choose def
R8293:8293 Coq.FSets.FSetBridge <> s var
R8297:8302 Coq.Init.Specif <> inleft constr
R8307:8311 Coq.Init.Specif <> exist constr
R8333:8333 Coq.FSets.FSetBridge <> H var
R8331:8331 Coq.FSets.FSetBridge <> x var
R8323:8324 Coq.FSets.FSetBridge M In defax
R8328:8328 Coq.FSets.FSetBridge <> s var
R8326:8326 Coq.FSets.FSetBridge <> x var
R8373:8378 Coq.FSets.FSetBridge DepOfNodep choose def
R8410:8419 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8410:8419 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8509:8516 Coq.FSets.FSetBridge M choose_1 defax
R8509:8516 Coq.FSets.FSetBridge M choose_1 defax
R8559:8568 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8559:8568 Coq.FSets.FSetBridge DepOfNodep choose_aux def
prf 8617:8626 DepOfNodep choose_ok2
R8660:8664 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8653:8655 Coq.Init.Logic <> :type_scope:x_'='_x not
R8643:8650 Coq.FSets.FSetBridge M choose defax
R8652:8652 Coq.FSets.FSetBridge <> s var
R8656:8659 Coq.Init.Datatypes <> None constr
R8665:8671 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8681:8688 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8674:8678 Coq.FSets.FSetBridge M Empty def
R8680:8680 Coq.FSets.FSetBridge <> s var
R8697:8699 Coq.Init.Logic <> :type_scope:x_'='_x not
R8689:8694 Coq.FSets.FSetBridge DepOfNodep choose def
R8696:8696 Coq.FSets.FSetBridge <> s var
R8700:8706 Coq.Init.Specif <> inright constr
R8710:8710 Coq.FSets.FSetBridge <> H var
R8747:8752 Coq.FSets.FSetBridge DepOfNodep choose def
R8784:8793 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8784:8793 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8842:8849 Coq.FSets.FSetBridge M choose_2 defax
R8842:8849 Coq.FSets.FSetBridge M choose_2 defax
R8892:8901 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8892:8901 Coq.FSets.FSetBridge DepOfNodep choose_aux def
prf 8950:8961 DepOfNodep choose_equal
R8988:8996 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9013:9018 Coq.FSets.FSetBridge DepOfNodep choose def
R9020:9021 Coq.FSets.FSetBridge <> s' var
R9003:9008 Coq.FSets.FSetBridge DepOfNodep choose def
R9010:9010 Coq.FSets.FSetBridge <> s var
R9037:9042 Coq.Init.Specif <> inleft constr
R9045:9049 Coq.Init.Specif <> exist constr
R9059:9064 Coq.Init.Specif <> inleft constr
R9067:9071 Coq.Init.Specif <> exist constr
R9084:9087 Coq.FSets.FSetBridge M.E eq defax
R9103:9109 Coq.Init.Specif <> inright constr
R9114:9120 Coq.Init.Specif <> inright constr
R9128:9131 Coq.Init.Logic <> True ind
R9173:9177 Coq.Init.Logic <> False ind
R8978:8982 Coq.FSets.FSetBridge M Equal def
R8986:8987 Coq.FSets.FSetBridge <> s' var
R8984:8984 Coq.FSets.FSetBridge <> s var
R9225:9234 Coq.FSets.FSetBridge M choose_1 defax
R9240:9249 Coq.FSets.FSetBridge M choose_2 defax
R9270:9279 Coq.FSets.FSetBridge M choose_1 defax
R9286:9295 Coq.FSets.FSetBridge M choose_2 defax
R9302:9311 Coq.FSets.FSetBridge M choose_3 defax
R9334:9343 Coq.FSets.FSetBridge DepOfNodep choose_ok1 thm
R9348:9357 Coq.FSets.FSetBridge DepOfNodep choose_ok2 thm
R9362:9371 Coq.FSets.FSetBridge DepOfNodep choose_ok1 thm
R9377:9386 Coq.FSets.FSetBridge DepOfNodep choose_ok2 thm
R9225:9234 Coq.FSets.FSetBridge M choose_1 defax
R9240:9249 Coq.FSets.FSetBridge M choose_2 defax
R9270:9279 Coq.FSets.FSetBridge M choose_1 defax
R9286:9295 Coq.FSets.FSetBridge M choose_2 defax
R9302:9311 Coq.FSets.FSetBridge M choose_3 defax
R9334:9343 Coq.FSets.FSetBridge DepOfNodep choose_ok1 thm
R9348:9357 Coq.FSets.FSetBridge DepOfNodep choose_ok2 thm
R9362:9371 Coq.FSets.FSetBridge DepOfNodep choose_ok1 thm
R9377:9386 Coq.FSets.FSetBridge DepOfNodep choose_ok2 thm
R9406:9411 Coq.FSets.FSetBridge DepOfNodep choose def
R9442:9447 Coq.FSets.FSetBridge DepOfNodep choose def
R9406:9411 Coq.FSets.FSetBridge DepOfNodep choose def
R9442:9447 Coq.FSets.FSetBridge DepOfNodep choose def
R9442:9447 Coq.FSets.FSetBridge DepOfNodep choose def
R9598:9602 Coq.FSets.FSetBridge M Equal def
R9657:9661 Coq.FSets.FSetBridge M Equal def
def 9707:9713 DepOfNodep min_elt
R9732:9732 Coq.FSets.FSetBridge M t defax
R9792:9795 Coq.Init.Specif <> :type_scope:x_'+'_'{'_x_'}' not
R9803:9803 Coq.Init.Specif <> :type_scope:x_'+'_'{'_x_'}' not
R9739:9739 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R9741:9743 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R9747:9749 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R9791:9791 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R9744:9746 Coq.FSets.FSetBridge M elt def
R9756:9759 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9750:9751 Coq.FSets.FSetBridge M In defax
R9755:9755 Coq.FSets.FSetBridge <> s var
R9760:9766 Coq.FSets.FSetBridge M For_all def
R9790:9790 Coq.FSets.FSetBridge <> s var
R9778:9779 Coq.Init.Logic <> :type_scope:'~'_x not
R9780:9783 Coq.FSets.FSetBridge M.E lt defax
R9785:9785 Coq.FSets.FSetBridge <> y var
R9796:9800 Coq.FSets.FSetBridge M Empty def
R9802:9802 Coq.FSets.FSetBridge <> s var
R9844:9852 Coq.FSets.FSetBridge M min_elt_1 defax
R9863:9871 Coq.FSets.FSetBridge M min_elt_2 defax
R9882:9890 Coq.FSets.FSetBridge M min_elt_3 defax
R9844:9852 Coq.FSets.FSetBridge M min_elt_1 defax
R9863:9871 Coq.FSets.FSetBridge M min_elt_2 defax
R9882:9890 Coq.FSets.FSetBridge M min_elt_3 defax
R9911:9917 Coq.FSets.FSetBridge M min_elt defax
R9911:9917 Coq.FSets.FSetBridge M min_elt defax
R9968:9974 Coq.FSets.FSetBridge M For_all def
def 10005:10011 DepOfNodep max_elt
R10030:10030 Coq.FSets.FSetBridge M t defax
R10090:10093 Coq.Init.Specif <> :type_scope:x_'+'_'{'_x_'}' not
R10101:10101 Coq.Init.Specif <> :type_scope:x_'+'_'{'_x_'}' not
R10037:10037 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R10039:10041 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R10045:10047 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R10089:10089 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R10042:10044 Coq.FSets.FSetBridge M elt def
R10054:10057 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10048:10049 Coq.FSets.FSetBridge M In defax
R10053:10053 Coq.FSets.FSetBridge <> s var
R10058:10064 Coq.FSets.FSetBridge M For_all def
R10088:10088 Coq.FSets.FSetBridge <> s var
R10076:10077 Coq.Init.Logic <> :type_scope:'~'_x not
R10078:10081 Coq.FSets.FSetBridge M.E lt defax
R10085:10085 Coq.FSets.FSetBridge <> y var
R10094:10098 Coq.FSets.FSetBridge M Empty def
R10100:10100 Coq.FSets.FSetBridge <> s var
R10142:10150 Coq.FSets.FSetBridge M max_elt_1 defax
R10161:10169 Coq.FSets.FSetBridge M max_elt_2 defax
R10180:10188 Coq.FSets.FSetBridge M max_elt_3 defax
R10142:10150 Coq.FSets.FSetBridge M max_elt_1 defax
R10161:10169 Coq.FSets.FSetBridge M max_elt_2 defax
R10180:10188 Coq.FSets.FSetBridge M max_elt_3 defax
R10209:10215 Coq.FSets.FSetBridge M max_elt defax
R10209:10215 Coq.FSets.FSetBridge M max_elt defax
R10266:10272 Coq.FSets.FSetBridge M For_all def
def 10303:10305 DepOfNodep elt
R10310:10312 Coq.FSets.FSetBridge M elt def
def 10328:10328 DepOfNodep t
R10333:10333 Coq.FSets.FSetBridge M t defax
def 10350:10351 DepOfNodep In
R10356:10357 Coq.FSets.FSetBridge M In defax
def 10373:10377 DepOfNodep Equal
R10398:10400 Coq.FSets.FSetBridge DepOfNodep elt def
R10409:10413 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10403:10404 Coq.FSets.FSetBridge DepOfNodep In def
R10408:10408 Coq.FSets.FSetBridge <> s var
R10406:10406 Coq.FSets.FSetBridge <> a var
R10414:10415 Coq.FSets.FSetBridge DepOfNodep In def
R10419:10420 Coq.FSets.FSetBridge <> s' var
R10417:10417 Coq.FSets.FSetBridge <> a var
def 10436:10441 DepOfNodep Subset
R10462:10464 Coq.FSets.FSetBridge DepOfNodep elt def
R10473:10476 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10477:10478 Coq.FSets.FSetBridge DepOfNodep In def
R10482:10483 Coq.FSets.FSetBridge <> s' var
R10480:10480 Coq.FSets.FSetBridge <> a var
R10467:10468 Coq.FSets.FSetBridge DepOfNodep In def
R10472:10472 Coq.FSets.FSetBridge <> s var
R10470:10470 Coq.FSets.FSetBridge <> a var
def 10499:10503 DepOfNodep Empty
R10521:10523 Coq.FSets.FSetBridge DepOfNodep elt def
R10526:10527 Coq.Init.Logic <> :type_scope:'~'_x not
R10528:10529 Coq.FSets.FSetBridge DepOfNodep In def
R10533:10533 Coq.FSets.FSetBridge <> s var
R10531:10531 Coq.FSets.FSetBridge <> a var
def 10549:10555 DepOfNodep For_all
R10565:10568 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10562:10564 Coq.FSets.FSetBridge DepOfNodep elt def
R10580:10580 Coq.FSets.FSetBridge DepOfNodep t def
R10601:10603 Coq.FSets.FSetBridge DepOfNodep elt def
R10612:10615 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10616:10616 Coq.FSets.FSetBridge <> P var
R10618:10618 Coq.FSets.FSetBridge <> x var
R10606:10607 Coq.FSets.FSetBridge DepOfNodep In def
R10611:10611 Coq.FSets.FSetBridge <> s var
R10609:10609 Coq.FSets.FSetBridge <> x var
def 10634:10639 DepOfNodep Exists
R10649:10652 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10646:10648 Coq.FSets.FSetBridge DepOfNodep elt def
R10664:10664 Coq.FSets.FSetBridge DepOfNodep t def
R10674:10680 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10688:10689 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10685:10687 Coq.FSets.FSetBridge DepOfNodep elt def
R10696:10699 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10690:10691 Coq.FSets.FSetBridge DepOfNodep In def
R10695:10695 Coq.FSets.FSetBridge <> s var
R10693:10693 Coq.FSets.FSetBridge <> x var
R10700:10700 Coq.FSets.FSetBridge <> P var
R10702:10702 Coq.FSets.FSetBridge <> x var
def 10719:10723 DepOfNodep eq_In
R10728:10731 Coq.FSets.FSetBridge M In_1 defax
def 10748:10749 DepOfNodep eq
R10754:10758 Coq.FSets.FSetBridge DepOfNodep Equal def
def 10774:10775 DepOfNodep lt
R10780:10781 Coq.FSets.FSetBridge M lt defax
def 10797:10803 DepOfNodep eq_refl
R10808:10814 Coq.FSets.FSetBridge M eq_refl defax
def 10830:10835 DepOfNodep eq_sym
R10840:10845 Coq.FSets.FSetBridge M eq_sym defax
def 10861:10868 DepOfNodep eq_trans
R10873:10880 Coq.FSets.FSetBridge M eq_trans defax
def 10896:10903 DepOfNodep lt_trans
R10908:10915 Coq.FSets.FSetBridge M lt_trans defax
def 10931:10939 DepOfNodep lt_not_eq
R10944:10952 Coq.FSets.FSetBridge M lt_not_eq defax
def 10968:10974 DepOfNodep compare
R10979:10985 Coq.FSets.FSetBridge M compare defax
R11003:11003 Coq.FSets.FSetBridge M.E <> modtype
mod 10998:10998 <> DepOfNodep.E
R11011:11020 Coq.FSets.FSetBridge DepOfNodep <> mod
R11121:11124 Coq.FSets.FSetInterface Sdep <> mod
R11130:11130 Coq.FSets.FSetInterface S <> mod
R11149:11151 Coq.FSets.FSetBridge M.E <> modtype
mod 11106:11115 <> NodepOfDep
R11182:11197 Coq.Structures.OrderedType OrderedTypeFacts <> modtype
R11199:11199 Coq.FSets.FSetBridge M.E <> modtype
mod 11176:11177 <> NodepOfDep.ME
def 11216:11220 NodepOfDep empty
R11224:11224 Coq.FSets.FSetBridge M t defax
R11243:11247 Coq.FSets.FSetBridge M empty defax
R11252:11252 Coq.FSets.FSetBridge <> s var
prf 11264:11270 NodepOfDep empty_1
R11274:11278 Coq.FSets.FSetBridge M Empty def
R11280:11284 Coq.FSets.FSetBridge NodepOfDep empty def
R11307:11311 Coq.FSets.FSetBridge NodepOfDep empty def
R11319:11325 Coq.FSets.FSetBridge M empty defax
R11319:11325 Coq.FSets.FSetBridge M empty defax
def 11355:11362 NodepOfDep is_empty
R11369:11369 Coq.FSets.FSetBridge M t defax
R11374:11377 Coq.Init.Datatypes <> bool ind
R11389:11396 Coq.FSets.FSetBridge M is_empty defax
R11398:11398 Coq.FSets.FSetBridge <> s var
R11415:11419 Coq.Init.Datatypes <> false constr
R11405:11408 Coq.Init.Datatypes <> true constr
prf 11431:11440 NodepOfDep is_empty_1
R11455:11455 Coq.FSets.FSetBridge M t defax
R11465:11468 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11479:11481 Coq.Init.Logic <> :type_scope:x_'='_x not
R11469:11476 Coq.FSets.FSetBridge NodepOfDep is_empty def
R11478:11478 Coq.FSets.FSetBridge <> s var
R11482:11485 Coq.Init.Datatypes <> true constr
R11458:11462 Coq.FSets.FSetBridge M Empty def
R11464:11464 Coq.FSets.FSetBridge <> s var
R11516:11523 Coq.FSets.FSetBridge NodepOfDep is_empty def
R11532:11541 Coq.FSets.FSetBridge M is_empty defax
R11532:11541 Coq.FSets.FSetBridge M is_empty defax
prf 11569:11578 NodepOfDep is_empty_2
R11593:11593 Coq.FSets.FSetBridge M t defax
R11613:11616 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11617:11621 Coq.FSets.FSetBridge M Empty def
R11623:11623 Coq.FSets.FSetBridge <> s var
R11606:11608 Coq.Init.Logic <> :type_scope:x_'='_x not
R11596:11603 Coq.FSets.FSetBridge NodepOfDep is_empty def
R11605:11605 Coq.FSets.FSetBridge <> s var
R11609:11612 Coq.Init.Datatypes <> true constr
R11655:11662 Coq.FSets.FSetBridge NodepOfDep is_empty def
R11671:11680 Coq.FSets.FSetBridge M is_empty defax
R11671:11680 Coq.FSets.FSetBridge M is_empty defax
def 11741:11743 NodepOfDep mem
R11750:11752 Coq.FSets.FSetBridge M elt def
R11760:11760 Coq.FSets.FSetBridge M t defax
R11765:11768 Coq.Init.Datatypes <> bool ind
R11780:11782 Coq.FSets.FSetBridge M mem defax
R11786:11786 Coq.FSets.FSetBridge <> s var
R11784:11784 Coq.FSets.FSetBridge <> x var
R11803:11807 Coq.Init.Datatypes <> false constr
R11793:11796 Coq.Init.Datatypes <> true constr
prf 11819:11823 NodepOfDep mem_1
R11839:11839 Coq.FSets.FSetBridge M t defax
R11847:11849 Coq.FSets.FSetBridge M elt def
R11859:11862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11870:11872 Coq.Init.Logic <> :type_scope:x_'='_x not
R11863:11865 Coq.FSets.FSetBridge NodepOfDep mem def
R11869:11869 Coq.FSets.FSetBridge <> s var
R11867:11867 Coq.FSets.FSetBridge <> x var
R11873:11876 Coq.Init.Datatypes <> true constr
R11853:11854 Coq.FSets.FSetBridge M In defax
R11858:11858 Coq.FSets.FSetBridge <> s var
R11856:11856 Coq.FSets.FSetBridge <> x var
R11907:11909 Coq.FSets.FSetBridge NodepOfDep mem def
R11918:11922 Coq.FSets.FSetBridge M mem defax
R11918:11922 Coq.FSets.FSetBridge M mem defax
prf 11952:11956 NodepOfDep mem_2
R11972:11972 Coq.FSets.FSetBridge M t defax
R11980:11982 Coq.FSets.FSetBridge M elt def
R12000:12003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12004:12005 Coq.FSets.FSetBridge M In defax
R12009:12009 Coq.FSets.FSetBridge <> s var
R12007:12007 Coq.FSets.FSetBridge <> x var
R11993:11995 Coq.Init.Logic <> :type_scope:x_'='_x not
R11986:11988 Coq.FSets.FSetBridge NodepOfDep mem def
R11992:11992 Coq.FSets.FSetBridge <> s var
R11990:11990 Coq.FSets.FSetBridge <> x var
R11996:11999 Coq.Init.Datatypes <> true constr
R12044:12046 Coq.FSets.FSetBridge NodepOfDep mem def
R12055:12059 Coq.FSets.FSetBridge M mem defax
R12055:12059 Coq.FSets.FSetBridge M mem defax
def 12122:12127 NodepOfDep eq_dec
R12132:12136 Coq.FSets.FSetBridge M equal defax
def 12153:12157 NodepOfDep equal
R12167:12167 Coq.FSets.FSetBridge M t defax
R12172:12175 Coq.Init.Datatypes <> bool ind
R12187:12191 Coq.FSets.FSetBridge M equal defax
R12195:12196 Coq.FSets.FSetBridge <> s' var
R12193:12193 Coq.FSets.FSetBridge <> s var
R12213:12217 Coq.Init.Datatypes <> false constr
R12203:12206 Coq.Init.Datatypes <> true constr
prf 12229:12235 NodepOfDep equal_1
R12253:12253 Coq.FSets.FSetBridge M t defax
R12266:12269 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12280:12282 Coq.Init.Logic <> :type_scope:x_'='_x not
R12270:12274 Coq.FSets.FSetBridge NodepOfDep equal def
R12278:12279 Coq.FSets.FSetBridge <> s' var
R12276:12276 Coq.FSets.FSetBridge <> s var
R12283:12286 Coq.Init.Datatypes <> true constr
R12256:12260 Coq.FSets.FSetBridge M Equal def
R12264:12265 Coq.FSets.FSetBridge <> s' var
R12262:12262 Coq.FSets.FSetBridge <> s var
R12317:12321 Coq.FSets.FSetBridge NodepOfDep equal def
R12329:12335 Coq.FSets.FSetBridge M equal defax
R12329:12335 Coq.FSets.FSetBridge M equal defax
prf 12365:12371 NodepOfDep equal_2
R12389:12389 Coq.FSets.FSetBridge M t defax
R12409:12412 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12413:12417 Coq.FSets.FSetBridge M Equal def
R12421:12422 Coq.FSets.FSetBridge <> s' var
R12419:12419 Coq.FSets.FSetBridge <> s var
R12402:12404 Coq.Init.Logic <> :type_scope:x_'='_x not
R12392:12396 Coq.FSets.FSetBridge NodepOfDep equal def
R12400:12401 Coq.FSets.FSetBridge <> s' var
R12398:12398 Coq.FSets.FSetBridge <> s var
R12405:12408 Coq.Init.Datatypes <> true constr
R12458:12462 Coq.FSets.FSetBridge NodepOfDep equal def
R12471:12477 Coq.FSets.FSetBridge M equal defax
R12471:12477 Coq.FSets.FSetBridge M equal defax
def 12536:12541 NodepOfDep subset
R12551:12551 Coq.FSets.FSetBridge M t defax
R12556:12559 Coq.Init.Datatypes <> bool ind
R12571:12576 Coq.FSets.FSetBridge M subset defax
R12580:12581 Coq.FSets.FSetBridge <> s' var
R12578:12578 Coq.FSets.FSetBridge <> s var
R12598:12602 Coq.Init.Datatypes <> false constr
R12588:12591 Coq.Init.Datatypes <> true constr
prf 12614:12621 NodepOfDep subset_1
R12639:12639 Coq.FSets.FSetBridge M t defax
R12653:12656 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12668:12670 Coq.Init.Logic <> :type_scope:x_'='_x not
R12657:12662 Coq.FSets.FSetBridge NodepOfDep subset def
R12666:12667 Coq.FSets.FSetBridge <> s' var
R12664:12664 Coq.FSets.FSetBridge <> s var
R12671:12674 Coq.Init.Datatypes <> true constr
R12642:12647 Coq.FSets.FSetBridge M Subset def
R12651:12652 Coq.FSets.FSetBridge <> s' var
R12649:12649 Coq.FSets.FSetBridge <> s var
R12705:12710 Coq.FSets.FSetBridge NodepOfDep subset def
R12718:12725 Coq.FSets.FSetBridge M subset defax
R12718:12725 Coq.FSets.FSetBridge M subset defax
prf 12755:12762 NodepOfDep subset_2
R12780:12780 Coq.FSets.FSetBridge M t defax
R12801:12804 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12805:12810 Coq.FSets.FSetBridge M Subset def
R12814:12815 Coq.FSets.FSetBridge <> s' var
R12812:12812 Coq.FSets.FSetBridge <> s var
R12794:12796 Coq.Init.Logic <> :type_scope:x_'='_x not
R12783:12788 Coq.FSets.FSetBridge NodepOfDep subset def
R12792:12793 Coq.FSets.FSetBridge <> s' var
R12790:12790 Coq.FSets.FSetBridge <> s var
R12797:12800 Coq.Init.Datatypes <> true constr
R12851:12856 Coq.FSets.FSetBridge NodepOfDep subset def
R12865:12872 Coq.FSets.FSetBridge M subset defax
R12865:12872 Coq.FSets.FSetBridge M subset defax
def 12931:12936 NodepOfDep choose
R12943:12943 Coq.FSets.FSetBridge M t defax
R12948:12953 Coq.Init.Datatypes <> option ind
R12955:12957 Coq.FSets.FSetBridge M elt def
R12972:12977 Coq.FSets.FSetBridge M choose defax
R12979:12979 Coq.FSets.FSetBridge <> s var
R12992:12997 Coq.Init.Specif <> inleft constr
R13000:13004 Coq.Init.Specif <> exist constr
R13016:13019 Coq.Init.Datatypes <> Some constr
R13029:13035 Coq.Init.Specif <> inright constr
R13042:13045 Coq.Init.Datatypes <> None constr
prf 13065:13072 NodepOfDep choose_1
R13088:13088 Coq.FSets.FSetBridge M t defax
R13096:13098 Coq.FSets.FSetBridge M elt def
R13119:13122 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13123:13124 Coq.FSets.FSetBridge M In defax
R13128:13128 Coq.FSets.FSetBridge <> s var
R13126:13126 Coq.FSets.FSetBridge <> x var
R13110:13112 Coq.Init.Logic <> :type_scope:x_'='_x not
R13102:13107 Coq.FSets.FSetBridge NodepOfDep choose def
R13109:13109 Coq.FSets.FSetBridge <> s var
R13113:13116 Coq.Init.Datatypes <> Some constr
R13118:13118 Coq.FSets.FSetBridge <> x var
R13163:13168 Coq.FSets.FSetBridge NodepOfDep choose def
R13177:13184 Coq.FSets.FSetBridge M choose defax
R13177:13184 Coq.FSets.FSetBridge M choose defax
prf 13300:13307 NodepOfDep choose_2
R13322:13322 Coq.FSets.FSetBridge M t defax
R13340:13343 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13344:13348 Coq.FSets.FSetBridge M Empty def
R13350:13350 Coq.FSets.FSetBridge <> s var
R13333:13335 Coq.Init.Logic <> :type_scope:x_'='_x not
R13325:13330 Coq.FSets.FSetBridge NodepOfDep choose def
R13332:13332 Coq.FSets.FSetBridge <> s var
R13336:13339 Coq.Init.Datatypes <> None constr
R13382:13387 Coq.FSets.FSetBridge NodepOfDep choose def
R13396:13403 Coq.FSets.FSetBridge M choose defax
R13396:13403 Coq.FSets.FSetBridge M choose defax
prf 13479:13486 NodepOfDep choose_3
R13528:13531 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13551:13554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13565:13568 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13569:13572 Coq.FSets.FSetBridge M.E eq defax
R13576:13577 Coq.FSets.FSetBridge <> x' var
R13574:13574 Coq.FSets.FSetBridge <> x var
R13555:13559 Coq.FSets.FSetBridge M Equal def
R13563:13564 Coq.FSets.FSetBridge <> s' var
R13561:13561 Coq.FSets.FSetBridge <> s var
R13541:13543 Coq.Init.Logic <> :type_scope:x_'='_x not
R13532:13537 Coq.FSets.FSetBridge NodepOfDep choose def
R13539:13540 Coq.FSets.FSetBridge <> s' var
R13544:13547 Coq.Init.Datatypes <> Some constr
R13549:13550 Coq.FSets.FSetBridge <> x' var
R13519:13521 Coq.Init.Logic <> :type_scope:x_'='_x not
R13511:13516 Coq.FSets.FSetBridge NodepOfDep choose def
R13518:13518 Coq.FSets.FSetBridge <> s var
R13522:13525 Coq.Init.Datatypes <> Some constr
R13527:13527 Coq.FSets.FSetBridge <> x var
R13598:13603 Coq.FSets.FSetBridge NodepOfDep choose def
R13628:13641 Coq.FSets.FSetBridge M choose_equal defax
R13628:13641 Coq.FSets.FSetBridge M choose_equal defax
R13670:13677 Coq.FSets.FSetBridge M choose defax
R13706:13713 Coq.FSets.FSetBridge M choose defax
R13670:13677 Coq.FSets.FSetBridge M choose defax
R13706:13713 Coq.FSets.FSetBridge M choose defax
R13706:13713 Coq.FSets.FSetBridge M choose defax
def 13782:13789 NodepOfDep elements
R13796:13796 Coq.FSets.FSetBridge M t defax
R13801:13804 Coq.Init.Datatypes <> list ind
R13806:13808 Coq.FSets.FSetBridge M elt def
R13827:13834 Coq.FSets.FSetBridge M elements defax
R13836:13836 Coq.FSets.FSetBridge <> s var
R13841:13841 Coq.FSets.FSetBridge <> l var
prf 13853:13862 NodepOfDep elements_1
R13878:13878 Coq.FSets.FSetBridge M t defax
R13886:13888 Coq.FSets.FSetBridge M elt def
R13898:13901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13902:13904 Coq.Lists.SetoidList <> InA ind
R13914:13921 Coq.FSets.FSetBridge NodepOfDep elements def
R13923:13923 Coq.FSets.FSetBridge <> s var
R13911:13911 Coq.FSets.FSetBridge <> x var
R13906:13909 Coq.FSets.FSetBridge M.E eq defax
R13892:13893 Coq.FSets.FSetBridge M In defax
R13897:13897 Coq.FSets.FSetBridge <> s var
R13895:13895 Coq.FSets.FSetBridge <> x var
R13955:13962 Coq.FSets.FSetBridge NodepOfDep elements def
R13971:13980 Coq.FSets.FSetBridge M elements defax
R13971:13980 Coq.FSets.FSetBridge M elements defax
prf 14014:14023 NodepOfDep elements_2
R14039:14039 Coq.FSets.FSetBridge M t defax
R14047:14049 Coq.FSets.FSetBridge M elt def
R14076:14079 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14080:14081 Coq.FSets.FSetBridge M In defax
R14085:14085 Coq.FSets.FSetBridge <> s var
R14083:14083 Coq.FSets.FSetBridge <> x var
R14053:14055 Coq.Lists.SetoidList <> InA ind
R14065:14072 Coq.FSets.FSetBridge NodepOfDep elements def
R14074:14074 Coq.FSets.FSetBridge <> s var
R14062:14062 Coq.FSets.FSetBridge <> x var
R14057:14060 Coq.FSets.FSetBridge M.E eq defax
R14120:14127 Coq.FSets.FSetBridge NodepOfDep elements def
R14136:14145 Coq.FSets.FSetBridge M elements defax
R14136:14145 Coq.FSets.FSetBridge M elements defax
prf 14179:14188 NodepOfDep elements_3
R14203:14203 Coq.FSets.FSetBridge M t defax
R14206:14209 Coq.Sorting.Sorted <> sort syndef
R14217:14224 Coq.FSets.FSetBridge NodepOfDep elements def
R14226:14226 Coq.FSets.FSetBridge <> s var
R14211:14214 Coq.FSets.FSetBridge M.E lt defax
R14258:14265 Coq.FSets.FSetBridge NodepOfDep elements def
R14274:14283 Coq.FSets.FSetBridge M elements defax
R14274:14283 Coq.FSets.FSetBridge M elements defax
prf 14344:14354 NodepOfDep elements_3w
R14369:14369 Coq.FSets.FSetBridge M t defax
R14372:14377 Coq.Lists.SetoidList <> NoDupA ind
R14385:14392 Coq.FSets.FSetBridge NodepOfDep elements def
R14394:14394 Coq.FSets.FSetBridge <> s var
R14379:14382 Coq.FSets.FSetBridge M.E eq defax
def 14432:14438 NodepOfDep min_elt
R14445:14445 Coq.FSets.FSetBridge M t defax
R14450:14455 Coq.Init.Datatypes <> option ind
R14457:14459 Coq.FSets.FSetBridge M elt def
R14474:14480 Coq.FSets.FSetBridge M min_elt defax
R14482:14482 Coq.FSets.FSetBridge <> s var
R14495:14500 Coq.Init.Specif <> inleft constr
R14503:14507 Coq.Init.Specif <> exist constr
R14519:14522 Coq.Init.Datatypes <> Some constr
R14532:14538 Coq.Init.Specif <> inright constr
R14545:14548 Coq.Init.Datatypes <> None constr
prf 14568:14576 NodepOfDep min_elt_1
R14592:14592 Coq.FSets.FSetBridge M t defax
R14600:14602 Coq.FSets.FSetBridge M elt def
R14624:14627 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14628:14629 Coq.FSets.FSetBridge M In defax
R14633:14633 Coq.FSets.FSetBridge <> s var
R14631:14631 Coq.FSets.FSetBridge <> x var
R14615:14617 Coq.Init.Logic <> :type_scope:x_'='_x not
R14606:14612 Coq.FSets.FSetBridge NodepOfDep min_elt def
R14614:14614 Coq.FSets.FSetBridge <> s var
R14618:14621 Coq.Init.Datatypes <> Some constr
R14623:14623 Coq.FSets.FSetBridge <> x var
R14668:14674 Coq.FSets.FSetBridge NodepOfDep min_elt def
R14683:14691 Coq.FSets.FSetBridge M min_elt defax
R14683:14691 Coq.FSets.FSetBridge M min_elt defax
prf 14812:14820 NodepOfDep min_elt_2
R14839:14839 Coq.FSets.FSetBridge M t defax
R14849:14851 Coq.FSets.FSetBridge M elt def
R14873:14876 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14883:14886 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14887:14888 Coq.Init.Logic <> :type_scope:'~'_x not
R14889:14892 Coq.FSets.FSetBridge M.E lt defax
R14896:14896 Coq.FSets.FSetBridge <> x var
R14894:14894 Coq.FSets.FSetBridge <> y var
R14877:14878 Coq.FSets.FSetBridge M In defax
R14882:14882 Coq.FSets.FSetBridge <> s var
R14880:14880 Coq.FSets.FSetBridge <> y var
R14864:14866 Coq.Init.Logic <> :type_scope:x_'='_x not
R14855:14861 Coq.FSets.FSetBridge NodepOfDep min_elt def
R14863:14863 Coq.FSets.FSetBridge <> s var
R14867:14870 Coq.Init.Datatypes <> Some constr
R14872:14872 Coq.FSets.FSetBridge <> x var
R14933:14939 Coq.FSets.FSetBridge NodepOfDep min_elt def
R14948:14956 Coq.FSets.FSetBridge M min_elt defax
R14948:14956 Coq.FSets.FSetBridge M min_elt defax
R14973:14979 Coq.FSets.FSetBridge M For_all def
prf 15099:15107 NodepOfDep min_elt_3
R15122:15122 Coq.FSets.FSetBridge M t defax
R15141:15144 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15145:15149 Coq.FSets.FSetBridge M Empty def
R15151:15151 Coq.FSets.FSetBridge <> s var
R15134:15136 Coq.Init.Logic <> :type_scope:x_'='_x not
R15125:15131 Coq.FSets.FSetBridge NodepOfDep min_elt def
R15133:15133 Coq.FSets.FSetBridge <> s var
R15137:15140 Coq.Init.Datatypes <> None constr
R15184:15190 Coq.FSets.FSetBridge NodepOfDep min_elt def
R15199:15207 Coq.FSets.FSetBridge M min_elt defax
R15199:15207 Coq.FSets.FSetBridge M min_elt defax
def 15288:15294 NodepOfDep max_elt
R15301:15301 Coq.FSets.FSetBridge M t defax
R15306:15311 Coq.Init.Datatypes <> option ind
R15313:15315 Coq.FSets.FSetBridge M elt def
R15330:15336 Coq.FSets.FSetBridge M max_elt defax
R15338:15338 Coq.FSets.FSetBridge <> s var
R15351:15356 Coq.Init.Specif <> inleft constr
R15359:15363 Coq.Init.Specif <> exist constr
R15375:15378 Coq.Init.Datatypes <> Some constr
R15388:15394 Coq.Init.Specif <> inright constr
R15401:15404 Coq.Init.Datatypes <> None constr
prf 15424:15432 NodepOfDep max_elt_1
R15448:15448 Coq.FSets.FSetBridge M t defax
R15456:15458 Coq.FSets.FSetBridge M elt def
R15480:15483 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15484:15485 Coq.FSets.FSetBridge M In defax
R15489:15489 Coq.FSets.FSetBridge <> s var
R15487:15487 Coq.FSets.FSetBridge <> x var
R15471:15473 Coq.Init.Logic <> :type_scope:x_'='_x not
R15462:15468 Coq.FSets.FSetBridge NodepOfDep max_elt def
R15470:15470 Coq.FSets.FSetBridge <> s var
R15474:15477 Coq.Init.Datatypes <> Some constr
R15479:15479 Coq.FSets.FSetBridge <> x var
R15524:15530 Coq.FSets.FSetBridge NodepOfDep max_elt def
R15539:15547 Coq.FSets.FSetBridge M max_elt defax
R15539:15547 Coq.FSets.FSetBridge M max_elt defax
prf 15668:15676 NodepOfDep max_elt_2
R15695:15695 Coq.FSets.FSetBridge M t defax
R15705:15707 Coq.FSets.FSetBridge M elt def
R15729:15732 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15739:15742 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15743:15744 Coq.Init.Logic <> :type_scope:'~'_x not
R15745:15748 Coq.FSets.FSetBridge M.E lt defax
R15752:15752 Coq.FSets.FSetBridge <> y var
R15750:15750 Coq.FSets.FSetBridge <> x var
R15733:15734 Coq.FSets.FSetBridge M In defax
R15738:15738 Coq.FSets.FSetBridge <> s var
R15736:15736 Coq.FSets.FSetBridge <> y var
R15720:15722 Coq.Init.Logic <> :type_scope:x_'='_x not
R15711:15717 Coq.FSets.FSetBridge NodepOfDep max_elt def
R15719:15719 Coq.FSets.FSetBridge <> s var
R15723:15726 Coq.Init.Datatypes <> Some constr
R15728:15728 Coq.FSets.FSetBridge <> x var
R15789:15795 Coq.FSets.FSetBridge NodepOfDep max_elt def
R15804:15812 Coq.FSets.FSetBridge M max_elt defax
R15804:15812 Coq.FSets.FSetBridge M max_elt defax
R15829:15835 Coq.FSets.FSetBridge M For_all def
prf 15955:15963 NodepOfDep max_elt_3
R15978:15978 Coq.FSets.FSetBridge M t defax
R15997:16000 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16001:16005 Coq.FSets.FSetBridge M Empty def
R16007:16007 Coq.FSets.FSetBridge <> s var
R15990:15992 Coq.Init.Logic <> :type_scope:x_'='_x not
R15981:15987 Coq.FSets.FSetBridge NodepOfDep max_elt def
R15989:15989 Coq.FSets.FSetBridge <> s var
R15993:15996 Coq.Init.Datatypes <> None constr
R16040:16046 Coq.FSets.FSetBridge NodepOfDep max_elt def
R16055:16063 Coq.FSets.FSetBridge M max_elt defax
R16055:16063 Coq.FSets.FSetBridge M max_elt defax
def 16144:16146 NodepOfDep add
R16153:16155 Coq.FSets.FSetBridge M elt def
R16163:16163 Coq.FSets.FSetBridge M t defax
R16168:16168 Coq.FSets.FSetBridge M t defax
R16188:16190 Coq.FSets.FSetBridge M add defax
R16194:16194 Coq.FSets.FSetBridge <> s var
R16192:16192 Coq.FSets.FSetBridge <> x var
R16199:16200 Coq.FSets.FSetBridge <> s' var
prf 16212:16216 NodepOfDep add_1
R16232:16232 Coq.FSets.FSetBridge M t defax
R16242:16244 Coq.FSets.FSetBridge M elt def
R16256:16259 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16260:16261 Coq.FSets.FSetBridge M In defax
R16266:16268 Coq.FSets.FSetBridge NodepOfDep add def
R16272:16272 Coq.FSets.FSetBridge <> s var
R16270:16270 Coq.FSets.FSetBridge <> x var
R16263:16263 Coq.FSets.FSetBridge <> y var
R16248:16251 Coq.FSets.FSetBridge M.E eq defax
R16255:16255 Coq.FSets.FSetBridge <> y var
R16253:16253 Coq.FSets.FSetBridge <> x var
R16304:16306 Coq.FSets.FSetBridge NodepOfDep add def
R16315:16319 Coq.FSets.FSetBridge M add defax
R16334:16336 Coq.FSets.FSetBridge M Add def
R16315:16319 Coq.FSets.FSetBridge M add defax
prf 16372:16376 NodepOfDep add_2
R16392:16392 Coq.FSets.FSetBridge M t defax
R16402:16404 Coq.FSets.FSetBridge M elt def
R16414:16417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16418:16419 Coq.FSets.FSetBridge M In defax
R16424:16426 Coq.FSets.FSetBridge NodepOfDep add def
R16430:16430 Coq.FSets.FSetBridge <> s var
R16428:16428 Coq.FSets.FSetBridge <> x var
R16421:16421 Coq.FSets.FSetBridge <> y var
R16408:16409 Coq.FSets.FSetBridge M In defax
R16413:16413 Coq.FSets.FSetBridge <> s var
R16411:16411 Coq.FSets.FSetBridge <> y var
R16462:16464 Coq.FSets.FSetBridge NodepOfDep add def
R16473:16477 Coq.FSets.FSetBridge M add defax
R16492:16494 Coq.FSets.FSetBridge M Add def
R16473:16477 Coq.FSets.FSetBridge M add defax
prf 16530:16534 NodepOfDep add_3
R16553:16553 Coq.FSets.FSetBridge M t defax
R16563:16565 Coq.FSets.FSetBridge M elt def
R16579:16582 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16597:16600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16601:16602 Coq.FSets.FSetBridge M In defax
R16606:16606 Coq.FSets.FSetBridge <> s var
R16604:16604 Coq.FSets.FSetBridge <> y var
R16583:16584 Coq.FSets.FSetBridge M In defax
R16589:16591 Coq.FSets.FSetBridge NodepOfDep add def
R16595:16595 Coq.FSets.FSetBridge <> s var
R16593:16593 Coq.FSets.FSetBridge <> x var
R16586:16586 Coq.FSets.FSetBridge <> y var
R16569:16570 Coq.Init.Logic <> :type_scope:'~'_x not
R16571:16574 Coq.FSets.FSetBridge M.E eq defax
R16578:16578 Coq.FSets.FSetBridge <> y var
R16576:16576 Coq.FSets.FSetBridge <> x var
R16643:16645 Coq.FSets.FSetBridge NodepOfDep add def
R16654:16658 Coq.FSets.FSetBridge M add defax
R16673:16675 Coq.FSets.FSetBridge M Add def
R16654:16658 Coq.FSets.FSetBridge M add defax
def 16716:16721 NodepOfDep remove
R16728:16730 Coq.FSets.FSetBridge M elt def
R16738:16738 Coq.FSets.FSetBridge M t defax
R16743:16743 Coq.FSets.FSetBridge M t defax
R16763:16768 Coq.FSets.FSetBridge M remove defax
R16772:16772 Coq.FSets.FSetBridge <> s var
R16770:16770 Coq.FSets.FSetBridge <> x var
R16777:16778 Coq.FSets.FSetBridge <> s' var
prf 16790:16797 NodepOfDep remove_1
R16813:16813 Coq.FSets.FSetBridge M t defax
R16823:16825 Coq.FSets.FSetBridge M elt def
R16837:16840 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16841:16842 Coq.Init.Logic <> :type_scope:'~'_x not
R16843:16844 Coq.FSets.FSetBridge M In defax
R16849:16854 Coq.FSets.FSetBridge NodepOfDep remove def
R16858:16858 Coq.FSets.FSetBridge <> s var
R16856:16856 Coq.FSets.FSetBridge <> x var
R16846:16846 Coq.FSets.FSetBridge <> y var
R16829:16832 Coq.FSets.FSetBridge M.E eq defax
R16836:16836 Coq.FSets.FSetBridge <> y var
R16834:16834 Coq.FSets.FSetBridge <> x var
R16890:16895 Coq.FSets.FSetBridge NodepOfDep remove def
R16904:16911 Coq.FSets.FSetBridge M remove defax
R16904:16911 Coq.FSets.FSetBridge M remove defax
prf 16947:16954 NodepOfDep remove_2
R16973:16973 Coq.FSets.FSetBridge M t defax
R16983:16985 Coq.FSets.FSetBridge M elt def
R16999:17002 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17009:17012 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17013:17014 Coq.FSets.FSetBridge M In defax
R17019:17024 Coq.FSets.FSetBridge NodepOfDep remove def
R17028:17028 Coq.FSets.FSetBridge <> s var
R17026:17026 Coq.FSets.FSetBridge <> x var
R17016:17016 Coq.FSets.FSetBridge <> y var
R17003:17004 Coq.FSets.FSetBridge M In defax
R17008:17008 Coq.FSets.FSetBridge <> s var
R17006:17006 Coq.FSets.FSetBridge <> y var
R16989:16990 Coq.Init.Logic <> :type_scope:'~'_x not
R16991:16994 Coq.FSets.FSetBridge M.E eq defax
R16998:16998 Coq.FSets.FSetBridge <> y var
R16996:16996 Coq.FSets.FSetBridge <> x var
R17060:17065 Coq.FSets.FSetBridge NodepOfDep remove def
R17074:17081 Coq.FSets.FSetBridge M remove defax
R17074:17081 Coq.FSets.FSetBridge M remove defax
prf 17117:17124 NodepOfDep remove_3
R17140:17140 Coq.FSets.FSetBridge M t defax
R17150:17152 Coq.FSets.FSetBridge M elt def
R17173:17176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17177:17178 Coq.FSets.FSetBridge M In defax
R17182:17182 Coq.FSets.FSetBridge <> s var
R17180:17180 Coq.FSets.FSetBridge <> y var
R17156:17157 Coq.FSets.FSetBridge M In defax
R17162:17167 Coq.FSets.FSetBridge NodepOfDep remove def
R17171:17171 Coq.FSets.FSetBridge <> s var
R17169:17169 Coq.FSets.FSetBridge <> x var
R17159:17159 Coq.FSets.FSetBridge <> y var
R17219:17224 Coq.FSets.FSetBridge NodepOfDep remove def
R17233:17240 Coq.FSets.FSetBridge M remove defax
R17233:17240 Coq.FSets.FSetBridge M remove defax
def 17281:17289 NodepOfDep singleton
R17296:17298 Coq.FSets.FSetBridge M elt def
R17303:17303 Coq.FSets.FSetBridge M t defax
R17322:17330 Coq.FSets.FSetBridge M singleton defax
R17332:17332 Coq.FSets.FSetBridge <> x var
R17337:17337 Coq.FSets.FSetBridge <> s var
prf 17349:17359 NodepOfDep singleton_1
R17376:17378 Coq.FSets.FSetBridge M elt def
R17399:17402 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17403:17406 Coq.FSets.FSetBridge M.E eq defax
R17410:17410 Coq.FSets.FSetBridge <> y var
R17408:17408 Coq.FSets.FSetBridge <> x var
R17381:17382 Coq.FSets.FSetBridge M In defax
R17387:17395 Coq.FSets.FSetBridge NodepOfDep singleton def
R17397:17397 Coq.FSets.FSetBridge <> x var
R17384:17384 Coq.FSets.FSetBridge <> y var
R17445:17453 Coq.FSets.FSetBridge NodepOfDep singleton def
R17462:17472 Coq.FSets.FSetBridge M singleton defax
R17462:17472 Coq.FSets.FSetBridge M singleton defax
prf 17506:17516 NodepOfDep singleton_2
R17533:17535 Coq.FSets.FSetBridge M elt def
R17546:17549 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17550:17551 Coq.FSets.FSetBridge M In defax
R17556:17564 Coq.FSets.FSetBridge NodepOfDep singleton def
R17566:17566 Coq.FSets.FSetBridge <> x var
R17553:17553 Coq.FSets.FSetBridge <> y var
R17538:17541 Coq.FSets.FSetBridge M.E eq defax
R17545:17545 Coq.FSets.FSetBridge <> y var
R17543:17543 Coq.FSets.FSetBridge <> x var
R17602:17610 Coq.FSets.FSetBridge NodepOfDep singleton def
R17619:17629 Coq.FSets.FSetBridge M singleton defax
R17619:17629 Coq.FSets.FSetBridge M singleton defax
def 17668:17672 NodepOfDep union
R17682:17682 Coq.FSets.FSetBridge M t defax
R17687:17687 Coq.FSets.FSetBridge M t defax
R17708:17712 Coq.FSets.FSetBridge M union defax
R17716:17717 Coq.FSets.FSetBridge <> s' var
R17714:17714 Coq.FSets.FSetBridge <> s var
R17722:17724 Coq.FSets.FSetBridge <> s'' var
prf 17736:17742 NodepOfDep union_1
R17764:17764 Coq.FSets.FSetBridge M t defax
R17772:17774 Coq.FSets.FSetBridge M elt def
R17795:17798 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17805:17808 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17799:17800 Coq.FSets.FSetBridge M In defax
R17804:17804 Coq.FSets.FSetBridge <> s var
R17802:17802 Coq.FSets.FSetBridge <> x var
R17809:17810 Coq.FSets.FSetBridge M In defax
R17814:17815 Coq.FSets.FSetBridge <> s' var
R17812:17812 Coq.FSets.FSetBridge <> x var
R17778:17779 Coq.FSets.FSetBridge M In defax
R17784:17788 Coq.FSets.FSetBridge NodepOfDep union def
R17792:17793 Coq.FSets.FSetBridge <> s' var
R17790:17790 Coq.FSets.FSetBridge <> s var
R17781:17781 Coq.FSets.FSetBridge <> x var
R17853:17857 Coq.FSets.FSetBridge NodepOfDep union def
R17866:17872 Coq.FSets.FSetBridge M union defax
R17866:17872 Coq.FSets.FSetBridge M union defax
prf 17909:17915 NodepOfDep union_2
R17934:17934 Coq.FSets.FSetBridge M t defax
R17942:17944 Coq.FSets.FSetBridge M elt def
R17954:17957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17958:17959 Coq.FSets.FSetBridge M In defax
R17964:17968 Coq.FSets.FSetBridge NodepOfDep union def
R17972:17973 Coq.FSets.FSetBridge <> s' var
R17970:17970 Coq.FSets.FSetBridge <> s var
R17961:17961 Coq.FSets.FSetBridge <> x var
R17948:17949 Coq.FSets.FSetBridge M In defax
R17953:17953 Coq.FSets.FSetBridge <> s var
R17951:17951 Coq.FSets.FSetBridge <> x var
R18012:18016 Coq.FSets.FSetBridge NodepOfDep union def
R18025:18031 Coq.FSets.FSetBridge M union defax
R18025:18031 Coq.FSets.FSetBridge M union defax
prf 18068:18074 NodepOfDep union_3
R18093:18093 Coq.FSets.FSetBridge M t defax
R18101:18103 Coq.FSets.FSetBridge M elt def
R18114:18117 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18118:18119 Coq.FSets.FSetBridge M In defax
R18124:18128 Coq.FSets.FSetBridge NodepOfDep union def
R18132:18133 Coq.FSets.FSetBridge <> s' var
R18130:18130 Coq.FSets.FSetBridge <> s var
R18121:18121 Coq.FSets.FSetBridge <> x var
R18107:18108 Coq.FSets.FSetBridge M In defax
R18112:18113 Coq.FSets.FSetBridge <> s' var
R18110:18110 Coq.FSets.FSetBridge <> x var
R18172:18176 Coq.FSets.FSetBridge NodepOfDep union def
R18185:18191 Coq.FSets.FSetBridge M union defax
R18185:18191 Coq.FSets.FSetBridge M union defax
def 18233:18237 NodepOfDep inter
R18247:18247 Coq.FSets.FSetBridge M t defax
R18252:18252 Coq.FSets.FSetBridge M t defax
R18273:18277 Coq.FSets.FSetBridge M inter defax
R18281:18282 Coq.FSets.FSetBridge <> s' var
R18279:18279 Coq.FSets.FSetBridge <> s var
R18287:18289 Coq.FSets.FSetBridge <> s'' var
prf 18301:18307 NodepOfDep inter_1
R18326:18326 Coq.FSets.FSetBridge M t defax
R18334:18336 Coq.FSets.FSetBridge M elt def
R18357:18360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18361:18362 Coq.FSets.FSetBridge M In defax
R18366:18366 Coq.FSets.FSetBridge <> s var
R18364:18364 Coq.FSets.FSetBridge <> x var
R18340:18341 Coq.FSets.FSetBridge M In defax
R18346:18350 Coq.FSets.FSetBridge NodepOfDep inter def
R18354:18355 Coq.FSets.FSetBridge <> s' var
R18352:18352 Coq.FSets.FSetBridge <> s var
R18343:18343 Coq.FSets.FSetBridge <> x var
R18404:18408 Coq.FSets.FSetBridge NodepOfDep inter def
R18417:18423 Coq.FSets.FSetBridge M inter defax
R18417:18423 Coq.FSets.FSetBridge M inter defax
prf 18460:18466 NodepOfDep inter_2
R18485:18485 Coq.FSets.FSetBridge M t defax
R18493:18495 Coq.FSets.FSetBridge M elt def
R18516:18519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18520:18521 Coq.FSets.FSetBridge M In defax
R18525:18526 Coq.FSets.FSetBridge <> s' var
R18523:18523 Coq.FSets.FSetBridge <> x var
R18499:18500 Coq.FSets.FSetBridge M In defax
R18505:18509 Coq.FSets.FSetBridge NodepOfDep inter def
R18513:18514 Coq.FSets.FSetBridge <> s' var
R18511:18511 Coq.FSets.FSetBridge <> s var
R18502:18502 Coq.FSets.FSetBridge <> x var
R18564:18568 Coq.FSets.FSetBridge NodepOfDep inter def
R18577:18583 Coq.FSets.FSetBridge M inter defax
R18577:18583 Coq.FSets.FSetBridge M inter defax
prf 18620:18626 NodepOfDep inter_3
R18648:18648 Coq.FSets.FSetBridge M t defax
R18656:18658 Coq.FSets.FSetBridge M elt def
R18668:18671 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18679:18682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18683:18684 Coq.FSets.FSetBridge M In defax
R18689:18693 Coq.FSets.FSetBridge NodepOfDep inter def
R18697:18698 Coq.FSets.FSetBridge <> s' var
R18695:18695 Coq.FSets.FSetBridge <> s var
R18686:18686 Coq.FSets.FSetBridge <> x var
R18672:18673 Coq.FSets.FSetBridge M In defax
R18677:18678 Coq.FSets.FSetBridge <> s' var
R18675:18675 Coq.FSets.FSetBridge <> x var
R18662:18663 Coq.FSets.FSetBridge M In defax
R18667:18667 Coq.FSets.FSetBridge <> s var
R18665:18665 Coq.FSets.FSetBridge <> x var
R18737:18741 Coq.FSets.FSetBridge NodepOfDep inter def
R18750:18756 Coq.FSets.FSetBridge M inter defax
R18750:18756 Coq.FSets.FSetBridge M inter defax
def 18798:18801 NodepOfDep diff
R18811:18811 Coq.FSets.FSetBridge M t defax
R18816:18816 Coq.FSets.FSetBridge M t defax
R18837:18840 Coq.FSets.FSetBridge M diff defax
R18844:18845 Coq.FSets.FSetBridge <> s' var
R18842:18842 Coq.FSets.FSetBridge <> s var
R18850:18852 Coq.FSets.FSetBridge <> s'' var
prf 18864:18869 NodepOfDep diff_1
R18888:18888 Coq.FSets.FSetBridge M t defax
R18896:18898 Coq.FSets.FSetBridge M elt def
R18918:18921 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18922:18923 Coq.FSets.FSetBridge M In defax
R18927:18927 Coq.FSets.FSetBridge <> s var
R18925:18925 Coq.FSets.FSetBridge <> x var
R18902:18903 Coq.FSets.FSetBridge M In defax
R18908:18911 Coq.FSets.FSetBridge NodepOfDep diff def
R18915:18916 Coq.FSets.FSetBridge <> s' var
R18913:18913 Coq.FSets.FSetBridge <> s var
R18905:18905 Coq.FSets.FSetBridge <> x var
R18965:18968 Coq.FSets.FSetBridge NodepOfDep diff def
R18977:18982 Coq.FSets.FSetBridge M diff defax
R18977:18982 Coq.FSets.FSetBridge M diff defax
prf 19019:19024 NodepOfDep diff_2
R19043:19043 Coq.FSets.FSetBridge M t defax
R19051:19053 Coq.FSets.FSetBridge M elt def
R19073:19076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19077:19078 Coq.Init.Logic <> :type_scope:'~'_x not
R19079:19080 Coq.FSets.FSetBridge M In defax
R19084:19085 Coq.FSets.FSetBridge <> s' var
R19082:19082 Coq.FSets.FSetBridge <> x var
R19057:19058 Coq.FSets.FSetBridge M In defax
R19063:19066 Coq.FSets.FSetBridge NodepOfDep diff def
R19070:19071 Coq.FSets.FSetBridge <> s' var
R19068:19068 Coq.FSets.FSetBridge <> s var
R19060:19060 Coq.FSets.FSetBridge <> x var
R19123:19126 Coq.FSets.FSetBridge NodepOfDep diff def
R19135:19140 Coq.FSets.FSetBridge M diff defax
R19135:19140 Coq.FSets.FSetBridge M diff defax
prf 19177:19182 NodepOfDep diff_3
R19204:19204 Coq.FSets.FSetBridge M t defax
R19212:19214 Coq.FSets.FSetBridge M elt def
R19224:19227 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19237:19240 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19241:19242 Coq.FSets.FSetBridge M In defax
R19247:19250 Coq.FSets.FSetBridge NodepOfDep diff def
R19254:19255 Coq.FSets.FSetBridge <> s' var
R19252:19252 Coq.FSets.FSetBridge <> s var
R19244:19244 Coq.FSets.FSetBridge <> x var
R19228:19229 Coq.Init.Logic <> :type_scope:'~'_x not
R19230:19231 Coq.FSets.FSetBridge M In defax
R19235:19236 Coq.FSets.FSetBridge <> s' var
R19233:19233 Coq.FSets.FSetBridge <> x var
R19218:19219 Coq.FSets.FSetBridge M In defax
R19223:19223 Coq.FSets.FSetBridge <> s var
R19221:19221 Coq.FSets.FSetBridge <> x var
R19294:19297 Coq.FSets.FSetBridge NodepOfDep diff def
R19306:19311 Coq.FSets.FSetBridge M diff defax
R19306:19311 Coq.FSets.FSetBridge M diff defax
def 19353:19360 NodepOfDep cardinal
R19367:19367 Coq.FSets.FSetBridge M t defax
R19372:19374 Coq.Init.Datatypes <> nat ind
R19393:19400 Coq.FSets.FSetBridge M cardinal defax
R19402:19402 Coq.FSets.FSetBridge <> s var
R19407:19407 Coq.FSets.FSetBridge <> f var
prf 19419:19428 NodepOfDep cardinal_1
R19452:19454 Coq.Init.Logic <> :type_scope:x_'='_x not
R19442:19449 Coq.FSets.FSetBridge NodepOfDep cardinal def
R19451:19451 Coq.FSets.FSetBridge <> s var
R19455:19460 Coq.Init.Datatypes <> length def
R19463:19470 Coq.FSets.FSetBridge NodepOfDep elements def
R19472:19472 Coq.FSets.FSetBridge <> s var
R19504:19511 Coq.FSets.FSetBridge NodepOfDep cardinal def
R19520:19529 Coq.FSets.FSetBridge M cardinal defax
R19542:19549 Coq.FSets.FSetBridge NodepOfDep elements def
R19571:19580 Coq.FSets.FSetBridge M elements defax
R19520:19529 Coq.FSets.FSetBridge M cardinal defax
R19571:19580 Coq.FSets.FSetBridge M elements defax
def 19613:19616 NodepOfDep fold
R19637:19640 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19642:19645 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19646:19646 Coq.FSets.FSetBridge <> B var
R19641:19641 Coq.FSets.FSetBridge <> B var
R19634:19636 Coq.FSets.FSetBridge M elt def
R19654:19654 Coq.FSets.FSetBridge M t defax
R19666:19666 Coq.FSets.FSetBridge <> B var
R19671:19671 Coq.FSets.FSetBridge <> B var
R19693:19696 Coq.FSets.FSetBridge M fold defax
R19702:19702 Coq.FSets.FSetBridge <> s var
R19700:19700 Coq.FSets.FSetBridge <> i var
R19698:19698 Coq.FSets.FSetBridge <> f var
R19707:19710 Coq.FSets.FSetBridge <> fold var
prf 19722:19727 NodepOfDep fold_1
R19746:19746 Coq.FSets.FSetBridge M t defax
R19765:19765 Coq.FSets.FSetBridge <> A var
R19776:19779 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19781:19784 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19785:19785 Coq.FSets.FSetBridge <> A var
R19780:19780 Coq.FSets.FSetBridge <> A var
R19773:19775 Coq.FSets.FSetBridge M elt def
R19802:19804 Coq.Init.Logic <> :type_scope:x_'='_x not
R19792:19795 Coq.FSets.FSetBridge NodepOfDep fold def
R19801:19801 Coq.FSets.FSetBridge <> i var
R19799:19799 Coq.FSets.FSetBridge <> s var
R19797:19797 Coq.FSets.FSetBridge <> f var
R19805:19813 Coq.Lists.List <> fold_left def
R19847:19847 Coq.FSets.FSetBridge <> i var
R19835:19842 Coq.FSets.FSetBridge NodepOfDep elements def
R19844:19844 Coq.FSets.FSetBridge <> s var
R19827:19827 Coq.FSets.FSetBridge <> f var
R19831:19831 Coq.FSets.FSetBridge <> a var
R19829:19829 Coq.FSets.FSetBridge <> e var
R19878:19881 Coq.FSets.FSetBridge NodepOfDep fold def
R19890:19895 Coq.FSets.FSetBridge M fold defax
R19912:19919 Coq.FSets.FSetBridge NodepOfDep elements def
R19941:19950 Coq.FSets.FSetBridge M elements defax
R19890:19895 Coq.FSets.FSetBridge M fold defax
R19941:19950 Coq.FSets.FSetBridge M elements defax
def 19983:19987 NodepOfDep f_dec
R20010:20013 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20014:20017 Coq.Init.Datatypes <> bool ind
R20007:20009 Coq.FSets.FSetBridge M elt def
R20025:20027 Coq.FSets.FSetBridge M elt def
R20031:20031 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R20042:20046 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R20058:20058 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R20035:20037 Coq.Init.Logic <> :type_scope:x_'='_x not
R20032:20032 Coq.FSets.FSetBridge <> f var
R20034:20034 Coq.FSets.FSetBridge <> x var
R20038:20041 Coq.Init.Datatypes <> true constr
R20050:20053 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R20047:20047 Coq.FSets.FSetBridge <> f var
R20049:20049 Coq.FSets.FSetBridge <> x var
R20054:20057 Coq.Init.Datatypes <> true constr
prf 20130:20141 NodepOfDep compat_P_aux
R20162:20165 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20166:20169 Coq.Init.Datatypes <> bool ind
R20159:20161 Coq.FSets.FSetBridge M elt def
R20193:20196 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20197:20204 Coq.Lists.SetoidList <> compat_P def
R20224:20226 Coq.Init.Logic <> :type_scope:x_'='_x not
R20221:20221 Coq.FSets.FSetBridge <> f var
R20223:20223 Coq.FSets.FSetBridge <> x var
R20227:20230 Coq.Init.Datatypes <> true constr
R20206:20209 Coq.FSets.FSetBridge M.E eq defax
R20175:20185 Coq.Lists.SetoidList <> compat_bool def
R20192:20192 Coq.FSets.FSetBridge <> f var
R20187:20190 Coq.FSets.FSetBridge M.E eq defax
R20255:20265 Coq.Lists.SetoidList <> compat_bool def
R20268:20275 Coq.Lists.SetoidList <> compat_P def
R20278:20283 Coq.Classes.Morphisms <> Proper class
R20286:20295 Coq.Classes.Morphisms <> respectful def
R20298:20301 Coq.Program.Basics <> impl def
def 20396:20401 NodepOfDep filter
R20411:20414 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20415:20418 Coq.Init.Datatypes <> bool ind
R20408:20410 Coq.FSets.FSetBridge M elt def
R20426:20426 Coq.FSets.FSetBridge M t defax
R20431:20431 Coq.FSets.FSetBridge M t defax
R20455:20460 Coq.FSets.FSetBridge M filter defax
R20497:20497 Coq.FSets.FSetBridge <> s var
R20488:20492 Coq.FSets.FSetBridge NodepOfDep f_dec def
R20494:20494 Coq.FSets.FSetBridge <> f var
R20478:20480 Coq.Init.Logic <> :type_scope:x_'='_x not
R20475:20475 Coq.FSets.FSetBridge <> f var
R20477:20477 Coq.FSets.FSetBridge <> x var
R20481:20484 Coq.Init.Datatypes <> true constr
R20502:20503 Coq.FSets.FSetBridge <> s' var
prf 20515:20522 NodepOfDep filter_1
R20541:20541 Coq.FSets.FSetBridge M t defax
R20549:20551 Coq.FSets.FSetBridge M elt def
R20562:20565 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20566:20569 Coq.Init.Datatypes <> bool ind
R20559:20561 Coq.FSets.FSetBridge M elt def
R20594:20597 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20615:20618 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20619:20620 Coq.FSets.FSetBridge M In defax
R20624:20624 Coq.FSets.FSetBridge <> s var
R20622:20622 Coq.FSets.FSetBridge <> x var
R20598:20599 Coq.FSets.FSetBridge M In defax
R20604:20609 Coq.FSets.FSetBridge NodepOfDep filter def
R20613:20613 Coq.FSets.FSetBridge <> s var
R20611:20611 Coq.FSets.FSetBridge <> f var
R20601:20601 Coq.FSets.FSetBridge <> x var
R20576:20586 Coq.Lists.SetoidList <> compat_bool def
R20593:20593 Coq.FSets.FSetBridge <> f var
R20588:20591 Coq.FSets.FSetBridge M.E eq defax
R20661:20666 Coq.FSets.FSetBridge NodepOfDep filter def
R20674:20681 Coq.FSets.FSetBridge M filter defax
R20674:20681 Coq.FSets.FSetBridge M filter defax
R20730:20741 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R20730:20741 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
prf 20776:20783 NodepOfDep filter_2
R20802:20802 Coq.FSets.FSetBridge M t defax
R20810:20812 Coq.FSets.FSetBridge M elt def
R20823:20826 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20827:20830 Coq.Init.Datatypes <> bool ind
R20820:20822 Coq.FSets.FSetBridge M elt def
R20855:20858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20876:20879 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20883:20885 Coq.Init.Logic <> :type_scope:x_'='_x not
R20880:20880 Coq.FSets.FSetBridge <> f var
R20882:20882 Coq.FSets.FSetBridge <> x var
R20886:20889 Coq.Init.Datatypes <> true constr
R20859:20860 Coq.FSets.FSetBridge M In defax
R20865:20870 Coq.FSets.FSetBridge NodepOfDep filter def
R20874:20874 Coq.FSets.FSetBridge <> s var
R20872:20872 Coq.FSets.FSetBridge <> f var
R20862:20862 Coq.FSets.FSetBridge <> x var
R20837:20847 Coq.Lists.SetoidList <> compat_bool def
R20854:20854 Coq.FSets.FSetBridge <> f var
R20849:20852 Coq.FSets.FSetBridge M.E eq defax
R20926:20931 Coq.FSets.FSetBridge NodepOfDep filter def
R20939:20946 Coq.FSets.FSetBridge M filter defax
R20939:20946 Coq.FSets.FSetBridge M filter defax
R20995:21006 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R20995:21006 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
prf 21041:21048 NodepOfDep filter_3
R21067:21067 Coq.FSets.FSetBridge M t defax
R21075:21077 Coq.FSets.FSetBridge M elt def
R21088:21091 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21092:21095 Coq.Init.Datatypes <> bool ind
R21085:21087 Coq.FSets.FSetBridge M elt def
R21120:21123 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21130:21133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21144:21147 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21148:21149 Coq.FSets.FSetBridge M In defax
R21154:21159 Coq.FSets.FSetBridge NodepOfDep filter def
R21163:21163 Coq.FSets.FSetBridge <> s var
R21161:21161 Coq.FSets.FSetBridge <> f var
R21151:21151 Coq.FSets.FSetBridge <> x var
R21137:21139 Coq.Init.Logic <> :type_scope:x_'='_x not
R21134:21134 Coq.FSets.FSetBridge <> f var
R21136:21136 Coq.FSets.FSetBridge <> x var
R21140:21143 Coq.Init.Datatypes <> true constr
R21124:21125 Coq.FSets.FSetBridge M In defax
R21129:21129 Coq.FSets.FSetBridge <> s var
R21127:21127 Coq.FSets.FSetBridge <> x var
R21102:21112 Coq.Lists.SetoidList <> compat_bool def
R21119:21119 Coq.FSets.FSetBridge <> f var
R21114:21117 Coq.FSets.FSetBridge M.E eq defax
R21201:21206 Coq.FSets.FSetBridge NodepOfDep filter def
R21214:21221 Coq.FSets.FSetBridge M filter defax
R21214:21221 Coq.FSets.FSetBridge M filter defax
R21270:21281 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R21270:21281 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
def 21321:21327 NodepOfDep for_all
R21337:21340 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21341:21344 Coq.Init.Datatypes <> bool ind
R21334:21336 Coq.FSets.FSetBridge M elt def
R21352:21352 Coq.FSets.FSetBridge M t defax
R21357:21360 Coq.Init.Datatypes <> bool ind
R21372:21378 Coq.FSets.FSetBridge M for_all defax
R21415:21415 Coq.FSets.FSetBridge <> s var
R21406:21410 Coq.FSets.FSetBridge NodepOfDep f_dec def
R21412:21412 Coq.FSets.FSetBridge <> f var
R21396:21398 Coq.Init.Logic <> :type_scope:x_'='_x not
R21393:21393 Coq.FSets.FSetBridge <> f var
R21395:21395 Coq.FSets.FSetBridge <> x var
R21399:21402 Coq.Init.Datatypes <> true constr
R21440:21444 Coq.Init.Datatypes <> false constr
R21426:21429 Coq.Init.Datatypes <> true constr
prf 21456:21464 NodepOfDep for_all_1
R21483:21483 Coq.FSets.FSetBridge M t defax
R21494:21497 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21498:21501 Coq.Init.Datatypes <> bool ind
R21491:21493 Coq.FSets.FSetBridge M elt def
R21526:21532 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21564:21567 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21579:21581 Coq.Init.Logic <> :type_scope:x_'='_x not
R21568:21574 Coq.FSets.FSetBridge NodepOfDep for_all def
R21578:21578 Coq.FSets.FSetBridge <> s var
R21576:21576 Coq.FSets.FSetBridge <> f var
R21582:21585 Coq.Init.Datatypes <> true constr
R21533:21539 Coq.FSets.FSetBridge M For_all def
R21563:21563 Coq.FSets.FSetBridge <> s var
R21554:21556 Coq.Init.Logic <> :type_scope:x_'='_x not
R21551:21551 Coq.FSets.FSetBridge <> f var
R21553:21553 Coq.FSets.FSetBridge <> x var
R21557:21560 Coq.Init.Datatypes <> true constr
R21508:21518 Coq.Lists.SetoidList <> compat_bool def
R21525:21525 Coq.FSets.FSetBridge <> f var
R21520:21523 Coq.FSets.FSetBridge M.E eq defax
R21620:21626 Coq.FSets.FSetBridge NodepOfDep for_all def
R21634:21642 Coq.FSets.FSetBridge M for_all defax
R21634:21642 Coq.FSets.FSetBridge M for_all defax
prf 21691:21699 NodepOfDep for_all_2
R21718:21718 Coq.FSets.FSetBridge M t defax
R21729:21732 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21733:21736 Coq.Init.Datatypes <> bool ind
R21726:21728 Coq.FSets.FSetBridge M elt def
R21761:21767 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21786:21789 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21790:21796 Coq.FSets.FSetBridge M For_all def
R21820:21820 Coq.FSets.FSetBridge <> s var
R21811:21813 Coq.Init.Logic <> :type_scope:x_'='_x not
R21808:21808 Coq.FSets.FSetBridge <> f var
R21810:21810 Coq.FSets.FSetBridge <> x var
R21814:21817 Coq.Init.Datatypes <> true constr
R21779:21781 Coq.Init.Logic <> :type_scope:x_'='_x not
R21768:21774 Coq.FSets.FSetBridge NodepOfDep for_all def
R21778:21778 Coq.FSets.FSetBridge <> s var
R21776:21776 Coq.FSets.FSetBridge <> f var
R21782:21785 Coq.Init.Datatypes <> true constr
R21743:21753 Coq.Lists.SetoidList <> compat_bool def
R21760:21760 Coq.FSets.FSetBridge <> f var
R21755:21758 Coq.FSets.FSetBridge M.E eq defax
R21855:21861 Coq.FSets.FSetBridge NodepOfDep for_all def
R21869:21877 Coq.FSets.FSetBridge M for_all defax
R21869:21877 Coq.FSets.FSetBridge M for_all defax
def 21931:21937 NodepOfDep exists_
R21947:21950 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21951:21954 Coq.Init.Datatypes <> bool ind
R21944:21946 Coq.FSets.FSetBridge M elt def
R21962:21962 Coq.FSets.FSetBridge M t defax
R21967:21970 Coq.Init.Datatypes <> bool ind
R21982:21988 Coq.FSets.FSetBridge M exists_ defax
R22025:22025 Coq.FSets.FSetBridge <> s var
R22016:22020 Coq.FSets.FSetBridge NodepOfDep f_dec def
R22022:22022 Coq.FSets.FSetBridge <> f var
R22006:22008 Coq.Init.Logic <> :type_scope:x_'='_x not
R22003:22003 Coq.FSets.FSetBridge <> f var
R22005:22005 Coq.FSets.FSetBridge <> x var
R22009:22012 Coq.Init.Datatypes <> true constr
R22050:22054 Coq.Init.Datatypes <> false constr
R22036:22039 Coq.Init.Datatypes <> true constr
prf 22066:22073 NodepOfDep exists_1
R22092:22092 Coq.FSets.FSetBridge M t defax
R22103:22106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22107:22110 Coq.Init.Datatypes <> bool ind
R22100:22102 Coq.FSets.FSetBridge M elt def
R22135:22138 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22169:22172 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22184:22186 Coq.Init.Logic <> :type_scope:x_'='_x not
R22173:22179 Coq.FSets.FSetBridge NodepOfDep exists_ def
R22183:22183 Coq.FSets.FSetBridge <> s var
R22181:22181 Coq.FSets.FSetBridge <> f var
R22187:22190 Coq.Init.Datatypes <> true constr
R22139:22144 Coq.FSets.FSetBridge M Exists def
R22168:22168 Coq.FSets.FSetBridge <> s var
R22159:22161 Coq.Init.Logic <> :type_scope:x_'='_x not
R22156:22156 Coq.FSets.FSetBridge <> f var
R22158:22158 Coq.FSets.FSetBridge <> x var
R22162:22165 Coq.Init.Datatypes <> true constr
R22117:22127 Coq.Lists.SetoidList <> compat_bool def
R22134:22134 Coq.FSets.FSetBridge <> f var
R22129:22132 Coq.FSets.FSetBridge M.E eq defax
R22225:22231 Coq.FSets.FSetBridge NodepOfDep exists_ def
R22239:22247 Coq.FSets.FSetBridge M exists_ defax
R22239:22247 Coq.FSets.FSetBridge M exists_ defax
prf 22296:22303 NodepOfDep exists_2
R22322:22322 Coq.FSets.FSetBridge M t defax
R22333:22336 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22337:22340 Coq.Init.Datatypes <> bool ind
R22330:22332 Coq.FSets.FSetBridge M elt def
R22365:22368 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22387:22390 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22391:22396 Coq.FSets.FSetBridge M Exists def
R22420:22420 Coq.FSets.FSetBridge <> s var
R22411:22413 Coq.Init.Logic <> :type_scope:x_'='_x not
R22408:22408 Coq.FSets.FSetBridge <> f var
R22410:22410 Coq.FSets.FSetBridge <> x var
R22414:22417 Coq.Init.Datatypes <> true constr
R22380:22382 Coq.Init.Logic <> :type_scope:x_'='_x not
R22369:22375 Coq.FSets.FSetBridge NodepOfDep exists_ def
R22379:22379 Coq.FSets.FSetBridge <> s var
R22377:22377 Coq.FSets.FSetBridge <> f var
R22383:22386 Coq.Init.Datatypes <> true constr
R22347:22357 Coq.Lists.SetoidList <> compat_bool def
R22364:22364 Coq.FSets.FSetBridge <> f var
R22359:22362 Coq.FSets.FSetBridge M.E eq defax
R22455:22461 Coq.FSets.FSetBridge NodepOfDep exists_ def
R22469:22477 Coq.FSets.FSetBridge M exists_ defax
R22469:22477 Coq.FSets.FSetBridge M exists_ defax
def 22531:22539 NodepOfDep partition
R22549:22552 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22553:22556 Coq.Init.Datatypes <> bool ind
R22546:22548 Coq.FSets.FSetBridge M elt def
R22564:22564 Coq.FSets.FSetBridge M t defax
R22574:22576 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R22573:22573 Coq.FSets.FSetBridge M t defax
R22577:22577 Coq.FSets.FSetBridge M t defax
R22600:22608 Coq.FSets.FSetBridge M partition defax
R22645:22645 Coq.FSets.FSetBridge <> s var
R22636:22640 Coq.FSets.FSetBridge NodepOfDep f_dec def
R22642:22642 Coq.FSets.FSetBridge <> f var
R22626:22628 Coq.Init.Logic <> :type_scope:x_'='_x not
R22623:22623 Coq.FSets.FSetBridge <> f var
R22625:22625 Coq.FSets.FSetBridge <> x var
R22629:22632 Coq.Init.Datatypes <> true constr
R22650:22650 Coq.FSets.FSetBridge <> p var
prf 22662:22672 NodepOfDep partition_1
R22691:22691 Coq.FSets.FSetBridge M t defax
R22702:22705 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22706:22709 Coq.Init.Datatypes <> bool ind
R22699:22701 Coq.FSets.FSetBridge M elt def
R22734:22737 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22738:22742 Coq.FSets.FSetBridge M Equal def
R22767:22772 Coq.FSets.FSetBridge NodepOfDep filter def
R22776:22776 Coq.FSets.FSetBridge <> s var
R22774:22774 Coq.FSets.FSetBridge <> f var
R22745:22747 Coq.Init.Datatypes <> fst def
R22750:22758 Coq.FSets.FSetBridge NodepOfDep partition def
R22762:22762 Coq.FSets.FSetBridge <> s var
R22760:22760 Coq.FSets.FSetBridge <> f var
R22716:22726 Coq.Lists.SetoidList <> compat_bool def
R22733:22733 Coq.FSets.FSetBridge <> f var
R22728:22731 Coq.FSets.FSetBridge M.E eq defax
R22812:22820 Coq.FSets.FSetBridge NodepOfDep partition def
R22828:22838 Coq.FSets.FSetBridge M partition defax
R22828:22838 Coq.FSets.FSetBridge M partition defax
R22908:22919 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R22908:22919 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R22962:22966 Coq.FSets.FSetBridge M Equal def
R22990:22997 Coq.FSets.FSetBridge NodepOfDep filter_3 thm
R22990:22997 Coq.FSets.FSetBridge NodepOfDep filter_3 thm
R23049:23050 Coq.FSets.FSetBridge M In defax
R23049:23050 Coq.FSets.FSetBridge M In defax
R23070:23077 Coq.FSets.FSetBridge NodepOfDep filter_1 thm
R23070:23077 Coq.FSets.FSetBridge NodepOfDep filter_1 thm
R23129:23131 Coq.Init.Logic <> :type_scope:x_'='_x not
R23132:23135 Coq.Init.Datatypes <> true constr
R23129:23131 Coq.Init.Logic <> :type_scope:x_'='_x not
R23132:23135 Coq.Init.Datatypes <> true constr
R23170:23177 Coq.FSets.FSetBridge NodepOfDep filter_2 thm
R23170:23177 Coq.FSets.FSetBridge NodepOfDep filter_2 thm
prf 23203:23213 NodepOfDep partition_2
R23232:23232 Coq.FSets.FSetBridge M t defax
R23243:23246 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23247:23250 Coq.Init.Datatypes <> bool ind
R23240:23242 Coq.FSets.FSetBridge M elt def
R23275:23278 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23279:23283 Coq.FSets.FSetBridge M Equal def
R23308:23313 Coq.FSets.FSetBridge NodepOfDep filter def
R23337:23337 Coq.FSets.FSetBridge <> s var
R23325:23328 Coq.Init.Datatypes <> negb def
R23331:23331 Coq.FSets.FSetBridge <> f var
R23333:23333 Coq.FSets.FSetBridge <> x var
R23286:23288 Coq.Init.Datatypes <> snd def
R23291:23299 Coq.FSets.FSetBridge NodepOfDep partition def
R23303:23303 Coq.FSets.FSetBridge <> s var
R23301:23301 Coq.FSets.FSetBridge <> f var
R23257:23267 Coq.Lists.SetoidList <> compat_bool def
R23274:23274 Coq.FSets.FSetBridge <> f var
R23269:23272 Coq.FSets.FSetBridge M.E eq defax
R23373:23381 Coq.FSets.FSetBridge NodepOfDep partition def
R23389:23399 Coq.FSets.FSetBridge M partition defax
R23389:23399 Coq.FSets.FSetBridge M partition defax
R23469:23480 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R23469:23480 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R23521:23531 Coq.Lists.SetoidList <> compat_bool def
R23548:23551 Coq.Init.Datatypes <> negb def
R23556:23556 Coq.FSets.FSetBridge <> x var
R23533:23536 Coq.FSets.FSetBridge M.E eq defax
R23521:23531 Coq.Lists.SetoidList <> compat_bool def
R23548:23551 Coq.Init.Datatypes <> negb def
R23556:23556 Coq.FSets.FSetBridge <> x var
R23533:23536 Coq.FSets.FSetBridge M.E eq defax
R23587:23597 Coq.Lists.SetoidList <> compat_bool def
R23600:23605 Coq.Classes.Morphisms <> Proper class
R23608:23617 Coq.Classes.Morphisms <> respectful def
R23635:23641 Coq.Init.Logic <> f_equal thm
R23643:23646 Coq.Init.Datatypes <> negb def
R23635:23641 Coq.Init.Logic <> f_equal thm
R23643:23646 Coq.Init.Datatypes <> negb def
R23679:23683 Coq.FSets.FSetBridge M Equal def
R23707:23714 Coq.FSets.FSetBridge NodepOfDep filter_3 thm
R23707:23714 Coq.FSets.FSetBridge NodepOfDep filter_3 thm
R23766:23767 Coq.FSets.FSetBridge M In defax
R23766:23767 Coq.FSets.FSetBridge M In defax
R23787:23794 Coq.FSets.FSetBridge NodepOfDep filter_1 thm
R23787:23794 Coq.FSets.FSetBridge NodepOfDep filter_1 thm
R23846:23848 Coq.Init.Logic <> :type_scope:x_'='_x not
R23849:23852 Coq.Init.Datatypes <> true constr
R23846:23848 Coq.Init.Logic <> :type_scope:x_'='_x not
R23849:23852 Coq.Init.Datatypes <> true constr
R23883:23890 Coq.FSets.FSetBridge NodepOfDep filter_2 thm
R23883:23890 Coq.FSets.FSetBridge NodepOfDep filter_2 thm
def 23983:23985 NodepOfDep elt
R23990:23992 Coq.FSets.FSetBridge M elt def
def 24008:24008 NodepOfDep t
R24013:24013 Coq.FSets.FSetBridge M t defax
def 24030:24031 NodepOfDep In
R24036:24037 Coq.FSets.FSetBridge M In defax
def 24053:24057 NodepOfDep Equal
R24078:24080 Coq.FSets.FSetBridge NodepOfDep elt def
R24089:24093 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24083:24084 Coq.FSets.FSetBridge NodepOfDep In def
R24088:24088 Coq.FSets.FSetBridge <> s var
R24086:24086 Coq.FSets.FSetBridge <> a var
R24094:24095 Coq.FSets.FSetBridge NodepOfDep In def
R24099:24100 Coq.FSets.FSetBridge <> s' var
R24097:24097 Coq.FSets.FSetBridge <> a var
def 24116:24121 NodepOfDep Subset
R24142:24144 Coq.FSets.FSetBridge NodepOfDep elt def
R24153:24156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24157:24158 Coq.FSets.FSetBridge NodepOfDep In def
R24162:24163 Coq.FSets.FSetBridge <> s' var
R24160:24160 Coq.FSets.FSetBridge <> a var
R24147:24148 Coq.FSets.FSetBridge NodepOfDep In def
R24152:24152 Coq.FSets.FSetBridge <> s var
R24150:24150 Coq.FSets.FSetBridge <> a var
def 24179:24181 NodepOfDep Add
R24188:24190 Coq.FSets.FSetBridge NodepOfDep elt def
R24201:24201 Coq.FSets.FSetBridge NodepOfDep t def
R24222:24224 Coq.FSets.FSetBridge NodepOfDep elt def
R24234:24238 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24227:24228 Coq.FSets.FSetBridge NodepOfDep In def
R24232:24233 Coq.FSets.FSetBridge <> s' var
R24230:24230 Coq.FSets.FSetBridge <> y var
R24247:24250 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24239:24242 Coq.FSets.FSetBridge M.E eq defax
R24246:24246 Coq.FSets.FSetBridge <> x var
R24244:24244 Coq.FSets.FSetBridge <> y var
R24251:24252 Coq.FSets.FSetBridge NodepOfDep In def
R24256:24256 Coq.FSets.FSetBridge <> s var
R24254:24254 Coq.FSets.FSetBridge <> y var
def 24272:24276 NodepOfDep Empty
R24294:24296 Coq.FSets.FSetBridge NodepOfDep elt def
R24299:24300 Coq.Init.Logic <> :type_scope:'~'_x not
R24301:24302 Coq.FSets.FSetBridge NodepOfDep In def
R24306:24306 Coq.FSets.FSetBridge <> s var
R24304:24304 Coq.FSets.FSetBridge <> a var
def 24322:24328 NodepOfDep For_all
R24338:24341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24335:24337 Coq.FSets.FSetBridge NodepOfDep elt def
R24353:24353 Coq.FSets.FSetBridge NodepOfDep t def
R24374:24376 Coq.FSets.FSetBridge NodepOfDep elt def
R24385:24388 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24389:24389 Coq.FSets.FSetBridge <> P var
R24391:24391 Coq.FSets.FSetBridge <> x var
R24379:24380 Coq.FSets.FSetBridge NodepOfDep In def
R24384:24384 Coq.FSets.FSetBridge <> s var
R24382:24382 Coq.FSets.FSetBridge <> x var
def 24407:24412 NodepOfDep Exists
R24422:24425 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24419:24421 Coq.FSets.FSetBridge NodepOfDep elt def
R24437:24437 Coq.FSets.FSetBridge NodepOfDep t def
R24447:24453 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24461:24462 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24458:24460 Coq.FSets.FSetBridge NodepOfDep elt def
R24469:24472 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24463:24464 Coq.FSets.FSetBridge NodepOfDep In def
R24468:24468 Coq.FSets.FSetBridge <> s var
R24466:24466 Coq.FSets.FSetBridge <> x var
R24473:24473 Coq.FSets.FSetBridge <> P var
R24475:24475 Coq.FSets.FSetBridge <> x var
def 24492:24495 NodepOfDep In_1
R24500:24504 Coq.FSets.FSetBridge M eq_In defax
def 24521:24522 NodepOfDep eq
R24527:24531 Coq.FSets.FSetBridge NodepOfDep Equal def
def 24547:24548 NodepOfDep lt
R24553:24554 Coq.FSets.FSetBridge M lt defax
def 24570:24576 NodepOfDep eq_refl
R24581:24587 Coq.FSets.FSetBridge M eq_refl defax
def 24603:24608 NodepOfDep eq_sym
R24613:24618 Coq.FSets.FSetBridge M eq_sym defax
def 24634:24641 NodepOfDep eq_trans
R24646:24653 Coq.FSets.FSetBridge M eq_trans defax
def 24669:24676 NodepOfDep lt_trans
R24681:24688 Coq.FSets.FSetBridge M lt_trans defax
def 24704:24712 NodepOfDep lt_not_eq
R24717:24725 Coq.FSets.FSetBridge M lt_not_eq defax
def 24741:24747 NodepOfDep compare
R24752:24758 Coq.FSets.FSetBridge M compare defax
R24776:24776 Coq.FSets.FSetBridge M.E <> modtype
mod 24771:24771 <> NodepOfDep.E
R24784:24793 Coq.FSets.FSetBridge NodepOfDep <> mod

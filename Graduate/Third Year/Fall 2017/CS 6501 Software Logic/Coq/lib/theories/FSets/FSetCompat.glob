DIGEST d337a1ecd53fe5973892771b2a26b813
FCoq.FSets.FSetCompat
R608:620 Coq.FSets.FSetInterface <> <> lib
R622:630 Coq.FSets.FSetFacts <> <> lib
R632:644 Coq.MSets.MSetInterface <> <> lib
R646:654 Coq.MSets.MSetFacts <> <> lib
R772:798 Coq.Structures.DecidableType DecidableType <> mod
R805:823 Coq.MSets.MSetInterface WSets <> mod
R848:850 Coq.FSets.FSetCompat E t defax
R900:903 Coq.FSets.FSetCompat E eq defax
R910:928 Coq.FSets.FSetInterface WSfun <> mod
R930:930 Coq.FSets.FSetCompat E <> modtype
mod 753:766 <> Backport_WSets
def 946:948 Backport_WSets elt
R953:955 Coq.FSets.FSetCompat E t defax
def 970:970 Backport_WSets t
R975:977 Coq.FSets.FSetCompat M t defax
R1000:1000 Coq.FSets.FSetCompat Backport_WSets t def
R1024:1026 Coq.FSets.FSetCompat Backport_WSets elt def
R1051:1054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1055:1058 Coq.Init.Datatypes <> bool ind
R1048:1050 Coq.FSets.FSetCompat Backport_WSets elt def
def 1074:1075 Backport_WSets In
R1082:1085 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1087:1090 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1086:1086 Coq.FSets.FSetCompat Backport_WSets t def
R1079:1081 Coq.FSets.FSetCompat Backport_WSets elt def
R1099:1102 Coq.FSets.FSetCompat M In defax
def 1117:1121 Backport_WSets Equal
R1142:1144 Coq.FSets.FSetCompat Backport_WSets elt def
R1153:1157 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R1147:1148 Coq.FSets.FSetCompat Backport_WSets In def
R1152:1152 Coq.FSets.FSetCompat <> s var
R1150:1150 Coq.FSets.FSetCompat <> a var
R1158:1159 Coq.FSets.FSetCompat Backport_WSets In def
R1163:1164 Coq.FSets.FSetCompat <> s' var
R1161:1161 Coq.FSets.FSetCompat <> a var
def 1179:1184 Backport_WSets Subset
R1205:1207 Coq.FSets.FSetCompat Backport_WSets elt def
R1216:1219 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1220:1221 Coq.FSets.FSetCompat Backport_WSets In def
R1225:1226 Coq.FSets.FSetCompat <> s' var
R1223:1223 Coq.FSets.FSetCompat <> a var
R1210:1211 Coq.FSets.FSetCompat Backport_WSets In def
R1215:1215 Coq.FSets.FSetCompat <> s var
R1213:1213 Coq.FSets.FSetCompat <> a var
def 1241:1245 Backport_WSets Empty
R1263:1265 Coq.FSets.FSetCompat Backport_WSets elt def
R1268:1269 Coq.Init.Logic <> :type_scope:'~'_x not
R1270:1271 Coq.FSets.FSetCompat Backport_WSets In def
R1275:1275 Coq.FSets.FSetCompat <> s var
R1273:1273 Coq.FSets.FSetCompat <> a var
def 1290:1296 Backport_WSets For_all
R1306:1309 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1303:1305 Coq.FSets.FSetCompat Backport_WSets elt def
R1337:1340 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1341:1341 Coq.FSets.FSetCompat <> P var
R1343:1343 Coq.FSets.FSetCompat <> x var
R1331:1332 Coq.FSets.FSetCompat Backport_WSets In def
R1336:1336 Coq.FSets.FSetCompat <> s var
R1334:1334 Coq.FSets.FSetCompat <> x var
def 1358:1363 Backport_WSets Exists
R1373:1376 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1370:1372 Coq.FSets.FSetCompat Backport_WSets elt def
R1388:1394 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1396:1397 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1404:1407 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1398:1399 Coq.FSets.FSetCompat Backport_WSets In def
R1403:1403 Coq.FSets.FSetCompat <> s var
R1401:1401 Coq.FSets.FSetCompat <> x var
R1408:1408 Coq.FSets.FSetCompat <> P var
R1410:1410 Coq.FSets.FSetCompat <> x var
def 1425:1429 Backport_WSets empty
R1433:1433 Coq.FSets.FSetCompat Backport_WSets t def
R1438:1444 Coq.FSets.FSetCompat M empty defax
def 1459:1466 Backport_WSets is_empty
R1471:1474 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1475:1478 Coq.Init.Datatypes <> bool ind
R1470:1470 Coq.FSets.FSetCompat Backport_WSets t def
R1483:1492 Coq.FSets.FSetCompat M is_empty defax
def 1507:1509 Backport_WSets mem
R1516:1519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1521:1524 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1525:1528 Coq.Init.Datatypes <> bool ind
R1520:1520 Coq.FSets.FSetCompat Backport_WSets t def
R1513:1515 Coq.FSets.FSetCompat Backport_WSets elt def
R1533:1537 Coq.FSets.FSetCompat M mem defax
def 1552:1554 Backport_WSets add
R1561:1564 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1566:1569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1570:1570 Coq.FSets.FSetCompat Backport_WSets t def
R1565:1565 Coq.FSets.FSetCompat Backport_WSets t def
R1558:1560 Coq.FSets.FSetCompat Backport_WSets elt def
R1575:1579 Coq.FSets.FSetCompat M add defax
def 1594:1602 Backport_WSets singleton
R1609:1612 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1613:1613 Coq.FSets.FSetCompat Backport_WSets t def
R1606:1608 Coq.FSets.FSetCompat Backport_WSets elt def
R1618:1628 Coq.FSets.FSetCompat M singleton defax
def 1643:1648 Backport_WSets remove
R1655:1658 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1660:1663 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1664:1664 Coq.FSets.FSetCompat Backport_WSets t def
R1659:1659 Coq.FSets.FSetCompat Backport_WSets t def
R1652:1654 Coq.FSets.FSetCompat Backport_WSets elt def
R1669:1676 Coq.FSets.FSetCompat M remove defax
def 1691:1695 Backport_WSets union
R1700:1703 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1705:1708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1709:1709 Coq.FSets.FSetCompat Backport_WSets t def
R1704:1704 Coq.FSets.FSetCompat Backport_WSets t def
R1699:1699 Coq.FSets.FSetCompat Backport_WSets t def
R1714:1720 Coq.FSets.FSetCompat M union defax
def 1735:1739 Backport_WSets inter
R1744:1747 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1749:1752 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1753:1753 Coq.FSets.FSetCompat Backport_WSets t def
R1748:1748 Coq.FSets.FSetCompat Backport_WSets t def
R1743:1743 Coq.FSets.FSetCompat Backport_WSets t def
R1758:1764 Coq.FSets.FSetCompat M inter defax
def 1779:1782 Backport_WSets diff
R1787:1790 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1792:1795 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1796:1796 Coq.FSets.FSetCompat Backport_WSets t def
R1791:1791 Coq.FSets.FSetCompat Backport_WSets t def
R1786:1786 Coq.FSets.FSetCompat Backport_WSets t def
R1801:1806 Coq.FSets.FSetCompat M diff defax
def 1821:1822 Backport_WSets eq
R1827:1830 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1832:1835 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1831:1831 Coq.FSets.FSetCompat Backport_WSets t def
R1826:1826 Coq.FSets.FSetCompat Backport_WSets t def
R1844:1847 Coq.FSets.FSetCompat M eq def
def 1862:1867 Backport_WSets eq_dec
R1884:1884 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1892:1894 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1903:1903 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1885:1886 Coq.FSets.FSetCompat Backport_WSets eq def
R1890:1891 Coq.FSets.FSetCompat <> s' var
R1888:1888 Coq.FSets.FSetCompat <> s var
R1895:1895 Coq.Init.Logic <> :type_scope:'~'_x not
R1896:1897 Coq.FSets.FSetCompat Backport_WSets eq def
R1901:1902 Coq.FSets.FSetCompat <> s' var
R1899:1899 Coq.FSets.FSetCompat <> s var
R1907:1914 Coq.FSets.FSetCompat M eq_dec defax
def 1929:1933 Backport_WSets equal
R1938:1941 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1943:1946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1947:1950 Coq.Init.Datatypes <> bool ind
R1942:1942 Coq.FSets.FSetCompat Backport_WSets t def
R1937:1937 Coq.FSets.FSetCompat Backport_WSets t def
R1955:1961 Coq.FSets.FSetCompat M equal defax
def 1976:1981 Backport_WSets subset
R1986:1989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1991:1994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1995:1998 Coq.Init.Datatypes <> bool ind
R1990:1990 Coq.FSets.FSetCompat Backport_WSets t def
R1985:1985 Coq.FSets.FSetCompat Backport_WSets t def
R2003:2010 Coq.FSets.FSetCompat M subset defax
def 2025:2028 Backport_WSets fold
R2049:2049 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2063:2067 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2069:2072 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2074:2077 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2078:2078 Coq.FSets.FSetCompat <> A var
R2073:2073 Coq.FSets.FSetCompat <> A var
R2068:2068 Coq.FSets.FSetCompat Backport_WSets t def
R2053:2056 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2058:2061 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2062:2062 Coq.FSets.FSetCompat <> A var
R2057:2057 Coq.FSets.FSetCompat <> A var
R2050:2052 Coq.FSets.FSetCompat Backport_WSets elt def
R2083:2088 Coq.FSets.FSetCompat M fold defax
def 2103:2109 Backport_WSets for_all
R2113:2113 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2125:2129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2131:2134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2135:2138 Coq.Init.Datatypes <> bool ind
R2130:2130 Coq.FSets.FSetCompat Backport_WSets t def
R2117:2120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2121:2124 Coq.Init.Datatypes <> bool ind
R2114:2116 Coq.FSets.FSetCompat Backport_WSets elt def
R2143:2151 Coq.FSets.FSetCompat M for_all defax
def 2166:2172 Backport_WSets exists_
R2176:2176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2188:2192 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2194:2197 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2198:2201 Coq.Init.Datatypes <> bool ind
R2193:2193 Coq.FSets.FSetCompat Backport_WSets t def
R2180:2183 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2184:2187 Coq.Init.Datatypes <> bool ind
R2177:2179 Coq.FSets.FSetCompat Backport_WSets elt def
R2206:2214 Coq.FSets.FSetCompat M exists_ defax
def 2229:2234 Backport_WSets filter
R2238:2238 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2250:2254 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2256:2259 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2260:2260 Coq.FSets.FSetCompat Backport_WSets t def
R2255:2255 Coq.FSets.FSetCompat Backport_WSets t def
R2242:2245 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2246:2249 Coq.Init.Datatypes <> bool ind
R2239:2241 Coq.FSets.FSetCompat Backport_WSets elt def
R2265:2272 Coq.FSets.FSetCompat M filter defax
def 2287:2295 Backport_WSets partition
R2299:2299 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2311:2315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2317:2320 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2322:2324 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2321:2321 Coq.FSets.FSetCompat Backport_WSets t def
R2325:2325 Coq.FSets.FSetCompat Backport_WSets t def
R2316:2316 Coq.FSets.FSetCompat Backport_WSets t def
R2303:2306 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2307:2310 Coq.Init.Datatypes <> bool ind
R2300:2302 Coq.FSets.FSetCompat Backport_WSets elt def
R2329:2339 Coq.FSets.FSetCompat M partition defax
def 2354:2361 Backport_WSets cardinal
R2366:2369 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2370:2372 Coq.Init.Datatypes <> nat ind
R2365:2365 Coq.FSets.FSetCompat Backport_WSets t def
R2377:2386 Coq.FSets.FSetCompat M cardinal defax
def 2401:2408 Backport_WSets elements
R2413:2416 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2417:2420 Coq.Init.Datatypes <> list ind
R2422:2424 Coq.FSets.FSetCompat Backport_WSets elt def
R2412:2412 Coq.FSets.FSetCompat Backport_WSets t def
R2429:2438 Coq.FSets.FSetCompat M elements defax
def 2453:2458 Backport_WSets choose
R2463:2466 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2467:2472 Coq.Init.Datatypes <> option ind
R2474:2476 Coq.FSets.FSetCompat Backport_WSets elt def
R2462:2462 Coq.FSets.FSetCompat Backport_WSets t def
R2481:2488 Coq.FSets.FSetCompat M choose defax
R2506:2521 Coq.MSets.MSetFacts WFacts <> modtype
R2523:2523 Coq.FSets.FSetCompat M <> modtype
mod 2500:2501 <> Backport_WSets.MF
def 2539:2542 Backport_WSets In_1
R2568:2571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2578:2581 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2582:2583 Coq.FSets.FSetCompat Backport_WSets In def
R2587:2587 Coq.FSets.FSetCompat <> s var
R2585:2585 Coq.FSets.FSetCompat <> y var
R2572:2573 Coq.FSets.FSetCompat Backport_WSets In def
R2577:2577 Coq.FSets.FSetCompat <> s var
R2575:2575 Coq.FSets.FSetCompat <> x var
R2560:2563 Coq.FSets.FSetCompat E eq defax
R2567:2567 Coq.FSets.FSetCompat <> y var
R2565:2565 Coq.FSets.FSetCompat <> x var
R2594:2600 Coq.FSets.FSetCompat Backport_WSets In_1 thm
def 2615:2621 Backport_WSets eq_refl
R2635:2636 Coq.FSets.FSetCompat Backport_WSets eq def
R2640:2640 Coq.FSets.FSetCompat <> s var
R2638:2638 Coq.FSets.FSetCompat <> s var
R2648:2668 Coq.Classes.RelationClasses <> Equivalence_Reflexive meth
R2674:2683 Coq.FSets.FSetCompat M eq_equiv prfax
def 2698:2703 Backport_WSets eq_sym
R2727:2730 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2731:2732 Coq.FSets.FSetCompat Backport_WSets eq def
R2737:2737 Coq.FSets.FSetCompat <> s var
R2734:2735 Coq.FSets.FSetCompat <> s' var
R2720:2721 Coq.FSets.FSetCompat Backport_WSets eq def
R2725:2726 Coq.FSets.FSetCompat <> s' var
R2723:2723 Coq.FSets.FSetCompat <> s var
R2745:2765 Coq.Classes.RelationClasses <> Equivalence_Symmetric meth
R2771:2780 Coq.FSets.FSetCompat M eq_equiv prfax
def 2795:2802 Backport_WSets eq_trans
R2830:2833 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2843:2846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2847:2848 Coq.FSets.FSetCompat Backport_WSets eq def
R2852:2854 Coq.FSets.FSetCompat <> s'' var
R2850:2850 Coq.FSets.FSetCompat <> s var
R2834:2835 Coq.FSets.FSetCompat Backport_WSets eq def
R2840:2842 Coq.FSets.FSetCompat <> s'' var
R2837:2838 Coq.FSets.FSetCompat <> s' var
R2823:2824 Coq.FSets.FSetCompat Backport_WSets eq def
R2828:2829 Coq.FSets.FSetCompat <> s' var
R2826:2826 Coq.FSets.FSetCompat <> s var
R2862:2883 Coq.Classes.RelationClasses <> Equivalence_Transitive meth
R2889:2898 Coq.FSets.FSetCompat M eq_equiv prfax
def 2913:2917 Backport_WSets mem_1
R2939:2942 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2950:2952 Coq.Init.Logic <> :type_scope:x_'='_x not
R2943:2945 Coq.FSets.FSetCompat Backport_WSets mem def
R2949:2949 Coq.FSets.FSetCompat <> s var
R2947:2947 Coq.FSets.FSetCompat <> x var
R2953:2956 Coq.Init.Datatypes <> true constr
R2933:2934 Coq.FSets.FSetCompat Backport_WSets In def
R2938:2938 Coq.FSets.FSetCompat <> s var
R2936:2936 Coq.FSets.FSetCompat <> x var
R2963:2970 Coq.FSets.FSetCompat Backport_WSets mem_1 thm
def 2985:2989 Backport_WSets mem_2
R3019:3022 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3023:3024 Coq.FSets.FSetCompat Backport_WSets In def
R3028:3028 Coq.FSets.FSetCompat <> s var
R3026:3026 Coq.FSets.FSetCompat <> x var
R3012:3014 Coq.Init.Logic <> :type_scope:x_'='_x not
R3005:3007 Coq.FSets.FSetCompat Backport_WSets mem def
R3011:3011 Coq.FSets.FSetCompat <> s var
R3009:3009 Coq.FSets.FSetCompat <> x var
R3015:3018 Coq.Init.Datatypes <> true constr
R3035:3042 Coq.FSets.FSetCompat Backport_WSets mem_2 thm
def 3057:3063 Backport_WSets equal_1
R3090:3093 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3104:3106 Coq.Init.Logic <> :type_scope:x_'='_x not
R3094:3098 Coq.FSets.FSetCompat Backport_WSets equal def
R3102:3103 Coq.FSets.FSetCompat <> s' var
R3100:3100 Coq.FSets.FSetCompat <> s var
R3107:3110 Coq.Init.Datatypes <> true constr
R3080:3084 Coq.FSets.FSetCompat Backport_WSets Equal def
R3088:3089 Coq.FSets.FSetCompat <> s' var
R3086:3086 Coq.FSets.FSetCompat <> s var
R3117:3126 Coq.FSets.FSetCompat Backport_WSets equal_1 thm
def 3141:3147 Backport_WSets equal_2
R3181:3184 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3185:3189 Coq.FSets.FSetCompat Backport_WSets Equal def
R3193:3194 Coq.FSets.FSetCompat <> s' var
R3191:3191 Coq.FSets.FSetCompat <> s var
R3174:3176 Coq.Init.Logic <> :type_scope:x_'='_x not
R3164:3168 Coq.FSets.FSetCompat Backport_WSets equal def
R3172:3173 Coq.FSets.FSetCompat <> s' var
R3170:3170 Coq.FSets.FSetCompat <> s var
R3177:3180 Coq.Init.Datatypes <> true constr
R3201:3210 Coq.FSets.FSetCompat Backport_WSets equal_2 thm
def 3225:3232 Backport_WSets subset_1
R3260:3263 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3275:3277 Coq.Init.Logic <> :type_scope:x_'='_x not
R3264:3269 Coq.FSets.FSetCompat Backport_WSets subset def
R3273:3274 Coq.FSets.FSetCompat <> s' var
R3271:3271 Coq.FSets.FSetCompat <> s var
R3278:3281 Coq.Init.Datatypes <> true constr
R3249:3254 Coq.FSets.FSetCompat Backport_WSets Subset def
R3258:3259 Coq.FSets.FSetCompat <> s' var
R3256:3256 Coq.FSets.FSetCompat <> s var
R3288:3298 Coq.FSets.FSetCompat Backport_WSets subset_1 thm
def 3313:3320 Backport_WSets subset_2
R3355:3358 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3359:3364 Coq.FSets.FSetCompat Backport_WSets Subset def
R3368:3369 Coq.FSets.FSetCompat <> s' var
R3366:3366 Coq.FSets.FSetCompat <> s var
R3348:3350 Coq.Init.Logic <> :type_scope:x_'='_x not
R3337:3342 Coq.FSets.FSetCompat Backport_WSets subset def
R3346:3347 Coq.FSets.FSetCompat <> s' var
R3344:3344 Coq.FSets.FSetCompat <> s var
R3351:3354 Coq.Init.Datatypes <> true constr
R3376:3386 Coq.FSets.FSetCompat Backport_WSets subset_2 thm
def 3401:3407 Backport_WSets empty_1
R3411:3415 Coq.FSets.FSetCompat Backport_WSets Empty def
R3417:3421 Coq.FSets.FSetCompat Backport_WSets empty def
R3426:3435 Coq.FSets.FSetCompat Backport_WSets empty_1 syndef
def 3450:3459 Backport_WSets is_empty_1
R3480:3483 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3494:3496 Coq.Init.Logic <> :type_scope:x_'='_x not
R3484:3491 Coq.FSets.FSetCompat Backport_WSets is_empty def
R3493:3493 Coq.FSets.FSetCompat <> s var
R3497:3500 Coq.Init.Datatypes <> true constr
R3473:3477 Coq.FSets.FSetCompat Backport_WSets Empty def
R3479:3479 Coq.FSets.FSetCompat <> s var
R3507:3519 Coq.FSets.FSetCompat Backport_WSets is_empty_1 thm
def 3534:3543 Backport_WSets is_empty_2
R3574:3577 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3578:3582 Coq.FSets.FSetCompat Backport_WSets Empty def
R3584:3584 Coq.FSets.FSetCompat <> s var
R3567:3569 Coq.Init.Logic <> :type_scope:x_'='_x not
R3557:3564 Coq.FSets.FSetCompat Backport_WSets is_empty def
R3566:3566 Coq.FSets.FSetCompat <> s var
R3570:3573 Coq.Init.Datatypes <> true constr
R3591:3603 Coq.FSets.FSetCompat Backport_WSets is_empty_2 thm
def 3618:3622 Backport_WSets add_1
R3648:3651 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3652:3653 Coq.FSets.FSetCompat Backport_WSets In def
R3658:3660 Coq.FSets.FSetCompat Backport_WSets add def
R3664:3664 Coq.FSets.FSetCompat <> s var
R3662:3662 Coq.FSets.FSetCompat <> x var
R3655:3655 Coq.FSets.FSetCompat <> y var
R3640:3643 Coq.FSets.FSetCompat E eq defax
R3647:3647 Coq.FSets.FSetCompat <> y var
R3645:3645 Coq.FSets.FSetCompat <> x var
R3672:3679 Coq.FSets.FSetCompat Backport_WSets add_1 thm
def 3694:3698 Backport_WSets add_2
R3722:3725 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3726:3727 Coq.FSets.FSetCompat Backport_WSets In def
R3732:3734 Coq.FSets.FSetCompat Backport_WSets add def
R3738:3738 Coq.FSets.FSetCompat <> s var
R3736:3736 Coq.FSets.FSetCompat <> x var
R3729:3729 Coq.FSets.FSetCompat <> y var
R3716:3717 Coq.FSets.FSetCompat Backport_WSets In def
R3721:3721 Coq.FSets.FSetCompat <> s var
R3719:3719 Coq.FSets.FSetCompat <> y var
R3746:3753 Coq.FSets.FSetCompat Backport_WSets add_2 thm
def 3768:3772 Backport_WSets add_3
R3800:3803 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3818:3821 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3822:3823 Coq.FSets.FSetCompat Backport_WSets In def
R3827:3827 Coq.FSets.FSetCompat <> s var
R3825:3825 Coq.FSets.FSetCompat <> y var
R3804:3805 Coq.FSets.FSetCompat Backport_WSets In def
R3810:3812 Coq.FSets.FSetCompat Backport_WSets add def
R3816:3816 Coq.FSets.FSetCompat <> s var
R3814:3814 Coq.FSets.FSetCompat <> x var
R3807:3807 Coq.FSets.FSetCompat <> y var
R3790:3791 Coq.Init.Logic <> :type_scope:'~'_x not
R3792:3795 Coq.FSets.FSetCompat E eq defax
R3799:3799 Coq.FSets.FSetCompat <> y var
R3797:3797 Coq.FSets.FSetCompat <> x var
R3834:3841 Coq.FSets.FSetCompat Backport_WSets add_3 thm
def 3856:3863 Backport_WSets remove_1
R3889:3892 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3893:3894 Coq.Init.Logic <> :type_scope:'~'_x not
R3895:3896 Coq.FSets.FSetCompat Backport_WSets In def
R3901:3906 Coq.FSets.FSetCompat Backport_WSets remove def
R3910:3910 Coq.FSets.FSetCompat <> s var
R3908:3908 Coq.FSets.FSetCompat <> x var
R3898:3898 Coq.FSets.FSetCompat <> y var
R3881:3884 Coq.FSets.FSetCompat E eq defax
R3888:3888 Coq.FSets.FSetCompat <> y var
R3886:3886 Coq.FSets.FSetCompat <> x var
R3918:3928 Coq.FSets.FSetCompat Backport_WSets remove_1 thm
def 3943:3950 Backport_WSets remove_2
R3978:3981 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3988:3991 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3992:3993 Coq.FSets.FSetCompat Backport_WSets In def
R3998:4003 Coq.FSets.FSetCompat Backport_WSets remove def
R4007:4007 Coq.FSets.FSetCompat <> s var
R4005:4005 Coq.FSets.FSetCompat <> x var
R3995:3995 Coq.FSets.FSetCompat <> y var
R3982:3983 Coq.FSets.FSetCompat Backport_WSets In def
R3987:3987 Coq.FSets.FSetCompat <> s var
R3985:3985 Coq.FSets.FSetCompat <> y var
R3968:3969 Coq.Init.Logic <> :type_scope:'~'_x not
R3970:3973 Coq.FSets.FSetCompat E eq defax
R3977:3977 Coq.FSets.FSetCompat <> y var
R3975:3975 Coq.FSets.FSetCompat <> x var
R4015:4025 Coq.FSets.FSetCompat Backport_WSets remove_2 thm
def 4040:4047 Backport_WSets remove_3
R4082:4085 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4086:4087 Coq.FSets.FSetCompat Backport_WSets In def
R4091:4091 Coq.FSets.FSetCompat <> s var
R4089:4089 Coq.FSets.FSetCompat <> y var
R4065:4066 Coq.FSets.FSetCompat Backport_WSets In def
R4071:4076 Coq.FSets.FSetCompat Backport_WSets remove def
R4080:4080 Coq.FSets.FSetCompat <> s var
R4078:4078 Coq.FSets.FSetCompat <> x var
R4068:4068 Coq.FSets.FSetCompat <> y var
R4098:4108 Coq.FSets.FSetCompat Backport_WSets remove_3 thm
def 4123:4129 Backport_WSets union_1
R4165:4168 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4175:4178 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4169:4170 Coq.FSets.FSetCompat Backport_WSets In def
R4174:4174 Coq.FSets.FSetCompat <> s var
R4172:4172 Coq.FSets.FSetCompat <> x var
R4179:4180 Coq.FSets.FSetCompat Backport_WSets In def
R4184:4185 Coq.FSets.FSetCompat <> s' var
R4182:4182 Coq.FSets.FSetCompat <> x var
R4148:4149 Coq.FSets.FSetCompat Backport_WSets In def
R4154:4158 Coq.FSets.FSetCompat Backport_WSets union def
R4162:4163 Coq.FSets.FSetCompat <> s' var
R4160:4160 Coq.FSets.FSetCompat <> s var
R4151:4151 Coq.FSets.FSetCompat <> x var
R4192:4201 Coq.FSets.FSetCompat Backport_WSets union_1 thm
def 4216:4222 Backport_WSets union_2
R4247:4250 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4251:4252 Coq.FSets.FSetCompat Backport_WSets In def
R4257:4261 Coq.FSets.FSetCompat Backport_WSets union def
R4265:4266 Coq.FSets.FSetCompat <> s' var
R4263:4263 Coq.FSets.FSetCompat <> s var
R4254:4254 Coq.FSets.FSetCompat <> x var
R4241:4242 Coq.FSets.FSetCompat Backport_WSets In def
R4246:4246 Coq.FSets.FSetCompat <> s var
R4244:4244 Coq.FSets.FSetCompat <> x var
R4274:4283 Coq.FSets.FSetCompat Backport_WSets union_2 thm
def 4298:4304 Backport_WSets union_3
R4330:4333 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4334:4335 Coq.FSets.FSetCompat Backport_WSets In def
R4340:4344 Coq.FSets.FSetCompat Backport_WSets union def
R4348:4349 Coq.FSets.FSetCompat <> s' var
R4346:4346 Coq.FSets.FSetCompat <> s var
R4337:4337 Coq.FSets.FSetCompat <> x var
R4323:4324 Coq.FSets.FSetCompat Backport_WSets In def
R4328:4329 Coq.FSets.FSetCompat <> s' var
R4326:4326 Coq.FSets.FSetCompat <> x var
R4357:4366 Coq.FSets.FSetCompat Backport_WSets union_3 thm
def 4381:4387 Backport_WSets inter_1
R4423:4426 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4427:4428 Coq.FSets.FSetCompat Backport_WSets In def
R4432:4432 Coq.FSets.FSetCompat <> s var
R4430:4430 Coq.FSets.FSetCompat <> x var
R4406:4407 Coq.FSets.FSetCompat Backport_WSets In def
R4412:4416 Coq.FSets.FSetCompat Backport_WSets inter def
R4420:4421 Coq.FSets.FSetCompat <> s' var
R4418:4418 Coq.FSets.FSetCompat <> s var
R4409:4409 Coq.FSets.FSetCompat <> x var
R4439:4448 Coq.FSets.FSetCompat Backport_WSets inter_1 thm
def 4463:4469 Backport_WSets inter_2
R4505:4508 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4509:4510 Coq.FSets.FSetCompat Backport_WSets In def
R4514:4515 Coq.FSets.FSetCompat <> s' var
R4512:4512 Coq.FSets.FSetCompat <> x var
R4488:4489 Coq.FSets.FSetCompat Backport_WSets In def
R4494:4498 Coq.FSets.FSetCompat Backport_WSets inter def
R4502:4503 Coq.FSets.FSetCompat <> s' var
R4500:4500 Coq.FSets.FSetCompat <> s var
R4491:4491 Coq.FSets.FSetCompat <> x var
R4522:4531 Coq.FSets.FSetCompat Backport_WSets inter_2 thm
def 4546:4552 Backport_WSets inter_3
R4577:4580 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4588:4591 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4592:4593 Coq.FSets.FSetCompat Backport_WSets In def
R4598:4602 Coq.FSets.FSetCompat Backport_WSets inter def
R4606:4607 Coq.FSets.FSetCompat <> s' var
R4604:4604 Coq.FSets.FSetCompat <> s var
R4595:4595 Coq.FSets.FSetCompat <> x var
R4581:4582 Coq.FSets.FSetCompat Backport_WSets In def
R4586:4587 Coq.FSets.FSetCompat <> s' var
R4584:4584 Coq.FSets.FSetCompat <> x var
R4571:4572 Coq.FSets.FSetCompat Backport_WSets In def
R4576:4576 Coq.FSets.FSetCompat <> s var
R4574:4574 Coq.FSets.FSetCompat <> x var
R4615:4624 Coq.FSets.FSetCompat Backport_WSets inter_3 thm
def 4639:4644 Backport_WSets diff_1
R4679:4682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4683:4684 Coq.FSets.FSetCompat Backport_WSets In def
R4688:4688 Coq.FSets.FSetCompat <> s var
R4686:4686 Coq.FSets.FSetCompat <> x var
R4663:4664 Coq.FSets.FSetCompat Backport_WSets In def
R4669:4672 Coq.FSets.FSetCompat Backport_WSets diff def
R4676:4677 Coq.FSets.FSetCompat <> s' var
R4674:4674 Coq.FSets.FSetCompat <> s var
R4666:4666 Coq.FSets.FSetCompat <> x var
R4695:4703 Coq.FSets.FSetCompat Backport_WSets diff_1 thm
def 4718:4723 Backport_WSets diff_2
R4758:4761 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4762:4763 Coq.Init.Logic <> :type_scope:'~'_x not
R4764:4765 Coq.FSets.FSetCompat Backport_WSets In def
R4769:4770 Coq.FSets.FSetCompat <> s' var
R4767:4767 Coq.FSets.FSetCompat <> x var
R4742:4743 Coq.FSets.FSetCompat Backport_WSets In def
R4748:4751 Coq.FSets.FSetCompat Backport_WSets diff def
R4755:4756 Coq.FSets.FSetCompat <> s' var
R4753:4753 Coq.FSets.FSetCompat <> s var
R4745:4745 Coq.FSets.FSetCompat <> x var
R4777:4785 Coq.FSets.FSetCompat Backport_WSets diff_2 thm
def 4800:4805 Backport_WSets diff_3
R4830:4833 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4843:4846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4847:4848 Coq.FSets.FSetCompat Backport_WSets In def
R4853:4856 Coq.FSets.FSetCompat Backport_WSets diff def
R4860:4861 Coq.FSets.FSetCompat <> s' var
R4858:4858 Coq.FSets.FSetCompat <> s var
R4850:4850 Coq.FSets.FSetCompat <> x var
R4834:4835 Coq.Init.Logic <> :type_scope:'~'_x not
R4836:4837 Coq.FSets.FSetCompat Backport_WSets In def
R4841:4842 Coq.FSets.FSetCompat <> s' var
R4839:4839 Coq.FSets.FSetCompat <> x var
R4824:4825 Coq.FSets.FSetCompat Backport_WSets In def
R4829:4829 Coq.FSets.FSetCompat <> s var
R4827:4827 Coq.FSets.FSetCompat <> x var
R4869:4877 Coq.FSets.FSetCompat Backport_WSets diff_3 thm
def 4892:4902 Backport_WSets singleton_1
R4936:4939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4940:4943 Coq.FSets.FSetCompat E eq defax
R4947:4947 Coq.FSets.FSetCompat <> y var
R4945:4945 Coq.FSets.FSetCompat <> x var
R4918:4919 Coq.FSets.FSetCompat Backport_WSets In def
R4924:4932 Coq.FSets.FSetCompat Backport_WSets singleton def
R4934:4934 Coq.FSets.FSetCompat <> x var
R4921:4921 Coq.FSets.FSetCompat <> y var
R4954:4967 Coq.FSets.FSetCompat Backport_WSets singleton_1 thm
def 4982:4992 Backport_WSets singleton_2
R5016:5019 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5020:5021 Coq.FSets.FSetCompat Backport_WSets In def
R5026:5034 Coq.FSets.FSetCompat Backport_WSets singleton def
R5036:5036 Coq.FSets.FSetCompat <> x var
R5023:5023 Coq.FSets.FSetCompat <> y var
R5008:5011 Coq.FSets.FSetCompat E eq defax
R5015:5015 Coq.FSets.FSetCompat <> y var
R5013:5013 Coq.FSets.FSetCompat <> x var
R5044:5057 Coq.FSets.FSetCompat Backport_WSets singleton_2 thm
def 5072:5077 Backport_WSets fold_1
R5106:5106 Coq.FSets.FSetCompat <> A var
R5117:5120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5122:5125 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5126:5126 Coq.FSets.FSetCompat <> A var
R5121:5121 Coq.FSets.FSetCompat <> A var
R5114:5116 Coq.FSets.FSetCompat Backport_WSets elt def
R5143:5145 Coq.Init.Logic <> :type_scope:x_'='_x not
R5133:5136 Coq.FSets.FSetCompat Backport_WSets fold def
R5142:5142 Coq.FSets.FSetCompat <> i var
R5140:5140 Coq.FSets.FSetCompat <> s var
R5138:5138 Coq.FSets.FSetCompat <> f var
R5146:5154 Coq.Lists.List <> fold_left def
R5188:5188 Coq.FSets.FSetCompat <> i var
R5176:5183 Coq.FSets.FSetCompat Backport_WSets elements def
R5185:5185 Coq.FSets.FSetCompat <> s var
R5168:5168 Coq.FSets.FSetCompat <> f var
R5172:5172 Coq.FSets.FSetCompat <> a var
R5170:5170 Coq.FSets.FSetCompat <> e var
R5195:5203 Coq.FSets.FSetCompat Backport_WSets fold_1 syndef
def 5218:5227 Backport_WSets cardinal_1
R5251:5253 Coq.Init.Logic <> :type_scope:x_'='_x not
R5241:5248 Coq.FSets.FSetCompat Backport_WSets cardinal def
R5250:5250 Coq.FSets.FSetCompat <> s var
R5254:5259 Coq.Init.Datatypes <> length def
R5262:5269 Coq.FSets.FSetCompat Backport_WSets elements def
R5271:5271 Coq.FSets.FSetCompat <> s var
R5279:5291 Coq.FSets.FSetCompat Backport_WSets cardinal_1 syndef
def 5306:5313 Backport_WSets filter_1
R5349:5354 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5372:5375 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5376:5377 Coq.FSets.FSetCompat Backport_WSets In def
R5381:5381 Coq.FSets.FSetCompat <> s var
R5379:5379 Coq.FSets.FSetCompat <> x var
R5355:5356 Coq.FSets.FSetCompat Backport_WSets In def
R5361:5366 Coq.FSets.FSetCompat Backport_WSets filter def
R5370:5370 Coq.FSets.FSetCompat <> s var
R5368:5368 Coq.FSets.FSetCompat <> f var
R5358:5358 Coq.FSets.FSetCompat <> x var
R5331:5341 Coq.Lists.SetoidList <> compat_bool def
R5348:5348 Coq.FSets.FSetCompat <> f var
R5343:5346 Coq.FSets.FSetCompat E eq defax
R5388:5398 Coq.FSets.FSetCompat Backport_WSets filter_1 thm
def 5413:5420 Backport_WSets filter_2
R5456:5461 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5479:5482 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5486:5488 Coq.Init.Logic <> :type_scope:x_'='_x not
R5483:5483 Coq.FSets.FSetCompat <> f var
R5485:5485 Coq.FSets.FSetCompat <> x var
R5489:5492 Coq.Init.Datatypes <> true constr
R5462:5463 Coq.FSets.FSetCompat Backport_WSets In def
R5468:5473 Coq.FSets.FSetCompat Backport_WSets filter def
R5477:5477 Coq.FSets.FSetCompat <> s var
R5475:5475 Coq.FSets.FSetCompat <> f var
R5465:5465 Coq.FSets.FSetCompat <> x var
R5438:5448 Coq.Lists.SetoidList <> compat_bool def
R5455:5455 Coq.FSets.FSetCompat <> f var
R5450:5453 Coq.FSets.FSetCompat E eq defax
R5499:5509 Coq.FSets.FSetCompat Backport_WSets filter_2 thm
def 5524:5531 Backport_WSets filter_3
R5567:5572 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5579:5582 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5593:5596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5597:5598 Coq.FSets.FSetCompat Backport_WSets In def
R5603:5608 Coq.FSets.FSetCompat Backport_WSets filter def
R5612:5612 Coq.FSets.FSetCompat <> s var
R5610:5610 Coq.FSets.FSetCompat <> f var
R5600:5600 Coq.FSets.FSetCompat <> x var
R5586:5588 Coq.Init.Logic <> :type_scope:x_'='_x not
R5583:5583 Coq.FSets.FSetCompat <> f var
R5585:5585 Coq.FSets.FSetCompat <> x var
R5589:5592 Coq.Init.Datatypes <> true constr
R5573:5574 Coq.FSets.FSetCompat Backport_WSets In def
R5578:5578 Coq.FSets.FSetCompat <> s var
R5576:5576 Coq.FSets.FSetCompat <> x var
R5549:5559 Coq.Lists.SetoidList <> compat_bool def
R5566:5566 Coq.FSets.FSetCompat <> f var
R5561:5564 Coq.FSets.FSetCompat E eq defax
R5620:5630 Coq.FSets.FSetCompat Backport_WSets filter_3 thm
def 5645:5653 Backport_WSets for_all_1
R5687:5692 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5724:5727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5739:5741 Coq.Init.Logic <> :type_scope:x_'='_x not
R5728:5734 Coq.FSets.FSetCompat Backport_WSets for_all def
R5738:5738 Coq.FSets.FSetCompat <> s var
R5736:5736 Coq.FSets.FSetCompat <> f var
R5742:5745 Coq.Init.Datatypes <> true constr
R5693:5699 Coq.FSets.FSetCompat Backport_WSets For_all def
R5723:5723 Coq.FSets.FSetCompat <> s var
R5714:5716 Coq.Init.Logic <> :type_scope:x_'='_x not
R5711:5711 Coq.FSets.FSetCompat <> f var
R5713:5713 Coq.FSets.FSetCompat <> x var
R5717:5720 Coq.Init.Datatypes <> true constr
R5669:5679 Coq.Lists.SetoidList <> compat_bool def
R5686:5686 Coq.FSets.FSetCompat <> f var
R5681:5684 Coq.FSets.FSetCompat E eq defax
R5752:5763 Coq.FSets.FSetCompat Backport_WSets for_all_1 thm
def 5778:5786 Backport_WSets for_all_2
R5820:5825 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5844:5847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5848:5854 Coq.FSets.FSetCompat Backport_WSets For_all def
R5878:5878 Coq.FSets.FSetCompat <> s var
R5869:5871 Coq.Init.Logic <> :type_scope:x_'='_x not
R5866:5866 Coq.FSets.FSetCompat <> f var
R5868:5868 Coq.FSets.FSetCompat <> x var
R5872:5875 Coq.Init.Datatypes <> true constr
R5837:5839 Coq.Init.Logic <> :type_scope:x_'='_x not
R5826:5832 Coq.FSets.FSetCompat Backport_WSets for_all def
R5836:5836 Coq.FSets.FSetCompat <> s var
R5834:5834 Coq.FSets.FSetCompat <> f var
R5840:5843 Coq.Init.Datatypes <> true constr
R5802:5812 Coq.Lists.SetoidList <> compat_bool def
R5819:5819 Coq.FSets.FSetCompat <> f var
R5814:5817 Coq.FSets.FSetCompat E eq defax
R5885:5896 Coq.FSets.FSetCompat Backport_WSets for_all_2 thm
def 5911:5918 Backport_WSets exists_1
R5952:5957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5988:5991 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6003:6005 Coq.Init.Logic <> :type_scope:x_'='_x not
R5992:5998 Coq.FSets.FSetCompat Backport_WSets exists_ def
R6002:6002 Coq.FSets.FSetCompat <> s var
R6000:6000 Coq.FSets.FSetCompat <> f var
R6006:6009 Coq.Init.Datatypes <> true constr
R5958:5963 Coq.FSets.FSetCompat Backport_WSets Exists def
R5987:5987 Coq.FSets.FSetCompat <> s var
R5978:5980 Coq.Init.Logic <> :type_scope:x_'='_x not
R5975:5975 Coq.FSets.FSetCompat <> f var
R5977:5977 Coq.FSets.FSetCompat <> x var
R5981:5984 Coq.Init.Datatypes <> true constr
R5934:5944 Coq.Lists.SetoidList <> compat_bool def
R5951:5951 Coq.FSets.FSetCompat <> f var
R5946:5949 Coq.FSets.FSetCompat E eq defax
R6016:6026 Coq.FSets.FSetCompat Backport_WSets exists_1 thm
def 6041:6048 Backport_WSets exists_2
R6082:6087 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6106:6109 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6110:6115 Coq.FSets.FSetCompat Backport_WSets Exists def
R6139:6139 Coq.FSets.FSetCompat <> s var
R6130:6132 Coq.Init.Logic <> :type_scope:x_'='_x not
R6127:6127 Coq.FSets.FSetCompat <> f var
R6129:6129 Coq.FSets.FSetCompat <> x var
R6133:6136 Coq.Init.Datatypes <> true constr
R6099:6101 Coq.Init.Logic <> :type_scope:x_'='_x not
R6088:6094 Coq.FSets.FSetCompat Backport_WSets exists_ def
R6098:6098 Coq.FSets.FSetCompat <> s var
R6096:6096 Coq.FSets.FSetCompat <> f var
R6102:6105 Coq.Init.Datatypes <> true constr
R6064:6074 Coq.Lists.SetoidList <> compat_bool def
R6081:6081 Coq.FSets.FSetCompat <> f var
R6076:6079 Coq.FSets.FSetCompat E eq defax
R6146:6156 Coq.FSets.FSetCompat Backport_WSets exists_2 thm
def 6171:6181 Backport_WSets partition_1
R6215:6220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6221:6225 Coq.FSets.FSetCompat Backport_WSets Equal def
R6250:6255 Coq.FSets.FSetCompat Backport_WSets filter def
R6259:6259 Coq.FSets.FSetCompat <> s var
R6257:6257 Coq.FSets.FSetCompat <> f var
R6228:6230 Coq.Init.Datatypes <> fst def
R6233:6241 Coq.FSets.FSetCompat Backport_WSets partition def
R6245:6245 Coq.FSets.FSetCompat <> s var
R6243:6243 Coq.FSets.FSetCompat <> f var
R6197:6207 Coq.Lists.SetoidList <> compat_bool def
R6214:6214 Coq.FSets.FSetCompat <> f var
R6209:6212 Coq.FSets.FSetCompat E eq defax
R6267:6280 Coq.FSets.FSetCompat Backport_WSets partition_1 syndef
def 6295:6305 Backport_WSets partition_2
R6339:6344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6345:6349 Coq.FSets.FSetCompat Backport_WSets Equal def
R6374:6379 Coq.FSets.FSetCompat Backport_WSets filter def
R6403:6403 Coq.FSets.FSetCompat <> s var
R6391:6394 Coq.Init.Datatypes <> negb def
R6397:6397 Coq.FSets.FSetCompat <> f var
R6399:6399 Coq.FSets.FSetCompat <> x var
R6352:6354 Coq.Init.Datatypes <> snd def
R6357:6365 Coq.FSets.FSetCompat Backport_WSets partition def
R6369:6369 Coq.FSets.FSetCompat <> s var
R6367:6367 Coq.FSets.FSetCompat <> f var
R6321:6331 Coq.Lists.SetoidList <> compat_bool def
R6338:6338 Coq.FSets.FSetCompat <> f var
R6333:6336 Coq.FSets.FSetCompat E eq defax
R6411:6424 Coq.FSets.FSetCompat Backport_WSets partition_2 syndef
def 6439:6446 Backport_WSets choose_1
R6479:6482 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6483:6484 Coq.FSets.FSetCompat Backport_WSets In def
R6488:6488 Coq.FSets.FSetCompat <> s var
R6486:6486 Coq.FSets.FSetCompat <> x var
R6470:6472 Coq.Init.Logic <> :type_scope:x_'='_x not
R6462:6467 Coq.FSets.FSetCompat Backport_WSets choose def
R6469:6469 Coq.FSets.FSetCompat <> s var
R6473:6476 Coq.Init.Datatypes <> Some constr
R6478:6478 Coq.FSets.FSetCompat <> x var
R6495:6505 Coq.FSets.FSetCompat Backport_WSets choose_1 syndef
def 6520:6527 Backport_WSets choose_2
R6556:6559 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6560:6564 Coq.FSets.FSetCompat Backport_WSets Empty def
R6566:6566 Coq.FSets.FSetCompat <> s var
R6549:6551 Coq.Init.Logic <> :type_scope:x_'='_x not
R6541:6546 Coq.FSets.FSetCompat Backport_WSets choose def
R6548:6548 Coq.FSets.FSetCompat <> s var
R6552:6555 Coq.Init.Datatypes <> None constr
R6573:6583 Coq.FSets.FSetCompat Backport_WSets choose_2 syndef
def 6598:6607 Backport_WSets elements_1
R6629:6632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6633:6635 Coq.Lists.SetoidList <> InA ind
R6645:6652 Coq.FSets.FSetCompat Backport_WSets elements def
R6654:6654 Coq.FSets.FSetCompat <> s var
R6642:6642 Coq.FSets.FSetCompat <> x var
R6637:6640 Coq.FSets.FSetCompat E eq defax
R6623:6624 Coq.FSets.FSetCompat Backport_WSets In def
R6628:6628 Coq.FSets.FSetCompat <> s var
R6626:6626 Coq.FSets.FSetCompat <> x var
R6662:6674 Coq.FSets.FSetCompat Backport_WSets elements_1 thm
def 6689:6698 Backport_WSets elements_2
R6737:6740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6741:6742 Coq.FSets.FSetCompat Backport_WSets In def
R6746:6746 Coq.FSets.FSetCompat <> s var
R6744:6744 Coq.FSets.FSetCompat <> x var
R6714:6716 Coq.Lists.SetoidList <> InA ind
R6726:6733 Coq.FSets.FSetCompat Backport_WSets elements def
R6735:6735 Coq.FSets.FSetCompat <> s var
R6723:6723 Coq.FSets.FSetCompat <> x var
R6718:6721 Coq.FSets.FSetCompat E eq defax
R6753:6765 Coq.FSets.FSetCompat Backport_WSets elements_2 thm
def 6780:6790 Backport_WSets elements_3w
R6804:6809 Coq.Lists.SetoidList <> NoDupA ind
R6817:6824 Coq.FSets.FSetCompat Backport_WSets elements def
R6826:6826 Coq.FSets.FSetCompat <> s var
R6811:6814 Coq.FSets.FSetCompat E eq defax
R6834:6847 Coq.FSets.FSetCompat Backport_WSets elements_3w syndef
R6855:6868 Coq.FSets.FSetCompat Backport_WSets <> mod
R6934:6956 Coq.Structures.OrderedType OrderedType <> mod
R6963:6980 Coq.MSets.MSetInterface Sets <> mod
R7005:7007 Coq.FSets.FSetCompat E t defax
R7056:7059 Coq.FSets.FSetCompat E eq defax
R7108:7111 Coq.FSets.FSetCompat E lt defax
R7118:7132 Coq.FSets.FSetInterface S <> mod
R7149:7149 Coq.FSets.FSetCompat E <> modtype
mod 6916:6928 <> Backport_Sets
R7163:7176 Coq.FSets.FSetCompat Backport_WSets <> modtype
R7178:7178 Coq.FSets.FSetCompat E <> modtype
R7180:7180 Coq.FSets.FSetCompat M <> modtype
R7204:7204 Coq.FSets.FSetCompat Backport_Sets t def
R7229:7231 Coq.FSets.FSetCompat Backport_Sets elt def
def 7248:7249 Backport_Sets lt
R7254:7257 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7259:7262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7258:7258 Coq.FSets.FSetCompat Backport_Sets t def
R7253:7253 Coq.FSets.FSetCompat Backport_Sets t def
R7271:7274 Coq.FSets.FSetCompat M lt defax
def 7290:7296 Backport_Sets min_elt
R7301:7304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7305:7310 Coq.Init.Datatypes <> option ind
R7312:7314 Coq.FSets.FSetCompat Backport_Sets elt def
R7300:7300 Coq.FSets.FSetCompat Backport_Sets t def
R7319:7327 Coq.FSets.FSetCompat M min_elt defax
def 7343:7349 Backport_Sets max_elt
R7354:7357 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7358:7363 Coq.Init.Datatypes <> option ind
R7365:7367 Coq.FSets.FSetCompat Backport_Sets elt def
R7353:7353 Coq.FSets.FSetCompat Backport_Sets t def
R7372:7380 Coq.FSets.FSetCompat M max_elt defax
def 7396:7404 Backport_Sets min_elt_1
R7438:7441 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7442:7443 Coq.FSets.FSetCompat Backport_Sets In def
R7447:7447 Coq.FSets.FSetCompat <> s var
R7445:7445 Coq.FSets.FSetCompat <> x var
R7429:7431 Coq.Init.Logic <> :type_scope:x_'='_x not
R7420:7426 Coq.FSets.FSetCompat Backport_Sets min_elt def
R7428:7428 Coq.FSets.FSetCompat <> s var
R7432:7435 Coq.Init.Datatypes <> Some constr
R7437:7437 Coq.FSets.FSetCompat <> x var
R7455:7469 Coq.FSets.FSetCompat M min_elt_spec1 defax
def 7485:7493 Backport_Sets min_elt_2
R7532:7535 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7542:7545 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7546:7547 Coq.Init.Logic <> :type_scope:'~'_x not
R7548:7551 Coq.FSets.FSetCompat E lt defax
R7555:7555 Coq.FSets.FSetCompat <> x var
R7553:7553 Coq.FSets.FSetCompat <> y var
R7536:7537 Coq.FSets.FSetCompat Backport_Sets In def
R7541:7541 Coq.FSets.FSetCompat <> s var
R7539:7539 Coq.FSets.FSetCompat <> y var
R7523:7525 Coq.Init.Logic <> :type_scope:x_'='_x not
R7514:7520 Coq.FSets.FSetCompat Backport_Sets min_elt def
R7522:7522 Coq.FSets.FSetCompat <> s var
R7526:7529 Coq.Init.Datatypes <> Some constr
R7531:7531 Coq.FSets.FSetCompat <> x var
R7563:7577 Coq.FSets.FSetCompat M min_elt_spec2 defax
def 7593:7601 Backport_Sets min_elt_3
R7631:7634 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7635:7639 Coq.FSets.FSetCompat Backport_Sets Empty def
R7641:7641 Coq.FSets.FSetCompat <> s var
R7624:7626 Coq.Init.Logic <> :type_scope:x_'='_x not
R7615:7621 Coq.FSets.FSetCompat Backport_Sets min_elt def
R7623:7623 Coq.FSets.FSetCompat <> s var
R7627:7630 Coq.Init.Datatypes <> None constr
R7649:7663 Coq.FSets.FSetCompat M min_elt_spec3 defax
def 7679:7687 Backport_Sets max_elt_1
R7721:7724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7725:7726 Coq.FSets.FSetCompat Backport_Sets In def
R7730:7730 Coq.FSets.FSetCompat <> s var
R7728:7728 Coq.FSets.FSetCompat <> x var
R7712:7714 Coq.Init.Logic <> :type_scope:x_'='_x not
R7703:7709 Coq.FSets.FSetCompat Backport_Sets max_elt def
R7711:7711 Coq.FSets.FSetCompat <> s var
R7715:7718 Coq.Init.Datatypes <> Some constr
R7720:7720 Coq.FSets.FSetCompat <> x var
R7738:7752 Coq.FSets.FSetCompat M max_elt_spec1 defax
def 7768:7776 Backport_Sets max_elt_2
R7815:7818 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7825:7828 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7829:7830 Coq.Init.Logic <> :type_scope:'~'_x not
R7831:7834 Coq.FSets.FSetCompat E lt defax
R7838:7838 Coq.FSets.FSetCompat <> y var
R7836:7836 Coq.FSets.FSetCompat <> x var
R7819:7820 Coq.FSets.FSetCompat Backport_Sets In def
R7824:7824 Coq.FSets.FSetCompat <> s var
R7822:7822 Coq.FSets.FSetCompat <> y var
R7806:7808 Coq.Init.Logic <> :type_scope:x_'='_x not
R7797:7803 Coq.FSets.FSetCompat Backport_Sets max_elt def
R7805:7805 Coq.FSets.FSetCompat <> s var
R7809:7812 Coq.Init.Datatypes <> Some constr
R7814:7814 Coq.FSets.FSetCompat <> x var
R7846:7860 Coq.FSets.FSetCompat M max_elt_spec2 defax
def 7876:7884 Backport_Sets max_elt_3
R7914:7917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7918:7922 Coq.FSets.FSetCompat Backport_Sets Empty def
R7924:7924 Coq.FSets.FSetCompat <> s var
R7907:7909 Coq.Init.Logic <> :type_scope:x_'='_x not
R7898:7904 Coq.FSets.FSetCompat Backport_Sets max_elt def
R7906:7906 Coq.FSets.FSetCompat <> s var
R7910:7913 Coq.Init.Datatypes <> None constr
R7932:7946 Coq.FSets.FSetCompat M max_elt_spec3 defax
def 7962:7971 Backport_Sets elements_3
R7985:7988 Coq.Sorting.Sorted <> sort syndef
R7996:8003 Coq.FSets.FSetCompat Backport_Sets elements def
R8005:8005 Coq.FSets.FSetCompat <> s var
R7990:7993 Coq.FSets.FSetCompat E lt defax
R8014:8029 Coq.FSets.FSetCompat M elements_spec2 defax
def 8045:8052 Backport_Sets choose_3
R8093:8096 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8115:8118 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8129:8132 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8133:8136 Coq.FSets.FSetCompat E eq defax
R8140:8140 Coq.FSets.FSetCompat <> y var
R8138:8138 Coq.FSets.FSetCompat <> x var
R8119:8123 Coq.FSets.FSetCompat Backport_Sets Equal def
R8127:8128 Coq.FSets.FSetCompat <> s' var
R8125:8125 Coq.FSets.FSetCompat <> s var
R8106:8108 Coq.Init.Logic <> :type_scope:x_'='_x not
R8097:8102 Coq.FSets.FSetCompat Backport_Sets choose def
R8104:8105 Coq.FSets.FSetCompat <> s' var
R8109:8112 Coq.Init.Datatypes <> Some constr
R8114:8114 Coq.FSets.FSetCompat <> y var
R8084:8086 Coq.Init.Logic <> :type_scope:x_'='_x not
R8076:8081 Coq.FSets.FSetCompat Backport_Sets choose def
R8083:8083 Coq.FSets.FSetCompat <> s var
R8087:8090 Coq.Init.Datatypes <> Some constr
R8092:8092 Coq.FSets.FSetCompat <> x var
R8148:8161 Coq.FSets.FSetCompat M choose_spec3 defax
def 8177:8184 Backport_Sets lt_trans
R8212:8215 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8225:8228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8229:8230 Coq.FSets.FSetCompat Backport_Sets lt def
R8234:8236 Coq.FSets.FSetCompat <> s'' var
R8232:8232 Coq.FSets.FSetCompat <> s var
R8216:8217 Coq.FSets.FSetCompat Backport_Sets lt def
R8222:8224 Coq.FSets.FSetCompat <> s'' var
R8219:8220 Coq.FSets.FSetCompat <> s' var
R8205:8206 Coq.FSets.FSetCompat Backport_Sets lt def
R8210:8211 Coq.FSets.FSetCompat <> s' var
R8208:8208 Coq.FSets.FSetCompat <> s var
R8245:8266 Coq.Classes.RelationClasses <> StrictOrder_Transitive meth
R8272:8284 Coq.FSets.FSetCompat M lt_strorder prfax
prf 8295:8303 Backport_Sets lt_not_eq
R8328:8331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8332:8333 Coq.Init.Logic <> :type_scope:'~'_x not
R8334:8335 Coq.FSets.FSetCompat Backport_Sets eq def
R8339:8340 Coq.FSets.FSetCompat <> s' var
R8337:8337 Coq.FSets.FSetCompat <> s var
R8321:8322 Coq.FSets.FSetCompat Backport_Sets lt def
R8326:8327 Coq.FSets.FSetCompat <> s' var
R8324:8324 Coq.FSets.FSetCompat <> s var
R8362:8363 Coq.FSets.FSetCompat Backport_Sets lt def
R8366:8367 Coq.FSets.FSetCompat Backport_Sets eq def
R8421:8443 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R8421:8443 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
def 8476:8482 Backport_Sets compare
R8499:8505 Coq.Structures.OrderedType <> Compare ind
R8515:8516 Coq.FSets.FSetCompat <> s' var
R8513:8513 Coq.FSets.FSetCompat <> s var
R8510:8511 Coq.FSets.FSetCompat Backport_Sets eq def
R8507:8508 Coq.FSets.FSetCompat Backport_Sets lt def
R8554:8566 Coq.Init.Datatypes <> CompSpec2Type thm
R8569:8582 Coq.FSets.FSetCompat M compare_spec defax
R8604:8605 Coq.Structures.OrderedType <> EQ constr
R8615:8616 Coq.Structures.OrderedType <> LT constr
R8626:8627 Coq.Structures.OrderedType <> GT constr
R8554:8566 Coq.Init.Datatypes <> CompSpec2Type thm
R8569:8582 Coq.FSets.FSetCompat M compare_spec defax
R8604:8605 Coq.Structures.OrderedType <> EQ constr
R8615:8616 Coq.Structures.OrderedType <> LT constr
R8626:8627 Coq.Structures.OrderedType <> GT constr
R8664:8664 Coq.FSets.FSetCompat E <> modtype
mod 8659:8659 <> Backport_Sets.E
R8672:8684 Coq.FSets.FSetCompat Backport_Sets <> mod
R8755:8778 Coq.Structures.Equalities DecidableType <> mod
R8785:8800 Coq.FSets.FSetInterface WS <> mod
R8825:8827 Coq.FSets.FSetCompat E t defax
R8874:8877 Coq.FSets.FSetCompat E eq defax
R8884:8904 Coq.MSets.MSetInterface WSetsOn <> mod
R8906:8906 Coq.FSets.FSetCompat E <> modtype
mod 8738:8749 <> Update_WSets
def 8922:8924 Update_WSets elt
R8929:8931 Coq.FSets.FSetCompat E t defax
def 8946:8946 Update_WSets t
R8951:8953 Coq.FSets.FSetCompat M t defax
R8976:8976 Coq.FSets.FSetCompat Update_WSets t def
R9000:9002 Coq.FSets.FSetCompat Update_WSets elt def
R9027:9030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9031:9034 Coq.Init.Datatypes <> bool ind
R9024:9026 Coq.FSets.FSetCompat Update_WSets elt def
def 9050:9051 Update_WSets In
R9058:9061 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9063:9066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9062:9062 Coq.FSets.FSetCompat Update_WSets t def
R9055:9057 Coq.FSets.FSetCompat Update_WSets elt def
R9075:9078 Coq.FSets.FSetCompat M In defax
def 9093:9097 Update_WSets Equal
R9118:9120 Coq.FSets.FSetCompat Update_WSets elt def
R9129:9133 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9123:9124 Coq.FSets.FSetCompat Update_WSets In def
R9128:9128 Coq.FSets.FSetCompat <> s var
R9126:9126 Coq.FSets.FSetCompat <> a var
R9134:9135 Coq.FSets.FSetCompat Update_WSets In def
R9139:9140 Coq.FSets.FSetCompat <> s' var
R9137:9137 Coq.FSets.FSetCompat <> a var
def 9155:9160 Update_WSets Subset
R9181:9183 Coq.FSets.FSetCompat Update_WSets elt def
R9192:9195 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9196:9197 Coq.FSets.FSetCompat Update_WSets In def
R9201:9202 Coq.FSets.FSetCompat <> s' var
R9199:9199 Coq.FSets.FSetCompat <> a var
R9186:9187 Coq.FSets.FSetCompat Update_WSets In def
R9191:9191 Coq.FSets.FSetCompat <> s var
R9189:9189 Coq.FSets.FSetCompat <> a var
def 9217:9221 Update_WSets Empty
R9239:9241 Coq.FSets.FSetCompat Update_WSets elt def
R9244:9245 Coq.Init.Logic <> :type_scope:'~'_x not
R9246:9247 Coq.FSets.FSetCompat Update_WSets In def
R9251:9251 Coq.FSets.FSetCompat <> s var
R9249:9249 Coq.FSets.FSetCompat <> a var
def 9266:9272 Update_WSets For_all
R9282:9285 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9279:9281 Coq.FSets.FSetCompat Update_WSets elt def
R9313:9316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9317:9317 Coq.FSets.FSetCompat <> P var
R9319:9319 Coq.FSets.FSetCompat <> x var
R9307:9308 Coq.FSets.FSetCompat Update_WSets In def
R9312:9312 Coq.FSets.FSetCompat <> s var
R9310:9310 Coq.FSets.FSetCompat <> x var
def 9334:9339 Update_WSets Exists
R9349:9352 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9346:9348 Coq.FSets.FSetCompat Update_WSets elt def
R9364:9370 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9372:9373 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9380:9383 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9374:9375 Coq.FSets.FSetCompat Update_WSets In def
R9379:9379 Coq.FSets.FSetCompat <> s var
R9377:9377 Coq.FSets.FSetCompat <> x var
R9384:9384 Coq.FSets.FSetCompat <> P var
R9386:9386 Coq.FSets.FSetCompat <> x var
def 9401:9405 Update_WSets empty
R9409:9409 Coq.FSets.FSetCompat Update_WSets t def
R9414:9420 Coq.FSets.FSetCompat M empty defax
def 9435:9442 Update_WSets is_empty
R9447:9450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9451:9454 Coq.Init.Datatypes <> bool ind
R9446:9446 Coq.FSets.FSetCompat Update_WSets t def
R9459:9468 Coq.FSets.FSetCompat M is_empty defax
def 9483:9485 Update_WSets mem
R9492:9495 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9497:9500 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9501:9504 Coq.Init.Datatypes <> bool ind
R9496:9496 Coq.FSets.FSetCompat Update_WSets t def
R9489:9491 Coq.FSets.FSetCompat Update_WSets elt def
R9509:9513 Coq.FSets.FSetCompat M mem defax
def 9528:9530 Update_WSets add
R9537:9540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9542:9545 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9546:9546 Coq.FSets.FSetCompat Update_WSets t def
R9541:9541 Coq.FSets.FSetCompat Update_WSets t def
R9534:9536 Coq.FSets.FSetCompat Update_WSets elt def
R9551:9555 Coq.FSets.FSetCompat M add defax
def 9570:9578 Update_WSets singleton
R9585:9588 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9589:9589 Coq.FSets.FSetCompat Update_WSets t def
R9582:9584 Coq.FSets.FSetCompat Update_WSets elt def
R9594:9604 Coq.FSets.FSetCompat M singleton defax
def 9619:9624 Update_WSets remove
R9631:9634 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9636:9639 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9640:9640 Coq.FSets.FSetCompat Update_WSets t def
R9635:9635 Coq.FSets.FSetCompat Update_WSets t def
R9628:9630 Coq.FSets.FSetCompat Update_WSets elt def
R9645:9652 Coq.FSets.FSetCompat M remove defax
def 9667:9671 Update_WSets union
R9676:9679 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9681:9684 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9685:9685 Coq.FSets.FSetCompat Update_WSets t def
R9680:9680 Coq.FSets.FSetCompat Update_WSets t def
R9675:9675 Coq.FSets.FSetCompat Update_WSets t def
R9690:9696 Coq.FSets.FSetCompat M union defax
def 9711:9715 Update_WSets inter
R9720:9723 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9725:9728 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9729:9729 Coq.FSets.FSetCompat Update_WSets t def
R9724:9724 Coq.FSets.FSetCompat Update_WSets t def
R9719:9719 Coq.FSets.FSetCompat Update_WSets t def
R9734:9740 Coq.FSets.FSetCompat M inter defax
def 9755:9758 Update_WSets diff
R9763:9766 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9768:9771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9772:9772 Coq.FSets.FSetCompat Update_WSets t def
R9767:9767 Coq.FSets.FSetCompat Update_WSets t def
R9762:9762 Coq.FSets.FSetCompat Update_WSets t def
R9777:9782 Coq.FSets.FSetCompat M diff defax
def 9797:9798 Update_WSets eq
R9803:9806 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9808:9811 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9807:9807 Coq.FSets.FSetCompat Update_WSets t def
R9802:9802 Coq.FSets.FSetCompat Update_WSets t def
R9820:9823 Coq.FSets.FSetCompat M eq def
def 9838:9843 Update_WSets eq_dec
R9860:9860 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R9868:9870 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R9879:9879 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R9861:9862 Coq.FSets.FSetCompat Update_WSets eq def
R9866:9867 Coq.FSets.FSetCompat <> s' var
R9864:9864 Coq.FSets.FSetCompat <> s var
R9871:9871 Coq.Init.Logic <> :type_scope:'~'_x not
R9872:9873 Coq.FSets.FSetCompat Update_WSets eq def
R9877:9878 Coq.FSets.FSetCompat <> s' var
R9875:9875 Coq.FSets.FSetCompat <> s var
R9883:9890 Coq.FSets.FSetCompat M eq_dec defax
def 9905:9909 Update_WSets equal
R9914:9917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9919:9922 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9923:9926 Coq.Init.Datatypes <> bool ind
R9918:9918 Coq.FSets.FSetCompat Update_WSets t def
R9913:9913 Coq.FSets.FSetCompat Update_WSets t def
R9931:9937 Coq.FSets.FSetCompat M equal defax
def 9952:9957 Update_WSets subset
R9962:9965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9967:9970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9971:9974 Coq.Init.Datatypes <> bool ind
R9966:9966 Coq.FSets.FSetCompat Update_WSets t def
R9961:9961 Coq.FSets.FSetCompat Update_WSets t def
R9979:9986 Coq.FSets.FSetCompat M subset defax
def 10001:10004 Update_WSets fold
R10025:10025 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10039:10043 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10045:10048 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10050:10053 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10054:10054 Coq.FSets.FSetCompat <> A var
R10049:10049 Coq.FSets.FSetCompat <> A var
R10044:10044 Coq.FSets.FSetCompat Update_WSets t def
R10029:10032 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10034:10037 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10038:10038 Coq.FSets.FSetCompat <> A var
R10033:10033 Coq.FSets.FSetCompat <> A var
R10026:10028 Coq.FSets.FSetCompat Update_WSets elt def
R10059:10064 Coq.FSets.FSetCompat M fold defax
def 10079:10085 Update_WSets for_all
R10089:10089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10101:10105 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10107:10110 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10111:10114 Coq.Init.Datatypes <> bool ind
R10106:10106 Coq.FSets.FSetCompat Update_WSets t def
R10093:10096 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10097:10100 Coq.Init.Datatypes <> bool ind
R10090:10092 Coq.FSets.FSetCompat Update_WSets elt def
R10119:10127 Coq.FSets.FSetCompat M for_all defax
def 10142:10148 Update_WSets exists_
R10152:10152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10164:10168 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10170:10173 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10174:10177 Coq.Init.Datatypes <> bool ind
R10169:10169 Coq.FSets.FSetCompat Update_WSets t def
R10156:10159 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10160:10163 Coq.Init.Datatypes <> bool ind
R10153:10155 Coq.FSets.FSetCompat Update_WSets elt def
R10182:10190 Coq.FSets.FSetCompat M exists_ defax
def 10205:10210 Update_WSets filter
R10214:10214 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10226:10230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10232:10235 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10236:10236 Coq.FSets.FSetCompat Update_WSets t def
R10231:10231 Coq.FSets.FSetCompat Update_WSets t def
R10218:10221 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10222:10225 Coq.Init.Datatypes <> bool ind
R10215:10217 Coq.FSets.FSetCompat Update_WSets elt def
R10241:10248 Coq.FSets.FSetCompat M filter defax
def 10263:10271 Update_WSets partition
R10275:10275 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10287:10291 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10293:10296 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10298:10300 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R10297:10297 Coq.FSets.FSetCompat Update_WSets t def
R10301:10301 Coq.FSets.FSetCompat Update_WSets t def
R10292:10292 Coq.FSets.FSetCompat Update_WSets t def
R10279:10282 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10283:10286 Coq.Init.Datatypes <> bool ind
R10276:10278 Coq.FSets.FSetCompat Update_WSets elt def
R10305:10315 Coq.FSets.FSetCompat M partition defax
def 10330:10337 Update_WSets cardinal
R10342:10345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10346:10348 Coq.Init.Datatypes <> nat ind
R10341:10341 Coq.FSets.FSetCompat Update_WSets t def
R10353:10362 Coq.FSets.FSetCompat M cardinal defax
def 10377:10384 Update_WSets elements
R10389:10392 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10393:10396 Coq.Init.Datatypes <> list ind
R10398:10400 Coq.FSets.FSetCompat Update_WSets elt def
R10388:10388 Coq.FSets.FSetCompat Update_WSets t def
R10405:10414 Coq.FSets.FSetCompat M elements defax
def 10429:10434 Update_WSets choose
R10439:10442 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10443:10448 Coq.Init.Datatypes <> option ind
R10450:10452 Coq.FSets.FSetCompat Update_WSets elt def
R10438:10438 Coq.FSets.FSetCompat Update_WSets t def
R10457:10464 Coq.FSets.FSetCompat M choose defax
R10482:10497 Coq.FSets.FSetFacts WFacts <> modtype
R10499:10499 Coq.FSets.FSetCompat M <> modtype
mod 10476:10477 <> Update_WSets.MF
inst 10513:10521 Update_WSets In_compat
R10525:10530 Coq.Classes.Morphisms <> Proper class
R10556:10557 Coq.FSets.FSetCompat Update_WSets In def
R10537:10539 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R10533:10536 Coq.FSets.FSetCompat E eq defax
R10548:10550 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R10540:10547 Coq.Init.Logic <> eq ind
R10551:10553 Coq.Init.Logic <> iff def
R10605:10616 Coq.FSets.FSetCompat Update_WSets In_eq_iff thm
R10605:10616 Coq.FSets.FSetCompat Update_WSets In_eq_iff thm
inst 10641:10648 Update_WSets eq_equiv
R10652:10662 Coq.Classes.RelationClasses <> Equivalence class
R10664:10665 Coq.FSets.FSetCompat Update_WSets eq def
sec 10683:10686 Update_WSets Spec
var 10700:10700 Update_WSets.Spec s
var 10702:10703 Update_WSets.Spec s'
R10706:10706 Coq.FSets.FSetCompat Update_WSets t def
var 10720:10720 Update_WSets.Spec x
var 10722:10722 Update_WSets.Spec y
R10726:10728 Coq.FSets.FSetCompat Update_WSets elt def
prf 10740:10747 Update_WSets mem_spec
R10765:10769 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10758:10760 Coq.Init.Logic <> :type_scope:x_'='_x not
R10751:10753 Coq.FSets.FSetCompat Update_WSets mem def
R10757:10757 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R10755:10755 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R10761:10764 Coq.Init.Datatypes <> true constr
R10770:10771 Coq.FSets.FSetCompat Update_WSets In def
R10775:10775 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R10773:10773 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R10811:10820 Coq.FSets.FSetCompat Update_WSets mem_iff thm
R10811:10820 Coq.FSets.FSetCompat Update_WSets mem_iff thm
prf 10837:10846 Update_WSets equal_spec
R10867:10871 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10860:10862 Coq.Init.Logic <> :type_scope:x_'='_x not
R10850:10854 Coq.FSets.FSetCompat Update_WSets equal def
R10858:10859 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R10856:10856 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R10863:10866 Coq.Init.Datatypes <> true constr
R10872:10876 Coq.FSets.FSetCompat Update_WSets Equal def
R10880:10881 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R10878:10878 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R10917:10928 Coq.FSets.FSetCompat Update_WSets equal_iff thm
R10917:10928 Coq.FSets.FSetCompat Update_WSets equal_iff thm
prf 10945:10955 Update_WSets subset_spec
R10977:10981 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10970:10972 Coq.Init.Logic <> :type_scope:x_'='_x not
R10959:10964 Coq.FSets.FSetCompat Update_WSets subset def
R10968:10969 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R10966:10966 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R10973:10976 Coq.Init.Datatypes <> true constr
R10982:10987 Coq.FSets.FSetCompat Update_WSets Subset def
R10991:10992 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R10989:10989 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11028:11040 Coq.FSets.FSetCompat Update_WSets subset_iff thm
R11028:11040 Coq.FSets.FSetCompat Update_WSets subset_iff thm
def 11062:11071 Update_WSets empty_spec
R11075:11079 Coq.FSets.FSetCompat Update_WSets Empty def
R11081:11085 Coq.FSets.FSetCompat Update_WSets empty def
R11090:11098 Coq.FSets.FSetCompat M empty_1 defax
prf 11110:11122 Update_WSets is_empty_spec
R11143:11147 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11136:11138 Coq.Init.Logic <> :type_scope:x_'='_x not
R11126:11133 Coq.FSets.FSetCompat Update_WSets is_empty def
R11135:11135 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11139:11142 Coq.Init.Datatypes <> true constr
R11148:11152 Coq.FSets.FSetCompat Update_WSets Empty def
R11154:11154 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11190:11204 Coq.FSets.FSetCompat Update_WSets is_empty_iff thm
R11190:11204 Coq.FSets.FSetCompat Update_WSets is_empty_iff thm
R11241:11242 Coq.FSets.FSetCompat Update_WSets In def
R11244:11247 Coq.FSets.FSetCompat M In defax
prf 11259:11266 Update_WSets add_spec
R11284:11288 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11270:11271 Coq.FSets.FSetCompat Update_WSets In def
R11276:11278 Coq.FSets.FSetCompat Update_WSets add def
R11282:11282 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11280:11280 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11273:11273 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11297:11300 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11289:11292 Coq.FSets.FSetCompat E eq defax
R11296:11296 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11294:11294 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11301:11302 Coq.FSets.FSetCompat Update_WSets In def
R11306:11306 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11304:11304 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11334:11343 Coq.FSets.FSetCompat Update_WSets add_iff thm
R11334:11343 Coq.FSets.FSetCompat Update_WSets add_iff thm
R11334:11343 Coq.FSets.FSetCompat Update_WSets add_iff thm
prf 11371:11381 Update_WSets remove_spec
R11402:11406 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11385:11386 Coq.FSets.FSetCompat Update_WSets In def
R11391:11396 Coq.FSets.FSetCompat Update_WSets remove def
R11400:11400 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11398:11398 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11388:11388 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11413:11416 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11407:11408 Coq.FSets.FSetCompat Update_WSets In def
R11412:11412 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11410:11410 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11417:11417 Coq.Init.Logic <> :type_scope:'~'_x not
R11418:11421 Coq.FSets.FSetCompat E eq defax
R11425:11425 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11423:11423 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11453:11465 Coq.FSets.FSetCompat Update_WSets remove_iff thm
R11453:11465 Coq.FSets.FSetCompat Update_WSets remove_iff thm
R11453:11465 Coq.FSets.FSetCompat Update_WSets remove_iff thm
prf 11493:11506 Update_WSets singleton_spec
R11528:11532 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11510:11511 Coq.FSets.FSetCompat Update_WSets In def
R11516:11524 Coq.FSets.FSetCompat Update_WSets singleton def
R11526:11526 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11513:11513 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11533:11536 Coq.FSets.FSetCompat E eq defax
R11540:11540 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11538:11538 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11568:11583 Coq.FSets.FSetCompat Update_WSets singleton_iff thm
R11568:11583 Coq.FSets.FSetCompat Update_WSets singleton_iff thm
R11568:11583 Coq.FSets.FSetCompat Update_WSets singleton_iff thm
def 11616:11625 Update_WSets union_spec
R11646:11650 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11629:11630 Coq.FSets.FSetCompat Update_WSets In def
R11635:11639 Coq.FSets.FSetCompat Update_WSets union def
R11643:11644 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11641:11641 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11632:11632 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11657:11660 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11651:11652 Coq.FSets.FSetCompat Update_WSets In def
R11656:11656 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11654:11654 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11661:11662 Coq.FSets.FSetCompat Update_WSets In def
R11666:11667 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11664:11664 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11676:11687 Coq.FSets.FSetCompat Update_WSets union_iff thm
R11694:11694 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11691:11692 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11689:11689 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 11710:11719 Update_WSets inter_spec
R11740:11744 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11723:11724 Coq.FSets.FSetCompat Update_WSets In def
R11729:11733 Coq.FSets.FSetCompat Update_WSets inter def
R11737:11738 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11735:11735 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11726:11726 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11751:11754 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11745:11746 Coq.FSets.FSetCompat Update_WSets In def
R11750:11750 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11748:11748 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11755:11756 Coq.FSets.FSetCompat Update_WSets In def
R11760:11761 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11758:11758 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11770:11781 Coq.FSets.FSetCompat Update_WSets inter_iff thm
R11788:11788 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11785:11786 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11783:11783 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 11804:11812 Update_WSets diff_spec
R11832:11836 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11816:11817 Coq.FSets.FSetCompat Update_WSets In def
R11822:11825 Coq.FSets.FSetCompat Update_WSets diff def
R11829:11830 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11827:11827 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11819:11819 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11843:11846 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11837:11838 Coq.FSets.FSetCompat Update_WSets In def
R11842:11842 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11840:11840 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11847:11847 Coq.Init.Logic <> :type_scope:'~'_x not
R11848:11849 Coq.FSets.FSetCompat Update_WSets In def
R11853:11854 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11851:11851 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11863:11873 Coq.FSets.FSetCompat Update_WSets diff_iff thm
R11880:11880 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11877:11878 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11875:11875 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 11896:11904 Update_WSets fold_spec
R11931:11931 Coq.FSets.FSetCompat <> A var
R11942:11945 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11947:11950 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11951:11951 Coq.FSets.FSetCompat <> A var
R11946:11946 Coq.FSets.FSetCompat <> A var
R11939:11941 Coq.FSets.FSetCompat Update_WSets elt def
R11968:11970 Coq.Init.Logic <> :type_scope:x_'='_x not
R11958:11961 Coq.FSets.FSetCompat Update_WSets fold def
R11967:11967 Coq.FSets.FSetCompat <> i var
R11965:11965 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11963:11963 Coq.FSets.FSetCompat <> f var
R11971:11979 Coq.Lists.List <> fold_left def
R12003:12003 Coq.FSets.FSetCompat <> i var
R11991:11998 Coq.FSets.FSetCompat Update_WSets elements def
R12000:12000 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11982:11985 Coq.Program.Basics <> flip def
R11987:11987 Coq.FSets.FSetCompat <> f var
R12012:12019 Coq.FSets.FSetCompat M fold_1 defax
R12021:12021 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12037:12049 Update_WSets cardinal_spec
R12063:12065 Coq.Init.Logic <> :type_scope:x_'='_x not
R12053:12060 Coq.FSets.FSetCompat Update_WSets cardinal def
R12062:12062 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12066:12071 Coq.Init.Datatypes <> length def
R12074:12081 Coq.FSets.FSetCompat Update_WSets elements def
R12083:12083 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12093:12104 Coq.FSets.FSetCompat M cardinal_1 defax
R12106:12106 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
prf 12118:12131 Update_WSets elements_spec1
R12158:12162 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12135:12137 Coq.Lists.SetoidList <> InA ind
R12147:12154 Coq.FSets.FSetCompat Update_WSets elements def
R12156:12156 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12144:12144 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12139:12142 Coq.FSets.FSetCompat E eq defax
R12163:12164 Coq.FSets.FSetCompat Update_WSets In def
R12168:12168 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12166:12166 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12204:12218 Coq.FSets.FSetCompat Update_WSets elements_iff thm
R12204:12218 Coq.FSets.FSetCompat Update_WSets elements_iff thm
def 12240:12254 Update_WSets elements_spec2w
R12258:12263 Coq.Lists.SetoidList <> NoDupA ind
R12271:12278 Coq.FSets.FSetCompat Update_WSets elements def
R12280:12280 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12265:12268 Coq.FSets.FSetCompat E eq defax
R12290:12302 Coq.FSets.FSetCompat M elements_3w defax
R12304:12304 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12320:12331 Update_WSets choose_spec1
R12352:12355 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12356:12357 Coq.FSets.FSetCompat Update_WSets In def
R12361:12361 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12359:12359 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12343:12345 Coq.Init.Logic <> :type_scope:x_'='_x not
R12335:12340 Coq.FSets.FSetCompat Update_WSets choose def
R12342:12342 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12346:12349 Coq.Init.Datatypes <> Some constr
R12351:12351 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12370:12379 Coq.FSets.FSetCompat M choose_1 defax
R12383:12383 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12381:12381 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12399:12410 Update_WSets choose_spec2
R12429:12432 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12433:12437 Coq.FSets.FSetCompat Update_WSets Empty def
R12439:12439 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12422:12424 Coq.Init.Logic <> :type_scope:x_'='_x not
R12414:12419 Coq.FSets.FSetCompat Update_WSets choose def
R12421:12421 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12425:12428 Coq.Init.Datatypes <> None constr
R12448:12457 Coq.FSets.FSetCompat M choose_2 defax
R12459:12459 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12475:12485 Update_WSets filter_spec
R12525:12532 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12575:12575 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12550:12554 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12533:12534 Coq.FSets.FSetCompat Update_WSets In def
R12539:12544 Coq.FSets.FSetCompat Update_WSets filter def
R12548:12548 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12546:12546 Coq.FSets.FSetCompat <> f var
R12536:12536 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12561:12564 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12555:12556 Coq.FSets.FSetCompat Update_WSets In def
R12560:12560 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12558:12558 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12568:12570 Coq.Init.Logic <> :type_scope:x_'='_x not
R12565:12565 Coq.FSets.FSetCompat <> f var
R12567:12567 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12571:12574 Coq.Init.Datatypes <> true constr
R12499:12504 Coq.Classes.Morphisms <> Proper class
R12524:12524 Coq.FSets.FSetCompat <> f var
R12511:12513 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R12507:12510 Coq.FSets.FSetCompat E eq defax
R12514:12521 Coq.Init.Logic <> eq ind
R12584:12596 Coq.FSets.FSetCompat Update_WSets filter_iff thm
R12600:12600 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12598:12598 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12616:12630 Update_WSets partition_spec1
R12670:12676 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12677:12681 Coq.FSets.FSetCompat Update_WSets Equal def
R12706:12711 Coq.FSets.FSetCompat Update_WSets filter def
R12715:12715 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12713:12713 Coq.FSets.FSetCompat <> f var
R12684:12686 Coq.Init.Datatypes <> fst def
R12689:12697 Coq.FSets.FSetCompat Update_WSets partition def
R12701:12701 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12699:12699 Coq.FSets.FSetCompat <> f var
R12644:12649 Coq.Classes.Morphisms <> Proper class
R12669:12669 Coq.FSets.FSetCompat <> f var
R12656:12658 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R12652:12655 Coq.FSets.FSetCompat E eq defax
R12659:12666 Coq.Init.Logic <> eq ind
R12725:12737 Coq.FSets.FSetCompat M partition_1 defax
R12739:12739 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12755:12769 Update_WSets partition_spec2
R12809:12815 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12816:12820 Coq.FSets.FSetCompat Update_WSets Equal def
R12845:12850 Coq.FSets.FSetCompat Update_WSets filter def
R12874:12874 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12862:12865 Coq.Init.Datatypes <> negb def
R12868:12868 Coq.FSets.FSetCompat <> f var
R12870:12870 Coq.FSets.FSetCompat <> x var
R12823:12825 Coq.Init.Datatypes <> snd def
R12828:12836 Coq.FSets.FSetCompat Update_WSets partition def
R12840:12840 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12838:12838 Coq.FSets.FSetCompat <> f var
R12783:12788 Coq.Classes.Morphisms <> Proper class
R12808:12808 Coq.FSets.FSetCompat <> f var
R12795:12797 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R12791:12794 Coq.FSets.FSetCompat E eq defax
R12798:12805 Coq.Init.Logic <> eq ind
R12884:12896 Coq.FSets.FSetCompat M partition_2 defax
R12898:12898 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
prf 12910:12921 Update_WSets for_all_spec
R12961:12969 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13024:13024 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12988:12992 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12981:12983 Coq.Init.Logic <> :type_scope:x_'='_x not
R12970:12976 Coq.FSets.FSetCompat Update_WSets for_all def
R12980:12980 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12978:12978 Coq.FSets.FSetCompat <> f var
R12984:12987 Coq.Init.Datatypes <> true constr
R12993:12999 Coq.FSets.FSetCompat Update_WSets For_all def
R13023:13023 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R13014:13016 Coq.Init.Logic <> :type_scope:x_'='_x not
R13011:13011 Coq.FSets.FSetCompat <> f var
R13013:13013 Coq.FSets.FSetCompat <> x var
R13017:13020 Coq.Init.Datatypes <> true constr
R12935:12940 Coq.Classes.Morphisms <> Proper class
R12960:12960 Coq.FSets.FSetCompat <> f var
R12947:12949 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R12943:12946 Coq.FSets.FSetCompat E eq defax
R12950:12957 Coq.Init.Logic <> eq ind
R13060:13073 Coq.FSets.FSetCompat Update_WSets for_all_iff thm
R13060:13073 Coq.FSets.FSetCompat Update_WSets for_all_iff thm
prf 13096:13106 Update_WSets exists_spec
R13146:13154 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13208:13208 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13173:13177 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13166:13168 Coq.Init.Logic <> :type_scope:x_'='_x not
R13155:13161 Coq.FSets.FSetCompat Update_WSets exists_ def
R13165:13165 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R13163:13163 Coq.FSets.FSetCompat <> f var
R13169:13172 Coq.Init.Datatypes <> true constr
R13178:13183 Coq.FSets.FSetCompat Update_WSets Exists def
R13207:13207 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R13198:13200 Coq.Init.Logic <> :type_scope:x_'='_x not
R13195:13195 Coq.FSets.FSetCompat <> f var
R13197:13197 Coq.FSets.FSetCompat <> x var
R13201:13204 Coq.Init.Datatypes <> true constr
R13120:13125 Coq.Classes.Morphisms <> Proper class
R13145:13145 Coq.FSets.FSetCompat <> f var
R13132:13134 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R13128:13131 Coq.FSets.FSetCompat E eq defax
R13135:13142 Coq.Init.Logic <> eq ind
R13244:13256 Coq.FSets.FSetCompat Update_WSets exists_iff thm
R13244:13256 Coq.FSets.FSetCompat Update_WSets exists_iff thm
R13277:13280 Coq.FSets.FSetCompat Update_WSets.Spec <> sec
R13288:13299 Coq.FSets.FSetCompat Update_WSets <> mod
R13364:13381 Coq.Structures.Orders OrderedType <> mod
R13388:13402 Coq.FSets.FSetInterface S <> mod
R13427:13429 Coq.FSets.FSetCompat E t defax
R13475:13478 Coq.FSets.FSetCompat E eq defax
R13524:13527 Coq.FSets.FSetCompat E lt defax
R13534:13551 Coq.MSets.MSetInterface Sets <> mod
R13568:13568 Coq.FSets.FSetCompat E <> modtype
mod 13348:13358 <> Update_Sets
R13582:13593 Coq.FSets.FSetCompat Update_WSets <> modtype
R13595:13595 Coq.FSets.FSetCompat E <> modtype
R13597:13597 Coq.FSets.FSetCompat M <> modtype
R13621:13621 Coq.FSets.FSetCompat Update_Sets t def
R13646:13648 Coq.FSets.FSetCompat Update_Sets elt def
def 13665:13666 Update_Sets lt
R13671:13674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13676:13679 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13675:13675 Coq.FSets.FSetCompat Update_Sets t def
R13670:13670 Coq.FSets.FSetCompat Update_Sets t def
R13688:13691 Coq.FSets.FSetCompat M lt defax
def 13707:13713 Update_Sets min_elt
R13718:13721 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13722:13727 Coq.Init.Datatypes <> option ind
R13729:13731 Coq.FSets.FSetCompat Update_Sets elt def
R13717:13717 Coq.FSets.FSetCompat Update_Sets t def
R13736:13744 Coq.FSets.FSetCompat M min_elt defax
def 13760:13766 Update_Sets max_elt
R13771:13774 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13775:13780 Coq.Init.Datatypes <> option ind
R13782:13784 Coq.FSets.FSetCompat Update_Sets elt def
R13770:13770 Coq.FSets.FSetCompat Update_Sets t def
R13789:13797 Coq.FSets.FSetCompat M max_elt defax
def 13813:13825 Update_Sets min_elt_spec1
R13859:13862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13863:13864 Coq.FSets.FSetCompat Update_Sets In def
R13868:13868 Coq.FSets.FSetCompat <> s var
R13866:13866 Coq.FSets.FSetCompat <> x var
R13850:13852 Coq.Init.Logic <> :type_scope:x_'='_x not
R13841:13847 Coq.FSets.FSetCompat Update_Sets min_elt def
R13849:13849 Coq.FSets.FSetCompat <> s var
R13853:13856 Coq.Init.Datatypes <> Some constr
R13858:13858 Coq.FSets.FSetCompat <> x var
R13876:13886 Coq.FSets.FSetCompat M min_elt_1 defax
def 13902:13914 Update_Sets min_elt_spec2
R13953:13956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13963:13966 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13967:13968 Coq.Init.Logic <> :type_scope:'~'_x not
R13969:13972 Coq.FSets.FSetCompat E lt defax
R13976:13976 Coq.FSets.FSetCompat <> x var
R13974:13974 Coq.FSets.FSetCompat <> y var
R13957:13958 Coq.FSets.FSetCompat Update_Sets In def
R13962:13962 Coq.FSets.FSetCompat <> s var
R13960:13960 Coq.FSets.FSetCompat <> y var
R13944:13946 Coq.Init.Logic <> :type_scope:x_'='_x not
R13935:13941 Coq.FSets.FSetCompat Update_Sets min_elt def
R13943:13943 Coq.FSets.FSetCompat <> s var
R13947:13950 Coq.Init.Datatypes <> Some constr
R13952:13952 Coq.FSets.FSetCompat <> x var
R13984:13994 Coq.FSets.FSetCompat M min_elt_2 defax
def 14010:14022 Update_Sets min_elt_spec3
R14052:14055 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14056:14060 Coq.FSets.FSetCompat Update_Sets Empty def
R14062:14062 Coq.FSets.FSetCompat <> s var
R14045:14047 Coq.Init.Logic <> :type_scope:x_'='_x not
R14036:14042 Coq.FSets.FSetCompat Update_Sets min_elt def
R14044:14044 Coq.FSets.FSetCompat <> s var
R14048:14051 Coq.Init.Datatypes <> None constr
R14070:14080 Coq.FSets.FSetCompat M min_elt_3 defax
def 14096:14108 Update_Sets max_elt_spec1
R14142:14145 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14146:14147 Coq.FSets.FSetCompat Update_Sets In def
R14151:14151 Coq.FSets.FSetCompat <> s var
R14149:14149 Coq.FSets.FSetCompat <> x var
R14133:14135 Coq.Init.Logic <> :type_scope:x_'='_x not
R14124:14130 Coq.FSets.FSetCompat Update_Sets max_elt def
R14132:14132 Coq.FSets.FSetCompat <> s var
R14136:14139 Coq.Init.Datatypes <> Some constr
R14141:14141 Coq.FSets.FSetCompat <> x var
R14159:14169 Coq.FSets.FSetCompat M max_elt_1 defax
def 14185:14197 Update_Sets max_elt_spec2
R14236:14239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14246:14249 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14250:14251 Coq.Init.Logic <> :type_scope:'~'_x not
R14252:14255 Coq.FSets.FSetCompat E lt defax
R14259:14259 Coq.FSets.FSetCompat <> y var
R14257:14257 Coq.FSets.FSetCompat <> x var
R14240:14241 Coq.FSets.FSetCompat Update_Sets In def
R14245:14245 Coq.FSets.FSetCompat <> s var
R14243:14243 Coq.FSets.FSetCompat <> y var
R14227:14229 Coq.Init.Logic <> :type_scope:x_'='_x not
R14218:14224 Coq.FSets.FSetCompat Update_Sets max_elt def
R14226:14226 Coq.FSets.FSetCompat <> s var
R14230:14233 Coq.Init.Datatypes <> Some constr
R14235:14235 Coq.FSets.FSetCompat <> x var
R14267:14277 Coq.FSets.FSetCompat M max_elt_2 defax
def 14293:14305 Update_Sets max_elt_spec3
R14335:14338 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14339:14343 Coq.FSets.FSetCompat Update_Sets Empty def
R14345:14345 Coq.FSets.FSetCompat <> s var
R14328:14330 Coq.Init.Logic <> :type_scope:x_'='_x not
R14319:14325 Coq.FSets.FSetCompat Update_Sets max_elt def
R14327:14327 Coq.FSets.FSetCompat <> s var
R14331:14334 Coq.Init.Datatypes <> None constr
R14353:14363 Coq.FSets.FSetCompat M max_elt_3 defax
def 14379:14392 Update_Sets elements_spec2
R14406:14409 Coq.Sorting.Sorted <> sort syndef
R14417:14424 Coq.FSets.FSetCompat Update_Sets elements def
R14426:14426 Coq.FSets.FSetCompat <> s var
R14411:14414 Coq.FSets.FSetCompat E lt defax
R14435:14446 Coq.FSets.FSetCompat M elements_3 defax
def 14462:14473 Update_Sets choose_spec3
R14514:14517 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14536:14539 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14550:14553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14554:14557 Coq.FSets.FSetCompat E eq defax
R14561:14561 Coq.FSets.FSetCompat <> y var
R14559:14559 Coq.FSets.FSetCompat <> x var
R14540:14544 Coq.FSets.FSetCompat Update_Sets Equal def
R14548:14549 Coq.FSets.FSetCompat <> s' var
R14546:14546 Coq.FSets.FSetCompat <> s var
R14527:14529 Coq.Init.Logic <> :type_scope:x_'='_x not
R14518:14523 Coq.FSets.FSetCompat Update_Sets choose def
R14525:14526 Coq.FSets.FSetCompat <> s' var
R14530:14533 Coq.Init.Datatypes <> Some constr
R14535:14535 Coq.FSets.FSetCompat <> y var
R14505:14507 Coq.Init.Logic <> :type_scope:x_'='_x not
R14497:14502 Coq.FSets.FSetCompat Update_Sets choose def
R14504:14504 Coq.FSets.FSetCompat <> s var
R14508:14511 Coq.Init.Datatypes <> Some constr
R14513:14513 Coq.FSets.FSetCompat <> x var
R14569:14578 Coq.FSets.FSetCompat M choose_3 defax
inst 14593:14603 Update_Sets lt_strorder
R14607:14617 Coq.Classes.RelationClasses <> StrictOrder class
R14619:14620 Coq.FSets.FSetCompat Update_Sets lt def
R14665:14675 Coq.FSets.FSetCompat M lt_not_eq defax
R14665:14675 Coq.FSets.FSetCompat M lt_not_eq defax
R14704:14713 Coq.FSets.FSetCompat M lt_trans defax
R14704:14713 Coq.FSets.FSetCompat M lt_trans defax
inst 14735:14743 Update_Sets lt_compat
R14747:14752 Coq.Classes.Morphisms <> Proper class
R14770:14771 Coq.FSets.FSetCompat Update_Sets lt def
R14757:14759 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R14755:14756 Coq.FSets.FSetCompat Update_Sets eq def
R14762:14764 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R14760:14761 Coq.FSets.FSetCompat Update_Sets eq def
R14765:14767 Coq.Init.Logic <> iff def
R14791:14811 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R14791:14811 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R14870:14871 Coq.FSets.FSetCompat Update_Sets lt def
R14870:14871 Coq.FSets.FSetCompat Update_Sets lt def
R14893:14901 Coq.FSets.FSetCompat M compare defax
R14893:14901 Coq.FSets.FSetCompat M compare defax
R14939:14949 Coq.FSets.FSetCompat M lt_not_eq defax
R14939:14949 Coq.FSets.FSetCompat M lt_not_eq defax
R14994:15004 Coq.FSets.FSetCompat M lt_not_eq defax
R15007:15016 Coq.FSets.FSetCompat M lt_trans defax
R14994:15004 Coq.FSets.FSetCompat M lt_not_eq defax
R15007:15016 Coq.FSets.FSetCompat M lt_trans defax
R15044:15052 Coq.FSets.FSetCompat M compare defax
R15044:15052 Coq.FSets.FSetCompat M compare defax
R15090:15100 Coq.FSets.FSetCompat M lt_not_eq defax
R15090:15100 Coq.FSets.FSetCompat M lt_not_eq defax
R15177:15187 Coq.FSets.FSetCompat M lt_not_eq defax
R15190:15199 Coq.FSets.FSetCompat M lt_trans defax
R15177:15187 Coq.FSets.FSetCompat M lt_not_eq defax
R15190:15199 Coq.FSets.FSetCompat M lt_trans defax
def 15244:15250 Update_Sets compare
R15269:15277 Coq.FSets.FSetCompat M compare defax
R15281:15282 Coq.FSets.FSetCompat <> s' var
R15279:15279 Coq.FSets.FSetCompat <> s var
R15295:15296 Coq.Structures.OrderedType <> EQ constr
R15303:15304 Coq.Init.Datatypes <> Eq constr
R15312:15313 Coq.Structures.OrderedType <> LT constr
R15320:15321 Coq.Init.Datatypes <> Lt constr
R15329:15330 Coq.Structures.OrderedType <> GT constr
R15337:15338 Coq.Init.Datatypes <> Gt constr
prf 15357:15368 Update_Sets compare_spec
R15385:15392 Coq.Init.Datatypes <> CompSpec def
R15406:15412 Coq.FSets.FSetCompat Update_Sets compare def
R15416:15417 Coq.FSets.FSetCompat <> s' var
R15414:15414 Coq.FSets.FSetCompat <> s var
R15402:15403 Coq.FSets.FSetCompat <> s' var
R15400:15400 Coq.FSets.FSetCompat <> s var
R15397:15398 Coq.FSets.FSetCompat Update_Sets lt def
R15394:15395 Coq.FSets.FSetCompat Update_Sets eq def
R15445:15451 Coq.FSets.FSetCompat Update_Sets compare def
R15463:15471 Coq.FSets.FSetCompat M compare defax
R15463:15471 Coq.FSets.FSetCompat M compare defax
R15500:15500 Coq.FSets.FSetCompat E <> modtype
mod 15495:15495 <> Update_Sets.E
R15508:15518 Coq.FSets.FSetCompat Update_Sets <> mod

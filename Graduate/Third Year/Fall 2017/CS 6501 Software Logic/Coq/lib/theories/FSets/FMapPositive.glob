DIGEST cb0dd7ef247d68df0f3f377cd1155312
FCoq.FSets.FMapPositive
R615:618 Coq.Bool.Bool <> <> lib
R620:630 Coq.Structures.OrderedType <> <> lib
R632:637 Coq.ZArith.ZArith <> <> lib
R639:649 Coq.Structures.OrderedType <> <> lib
R651:663 Coq.Structures.OrderedTypeEx <> <> lib
R665:677 Coq.FSets.FMapInterface <> <> lib
def 1286:1291 <> append
R1300:1307 Coq.Numbers.BinNums <> positive ind
R1312:1319 Coq.Numbers.BinNums <> positive ind
R1334:1334 Coq.FSets.FMapPositive <> i var
R1349:1350 Coq.Numbers.BinNums <> xH constr
R1355:1355 Coq.FSets.FMapPositive <> j var
R1365:1366 Coq.Numbers.BinNums <> xI constr
R1374:1375 Coq.Numbers.BinNums <> xI constr
R1378:1383 Coq.FSets.FMapPositive <> append def
R1388:1388 Coq.FSets.FMapPositive <> j var
R1399:1400 Coq.Numbers.BinNums <> xO constr
R1408:1409 Coq.Numbers.BinNums <> xO constr
R1412:1417 Coq.FSets.FMapPositive <> append def
R1422:1422 Coq.FSets.FMapPositive <> j var
prf 1441:1454 <> append_assoc_0
R1474:1481 Coq.Numbers.BinNums <> positive ind
R1500:1502 Coq.Init.Logic <> :type_scope:x_'='_x not
R1485:1490 Coq.FSets.FMapPositive <> append def
R1495:1496 Coq.Numbers.BinNums <> xO constr
R1498:1498 Coq.FSets.FMapPositive <> j var
R1492:1492 Coq.FSets.FMapPositive <> i var
R1503:1508 Coq.FSets.FMapPositive <> append def
R1529:1529 Coq.FSets.FMapPositive <> j var
R1511:1516 Coq.FSets.FMapPositive <> append def
R1521:1522 Coq.Numbers.BinNums <> xO constr
R1524:1525 Coq.Numbers.BinNums <> xH constr
R1518:1518 Coq.FSets.FMapPositive <> i var
R1599:1600 Coq.Numbers.BinNums <> xI constr
R1626:1627 Coq.Numbers.BinNums <> xO constr
R1655:1656 Coq.Numbers.BinNums <> xH constr
R1599:1600 Coq.Numbers.BinNums <> xI constr
R1599:1600 Coq.Numbers.BinNums <> xI constr
R1599:1600 Coq.Numbers.BinNums <> xI constr
R1599:1600 Coq.Numbers.BinNums <> xI constr
R1599:1600 Coq.Numbers.BinNums <> xI constr
R1599:1600 Coq.Numbers.BinNums <> xI constr
R1599:1600 Coq.Numbers.BinNums <> xI constr
R1599:1600 Coq.Numbers.BinNums <> xI constr
R1626:1627 Coq.Numbers.BinNums <> xO constr
R1626:1627 Coq.Numbers.BinNums <> xO constr
R1626:1627 Coq.Numbers.BinNums <> xO constr
R1626:1627 Coq.Numbers.BinNums <> xO constr
R1626:1627 Coq.Numbers.BinNums <> xO constr
R1626:1627 Coq.Numbers.BinNums <> xO constr
R1626:1627 Coq.Numbers.BinNums <> xO constr
R1626:1627 Coq.Numbers.BinNums <> xO constr
R1655:1656 Coq.Numbers.BinNums <> xH constr
R1655:1656 Coq.Numbers.BinNums <> xH constr
R1655:1656 Coq.Numbers.BinNums <> xH constr
R1655:1656 Coq.Numbers.BinNums <> xH constr
R1655:1656 Coq.Numbers.BinNums <> xH constr
R1655:1656 Coq.Numbers.BinNums <> xH constr
R1655:1656 Coq.Numbers.BinNums <> xH constr
R1655:1656 Coq.Numbers.BinNums <> xH constr
prf 1679:1692 <> append_assoc_1
R1712:1719 Coq.Numbers.BinNums <> positive ind
R1738:1740 Coq.Init.Logic <> :type_scope:x_'='_x not
R1723:1728 Coq.FSets.FMapPositive <> append def
R1733:1734 Coq.Numbers.BinNums <> xI constr
R1736:1736 Coq.FSets.FMapPositive <> j var
R1730:1730 Coq.FSets.FMapPositive <> i var
R1741:1746 Coq.FSets.FMapPositive <> append def
R1767:1767 Coq.FSets.FMapPositive <> j var
R1749:1754 Coq.FSets.FMapPositive <> append def
R1759:1760 Coq.Numbers.BinNums <> xI constr
R1762:1763 Coq.Numbers.BinNums <> xH constr
R1756:1756 Coq.FSets.FMapPositive <> i var
R1837:1838 Coq.Numbers.BinNums <> xI constr
R1864:1865 Coq.Numbers.BinNums <> xO constr
R1893:1894 Coq.Numbers.BinNums <> xH constr
R1837:1838 Coq.Numbers.BinNums <> xI constr
R1837:1838 Coq.Numbers.BinNums <> xI constr
R1837:1838 Coq.Numbers.BinNums <> xI constr
R1837:1838 Coq.Numbers.BinNums <> xI constr
R1837:1838 Coq.Numbers.BinNums <> xI constr
R1837:1838 Coq.Numbers.BinNums <> xI constr
R1837:1838 Coq.Numbers.BinNums <> xI constr
R1837:1838 Coq.Numbers.BinNums <> xI constr
R1864:1865 Coq.Numbers.BinNums <> xO constr
R1864:1865 Coq.Numbers.BinNums <> xO constr
R1864:1865 Coq.Numbers.BinNums <> xO constr
R1864:1865 Coq.Numbers.BinNums <> xO constr
R1864:1865 Coq.Numbers.BinNums <> xO constr
R1864:1865 Coq.Numbers.BinNums <> xO constr
R1864:1865 Coq.Numbers.BinNums <> xO constr
R1864:1865 Coq.Numbers.BinNums <> xO constr
R1893:1894 Coq.Numbers.BinNums <> xH constr
R1893:1894 Coq.Numbers.BinNums <> xH constr
R1893:1894 Coq.Numbers.BinNums <> xH constr
R1893:1894 Coq.Numbers.BinNums <> xH constr
R1893:1894 Coq.Numbers.BinNums <> xH constr
R1893:1894 Coq.Numbers.BinNums <> xH constr
R1893:1894 Coq.Numbers.BinNums <> xH constr
R1893:1894 Coq.Numbers.BinNums <> xH constr
prf 1917:1932 <> append_neutral_r
R1948:1955 Coq.Numbers.BinNums <> positive ind
R1970:1972 Coq.Init.Logic <> :type_scope:x_'='_x not
R1959:1964 Coq.FSets.FMapPositive <> append def
R1968:1969 Coq.Numbers.BinNums <> xH constr
R1966:1966 Coq.FSets.FMapPositive <> i var
R1973:1973 Coq.FSets.FMapPositive <> i var
prf 2028:2043 <> append_neutral_l
R2059:2066 Coq.Numbers.BinNums <> positive ind
R2081:2083 Coq.Init.Logic <> :type_scope:x_'='_x not
R2070:2075 Coq.FSets.FMapPositive <> append def
R2080:2080 Coq.FSets.FMapPositive <> i var
R2077:2078 Coq.Numbers.BinNums <> xH constr
R2084:2084 Coq.FSets.FMapPositive <> i var
R2183:2183 Coq.FSets.FMapInterface S <> mod
R2200:2222 Coq.Structures.OrderedTypeEx PositiveOrderedTypeBits <> modtype
mod 2168:2178 <> PositiveMap
R2238:2260 Coq.Structures.OrderedTypeEx PositiveOrderedTypeBits <> modtype
mod 2235:2235 <> PositiveMap.E
R2276:2289 Coq.Structures.OrderedType KeyOrderedType <> modtype
R2291:2291 Coq.FSets.FMapPositive PositiveMap.E <> modtype
mod 2272:2273 <> PositiveMap.ME
def 2308:2310 PositiveMap key
R2315:2322 Coq.Numbers.BinNums <> positive ind
ind 2346:2349 PositiveMap tree
constr 2371:2374 PositiveMap Leaf
constr 2391:2394 PositiveMap Node
R2378:2381 Coq.FSets.FMapPositive <> tree ind
R2404:2407 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2416:2419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2426:2429 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2430:2433 Coq.FSets.FMapPositive <> tree ind
R2420:2423 Coq.FSets.FMapPositive <> tree ind
R2408:2413 Coq.Init.Datatypes <> option ind
R2398:2401 Coq.FSets.FMapPositive <> tree ind
def 2448:2455 PositiveMap tree_ind
R2474:2477 Coq.FSets.FMapPositive PositiveMap tree ind
def 2504:2504 PositiveMap t
R2509:2512 Coq.FSets.FMapPositive PositiveMap tree ind
sec 2526:2526 PositiveMap A
var 2540:2540 PositiveMap.A A
R2561:2564 Coq.FSets.FMapPositive PositiveMap Leaf constr
R2561:2564 Coq.FSets.FMapPositive PositiveMap Leaf constr
def 2585:2589 PositiveMap empty
R2593:2593 Coq.FSets.FMapPositive PositiveMap t def
R2595:2595 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R2600:2603 Coq.FSets.FMapPositive PositiveMap Leaf constr
def 2618:2625 PositiveMap is_empty
R2632:2632 Coq.FSets.FMapPositive PositiveMap t def
R2634:2634 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R2639:2642 Coq.Init.Datatypes <> bool ind
R2656:2656 Coq.FSets.FMapPositive <> m var
R2669:2672 Coq.FSets.FMapPositive PositiveMap Leaf constr
R2677:2680 Coq.Init.Datatypes <> true constr
R2688:2691 Coq.FSets.FMapPositive PositiveMap Node constr
R2695:2698 Coq.Init.Datatypes <> None constr
R2705:2705 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R2716:2721 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R2732:2732 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R2706:2713 Coq.FSets.FMapPositive <> is_empty def
R2722:2729 Coq.FSets.FMapPositive <> is_empty def
R2745:2749 Coq.Init.Datatypes <> false constr
def 2771:2774 PositiveMap find
R2781:2783 Coq.FSets.FMapPositive PositiveMap key def
R2791:2791 Coq.FSets.FMapPositive PositiveMap t def
R2793:2793 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R2798:2803 Coq.Init.Datatypes <> option ind
R2805:2805 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R2820:2820 Coq.FSets.FMapPositive <> m var
R2833:2836 Coq.FSets.FMapPositive PositiveMap Leaf constr
R2841:2844 Coq.Init.Datatypes <> None constr
R2852:2855 Coq.FSets.FMapPositive PositiveMap Node constr
R2880:2880 Coq.FSets.FMapPositive <> i var
R2897:2898 Coq.Numbers.BinNums <> xH constr
R2915:2916 Coq.Numbers.BinNums <> xO constr
R2924:2927 Coq.FSets.FMapPositive <> find def
R2944:2945 Coq.Numbers.BinNums <> xI constr
R2953:2956 Coq.FSets.FMapPositive <> find def
def 2996:2998 PositiveMap mem
R3005:3007 Coq.FSets.FMapPositive PositiveMap key def
R3015:3015 Coq.FSets.FMapPositive PositiveMap t def
R3017:3017 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R3022:3025 Coq.Init.Datatypes <> bool ind
R3040:3040 Coq.FSets.FMapPositive <> m var
R3053:3056 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3061:3065 Coq.Init.Datatypes <> false constr
R3073:3076 Coq.FSets.FMapPositive PositiveMap Node constr
R3101:3101 Coq.FSets.FMapPositive <> i var
R3118:3119 Coq.Numbers.BinNums <> xH constr
R3137:3140 Coq.Init.Datatypes <> None constr
R3145:3149 Coq.Init.Datatypes <> false constr
R3158:3161 Coq.Init.Datatypes <> true constr
R3177:3178 Coq.Numbers.BinNums <> xO constr
R3186:3188 Coq.FSets.FMapPositive <> mem def
R3205:3206 Coq.Numbers.BinNums <> xI constr
R3214:3216 Coq.FSets.FMapPositive <> mem def
def 3256:3258 PositiveMap add
R3265:3267 Coq.FSets.FMapPositive PositiveMap key def
R3275:3275 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R3283:3283 Coq.FSets.FMapPositive PositiveMap t def
R3285:3285 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R3290:3290 Coq.FSets.FMapPositive PositiveMap t def
R3292:3292 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R3307:3307 Coq.FSets.FMapPositive <> m var
R3320:3323 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3342:3342 Coq.FSets.FMapPositive <> i var
R3359:3360 Coq.Numbers.BinNums <> xH constr
R3365:3368 Coq.FSets.FMapPositive PositiveMap Node constr
R3384:3387 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3376:3379 Coq.Init.Datatypes <> Some constr
R3381:3381 Coq.FSets.FMapPositive <> v var
R3370:3373 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3399:3400 Coq.Numbers.BinNums <> xO constr
R3408:3411 Coq.FSets.FMapPositive PositiveMap Node constr
R3434:3437 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3429:3432 Coq.Init.Datatypes <> None constr
R3414:3416 Coq.FSets.FMapPositive <> add def
R3423:3426 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3421:3421 Coq.FSets.FMapPositive <> v var
R3449:3450 Coq.Numbers.BinNums <> xI constr
R3458:3461 Coq.FSets.FMapPositive PositiveMap Node constr
R3474:3476 Coq.FSets.FMapPositive <> add def
R3483:3486 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3481:3481 Coq.FSets.FMapPositive <> v var
R3468:3471 Coq.Init.Datatypes <> None constr
R3463:3466 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3507:3510 Coq.FSets.FMapPositive PositiveMap Node constr
R3535:3535 Coq.FSets.FMapPositive <> i var
R3552:3553 Coq.Numbers.BinNums <> xH constr
R3558:3561 Coq.FSets.FMapPositive PositiveMap Node constr
R3566:3569 Coq.Init.Datatypes <> Some constr
R3571:3571 Coq.FSets.FMapPositive <> v var
R3586:3587 Coq.Numbers.BinNums <> xO constr
R3595:3598 Coq.FSets.FMapPositive PositiveMap Node constr
R3601:3603 Coq.FSets.FMapPositive <> add def
R3608:3608 Coq.FSets.FMapPositive <> v var
R3627:3628 Coq.Numbers.BinNums <> xI constr
R3636:3639 Coq.FSets.FMapPositive PositiveMap Node constr
R3646:3648 Coq.FSets.FMapPositive <> add def
R3653:3653 Coq.FSets.FMapPositive <> v var
def 3691:3696 PositiveMap remove
R3703:3705 Coq.FSets.FMapPositive PositiveMap key def
R3713:3713 Coq.FSets.FMapPositive PositiveMap t def
R3715:3715 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R3720:3720 Coq.FSets.FMapPositive PositiveMap t def
R3722:3722 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R3737:3737 Coq.FSets.FMapPositive <> i var
R3750:3751 Coq.Numbers.BinNums <> xH constr
R3770:3770 Coq.FSets.FMapPositive <> m var
R3787:3790 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3795:3798 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3810:3813 Coq.FSets.FMapPositive PositiveMap Node constr
R3815:3818 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3822:3825 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3830:3833 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3845:3848 Coq.FSets.FMapPositive PositiveMap Node constr
R3859:3862 Coq.FSets.FMapPositive PositiveMap Node constr
R3866:3869 Coq.Init.Datatypes <> None constr
R3891:3892 Coq.Numbers.BinNums <> xO constr
R3914:3914 Coq.FSets.FMapPositive <> m var
R3931:3934 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3939:3942 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3954:3957 Coq.FSets.FMapPositive PositiveMap Node constr
R3961:3964 Coq.Init.Datatypes <> None constr
R3966:3969 Coq.FSets.FMapPositive PositiveMap Leaf constr
R3992:3997 Coq.FSets.FMapPositive <> remove def
R4023:4026 Coq.FSets.FMapPositive PositiveMap Leaf constr
R4031:4034 Coq.FSets.FMapPositive PositiveMap Leaf constr
R4056:4059 Coq.FSets.FMapPositive PositiveMap Node constr
R4069:4072 Coq.FSets.FMapPositive PositiveMap Leaf constr
R4064:4067 Coq.Init.Datatypes <> None constr
R4100:4103 Coq.FSets.FMapPositive PositiveMap Node constr
R4114:4117 Coq.FSets.FMapPositive PositiveMap Node constr
R4120:4125 Coq.FSets.FMapPositive <> remove def
R4155:4156 Coq.Numbers.BinNums <> xI constr
R4178:4178 Coq.FSets.FMapPositive <> m var
R4195:4198 Coq.FSets.FMapPositive PositiveMap Leaf constr
R4203:4206 Coq.FSets.FMapPositive PositiveMap Leaf constr
R4218:4221 Coq.FSets.FMapPositive PositiveMap Node constr
R4223:4226 Coq.FSets.FMapPositive PositiveMap Leaf constr
R4228:4231 Coq.Init.Datatypes <> None constr
R4256:4261 Coq.FSets.FMapPositive <> remove def
R4287:4290 Coq.FSets.FMapPositive PositiveMap Leaf constr
R4295:4298 Coq.FSets.FMapPositive PositiveMap Leaf constr
R4320:4323 Coq.FSets.FMapPositive PositiveMap Node constr
R4330:4333 Coq.Init.Datatypes <> None constr
R4325:4328 Coq.FSets.FMapPositive PositiveMap Leaf constr
R4364:4367 Coq.FSets.FMapPositive PositiveMap Node constr
R4378:4381 Coq.FSets.FMapPositive PositiveMap Node constr
R4388:4393 Coq.FSets.FMapPositive <> remove def
def 4457:4465 PositiveMap xelements
R4472:4472 Coq.FSets.FMapPositive PositiveMap t def
R4474:4474 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R4482:4484 Coq.FSets.FMapPositive PositiveMap key def
R4489:4492 Coq.Init.Datatypes <> list ind
R4498:4500 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R4495:4497 Coq.FSets.FMapPositive PositiveMap key def
R4501:4501 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R4519:4519 Coq.FSets.FMapPositive <> m var
R4534:4537 Coq.FSets.FMapPositive PositiveMap Leaf constr
R4542:4544 Coq.Init.Datatypes <> nil constr
R4554:4557 Coq.FSets.FMapPositive PositiveMap Node constr
R4561:4564 Coq.Init.Datatypes <> None constr
R4581:4581 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4612:4617 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4648:4648 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4582:4590 Coq.FSets.FMapPositive <> xelements def
R4595:4600 Coq.FSets.FMapPositive <> append def
R4605:4606 Coq.Numbers.BinNums <> xO constr
R4608:4609 Coq.Numbers.BinNums <> xH constr
R4602:4602 Coq.FSets.FMapPositive <> i var
R4618:4626 Coq.FSets.FMapPositive <> xelements def
R4631:4636 Coq.FSets.FMapPositive <> append def
R4641:4642 Coq.Numbers.BinNums <> xI constr
R4644:4645 Coq.Numbers.BinNums <> xH constr
R4638:4638 Coq.FSets.FMapPositive <> i var
R4658:4661 Coq.FSets.FMapPositive PositiveMap Node constr
R4666:4669 Coq.Init.Datatypes <> Some constr
R4689:4689 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4720:4735 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4776:4776 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4690:4698 Coq.FSets.FMapPositive <> xelements def
R4703:4708 Coq.FSets.FMapPositive <> append def
R4713:4714 Coq.Numbers.BinNums <> xO constr
R4716:4717 Coq.Numbers.BinNums <> xH constr
R4710:4710 Coq.FSets.FMapPositive <> i var
R4742:4745 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R4736:4736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4738:4739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4741:4741 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4737:4737 Coq.FSets.FMapPositive <> i var
R4746:4754 Coq.FSets.FMapPositive <> xelements def
R4759:4764 Coq.FSets.FMapPositive <> append def
R4769:4770 Coq.Numbers.BinNums <> xI constr
R4772:4773 Coq.Numbers.BinNums <> xH constr
R4766:4766 Coq.FSets.FMapPositive <> i var
def 4943:4950 PositiveMap elements
R4957:4957 Coq.FSets.FMapPositive PositiveMap t def
R4959:4959 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R4965:4973 Coq.FSets.FMapPositive PositiveMap xelements def
R4977:4978 Coq.Numbers.BinNums <> xH constr
R4975:4975 Coq.FSets.FMapPositive <> m var
def 5014:5021 PositiveMap cardinal
R5028:5028 Coq.FSets.FMapPositive PositiveMap t def
R5030:5030 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R5035:5037 Coq.Init.Datatypes <> nat ind
R5052:5052 Coq.FSets.FMapPositive <> m var
R5067:5070 Coq.FSets.FMapPositive PositiveMap Leaf constr
R5089:5092 Coq.FSets.FMapPositive PositiveMap Node constr
R5096:5099 Coq.Init.Datatypes <> None constr
R5117:5119 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5107:5114 Coq.FSets.FMapPositive <> cardinal def
R5120:5127 Coq.FSets.FMapPositive <> cardinal def
R5144:5147 Coq.FSets.FMapPositive PositiveMap Node constr
R5152:5155 Coq.Init.Datatypes <> Some constr
R5165:5165 Coq.Init.Datatypes <> S constr
R5178:5180 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5168:5175 Coq.FSets.FMapPositive <> cardinal def
R5181:5188 Coq.FSets.FMapPositive <> cardinal def
sec 5213:5224 PositiveMap.A CompcertSpec
prf 5238:5243 PositiveMap gempty
R5261:5263 Coq.FSets.FMapPositive PositiveMap key def
R5279:5281 Coq.Init.Logic <> :type_scope:x_'='_x not
R5267:5270 Coq.FSets.FMapPositive PositiveMap find def
R5274:5278 Coq.FSets.FMapPositive PositiveMap empty def
R5272:5272 Coq.FSets.FMapPositive <> i var
R5282:5285 Coq.Init.Datatypes <> None constr
prf 5344:5346 PositiveMap gss
R5364:5366 Coq.FSets.FMapPositive PositiveMap key def
R5373:5373 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R5380:5380 Coq.FSets.FMapPositive PositiveMap t def
R5382:5382 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R5404:5406 Coq.Init.Logic <> :type_scope:x_'='_x not
R5386:5389 Coq.FSets.FMapPositive PositiveMap find def
R5394:5396 Coq.FSets.FMapPositive PositiveMap add def
R5402:5402 Coq.FSets.FMapPositive <> m var
R5400:5400 Coq.FSets.FMapPositive <> x var
R5398:5398 Coq.FSets.FMapPositive <> i var
R5391:5391 Coq.FSets.FMapPositive <> i var
R5407:5410 Coq.Init.Datatypes <> Some constr
R5412:5412 Coq.FSets.FMapPositive <> x var
prf 5482:5486 PositiveMap gleaf
R5502:5504 Coq.FSets.FMapPositive PositiveMap key def
R5527:5529 Coq.Init.Logic <> :type_scope:x_'='_x not
R5508:5511 Coq.FSets.FMapPositive PositiveMap find def
R5523:5523 Coq.FSets.FMapPositive PositiveMap t def
R5525:5525 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R5516:5519 Coq.FSets.FMapPositive PositiveMap Leaf constr
R5513:5513 Coq.FSets.FMapPositive <> i var
R5530:5533 Coq.Init.Datatypes <> None constr
R5551:5556 Coq.FSets.FMapPositive PositiveMap gempty thm
R5551:5556 Coq.FSets.FMapPositive PositiveMap gempty thm
prf 5575:5577 PositiveMap gso
R5597:5599 Coq.FSets.FMapPositive PositiveMap key def
R5606:5606 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R5613:5613 Coq.FSets.FMapPositive PositiveMap t def
R5615:5615 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R5629:5632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5651:5653 Coq.Init.Logic <> :type_scope:x_'='_x not
R5633:5636 Coq.FSets.FMapPositive PositiveMap find def
R5641:5643 Coq.FSets.FMapPositive PositiveMap add def
R5649:5649 Coq.FSets.FMapPositive <> m var
R5647:5647 Coq.FSets.FMapPositive <> x var
R5645:5645 Coq.FSets.FMapPositive <> j var
R5638:5638 Coq.FSets.FMapPositive <> i var
R5654:5657 Coq.FSets.FMapPositive PositiveMap find def
R5661:5661 Coq.FSets.FMapPositive <> m var
R5659:5659 Coq.FSets.FMapPositive <> i var
R5624:5627 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R5623:5623 Coq.FSets.FMapPositive <> i var
R5628:5628 Coq.FSets.FMapPositive <> j var
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
R5752:5756 Coq.FSets.FMapPositive PositiveMap gleaf thm
prf 5811:5815 PositiveMap rleaf
R5831:5833 Coq.FSets.FMapPositive PositiveMap key def
R5850:5852 Coq.Init.Logic <> :type_scope:x_'='_x not
R5837:5842 Coq.FSets.FMapPositive PositiveMap remove def
R5846:5849 Coq.FSets.FMapPositive PositiveMap Leaf constr
R5844:5844 Coq.FSets.FMapPositive <> i var
R5853:5856 Coq.FSets.FMapPositive PositiveMap Leaf constr
prf 5909:5911 PositiveMap grs
R5929:5931 Coq.FSets.FMapPositive PositiveMap key def
R5938:5938 Coq.FSets.FMapPositive PositiveMap t def
R5940:5940 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R5963:5965 Coq.Init.Logic <> :type_scope:x_'='_x not
R5944:5947 Coq.FSets.FMapPositive PositiveMap find def
R5952:5957 Coq.FSets.FMapPositive PositiveMap remove def
R5961:5961 Coq.FSets.FMapPositive <> m var
R5959:5959 Coq.FSets.FMapPositive <> i var
R5949:5949 Coq.FSets.FMapPositive <> i var
R5966:5969 Coq.Init.Datatypes <> None constr
R6116:6120 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6116:6120 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6116:6120 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6176:6178 Coq.Init.Logic <> :type_scope:x_'='_x not
R6143:6146 Coq.FSets.FMapPositive PositiveMap find def
R6151:6156 Coq.FSets.FMapPositive PositiveMap remove def
R6161:6164 Coq.FSets.FMapPositive PositiveMap Node constr
R6179:6182 Coq.Init.Datatypes <> None constr
R6176:6178 Coq.Init.Logic <> :type_scope:x_'='_x not
R6143:6146 Coq.FSets.FMapPositive PositiveMap find def
R6151:6156 Coq.FSets.FMapPositive PositiveMap remove def
R6161:6164 Coq.FSets.FMapPositive PositiveMap Node constr
R6179:6182 Coq.Init.Datatypes <> None constr
R6204:6209 Coq.FSets.FMapPositive PositiveMap remove def
R6214:6217 Coq.FSets.FMapPositive PositiveMap Node constr
R6204:6209 Coq.FSets.FMapPositive PositiveMap remove def
R6214:6217 Coq.FSets.FMapPositive PositiveMap Node constr
R6373:6377 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6373:6377 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6373:6377 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6433:6435 Coq.Init.Logic <> :type_scope:x_'='_x not
R6400:6403 Coq.FSets.FMapPositive PositiveMap find def
R6408:6413 Coq.FSets.FMapPositive PositiveMap remove def
R6418:6421 Coq.FSets.FMapPositive PositiveMap Node constr
R6436:6439 Coq.Init.Datatypes <> None constr
R6433:6435 Coq.Init.Logic <> :type_scope:x_'='_x not
R6400:6403 Coq.FSets.FMapPositive PositiveMap find def
R6408:6413 Coq.FSets.FMapPositive PositiveMap remove def
R6418:6421 Coq.FSets.FMapPositive PositiveMap Node constr
R6436:6439 Coq.Init.Datatypes <> None constr
R6461:6466 Coq.FSets.FMapPositive PositiveMap remove def
R6471:6474 Coq.FSets.FMapPositive PositiveMap Node constr
R6461:6466 Coq.FSets.FMapPositive PositiveMap remove def
R6471:6474 Coq.FSets.FMapPositive PositiveMap Node constr
prf 6604:6606 PositiveMap gro
R6626:6628 Coq.FSets.FMapPositive PositiveMap key def
R6635:6635 Coq.FSets.FMapPositive PositiveMap t def
R6637:6637 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R6651:6654 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6674:6676 Coq.Init.Logic <> :type_scope:x_'='_x not
R6655:6658 Coq.FSets.FMapPositive PositiveMap find def
R6663:6668 Coq.FSets.FMapPositive PositiveMap remove def
R6672:6672 Coq.FSets.FMapPositive <> m var
R6670:6670 Coq.FSets.FMapPositive <> j var
R6660:6660 Coq.FSets.FMapPositive <> i var
R6677:6680 Coq.FSets.FMapPositive PositiveMap find def
R6684:6684 Coq.FSets.FMapPositive <> m var
R6682:6682 Coq.FSets.FMapPositive <> i var
R6646:6649 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R6645:6645 Coq.FSets.FMapPositive <> i var
R6650:6650 Coq.FSets.FMapPositive <> j var
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6766:6770 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6773:6774 Coq.Numbers.BinNums <> xI constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6802:6806 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6809:6810 Coq.Numbers.BinNums <> xO constr
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6838:6842 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R6975:6979 Coq.FSets.FMapPositive PositiveMap rleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7012:7016 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7074:7076 Coq.Init.Logic <> :type_scope:x_'='_x not
R7038:7041 Coq.FSets.FMapPositive PositiveMap find def
R7046:7051 Coq.FSets.FMapPositive PositiveMap remove def
R7056:7059 Coq.FSets.FMapPositive PositiveMap Node constr
R7077:7080 Coq.FSets.FMapPositive PositiveMap find def
R7085:7088 Coq.FSets.FMapPositive PositiveMap Node constr
R7125:7130 Coq.FSets.FMapPositive PositiveMap remove def
R7135:7138 Coq.FSets.FMapPositive PositiveMap Node constr
R7168:7172 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7074:7076 Coq.Init.Logic <> :type_scope:x_'='_x not
R7038:7041 Coq.FSets.FMapPositive PositiveMap find def
R7046:7051 Coq.FSets.FMapPositive PositiveMap remove def
R7056:7059 Coq.FSets.FMapPositive PositiveMap Node constr
R7077:7080 Coq.FSets.FMapPositive PositiveMap find def
R7085:7088 Coq.FSets.FMapPositive PositiveMap Node constr
R7125:7130 Coq.FSets.FMapPositive PositiveMap remove def
R7135:7138 Coq.FSets.FMapPositive PositiveMap Node constr
R7168:7172 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7168:7172 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7168:7172 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7233:7238 Coq.FSets.FMapPositive PositiveMap remove def
R7243:7246 Coq.FSets.FMapPositive PositiveMap Node constr
R7284:7288 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7233:7238 Coq.FSets.FMapPositive PositiveMap remove def
R7243:7246 Coq.FSets.FMapPositive PositiveMap Node constr
R7284:7288 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7284:7288 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7284:7288 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7323:7328 Coq.FSets.FMapPositive PositiveMap remove def
R7333:7336 Coq.FSets.FMapPositive PositiveMap Node constr
R7373:7377 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7323:7328 Coq.FSets.FMapPositive PositiveMap remove def
R7333:7336 Coq.FSets.FMapPositive PositiveMap Node constr
R7373:7377 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7373:7377 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7373:7377 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7444:7446 Coq.Init.Logic <> :type_scope:x_'='_x not
R7407:7410 Coq.FSets.FMapPositive PositiveMap find def
R7415:7420 Coq.FSets.FMapPositive PositiveMap remove def
R7425:7428 Coq.FSets.FMapPositive PositiveMap Node constr
R7447:7450 Coq.FSets.FMapPositive PositiveMap find def
R7455:7458 Coq.FSets.FMapPositive PositiveMap Node constr
R7496:7501 Coq.FSets.FMapPositive PositiveMap remove def
R7506:7509 Coq.FSets.FMapPositive PositiveMap Node constr
R7540:7544 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7444:7446 Coq.Init.Logic <> :type_scope:x_'='_x not
R7407:7410 Coq.FSets.FMapPositive PositiveMap find def
R7415:7420 Coq.FSets.FMapPositive PositiveMap remove def
R7425:7428 Coq.FSets.FMapPositive PositiveMap Node constr
R7447:7450 Coq.FSets.FMapPositive PositiveMap find def
R7455:7458 Coq.FSets.FMapPositive PositiveMap Node constr
R7496:7501 Coq.FSets.FMapPositive PositiveMap remove def
R7506:7509 Coq.FSets.FMapPositive PositiveMap Node constr
R7540:7544 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7540:7544 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7540:7544 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7605:7610 Coq.FSets.FMapPositive PositiveMap remove def
R7615:7618 Coq.FSets.FMapPositive PositiveMap Node constr
R7655:7659 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7605:7610 Coq.FSets.FMapPositive PositiveMap remove def
R7615:7618 Coq.FSets.FMapPositive PositiveMap Node constr
R7655:7659 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7655:7659 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7694:7699 Coq.FSets.FMapPositive PositiveMap remove def
R7704:7707 Coq.FSets.FMapPositive PositiveMap Node constr
R7745:7749 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7694:7699 Coq.FSets.FMapPositive PositiveMap remove def
R7704:7707 Coq.FSets.FMapPositive PositiveMap Node constr
R7745:7749 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7745:7749 Coq.FSets.FMapPositive PositiveMap gleaf thm
prf 7785:7801 PositiveMap xelements_correct
R7821:7821 Coq.FSets.FMapPositive PositiveMap t def
R7823:7823 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R7833:7835 Coq.FSets.FMapPositive PositiveMap key def
R7842:7842 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R7869:7872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7873:7879 Coq.Lists.List <> In def
R7898:7906 Coq.FSets.FMapPositive PositiveMap xelements def
R7910:7910 Coq.FSets.FMapPositive <> j var
R7908:7908 Coq.FSets.FMapPositive <> m var
R7881:7881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7892:7893 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7895:7895 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7882:7887 Coq.FSets.FMapPositive <> append def
R7891:7891 Coq.FSets.FMapPositive <> i var
R7889:7889 Coq.FSets.FMapPositive <> j var
R7894:7894 Coq.FSets.FMapPositive <> v var
R7860:7862 Coq.Init.Logic <> :type_scope:x_'='_x not
R7852:7855 Coq.FSets.FMapPositive PositiveMap find def
R7859:7859 Coq.FSets.FMapPositive <> m var
R7857:7857 Coq.FSets.FMapPositive <> i var
R7863:7866 Coq.Init.Datatypes <> Some constr
R7868:7868 Coq.FSets.FMapPositive <> v var
R7968:7972 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7968:7972 Coq.FSets.FMapPositive PositiveMap gleaf thm
R7968:7972 Coq.FSets.FMapPositive PositiveMap gleaf thm
R8064:8077 Coq.FSets.FMapPositive <> append_assoc_1 thm
R8086:8094 Coq.Lists.List <> in_or_app thm
R8110:8116 Coq.Lists.List <> in_cons thm
R8064:8077 Coq.FSets.FMapPositive <> append_assoc_1 thm
R8064:8077 Coq.FSets.FMapPositive <> append_assoc_1 thm
R8086:8094 Coq.Lists.List <> in_or_app thm
R8110:8116 Coq.Lists.List <> in_cons thm
R8163:8176 Coq.FSets.FMapPositive <> append_assoc_0 thm
R8185:8193 Coq.Lists.List <> in_or_app thm
R8163:8176 Coq.FSets.FMapPositive <> append_assoc_0 thm
R8163:8176 Coq.FSets.FMapPositive <> append_assoc_0 thm
R8185:8193 Coq.Lists.List <> in_or_app thm
R8236:8251 Coq.FSets.FMapPositive <> append_neutral_r thm
R8260:8268 Coq.Lists.List <> in_or_app thm
R8313:8317 Coq.Lists.List <> in_eq thm
R8236:8251 Coq.FSets.FMapPositive <> append_neutral_r thm
R8236:8251 Coq.FSets.FMapPositive <> append_neutral_r thm
R8260:8268 Coq.Lists.List <> in_or_app thm
R8313:8317 Coq.Lists.List <> in_eq thm
R8336:8349 Coq.FSets.FMapPositive <> append_assoc_1 thm
R8358:8366 Coq.Lists.List <> in_or_app thm
R8336:8349 Coq.FSets.FMapPositive <> append_assoc_1 thm
R8336:8349 Coq.FSets.FMapPositive <> append_assoc_1 thm
R8358:8366 Coq.Lists.List <> in_or_app thm
R8410:8423 Coq.FSets.FMapPositive <> append_assoc_0 thm
R8432:8440 Coq.Lists.List <> in_or_app thm
R8410:8423 Coq.FSets.FMapPositive <> append_assoc_0 thm
R8410:8423 Coq.FSets.FMapPositive <> append_assoc_0 thm
R8432:8440 Coq.Lists.List <> in_or_app thm
prf 8507:8522 PositiveMap elements_correct
R8540:8540 Coq.FSets.FMapPositive PositiveMap t def
R8542:8542 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R8549:8551 Coq.FSets.FMapPositive PositiveMap key def
R8558:8558 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R8583:8586 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8587:8593 Coq.Lists.List <> In def
R8603:8610 Coq.FSets.FMapPositive PositiveMap elements def
R8612:8612 Coq.FSets.FMapPositive <> m var
R8595:8595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8597:8598 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8600:8600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8596:8596 Coq.FSets.FMapPositive <> i var
R8599:8599 Coq.FSets.FMapPositive <> v var
R8574:8576 Coq.Init.Logic <> :type_scope:x_'='_x not
R8566:8569 Coq.FSets.FMapPositive PositiveMap find def
R8573:8573 Coq.FSets.FMapPositive <> m var
R8571:8571 Coq.FSets.FMapPositive <> i var
R8577:8580 Coq.Init.Datatypes <> Some constr
R8582:8582 Coq.FSets.FMapPositive <> v var
R8656:8672 Coq.FSets.FMapPositive PositiveMap xelements_correct thm
R8678:8679 Coq.Numbers.BinNums <> xH constr
R8656:8672 Coq.FSets.FMapPositive PositiveMap xelements_correct thm
R8678:8679 Coq.Numbers.BinNums <> xH constr
def 8704:8708 PositiveMap xfind
R8717:8719 Coq.FSets.FMapPositive PositiveMap key def
R8727:8727 Coq.FSets.FMapPositive PositiveMap t def
R8729:8729 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R8734:8739 Coq.Init.Datatypes <> option ind
R8741:8741 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R8761:8761 Coq.FSets.FMapPositive <> j var
R8758:8758 Coq.FSets.FMapPositive <> i var
R8779:8780 Coq.Numbers.BinNums <> xH constr
R8785:8788 Coq.FSets.FMapPositive PositiveMap find def
R8792:8792 Coq.FSets.FMapPositive <> m var
R8790:8790 Coq.FSets.FMapPositive <> i var
R8802:8803 Coq.Numbers.BinNums <> xO constr
R8809:8810 Coq.Numbers.BinNums <> xO constr
R8818:8822 Coq.FSets.FMapPositive <> xfind def
R8830:8830 Coq.FSets.FMapPositive <> m var
R8840:8841 Coq.Numbers.BinNums <> xI constr
R8847:8848 Coq.Numbers.BinNums <> xI constr
R8856:8860 Coq.FSets.FMapPositive <> xfind def
R8868:8868 Coq.FSets.FMapPositive <> m var
R8886:8889 Coq.Init.Datatypes <> None constr
prf 8912:8921 PositiveMap xfind_left
R8945:8947 Coq.FSets.FMapPositive PositiveMap key def
R8959:8959 Coq.FSets.FMapPositive PositiveMap t def
R8961:8961 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R8969:8974 Coq.Init.Datatypes <> option ind
R8976:8976 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R8984:8984 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R9032:9035 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9060:9062 Coq.Init.Logic <> :type_scope:x_'='_x not
R9036:9040 Coq.FSets.FMapPositive PositiveMap xfind def
R9047:9050 Coq.FSets.FMapPositive PositiveMap Node constr
R9057:9058 Coq.FSets.FMapPositive <> m2 var
R9055:9055 Coq.FSets.FMapPositive <> o var
R9052:9053 Coq.FSets.FMapPositive <> m1 var
R9044:9044 Coq.FSets.FMapPositive <> j var
R9042:9042 Coq.FSets.FMapPositive <> i var
R9063:9066 Coq.Init.Datatypes <> Some constr
R9068:9068 Coq.FSets.FMapPositive <> v var
R9023:9025 Coq.Init.Logic <> :type_scope:x_'='_x not
R8994:8998 Coq.FSets.FMapPositive PositiveMap xfind def
R9021:9022 Coq.FSets.FMapPositive <> m1 var
R9003:9008 Coq.FSets.FMapPositive <> append def
R9013:9014 Coq.Numbers.BinNums <> xO constr
R9016:9017 Coq.Numbers.BinNums <> xH constr
R9010:9010 Coq.FSets.FMapPositive <> j var
R9000:9000 Coq.FSets.FMapPositive <> i var
R9026:9029 Coq.Init.Datatypes <> Some constr
R9031:9031 Coq.FSets.FMapPositive <> v var
prf 9218:9229 PositiveMap xelements_ii
R9250:9250 Coq.FSets.FMapPositive PositiveMap t def
R9252:9252 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R9262:9264 Coq.FSets.FMapPositive PositiveMap key def
R9271:9271 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R9319:9322 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9323:9329 Coq.Lists.List <> In def
R9339:9347 Coq.FSets.FMapPositive PositiveMap xelements def
R9351:9351 Coq.FSets.FMapPositive <> j var
R9349:9349 Coq.FSets.FMapPositive <> m var
R9331:9331 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9333:9334 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9336:9336 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9332:9332 Coq.FSets.FMapPositive <> i var
R9335:9335 Coq.FSets.FMapPositive <> v var
R9281:9287 Coq.Lists.List <> In def
R9300:9308 Coq.FSets.FMapPositive PositiveMap xelements def
R9313:9314 Coq.Numbers.BinNums <> xI constr
R9316:9316 Coq.FSets.FMapPositive <> j var
R9310:9310 Coq.FSets.FMapPositive <> m var
R9289:9289 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9294:9295 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9297:9297 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9290:9291 Coq.Numbers.BinNums <> xI constr
R9293:9293 Coq.FSets.FMapPositive <> i var
R9296:9296 Coq.FSets.FMapPositive <> v var
R9461:9469 Coq.Lists.List <> in_app_or thm
R9496:9504 Coq.Lists.List <> in_or_app thm
R9461:9469 Coq.Lists.List <> in_app_or thm
R9461:9469 Coq.Lists.List <> in_app_or thm
R9496:9504 Coq.Lists.List <> in_or_app thm
R9496:9504 Coq.Lists.List <> in_or_app thm
R9496:9504 Coq.Lists.List <> in_or_app thm
R9496:9504 Coq.Lists.List <> in_or_app thm
R9564:9569 Coq.Lists.List <> in_inv thm
R9564:9569 Coq.Lists.List <> in_inv thm
R9614:9618 Coq.Lists.List <> in_eq thm
R9614:9618 Coq.Lists.List <> in_eq thm
R9636:9642 Coq.Lists.List <> in_cons thm
R9636:9642 Coq.Lists.List <> in_cons thm
prf 9748:9759 PositiveMap xelements_io
R9780:9780 Coq.FSets.FMapPositive PositiveMap t def
R9782:9782 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R9792:9794 Coq.FSets.FMapPositive PositiveMap key def
R9801:9801 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R9811:9811 Coq.Init.Logic <> :type_scope:'~'_x not
R9812:9818 Coq.Lists.List <> In def
R9831:9839 Coq.FSets.FMapPositive PositiveMap xelements def
R9844:9845 Coq.Numbers.BinNums <> xO constr
R9847:9847 Coq.FSets.FMapPositive <> j var
R9841:9841 Coq.FSets.FMapPositive <> m var
R9820:9820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9825:9826 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9828:9828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9821:9822 Coq.Numbers.BinNums <> xI constr
R9824:9824 Coq.FSets.FMapPositive <> i var
R9827:9827 Coq.FSets.FMapPositive <> v var
R9955:9963 Coq.Lists.List <> in_app_or thm
R9955:9963 Coq.Lists.List <> in_app_or thm
R9955:9963 Coq.Lists.List <> in_app_or thm
R10024:10029 Coq.Lists.List <> in_inv thm
R10024:10029 Coq.Lists.List <> in_inv thm
prf 10171:10182 PositiveMap xelements_oo
R10203:10203 Coq.FSets.FMapPositive PositiveMap t def
R10205:10205 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R10215:10217 Coq.FSets.FMapPositive PositiveMap key def
R10224:10224 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R10272:10275 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10276:10282 Coq.Lists.List <> In def
R10292:10300 Coq.FSets.FMapPositive PositiveMap xelements def
R10304:10304 Coq.FSets.FMapPositive <> j var
R10302:10302 Coq.FSets.FMapPositive <> m var
R10284:10284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10286:10287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10289:10289 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10285:10285 Coq.FSets.FMapPositive <> i var
R10288:10288 Coq.FSets.FMapPositive <> v var
R10234:10240 Coq.Lists.List <> In def
R10253:10261 Coq.FSets.FMapPositive PositiveMap xelements def
R10266:10267 Coq.Numbers.BinNums <> xO constr
R10269:10269 Coq.FSets.FMapPositive <> j var
R10263:10263 Coq.FSets.FMapPositive <> m var
R10242:10242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10247:10248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10250:10250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10243:10244 Coq.Numbers.BinNums <> xO constr
R10246:10246 Coq.FSets.FMapPositive <> i var
R10249:10249 Coq.FSets.FMapPositive <> v var
R10414:10422 Coq.Lists.List <> in_app_or thm
R10449:10457 Coq.Lists.List <> in_or_app thm
R10414:10422 Coq.Lists.List <> in_app_or thm
R10414:10422 Coq.Lists.List <> in_app_or thm
R10449:10457 Coq.Lists.List <> in_or_app thm
R10449:10457 Coq.Lists.List <> in_or_app thm
R10449:10457 Coq.Lists.List <> in_or_app thm
R10449:10457 Coq.Lists.List <> in_or_app thm
R10517:10522 Coq.Lists.List <> in_inv thm
R10517:10522 Coq.Lists.List <> in_inv thm
R10567:10571 Coq.Lists.List <> in_eq thm
R10567:10571 Coq.Lists.List <> in_eq thm
R10589:10595 Coq.Lists.List <> in_cons thm
R10589:10595 Coq.Lists.List <> in_cons thm
prf 10701:10712 PositiveMap xelements_oi
R10733:10733 Coq.FSets.FMapPositive PositiveMap t def
R10735:10735 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R10745:10747 Coq.FSets.FMapPositive PositiveMap key def
R10754:10754 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R10764:10764 Coq.Init.Logic <> :type_scope:'~'_x not
R10765:10771 Coq.Lists.List <> In def
R10784:10792 Coq.FSets.FMapPositive PositiveMap xelements def
R10797:10798 Coq.Numbers.BinNums <> xI constr
R10800:10800 Coq.FSets.FMapPositive <> j var
R10794:10794 Coq.FSets.FMapPositive <> m var
R10773:10773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10778:10779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10781:10781 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10774:10775 Coq.Numbers.BinNums <> xO constr
R10777:10777 Coq.FSets.FMapPositive <> i var
R10780:10780 Coq.FSets.FMapPositive <> v var
R10908:10916 Coq.Lists.List <> in_app_or thm
R10908:10916 Coq.Lists.List <> in_app_or thm
R10908:10916 Coq.Lists.List <> in_app_or thm
R10977:10982 Coq.Lists.List <> in_inv thm
R10977:10982 Coq.Lists.List <> in_inv thm
prf 11124:11135 PositiveMap xelements_ih
R11160:11160 Coq.FSets.FMapPositive PositiveMap t def
R11162:11162 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R11169:11174 Coq.Init.Datatypes <> option ind
R11176:11176 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R11184:11186 Coq.FSets.FMapPositive PositiveMap key def
R11193:11193 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R11250:11253 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11254:11260 Coq.Lists.List <> In def
R11270:11278 Coq.FSets.FMapPositive PositiveMap xelements def
R11283:11284 Coq.Numbers.BinNums <> xH constr
R11280:11281 Coq.FSets.FMapPositive <> m2 var
R11262:11262 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11264:11265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11267:11267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11263:11263 Coq.FSets.FMapPositive <> i var
R11266:11266 Coq.FSets.FMapPositive <> v var
R11203:11209 Coq.Lists.List <> In def
R11222:11230 Coq.FSets.FMapPositive PositiveMap xelements def
R11247:11248 Coq.Numbers.BinNums <> xH constr
R11233:11236 Coq.FSets.FMapPositive PositiveMap Node constr
R11243:11244 Coq.FSets.FMapPositive <> m2 var
R11241:11241 Coq.FSets.FMapPositive <> o var
R11238:11239 Coq.FSets.FMapPositive <> m1 var
R11211:11211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11216:11217 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11219:11219 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11212:11213 Coq.Numbers.BinNums <> xI constr
R11215:11215 Coq.FSets.FMapPositive <> i var
R11218:11218 Coq.FSets.FMapPositive <> v var
R11342:11350 Coq.Lists.List <> in_app_or thm
R11342:11350 Coq.Lists.List <> in_app_or thm
R11342:11350 Coq.Lists.List <> in_app_or thm
R11378:11384 Coq.Lists.List <> In def
R11397:11405 Coq.FSets.FMapPositive PositiveMap xelements def
R11386:11386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11391:11392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11394:11394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11387:11388 Coq.Numbers.BinNums <> xI constr
R11427:11438 Coq.FSets.FMapPositive PositiveMap xelements_io thm
R11378:11384 Coq.Lists.List <> In def
R11397:11405 Coq.FSets.FMapPositive PositiveMap xelements def
R11386:11386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11391:11392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11394:11394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11387:11388 Coq.Numbers.BinNums <> xI constr
R11427:11438 Coq.FSets.FMapPositive PositiveMap xelements_io thm
R11465:11470 Coq.Lists.List <> in_inv thm
R11465:11470 Coq.Lists.List <> in_inv thm
R11513:11524 Coq.FSets.FMapPositive PositiveMap xelements_ii thm
R11513:11524 Coq.FSets.FMapPositive PositiveMap xelements_ii thm
R11549:11555 Coq.Lists.List <> In def
R11568:11576 Coq.FSets.FMapPositive PositiveMap xelements def
R11557:11557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11562:11563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11565:11565 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11558:11559 Coq.Numbers.BinNums <> xI constr
R11598:11609 Coq.FSets.FMapPositive PositiveMap xelements_io thm
R11549:11555 Coq.Lists.List <> In def
R11568:11576 Coq.FSets.FMapPositive PositiveMap xelements def
R11557:11557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11562:11563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11565:11565 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11558:11559 Coq.Numbers.BinNums <> xI constr
R11598:11609 Coq.FSets.FMapPositive PositiveMap xelements_io thm
R11632:11643 Coq.FSets.FMapPositive PositiveMap xelements_ii thm
R11632:11643 Coq.FSets.FMapPositive PositiveMap xelements_ii thm
prf 11672:11683 PositiveMap xelements_oh
R11708:11708 Coq.FSets.FMapPositive PositiveMap t def
R11710:11710 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R11717:11722 Coq.Init.Datatypes <> option ind
R11724:11724 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R11732:11734 Coq.FSets.FMapPositive PositiveMap key def
R11741:11741 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R11798:11801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11802:11808 Coq.Lists.List <> In def
R11818:11826 Coq.FSets.FMapPositive PositiveMap xelements def
R11831:11832 Coq.Numbers.BinNums <> xH constr
R11828:11829 Coq.FSets.FMapPositive <> m1 var
R11810:11810 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11812:11813 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11815:11815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11811:11811 Coq.FSets.FMapPositive <> i var
R11814:11814 Coq.FSets.FMapPositive <> v var
R11751:11757 Coq.Lists.List <> In def
R11770:11778 Coq.FSets.FMapPositive PositiveMap xelements def
R11795:11796 Coq.Numbers.BinNums <> xH constr
R11781:11784 Coq.FSets.FMapPositive PositiveMap Node constr
R11791:11792 Coq.FSets.FMapPositive <> m2 var
R11789:11789 Coq.FSets.FMapPositive <> o var
R11786:11787 Coq.FSets.FMapPositive <> m1 var
R11759:11759 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11764:11765 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11767:11767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11760:11761 Coq.Numbers.BinNums <> xO constr
R11763:11763 Coq.FSets.FMapPositive <> i var
R11766:11766 Coq.FSets.FMapPositive <> v var
R11890:11898 Coq.Lists.List <> in_app_or thm
R11890:11898 Coq.Lists.List <> in_app_or thm
R11890:11898 Coq.Lists.List <> in_app_or thm
R11924:11935 Coq.FSets.FMapPositive PositiveMap xelements_oo thm
R11924:11935 Coq.FSets.FMapPositive PositiveMap xelements_oo thm
R11962:11967 Coq.Lists.List <> in_inv thm
R11962:11967 Coq.Lists.List <> in_inv thm
R12012:12018 Coq.Lists.List <> In def
R12031:12039 Coq.FSets.FMapPositive PositiveMap xelements def
R12020:12020 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12025:12026 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12028:12028 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12021:12022 Coq.Numbers.BinNums <> xO constr
R12061:12072 Coq.FSets.FMapPositive PositiveMap xelements_oi thm
R12012:12018 Coq.Lists.List <> In def
R12031:12039 Coq.FSets.FMapPositive PositiveMap xelements def
R12020:12020 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12025:12026 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12028:12028 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12021:12022 Coq.Numbers.BinNums <> xO constr
R12061:12072 Coq.FSets.FMapPositive PositiveMap xelements_oi thm
R12095:12106 Coq.FSets.FMapPositive PositiveMap xelements_oo thm
R12095:12106 Coq.FSets.FMapPositive PositiveMap xelements_oo thm
R12131:12137 Coq.Lists.List <> In def
R12150:12158 Coq.FSets.FMapPositive PositiveMap xelements def
R12139:12139 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12144:12145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12147:12147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12140:12141 Coq.Numbers.BinNums <> xO constr
R12180:12191 Coq.FSets.FMapPositive PositiveMap xelements_oi thm
R12131:12137 Coq.Lists.List <> In def
R12150:12158 Coq.FSets.FMapPositive PositiveMap xelements def
R12139:12139 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12144:12145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12147:12147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12140:12141 Coq.Numbers.BinNums <> xO constr
R12180:12191 Coq.FSets.FMapPositive PositiveMap xelements_oi thm
prf 12220:12231 PositiveMap xelements_hi
R12252:12252 Coq.FSets.FMapPositive PositiveMap t def
R12254:12254 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R12262:12264 Coq.FSets.FMapPositive PositiveMap key def
R12271:12271 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R12281:12281 Coq.Init.Logic <> :type_scope:'~'_x not
R12282:12288 Coq.Lists.List <> In def
R12299:12307 Coq.FSets.FMapPositive PositiveMap xelements def
R12312:12313 Coq.Numbers.BinNums <> xI constr
R12315:12315 Coq.FSets.FMapPositive <> i var
R12309:12309 Coq.FSets.FMapPositive <> m var
R12290:12290 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12293:12294 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12296:12296 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12291:12292 Coq.Numbers.BinNums <> xH constr
R12295:12295 Coq.FSets.FMapPositive <> v var
R12423:12431 Coq.Lists.List <> in_app_or thm
R12423:12431 Coq.Lists.List <> in_app_or thm
R12423:12431 Coq.Lists.List <> in_app_or thm
R12502:12507 Coq.Lists.List <> in_inv thm
R12502:12507 Coq.Lists.List <> in_inv thm
prf 12679:12690 PositiveMap xelements_ho
R12711:12711 Coq.FSets.FMapPositive PositiveMap t def
R12713:12713 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R12721:12723 Coq.FSets.FMapPositive PositiveMap key def
R12730:12730 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R12740:12740 Coq.Init.Logic <> :type_scope:'~'_x not
R12741:12747 Coq.Lists.List <> In def
R12758:12766 Coq.FSets.FMapPositive PositiveMap xelements def
R12771:12772 Coq.Numbers.BinNums <> xO constr
R12774:12774 Coq.FSets.FMapPositive <> i var
R12768:12768 Coq.FSets.FMapPositive <> m var
R12749:12749 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12752:12753 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12755:12755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12750:12751 Coq.Numbers.BinNums <> xH constr
R12754:12754 Coq.FSets.FMapPositive <> v var
R12882:12890 Coq.Lists.List <> in_app_or thm
R12882:12890 Coq.Lists.List <> in_app_or thm
R12882:12890 Coq.Lists.List <> in_app_or thm
R12961:12966 Coq.Lists.List <> in_inv thm
R12961:12966 Coq.Lists.List <> in_inv thm
prf 13138:13149 PositiveMap find_xfind_h
R13170:13170 Coq.FSets.FMapPositive PositiveMap t def
R13172:13172 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R13179:13181 Coq.FSets.FMapPositive PositiveMap key def
R13193:13195 Coq.Init.Logic <> :type_scope:x_'='_x not
R13185:13188 Coq.FSets.FMapPositive PositiveMap find def
R13192:13192 Coq.FSets.FMapPositive <> m var
R13190:13190 Coq.FSets.FMapPositive <> i var
R13196:13200 Coq.FSets.FMapPositive PositiveMap xfind def
R13207:13207 Coq.FSets.FMapPositive <> m var
R13204:13205 Coq.Numbers.BinNums <> xH constr
R13202:13202 Coq.FSets.FMapPositive <> i var
prf 13272:13289 PositiveMap xelements_complete
R13312:13314 Coq.FSets.FMapPositive PositiveMap key def
R13321:13321 Coq.FSets.FMapPositive PositiveMap t def
R13323:13323 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R13330:13330 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R13370:13373 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13385:13387 Coq.Init.Logic <> :type_scope:x_'='_x not
R13374:13378 Coq.FSets.FMapPositive PositiveMap xfind def
R13384:13384 Coq.FSets.FMapPositive <> m var
R13382:13382 Coq.FSets.FMapPositive <> j var
R13380:13380 Coq.FSets.FMapPositive <> i var
R13388:13391 Coq.Init.Datatypes <> Some constr
R13393:13393 Coq.FSets.FMapPositive <> v var
R13340:13346 Coq.Lists.List <> In def
R13356:13364 Coq.FSets.FMapPositive PositiveMap xelements def
R13368:13368 Coq.FSets.FMapPositive <> j var
R13366:13366 Coq.FSets.FMapPositive <> m var
R13348:13348 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13350:13351 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13353:13353 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13349:13349 Coq.FSets.FMapPositive <> i var
R13352:13352 Coq.FSets.FMapPositive <> v var
R13484:13495 Coq.FSets.FMapPositive PositiveMap xelements_ii thm
R13484:13495 Coq.FSets.FMapPositive PositiveMap xelements_ii thm
R13519:13525 Coq.Lists.List <> In def
R13538:13546 Coq.FSets.FMapPositive PositiveMap xelements def
R13551:13552 Coq.Numbers.BinNums <> xO constr
R13527:13527 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13532:13533 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13535:13535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13528:13529 Coq.Numbers.BinNums <> xI constr
R13572:13583 Coq.FSets.FMapPositive PositiveMap xelements_io thm
R13519:13525 Coq.Lists.List <> In def
R13538:13546 Coq.FSets.FMapPositive PositiveMap xelements def
R13551:13552 Coq.Numbers.BinNums <> xO constr
R13527:13527 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13532:13533 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13535:13535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13528:13529 Coq.Numbers.BinNums <> xI constr
R13572:13583 Coq.FSets.FMapPositive PositiveMap xelements_io thm
R13648:13659 Coq.FSets.FMapPositive PositiveMap find_xfind_h thm
R13648:13659 Coq.FSets.FMapPositive PositiveMap find_xfind_h thm
R13648:13659 Coq.FSets.FMapPositive PositiveMap find_xfind_h thm
R13680:13691 Coq.FSets.FMapPositive PositiveMap xelements_ih thm
R13680:13691 Coq.FSets.FMapPositive PositiveMap xelements_ih thm
R13722:13728 Coq.Lists.List <> In def
R13741:13749 Coq.FSets.FMapPositive PositiveMap xelements def
R13754:13755 Coq.Numbers.BinNums <> xI constr
R13730:13730 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13735:13736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13738:13738 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13731:13732 Coq.Numbers.BinNums <> xO constr
R13775:13786 Coq.FSets.FMapPositive PositiveMap xelements_oi thm
R13722:13728 Coq.Lists.List <> In def
R13741:13749 Coq.FSets.FMapPositive PositiveMap xelements def
R13754:13755 Coq.Numbers.BinNums <> xI constr
R13730:13730 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13735:13736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13738:13738 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13731:13732 Coq.Numbers.BinNums <> xO constr
R13775:13786 Coq.FSets.FMapPositive PositiveMap xelements_oi thm
R13813:13824 Coq.FSets.FMapPositive PositiveMap xelements_oo thm
R13813:13824 Coq.FSets.FMapPositive PositiveMap xelements_oo thm
R13895:13906 Coq.FSets.FMapPositive PositiveMap find_xfind_h thm
R13895:13906 Coq.FSets.FMapPositive PositiveMap find_xfind_h thm
R13895:13906 Coq.FSets.FMapPositive PositiveMap find_xfind_h thm
R13927:13938 Coq.FSets.FMapPositive PositiveMap xelements_oh thm
R13927:13938 Coq.FSets.FMapPositive PositiveMap xelements_oh thm
R13969:13975 Coq.Lists.List <> In def
R13986:13994 Coq.FSets.FMapPositive PositiveMap xelements def
R13999:14000 Coq.Numbers.BinNums <> xI constr
R13977:13977 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13980:13981 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13983:13983 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13978:13979 Coq.Numbers.BinNums <> xH constr
R14020:14031 Coq.FSets.FMapPositive PositiveMap xelements_hi thm
R13969:13975 Coq.Lists.List <> In def
R13986:13994 Coq.FSets.FMapPositive PositiveMap xelements def
R13999:14000 Coq.Numbers.BinNums <> xI constr
R13977:13977 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13980:13981 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13983:13983 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13978:13979 Coq.Numbers.BinNums <> xH constr
R14020:14031 Coq.FSets.FMapPositive PositiveMap xelements_hi thm
R14049:14055 Coq.Lists.List <> In def
R14066:14074 Coq.FSets.FMapPositive PositiveMap xelements def
R14079:14080 Coq.Numbers.BinNums <> xO constr
R14057:14057 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14060:14061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14063:14063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14058:14059 Coq.Numbers.BinNums <> xH constr
R14100:14111 Coq.FSets.FMapPositive PositiveMap xelements_ho thm
R14049:14055 Coq.Lists.List <> In def
R14066:14074 Coq.FSets.FMapPositive PositiveMap xelements def
R14079:14080 Coq.Numbers.BinNums <> xO constr
R14057:14057 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14060:14061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14063:14063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14058:14059 Coq.Numbers.BinNums <> xH constr
R14100:14111 Coq.FSets.FMapPositive PositiveMap xelements_ho thm
R14202:14210 Coq.Lists.List <> in_app_or thm
R14202:14210 Coq.Lists.List <> in_app_or thm
R14202:14210 Coq.Lists.List <> in_app_or thm
R14239:14245 Coq.Lists.List <> In def
R14256:14264 Coq.FSets.FMapPositive PositiveMap xelements def
R14270:14271 Coq.Numbers.BinNums <> xO constr
R14273:14274 Coq.Numbers.BinNums <> xH constr
R14247:14247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14250:14251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14253:14253 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14248:14249 Coq.Numbers.BinNums <> xH constr
R14292:14303 Coq.FSets.FMapPositive PositiveMap xelements_ho thm
R14239:14245 Coq.Lists.List <> In def
R14256:14264 Coq.FSets.FMapPositive PositiveMap xelements def
R14270:14271 Coq.Numbers.BinNums <> xO constr
R14273:14274 Coq.Numbers.BinNums <> xH constr
R14247:14247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14250:14251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14253:14253 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14248:14249 Coq.Numbers.BinNums <> xH constr
R14292:14303 Coq.FSets.FMapPositive PositiveMap xelements_ho thm
R14325:14330 Coq.Lists.List <> in_inv thm
R14325:14330 Coq.Lists.List <> in_inv thm
R14377:14383 Coq.Lists.List <> In def
R14394:14402 Coq.FSets.FMapPositive PositiveMap xelements def
R14408:14409 Coq.Numbers.BinNums <> xI constr
R14411:14412 Coq.Numbers.BinNums <> xH constr
R14385:14385 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14388:14389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14391:14391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14386:14387 Coq.Numbers.BinNums <> xH constr
R14430:14441 Coq.FSets.FMapPositive PositiveMap xelements_hi thm
R14377:14383 Coq.Lists.List <> In def
R14394:14402 Coq.FSets.FMapPositive PositiveMap xelements def
R14408:14409 Coq.Numbers.BinNums <> xI constr
R14411:14412 Coq.Numbers.BinNums <> xH constr
R14385:14385 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14388:14389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14391:14391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14386:14387 Coq.Numbers.BinNums <> xH constr
R14430:14441 Coq.FSets.FMapPositive PositiveMap xelements_hi thm
R14461:14467 Coq.Lists.List <> In def
R14478:14486 Coq.FSets.FMapPositive PositiveMap xelements def
R14492:14493 Coq.Numbers.BinNums <> xO constr
R14495:14496 Coq.Numbers.BinNums <> xH constr
R14469:14469 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14472:14473 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14475:14475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14470:14471 Coq.Numbers.BinNums <> xH constr
R14514:14525 Coq.FSets.FMapPositive PositiveMap xelements_ho thm
R14461:14467 Coq.Lists.List <> In def
R14478:14486 Coq.FSets.FMapPositive PositiveMap xelements def
R14492:14493 Coq.Numbers.BinNums <> xO constr
R14495:14496 Coq.Numbers.BinNums <> xH constr
R14469:14469 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14472:14473 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14475:14475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14470:14471 Coq.Numbers.BinNums <> xH constr
R14514:14525 Coq.FSets.FMapPositive PositiveMap xelements_ho thm
R14545:14551 Coq.Lists.List <> In def
R14562:14570 Coq.FSets.FMapPositive PositiveMap xelements def
R14576:14577 Coq.Numbers.BinNums <> xI constr
R14579:14580 Coq.Numbers.BinNums <> xH constr
R14553:14553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14556:14557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14559:14559 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14554:14555 Coq.Numbers.BinNums <> xH constr
R14598:14609 Coq.FSets.FMapPositive PositiveMap xelements_hi thm
R14545:14551 Coq.Lists.List <> In def
R14562:14570 Coq.FSets.FMapPositive PositiveMap xelements def
R14576:14577 Coq.Numbers.BinNums <> xI constr
R14579:14580 Coq.Numbers.BinNums <> xH constr
R14553:14553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14556:14557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14559:14559 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14554:14555 Coq.Numbers.BinNums <> xH constr
R14598:14609 Coq.FSets.FMapPositive PositiveMap xelements_hi thm
prf 14632:14648 PositiveMap elements_complete
R14666:14666 Coq.FSets.FMapPositive PositiveMap t def
R14668:14668 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R14675:14677 Coq.FSets.FMapPositive PositiveMap key def
R14684:14684 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R14719:14722 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14731:14733 Coq.Init.Logic <> :type_scope:x_'='_x not
R14723:14726 Coq.FSets.FMapPositive PositiveMap find def
R14730:14730 Coq.FSets.FMapPositive <> m var
R14728:14728 Coq.FSets.FMapPositive <> i var
R14734:14737 Coq.Init.Datatypes <> Some constr
R14739:14739 Coq.FSets.FMapPositive <> v var
R14692:14698 Coq.Lists.List <> In def
R14708:14715 Coq.FSets.FMapPositive PositiveMap elements def
R14717:14717 Coq.FSets.FMapPositive <> m var
R14700:14700 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14702:14703 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14705:14705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14701:14701 Coq.FSets.FMapPositive <> i var
R14704:14704 Coq.FSets.FMapPositive <> v var
R14782:14789 Coq.FSets.FMapPositive PositiveMap elements def
R14809:14820 Coq.FSets.FMapPositive PositiveMap find_xfind_h thm
R14809:14820 Coq.FSets.FMapPositive PositiveMap find_xfind_h thm
R14809:14820 Coq.FSets.FMapPositive PositiveMap find_xfind_h thm
R14834:14851 Coq.FSets.FMapPositive PositiveMap xelements_complete thm
R14855:14856 Coq.Numbers.BinNums <> xH constr
R14834:14851 Coq.FSets.FMapPositive PositiveMap xelements_complete thm
R14855:14856 Coq.Numbers.BinNums <> xH constr
prf 14882:14891 PositiveMap cardinal_1
R14909:14909 Coq.FSets.FMapPositive PositiveMap t def
R14911:14911 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R14925:14927 Coq.Init.Logic <> :type_scope:x_'='_x not
R14915:14922 Coq.FSets.FMapPositive PositiveMap cardinal def
R14924:14924 Coq.FSets.FMapPositive <> m var
R14928:14933 Coq.Init.Datatypes <> length def
R14936:14943 Coq.FSets.FMapPositive PositiveMap elements def
R14945:14945 Coq.FSets.FMapPositive <> m var
R14968:14975 Coq.FSets.FMapPositive PositiveMap elements def
R15083:15088 Coq.FSets.FMapPositive <> append def
R15104:15109 Coq.FSets.FMapPositive <> append def
R15083:15088 Coq.FSets.FMapPositive <> append def
R15083:15088 Coq.FSets.FMapPositive <> append def
R15104:15109 Coq.FSets.FMapPositive <> append def
R15104:15109 Coq.FSets.FMapPositive <> append def
R15147:15156 Coq.Lists.List <> app_length thm
R15147:15156 Coq.Lists.List <> app_length thm
R15147:15156 Coq.Lists.List <> app_length thm
R15147:15156 Coq.Lists.List <> app_length thm
R15147:15156 Coq.Lists.List <> app_length thm
R15187:15198 Coq.FSets.FMapPositive PositiveMap.A.CompcertSpec <> sec
def 15215:15220 PositiveMap MapsTo
R15225:15227 Coq.FSets.FMapPositive PositiveMap key def
R15232:15232 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R15237:15237 Coq.FSets.FMapPositive PositiveMap t def
R15239:15239 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R15253:15255 Coq.Init.Logic <> :type_scope:x_'='_x not
R15245:15248 Coq.FSets.FMapPositive PositiveMap find def
R15252:15252 Coq.FSets.FMapPositive <> m var
R15250:15250 Coq.FSets.FMapPositive <> i var
R15256:15259 Coq.Init.Datatypes <> Some constr
R15261:15261 Coq.FSets.FMapPositive <> v var
def 15278:15279 PositiveMap In
R15284:15286 Coq.FSets.FMapPositive PositiveMap key def
R15291:15291 Coq.FSets.FMapPositive PositiveMap t def
R15293:15293 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R15299:15305 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15309:15310 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15308:15308 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R15311:15316 Coq.FSets.FMapPositive PositiveMap MapsTo def
R15322:15322 Coq.FSets.FMapPositive <> m var
R15320:15320 Coq.FSets.FMapPositive <> e var
R15318:15318 Coq.FSets.FMapPositive <> i var
def 15339:15343 PositiveMap Empty
R15362:15364 Coq.FSets.FMapPositive PositiveMap key def
R15369:15369 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R15374:15375 Coq.Init.Logic <> :type_scope:'~'_x not
R15376:15381 Coq.FSets.FMapPositive PositiveMap MapsTo def
R15387:15387 Coq.FSets.FMapPositive <> m var
R15385:15385 Coq.FSets.FMapPositive <> e var
R15383:15383 Coq.FSets.FMapPositive <> a var
def 15404:15409 PositiveMap eq_key
R15420:15420 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R15417:15419 Coq.FSets.FMapPositive PositiveMap key def
R15421:15421 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R15427:15430 Coq.FSets.FMapPositive PositiveMap eq def
R15441:15443 Coq.Init.Datatypes <> fst def
R15445:15446 Coq.FSets.FMapPositive <> p' var
R15433:15435 Coq.Init.Datatypes <> fst def
R15437:15437 Coq.FSets.FMapPositive <> p var
def 15464:15473 PositiveMap eq_key_elt
R15484:15484 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R15481:15483 Coq.FSets.FMapPositive PositiveMap key def
R15485:15485 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R15522:15525 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15501:15504 Coq.FSets.FMapPositive PositiveMap eq def
R15515:15517 Coq.Init.Datatypes <> fst def
R15519:15520 Coq.FSets.FMapPositive <> p' var
R15507:15509 Coq.Init.Datatypes <> fst def
R15511:15511 Coq.FSets.FMapPositive <> p var
R15526:15526 Coq.Init.Logic <> :type_scope:x_'='_x not
R15532:15536 Coq.Init.Logic <> :type_scope:x_'='_x not
R15543:15543 Coq.Init.Logic <> :type_scope:x_'='_x not
R15527:15529 Coq.Init.Datatypes <> snd def
R15531:15531 Coq.FSets.FMapPositive <> p var
R15537:15539 Coq.Init.Datatypes <> snd def
R15541:15542 Coq.FSets.FMapPositive <> p' var
def 15560:15565 PositiveMap lt_key
R15576:15576 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R15573:15575 Coq.FSets.FMapPositive PositiveMap key def
R15577:15577 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R15583:15586 Coq.FSets.FMapPositive PositiveMap lt def
R15597:15599 Coq.Init.Datatypes <> fst def
R15601:15602 Coq.FSets.FMapPositive <> p' var
R15589:15591 Coq.Init.Datatypes <> fst def
R15593:15593 Coq.FSets.FMapPositive <> p var
inst 15625:15633 PositiveMap eqk_equiv
R15637:15647 Coq.Classes.RelationClasses <> Equivalence class
R15649:15654 Coq.FSets.FMapPositive PositiveMap eq_key def
inst 15680:15689 PositiveMap eqke_equiv
R15693:15703 Coq.Classes.RelationClasses <> Equivalence class
R15705:15714 Coq.FSets.FMapPositive PositiveMap eq_key_elt def
inst 15740:15751 PositiveMap ltk_strorder
R15755:15765 Coq.Classes.RelationClasses <> StrictOrder class
R15767:15772 Coq.FSets.FMapPositive PositiveMap lt_key def
prf 15789:15796 PositiveMap mem_find
R15823:15825 Coq.Init.Logic <> :type_scope:x_'='_x not
R15816:15818 Coq.FSets.FMapPositive PositiveMap mem def
R15822:15822 Coq.FSets.FMapPositive <> m var
R15820:15820 Coq.FSets.FMapPositive <> x var
R15832:15835 Coq.FSets.FMapPositive PositiveMap find def
R15839:15839 Coq.FSets.FMapPositive <> m var
R15837:15837 Coq.FSets.FMapPositive <> x var
R15846:15849 Coq.Init.Datatypes <> None constr
R15854:15858 Coq.Init.Datatypes <> false constr
R15867:15870 Coq.Init.Datatypes <> true constr
prf 15942:15950 PositiveMap Empty_alt
R15971:15975 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15964:15968 Coq.FSets.FMapPositive PositiveMap Empty def
R15970:15970 Coq.FSets.FMapPositive <> m var
R15994:15996 Coq.Init.Logic <> :type_scope:x_'='_x not
R15986:15989 Coq.FSets.FMapPositive PositiveMap find def
R15993:15993 Coq.FSets.FMapPositive <> m var
R15991:15991 Coq.FSets.FMapPositive <> a var
R15997:16000 Coq.Init.Datatypes <> None constr
R16021:16025 Coq.FSets.FMapPositive PositiveMap Empty def
R16028:16033 Coq.FSets.FMapPositive PositiveMap MapsTo def
R16081:16084 Coq.FSets.FMapPositive PositiveMap find def
R16081:16084 Coq.FSets.FMapPositive PositiveMap find def
prf 16174:16183 PositiveMap Empty_Node
R16219:16223 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16201:16205 Coq.FSets.FMapPositive PositiveMap Empty def
R16208:16211 Coq.FSets.FMapPositive PositiveMap Node constr
R16217:16217 Coq.FSets.FMapPositive <> r var
R16215:16215 Coq.FSets.FMapPositive <> o var
R16213:16213 Coq.FSets.FMapPositive <> l var
R16230:16233 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16225:16225 Coq.Init.Logic <> :type_scope:x_'='_x not
R16224:16224 Coq.FSets.FMapPositive <> o var
R16226:16229 Coq.Init.Datatypes <> None constr
R16241:16244 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16234:16238 Coq.FSets.FMapPositive PositiveMap Empty def
R16240:16240 Coq.FSets.FMapPositive <> l var
R16245:16249 Coq.FSets.FMapPositive PositiveMap Empty def
R16251:16251 Coq.FSets.FMapPositive <> r var
R16298:16306 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16298:16306 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16298:16306 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16388:16396 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16388:16396 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16388:16396 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16388:16396 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16388:16396 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16424:16425 Coq.Numbers.BinNums <> xO constr
R16424:16425 Coq.Numbers.BinNums <> xO constr
R16455:16456 Coq.Numbers.BinNums <> xI constr
R16455:16456 Coq.Numbers.BinNums <> xI constr
R16510:16518 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16510:16518 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16510:16518 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16581:16589 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16581:16589 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16581:16589 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16630:16638 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16630:16638 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R16630:16638 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
sec 16665:16672 PositiveMap.A FMapSpec
prf 16684:16688 PositiveMap mem_1
R16710:16713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16721:16723 Coq.Init.Logic <> :type_scope:x_'='_x not
R16714:16716 Coq.FSets.FMapPositive PositiveMap mem def
R16720:16720 Coq.FSets.FMapPositive <> m var
R16718:16718 Coq.FSets.FMapPositive <> x var
R16724:16727 Coq.Init.Datatypes <> true constr
R16704:16705 Coq.FSets.FMapPositive PositiveMap In def
R16709:16709 Coq.FSets.FMapPositive <> m var
R16707:16707 Coq.FSets.FMapPositive <> x var
R16748:16749 Coq.FSets.FMapPositive PositiveMap In def
R16752:16757 Coq.FSets.FMapPositive PositiveMap MapsTo def
R16780:16787 Coq.FSets.FMapPositive PositiveMap mem_find thm
R16780:16787 Coq.FSets.FMapPositive PositiveMap mem_find thm
R16780:16787 Coq.FSets.FMapPositive PositiveMap mem_find thm
prf 16849:16853 PositiveMap mem_2
R16883:16886 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16887:16888 Coq.FSets.FMapPositive PositiveMap In def
R16892:16892 Coq.FSets.FMapPositive <> m var
R16890:16890 Coq.FSets.FMapPositive <> x var
R16876:16878 Coq.Init.Logic <> :type_scope:x_'='_x not
R16869:16871 Coq.FSets.FMapPositive PositiveMap mem def
R16875:16875 Coq.FSets.FMapPositive <> m var
R16873:16873 Coq.FSets.FMapPositive <> x var
R16879:16882 Coq.Init.Datatypes <> true constr
R16913:16914 Coq.FSets.FMapPositive PositiveMap In def
R16917:16922 Coq.FSets.FMapPositive PositiveMap MapsTo def
R16945:16952 Coq.FSets.FMapPositive PositiveMap mem_find thm
R16945:16952 Coq.FSets.FMapPositive PositiveMap mem_find thm
R16945:16952 Coq.FSets.FMapPositive PositiveMap mem_find thm
R16967:16970 Coq.FSets.FMapPositive PositiveMap find def
R16967:16970 Coq.FSets.FMapPositive PositiveMap find def
var 17040:17040 PositiveMap.A.FMapSpec m
var 17042:17043 PositiveMap.A.FMapSpec m'
var 17045:17047 PositiveMap.A.FMapSpec m''
R17051:17051 Coq.FSets.FMapPositive PositiveMap t def
R17053:17053 Coq.FSets.FMapPositive <> PositiveMap.A.A var
var 17067:17067 PositiveMap.A.FMapSpec x
var 17069:17069 PositiveMap.A.FMapSpec y
var 17071:17071 PositiveMap.A.FMapSpec z
R17075:17077 Coq.FSets.FMapPositive PositiveMap key def
var 17091:17091 PositiveMap.A.FMapSpec e
var 17093:17094 PositiveMap.A.FMapSpec e'
R17098:17098 Coq.FSets.FMapPositive <> PositiveMap.A.A var
prf 17110:17117 PositiveMap MapsTo_1
R17129:17132 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17145:17148 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17149:17154 Coq.FSets.FMapPositive PositiveMap MapsTo def
R17160:17160 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17158:17158 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R17156:17156 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R17133:17138 Coq.FSets.FMapPositive PositiveMap MapsTo def
R17144:17144 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17142:17142 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R17140:17140 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R17121:17124 Coq.FSets.FMapPositive PositiveMap eq def
R17128:17128 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R17126:17126 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
prf 17214:17219 PositiveMap find_1
R17235:17238 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17247:17249 Coq.Init.Logic <> :type_scope:x_'='_x not
R17239:17242 Coq.FSets.FMapPositive PositiveMap find def
R17246:17246 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17244:17244 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R17250:17253 Coq.Init.Datatypes <> Some constr
R17255:17255 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R17223:17228 Coq.FSets.FMapPositive PositiveMap MapsTo def
R17234:17234 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17232:17232 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R17230:17230 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R17274:17279 Coq.FSets.FMapPositive PositiveMap MapsTo def
prf 17302:17307 PositiveMap find_2
R17328:17331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17332:17337 Coq.FSets.FMapPositive PositiveMap MapsTo def
R17343:17343 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17341:17341 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R17339:17339 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R17319:17321 Coq.Init.Logic <> :type_scope:x_'='_x not
R17311:17314 Coq.FSets.FMapPositive PositiveMap find def
R17318:17318 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17316:17316 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R17322:17325 Coq.Init.Datatypes <> Some constr
R17327:17327 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
prf 17380:17386 PositiveMap empty_1
R17390:17394 Coq.FSets.FMapPositive PositiveMap Empty def
R17396:17400 Coq.FSets.FMapPositive PositiveMap empty def
R17422:17430 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R17439:17444 Coq.FSets.FMapPositive PositiveMap gempty thm
R17422:17430 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R17422:17430 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R17439:17444 Coq.FSets.FMapPositive PositiveMap gempty thm
prf 17463:17472 PositiveMap is_empty_1
R17483:17486 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17497:17499 Coq.Init.Logic <> :type_scope:x_'='_x not
R17487:17494 Coq.FSets.FMapPositive PositiveMap is_empty def
R17496:17496 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17500:17503 Coq.Init.Datatypes <> true constr
R17476:17480 Coq.FSets.FMapPositive PositiveMap Empty def
R17482:17482 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17527:17527 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17553:17562 Coq.FSets.FMapPositive PositiveMap Empty_Node thm
R17553:17562 Coq.FSets.FMapPositive PositiveMap Empty_Node thm
R17553:17562 Coq.FSets.FMapPositive PositiveMap Empty_Node thm
prf 17650:17659 PositiveMap is_empty_2
R17680:17683 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17684:17688 Coq.FSets.FMapPositive PositiveMap Empty def
R17690:17690 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17673:17675 Coq.Init.Logic <> :type_scope:x_'='_x not
R17663:17670 Coq.FSets.FMapPositive PositiveMap is_empty def
R17672:17672 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17676:17679 Coq.Init.Datatypes <> true constr
R17714:17714 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17740:17748 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R17740:17748 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R17740:17748 Coq.FSets.FMapPositive PositiveMap Empty_alt thm
R17769:17774 Coq.FSets.FMapPositive PositiveMap gempty thm
R17769:17774 Coq.FSets.FMapPositive PositiveMap gempty thm
R17787:17796 Coq.FSets.FMapPositive PositiveMap Empty_Node thm
R17787:17796 Coq.FSets.FMapPositive PositiveMap Empty_Node thm
R17787:17796 Coq.FSets.FMapPositive PositiveMap Empty_Node thm
R17858:17866 Coq.Init.Datatypes <> andb_prop thm
R17858:17866 Coq.Init.Datatypes <> andb_prop thm
prf 17903:17907 PositiveMap add_1
R17919:17922 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17923:17928 Coq.FSets.FMapPositive PositiveMap MapsTo def
R17935:17937 Coq.FSets.FMapPositive PositiveMap add def
R17943:17943 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R17941:17941 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R17939:17939 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R17932:17932 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R17930:17930 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R17911:17914 Coq.FSets.FMapPositive PositiveMap eq def
R17918:17918 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R17916:17916 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R17965:17970 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18012:18014 Coq.FSets.FMapPositive PositiveMap gss thm
R18012:18014 Coq.FSets.FMapPositive PositiveMap gss thm
prf 18033:18037 PositiveMap add_2
R18051:18054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18067:18070 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18071:18076 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18083:18085 Coq.FSets.FMapPositive PositiveMap add def
R18092:18092 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R18089:18090 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e' var
R18087:18087 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18080:18080 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R18078:18078 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18055:18060 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18066:18066 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R18064:18064 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R18062:18062 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18041:18042 Coq.Init.Logic <> :type_scope:'~'_x not
R18043:18046 Coq.FSets.FMapPositive PositiveMap eq def
R18050:18050 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18048:18048 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18114:18119 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18140:18142 Coq.FSets.FMapPositive PositiveMap gso thm
R18140:18142 Coq.FSets.FMapPositive PositiveMap gso thm
R18140:18142 Coq.FSets.FMapPositive PositiveMap gso thm
R18140:18142 Coq.FSets.FMapPositive PositiveMap gso thm
prf 18167:18171 PositiveMap add_3
R18185:18188 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18212:18215 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18216:18221 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18227:18227 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R18225:18225 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R18223:18223 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18189:18194 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18201:18203 Coq.FSets.FMapPositive PositiveMap add def
R18210:18210 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R18207:18208 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e' var
R18205:18205 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18198:18198 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R18196:18196 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18175:18176 Coq.Init.Logic <> :type_scope:'~'_x not
R18177:18180 Coq.FSets.FMapPositive PositiveMap eq def
R18184:18184 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18182:18182 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18248:18253 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18275:18277 Coq.FSets.FMapPositive PositiveMap gso thm
R18275:18277 Coq.FSets.FMapPositive PositiveMap gso thm
R18275:18277 Coq.FSets.FMapPositive PositiveMap gso thm
R18275:18277 Coq.FSets.FMapPositive PositiveMap gso thm
prf 18302:18309 PositiveMap remove_1
R18321:18324 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18325:18326 Coq.Init.Logic <> :type_scope:'~'_x not
R18327:18328 Coq.FSets.FMapPositive PositiveMap In def
R18333:18338 Coq.FSets.FMapPositive PositiveMap remove def
R18342:18342 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R18340:18340 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18330:18330 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18313:18316 Coq.FSets.FMapPositive PositiveMap eq def
R18320:18320 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18318:18318 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18386:18390 Coq.FSets.FMapPositive PositiveMap mem_1 thm
R18386:18390 Coq.FSets.FMapPositive PositiveMap mem_1 thm
R18407:18414 Coq.FSets.FMapPositive PositiveMap mem_find thm
R18407:18414 Coq.FSets.FMapPositive PositiveMap mem_find thm
R18407:18414 Coq.FSets.FMapPositive PositiveMap mem_find thm
R18452:18454 Coq.FSets.FMapPositive PositiveMap grs thm
R18452:18454 Coq.FSets.FMapPositive PositiveMap grs thm
R18452:18454 Coq.FSets.FMapPositive PositiveMap grs thm
prf 18497:18504 PositiveMap remove_2
R18518:18521 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18534:18537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18538:18543 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18550:18555 Coq.FSets.FMapPositive PositiveMap remove def
R18559:18559 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R18557:18557 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18547:18547 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R18545:18545 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18522:18527 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18533:18533 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R18531:18531 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R18529:18529 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18508:18509 Coq.Init.Logic <> :type_scope:'~'_x not
R18510:18513 Coq.FSets.FMapPositive PositiveMap eq def
R18517:18517 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18515:18515 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18581:18586 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18608:18610 Coq.FSets.FMapPositive PositiveMap gro thm
R18608:18610 Coq.FSets.FMapPositive PositiveMap gro thm
R18608:18610 Coq.FSets.FMapPositive PositiveMap gro thm
R18608:18610 Coq.FSets.FMapPositive PositiveMap gro thm
prf 18635:18642 PositiveMap remove_3
R18669:18672 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18673:18678 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18684:18684 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R18682:18682 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R18680:18680 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18646:18651 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18658:18663 Coq.FSets.FMapPositive PositiveMap remove def
R18667:18667 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R18665:18665 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18655:18655 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R18653:18653 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18705:18710 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18725:18732 Coq.FSets.FMapPositive PositiveMap eq_dec thm
R18736:18736 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18734:18734 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18725:18732 Coq.FSets.FMapPositive PositiveMap eq_dec thm
R18736:18736 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.y var
R18734:18734 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18759:18761 Coq.FSets.FMapPositive PositiveMap grs thm
R18759:18761 Coq.FSets.FMapPositive PositiveMap grs thm
R18759:18761 Coq.FSets.FMapPositive PositiveMap grs thm
R18796:18798 Coq.FSets.FMapPositive PositiveMap gro thm
R18796:18798 Coq.FSets.FMapPositive PositiveMap gro thm
R18796:18798 Coq.FSets.FMapPositive PositiveMap gro thm
R18796:18798 Coq.FSets.FMapPositive PositiveMap gro thm
prf 18823:18832 PositiveMap elements_1
R18853:18856 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18857:18859 Coq.Lists.SetoidList <> InA ind
R18879:18886 Coq.FSets.FMapPositive PositiveMap elements def
R18888:18888 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R18872:18872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18874:18874 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18876:18876 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18873:18873 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18875:18875 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R18861:18870 Coq.FSets.FMapPositive PositiveMap eq_key_elt def
R18841:18846 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18852:18852 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R18850:18850 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R18848:18848 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18910:18915 Coq.FSets.FMapPositive PositiveMap MapsTo def
R18928:18934 Coq.Lists.SetoidList <> InA_alt thm
R18928:18934 Coq.Lists.SetoidList <> InA_alt thm
R18928:18934 Coq.Lists.SetoidList <> InA_alt thm
R18957:18957 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18959:18959 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18961:18961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18958:18958 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18960:18960 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R18957:18957 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18959:18959 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18961:18961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18958:18958 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R18960:18960 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R18994:18997 Coq.FSets.FMapPositive PositiveMap eq def
R19014:19029 Coq.FSets.FMapPositive PositiveMap elements_correct thm
R19014:19029 Coq.FSets.FMapPositive PositiveMap elements_correct thm
prf 19054:19063 PositiveMap elements_2
R19105:19108 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19109:19114 Coq.FSets.FMapPositive PositiveMap MapsTo def
R19120:19120 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R19118:19118 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R19116:19116 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R19072:19074 Coq.Lists.SetoidList <> InA ind
R19094:19101 Coq.FSets.FMapPositive PositiveMap elements def
R19103:19103 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R19087:19087 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19089:19089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19091:19091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19088:19088 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.x var
R19090:19090 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.e var
R19076:19085 Coq.FSets.FMapPositive PositiveMap eq_key_elt def
R19141:19146 Coq.FSets.FMapPositive PositiveMap MapsTo def
R19159:19165 Coq.Lists.SetoidList <> InA_alt thm
R19159:19165 Coq.Lists.SetoidList <> InA_alt thm
R19159:19165 Coq.Lists.SetoidList <> InA_alt thm
R19225:19228 Coq.FSets.FMapPositive PositiveMap eq def
R19263:19279 Coq.FSets.FMapPositive PositiveMap elements_complete thm
R19263:19279 Coq.FSets.FMapPositive PositiveMap elements_complete thm
prf 19304:19322 PositiveMap xelements_bits_lt_1
R19396:19399 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19400:19408 Coq.FSets.FMapPositive PositiveMap bits_lt def
R19413:19413 Coq.FSets.FMapPositive <> p var
R19410:19411 Coq.FSets.FMapPositive <> p0 var
R19350:19356 Coq.Lists.List <> In def
R19366:19374 Coq.FSets.FMapPositive PositiveMap xelements def
R19379:19384 Coq.FSets.FMapPositive <> append def
R19389:19390 Coq.Numbers.BinNums <> xO constr
R19392:19392 Coq.FSets.FMapPositive <> q var
R19386:19386 Coq.FSets.FMapPositive <> p var
R19376:19376 Coq.FSets.FMapPositive <> m var
R19358:19358 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19361:19361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19363:19363 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19359:19360 Coq.FSets.FMapPositive <> p0 var
R19362:19362 Coq.FSets.FMapPositive <> v var
R19449:19466 Coq.FSets.FMapPositive PositiveMap xelements_complete thm
R19449:19466 Coq.FSets.FMapPositive PositiveMap xelements_complete thm
prf 19602:19620 PositiveMap xelements_bits_lt_2
R19694:19697 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19698:19706 Coq.FSets.FMapPositive PositiveMap bits_lt def
R19710:19711 Coq.FSets.FMapPositive <> p0 var
R19708:19708 Coq.FSets.FMapPositive <> p var
R19648:19654 Coq.Lists.List <> In def
R19664:19672 Coq.FSets.FMapPositive PositiveMap xelements def
R19677:19682 Coq.FSets.FMapPositive <> append def
R19687:19688 Coq.Numbers.BinNums <> xI constr
R19690:19690 Coq.FSets.FMapPositive <> q var
R19684:19684 Coq.FSets.FMapPositive <> p var
R19674:19674 Coq.FSets.FMapPositive <> m var
R19656:19656 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19659:19659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19661:19661 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19657:19658 Coq.FSets.FMapPositive <> p0 var
R19660:19660 Coq.FSets.FMapPositive <> v var
R19747:19764 Coq.FSets.FMapPositive PositiveMap xelements_complete thm
R19747:19764 Coq.FSets.FMapPositive PositiveMap xelements_complete thm
prf 19900:19913 PositiveMap xelements_sort
R19927:19930 Coq.Sorting.Sorted <> sort syndef
R19940:19948 Coq.FSets.FMapPositive PositiveMap xelements def
R19952:19952 Coq.FSets.FMapPositive <> p var
R19950:19950 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R19932:19937 Coq.FSets.FMapPositive PositiveMap lt_key def
R19977:19977 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R20046:20054 Coq.Lists.SetoidList <> SortA_app thm
R20062:20071 Coq.FSets.FMapPositive PositiveMap eq_key_elt def
R20046:20054 Coq.Lists.SetoidList <> SortA_app thm
R20062:20071 Coq.FSets.FMapPositive PositiveMap eq_key_elt def
R20118:20124 Coq.Lists.SetoidList <> In_InfA thm
R20118:20124 Coq.Lists.SetoidList <> In_InfA thm
R20178:20196 Coq.FSets.FMapPositive PositiveMap xelements_bits_lt_2 thm
R20178:20196 Coq.FSets.FMapPositive PositiveMap xelements_bits_lt_2 thm
R20237:20243 Coq.Lists.SetoidList <> InA_alt thm
R20237:20243 Coq.Lists.SetoidList <> InA_alt thm
R20237:20243 Coq.Lists.SetoidList <> InA_alt thm
R20237:20243 Coq.Lists.SetoidList <> InA_alt thm
R20237:20243 Coq.Lists.SetoidList <> InA_alt thm
R20487:20505 Coq.FSets.FMapPositive PositiveMap xelements_bits_lt_1 thm
R20487:20505 Coq.FSets.FMapPositive PositiveMap xelements_bits_lt_1 thm
R20523:20537 Coq.FSets.FMapPositive PositiveMap bits_lt_trans thm
R20523:20537 Coq.FSets.FMapPositive PositiveMap bits_lt_trans thm
R20556:20574 Coq.FSets.FMapPositive PositiveMap xelements_bits_lt_1 thm
R20556:20574 Coq.FSets.FMapPositive PositiveMap xelements_bits_lt_1 thm
R20593:20611 Coq.FSets.FMapPositive PositiveMap xelements_bits_lt_2 thm
R20593:20611 Coq.FSets.FMapPositive PositiveMap xelements_bits_lt_2 thm
R20643:20651 Coq.Lists.SetoidList <> SortA_app thm
R20659:20668 Coq.FSets.FMapPositive PositiveMap eq_key_elt def
R20643:20651 Coq.Lists.SetoidList <> SortA_app thm
R20659:20668 Coq.FSets.FMapPositive PositiveMap eq_key_elt def
R20717:20723 Coq.Lists.SetoidList <> InA_alt thm
R20717:20723 Coq.Lists.SetoidList <> InA_alt thm
R20717:20723 Coq.Lists.SetoidList <> InA_alt thm
R20717:20723 Coq.Lists.SetoidList <> InA_alt thm
R20717:20723 Coq.Lists.SetoidList <> InA_alt thm
R20920:20934 Coq.FSets.FMapPositive PositiveMap bits_lt_trans thm
R20920:20934 Coq.FSets.FMapPositive PositiveMap bits_lt_trans thm
R20953:20971 Coq.FSets.FMapPositive PositiveMap xelements_bits_lt_1 thm
R20953:20971 Coq.FSets.FMapPositive PositiveMap xelements_bits_lt_1 thm
R20990:21008 Coq.FSets.FMapPositive PositiveMap xelements_bits_lt_2 thm
R20990:21008 Coq.FSets.FMapPositive PositiveMap xelements_bits_lt_2 thm
prf 21034:21043 PositiveMap elements_3
R21047:21050 Coq.Sorting.Sorted <> sort syndef
R21060:21067 Coq.FSets.FMapPositive PositiveMap elements def
R21069:21069 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R21052:21057 Coq.FSets.FMapPositive PositiveMap lt_key def
R21091:21098 Coq.FSets.FMapPositive PositiveMap elements def
R21109:21122 Coq.FSets.FMapPositive PositiveMap xelements_sort thm
R21109:21122 Coq.FSets.FMapPositive PositiveMap xelements_sort thm
prf 21147:21157 PositiveMap elements_3w
R21161:21166 Coq.Lists.SetoidList <> NoDupA ind
R21176:21183 Coq.FSets.FMapPositive PositiveMap elements def
R21185:21185 Coq.FSets.FMapPositive <> PositiveMap.A.FMapSpec.m var
R21168:21173 Coq.FSets.FMapPositive PositiveMap eq_key def
R21208:21221 Coq.FSets.FMapPositive PositiveMap Sort_NoDupA thm
R21208:21221 Coq.FSets.FMapPositive PositiveMap Sort_NoDupA thm
R21234:21243 Coq.FSets.FMapPositive PositiveMap elements_3 thm
R21234:21243 Coq.FSets.FMapPositive PositiveMap elements_3 thm
R21260:21267 Coq.FSets.FMapPositive PositiveMap.A.FMapSpec <> sec
var 21309:21309 PositiveMap.A B
sec 21330:21333 PositiveMap.A Mapi
var 21350:21350 PositiveMap.A.Mapi f
R21357:21360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21362:21365 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21366:21366 Coq.FSets.FMapPositive <> PositiveMap.A.B var
R21361:21361 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R21354:21356 Coq.FSets.FMapPositive PositiveMap key def
def 21383:21387 PositiveMap xmapi
R21394:21394 Coq.FSets.FMapPositive PositiveMap t def
R21396:21396 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R21404:21406 Coq.FSets.FMapPositive PositiveMap key def
R21411:21411 Coq.FSets.FMapPositive PositiveMap t def
R21413:21413 Coq.FSets.FMapPositive <> PositiveMap.A.B var
R21431:21431 Coq.FSets.FMapPositive <> m var
R21448:21451 Coq.FSets.FMapPositive PositiveMap Leaf constr
R21457:21460 Coq.FSets.FMapPositive PositiveMap Leaf constr
R21462:21462 Coq.FSets.FMapPositive <> PositiveMap.A.B var
R21474:21477 Coq.FSets.FMapPositive PositiveMap Node constr
R21488:21491 Coq.FSets.FMapPositive PositiveMap Node constr
R21602:21606 Coq.FSets.FMapPositive <> xmapi def
R21611:21616 Coq.FSets.FMapPositive <> append def
R21621:21622 Coq.Numbers.BinNums <> xI constr
R21624:21625 Coq.Numbers.BinNums <> xH constr
R21618:21618 Coq.FSets.FMapPositive <> i var
R21552:21561 Coq.Init.Datatypes <> option_map def
R21564:21564 Coq.FSets.FMapPositive <> PositiveMap.A.Mapi.f var
R21566:21566 Coq.FSets.FMapPositive <> i var
R21494:21498 Coq.FSets.FMapPositive <> xmapi def
R21503:21508 Coq.FSets.FMapPositive <> append def
R21513:21514 Coq.Numbers.BinNums <> xO constr
R21516:21517 Coq.Numbers.BinNums <> xH constr
R21510:21510 Coq.FSets.FMapPositive <> i var
def 21658:21661 PositiveMap mapi
R21668:21672 Coq.FSets.FMapPositive PositiveMap xmapi def
R21676:21677 Coq.Numbers.BinNums <> xH constr
R21674:21674 Coq.FSets.FMapPositive <> m var
R21687:21690 Coq.FSets.FMapPositive PositiveMap.A.Mapi <> sec
def 21707:21709 PositiveMap map
R21717:21720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21721:21721 Coq.FSets.FMapPositive <> PositiveMap.A.B var
R21716:21716 Coq.FSets.FMapPositive <> PositiveMap.A.A var
R21729:21732 Coq.FSets.FMapPositive PositiveMap mapi def
R21747:21747 Coq.FSets.FMapPositive <> m var
R21744:21744 Coq.FSets.FMapPositive <> f var
R21757:21757 Coq.FSets.FMapPositive PositiveMap.A <> sec
prf 21769:21774 PositiveMap xgmapi
R21809:21812 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21814:21817 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21818:21818 Coq.FSets.FMapPositive <> B var
R21813:21813 Coq.FSets.FMapPositive <> A var
R21806:21808 Coq.FSets.FMapPositive PositiveMap key def
R21828:21830 Coq.FSets.FMapPositive PositiveMap key def
R21837:21837 Coq.FSets.FMapPositive PositiveMap t def
R21839:21839 Coq.FSets.FMapPositive <> A var
R21869:21871 Coq.Init.Logic <> :type_scope:x_'='_x not
R21849:21852 Coq.FSets.FMapPositive PositiveMap find def
R21857:21861 Coq.FSets.FMapPositive PositiveMap xmapi def
R21867:21867 Coq.FSets.FMapPositive <> j var
R21865:21865 Coq.FSets.FMapPositive <> m var
R21863:21863 Coq.FSets.FMapPositive <> f var
R21854:21854 Coq.FSets.FMapPositive <> i var
R21872:21881 Coq.Init.Datatypes <> option_map def
R21901:21904 Coq.FSets.FMapPositive PositiveMap find def
R21908:21908 Coq.FSets.FMapPositive <> m var
R21906:21906 Coq.FSets.FMapPositive <> i var
R21884:21884 Coq.FSets.FMapPositive <> f var
R21887:21892 Coq.FSets.FMapPositive <> append def
R21896:21896 Coq.FSets.FMapPositive <> i var
R21894:21894 Coq.FSets.FMapPositive <> j var
R21980:21993 Coq.FSets.FMapPositive <> append_assoc_1 thm
R21980:21993 Coq.FSets.FMapPositive <> append_assoc_1 thm
R21980:21993 Coq.FSets.FMapPositive <> append_assoc_1 thm
R22023:22036 Coq.FSets.FMapPositive <> append_assoc_0 thm
R22023:22036 Coq.FSets.FMapPositive <> append_assoc_0 thm
R22023:22036 Coq.FSets.FMapPositive <> append_assoc_0 thm
R22066:22081 Coq.FSets.FMapPositive <> append_neutral_r thm
R22066:22081 Coq.FSets.FMapPositive <> append_neutral_r thm
R22066:22081 Coq.FSets.FMapPositive <> append_neutral_r thm
prf 22111:22115 PositiveMap gmapi
R22148:22151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22153:22156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22157:22157 Coq.FSets.FMapPositive <> B var
R22152:22152 Coq.FSets.FMapPositive <> A var
R22145:22147 Coq.FSets.FMapPositive PositiveMap key def
R22164:22166 Coq.FSets.FMapPositive PositiveMap key def
R22173:22173 Coq.FSets.FMapPositive PositiveMap t def
R22175:22175 Coq.FSets.FMapPositive <> A var
R22200:22202 Coq.Init.Logic <> :type_scope:x_'='_x not
R22183:22186 Coq.FSets.FMapPositive PositiveMap find def
R22191:22194 Coq.FSets.FMapPositive PositiveMap mapi def
R22198:22198 Coq.FSets.FMapPositive <> m var
R22196:22196 Coq.FSets.FMapPositive <> f var
R22188:22188 Coq.FSets.FMapPositive <> i var
R22203:22212 Coq.Init.Datatypes <> option_map def
R22221:22224 Coq.FSets.FMapPositive PositiveMap find def
R22228:22228 Coq.FSets.FMapPositive <> m var
R22226:22226 Coq.FSets.FMapPositive <> i var
R22215:22215 Coq.FSets.FMapPositive <> f var
R22217:22217 Coq.FSets.FMapPositive <> i var
R22260:22263 Coq.FSets.FMapPositive PositiveMap mapi def
R22291:22296 Coq.FSets.FMapPositive <> append def
R22298:22299 Coq.Numbers.BinNums <> xH constr
R22291:22296 Coq.FSets.FMapPositive <> append def
R22298:22299 Coq.Numbers.BinNums <> xH constr
R22314:22319 Coq.FSets.FMapPositive PositiveMap xgmapi thm
R22314:22319 Coq.FSets.FMapPositive PositiveMap xgmapi thm
R22332:22347 Coq.FSets.FMapPositive <> append_neutral_l thm
R22332:22347 Coq.FSets.FMapPositive <> append_neutral_l thm
R22332:22347 Coq.FSets.FMapPositive <> append_neutral_l thm
prf 22372:22377 PositiveMap mapi_1
R22411:22411 Coq.FSets.FMapPositive PositiveMap t def
R22413:22415 Coq.FSets.FMapPositive <> elt var
R22420:22422 Coq.FSets.FMapPositive PositiveMap key def
R22427:22429 Coq.FSets.FMapPositive <> elt var
R22437:22438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22442:22443 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22444:22447 Coq.FSets.FMapPositive <> elt' var
R22439:22441 Coq.FSets.FMapPositive <> elt var
R22434:22436 Coq.FSets.FMapPositive PositiveMap key def
R22467:22474 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22475:22481 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22483:22484 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22493:22496 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22485:22488 Coq.FSets.FMapPositive PositiveMap eq def
R22492:22492 Coq.FSets.FMapPositive <> x var
R22490:22490 Coq.FSets.FMapPositive <> y var
R22497:22502 Coq.FSets.FMapPositive PositiveMap MapsTo def
R22515:22518 Coq.FSets.FMapPositive PositiveMap mapi def
R22522:22522 Coq.FSets.FMapPositive <> m var
R22520:22520 Coq.FSets.FMapPositive <> f var
R22507:22507 Coq.FSets.FMapPositive <> f var
R22511:22511 Coq.FSets.FMapPositive <> e var
R22509:22509 Coq.FSets.FMapPositive <> y var
R22504:22504 Coq.FSets.FMapPositive <> x var
R22455:22460 Coq.FSets.FMapPositive PositiveMap MapsTo def
R22466:22466 Coq.FSets.FMapPositive <> m var
R22464:22464 Coq.FSets.FMapPositive <> e var
R22462:22462 Coq.FSets.FMapPositive <> x var
R22588:22593 Coq.FSets.FMapPositive PositiveMap find_2 thm
R22588:22593 Coq.FSets.FMapPositive PositiveMap find_2 thm
R22610:22615 Coq.FSets.FMapPositive PositiveMap find_1 thm
R22610:22615 Coq.FSets.FMapPositive PositiveMap find_1 thm
R22648:22652 Coq.FSets.FMapPositive PositiveMap gmapi thm
R22648:22652 Coq.FSets.FMapPositive PositiveMap gmapi thm
R22648:22652 Coq.FSets.FMapPositive PositiveMap gmapi thm
prf 22699:22704 PositiveMap mapi_2
R22738:22738 Coq.FSets.FMapPositive PositiveMap t def
R22740:22742 Coq.FSets.FMapPositive <> elt var
R22747:22749 Coq.FSets.FMapPositive PositiveMap key def
R22757:22758 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22762:22763 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22764:22767 Coq.FSets.FMapPositive <> elt' var
R22759:22761 Coq.FSets.FMapPositive <> elt var
R22754:22756 Coq.FSets.FMapPositive PositiveMap key def
R22790:22793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22794:22795 Coq.FSets.FMapPositive PositiveMap In def
R22799:22799 Coq.FSets.FMapPositive <> m var
R22797:22797 Coq.FSets.FMapPositive <> x var
R22775:22776 Coq.FSets.FMapPositive PositiveMap In def
R22781:22784 Coq.FSets.FMapPositive PositiveMap mapi def
R22788:22788 Coq.FSets.FMapPositive <> m var
R22786:22786 Coq.FSets.FMapPositive <> f var
R22778:22778 Coq.FSets.FMapPositive <> x var
R22829:22833 Coq.FSets.FMapPositive PositiveMap mem_2 thm
R22829:22833 Coq.FSets.FMapPositive PositiveMap mem_2 thm
R22846:22853 Coq.FSets.FMapPositive PositiveMap mem_find thm
R22846:22853 Coq.FSets.FMapPositive PositiveMap mem_find thm
R22846:22853 Coq.FSets.FMapPositive PositiveMap mem_find thm
R22893:22898 Coq.FSets.FMapPositive PositiveMap find_1 thm
R22893:22898 Coq.FSets.FMapPositive PositiveMap find_1 thm
R22931:22935 Coq.FSets.FMapPositive PositiveMap gmapi thm
R22931:22935 Coq.FSets.FMapPositive PositiveMap gmapi thm
R22931:22935 Coq.FSets.FMapPositive PositiveMap gmapi thm
R22955:22958 Coq.FSets.FMapPositive PositiveMap find def
R22955:22958 Coq.FSets.FMapPositive PositiveMap find def
prf 23016:23020 PositiveMap map_1
R23050:23050 Coq.FSets.FMapPositive PositiveMap t def
R23052:23054 Coq.FSets.FMapPositive <> elt var
R23059:23061 Coq.FSets.FMapPositive PositiveMap key def
R23066:23068 Coq.FSets.FMapPositive <> elt var
R23076:23077 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23078:23081 Coq.FSets.FMapPositive <> elt' var
R23073:23075 Coq.FSets.FMapPositive <> elt var
R23101:23104 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23105:23110 Coq.FSets.FMapPositive PositiveMap MapsTo def
R23121:23123 Coq.FSets.FMapPositive PositiveMap map def
R23127:23127 Coq.FSets.FMapPositive <> m var
R23125:23125 Coq.FSets.FMapPositive <> f var
R23115:23115 Coq.FSets.FMapPositive <> f var
R23117:23117 Coq.FSets.FMapPositive <> e var
R23112:23112 Coq.FSets.FMapPositive <> x var
R23089:23094 Coq.FSets.FMapPositive PositiveMap MapsTo def
R23100:23100 Coq.FSets.FMapPositive <> m var
R23098:23098 Coq.FSets.FMapPositive <> e var
R23096:23096 Coq.FSets.FMapPositive <> x var
R23157:23159 Coq.FSets.FMapPositive PositiveMap map def
R23174:23179 Coq.FSets.FMapPositive PositiveMap mapi_1 thm
R23174:23179 Coq.FSets.FMapPositive PositiveMap mapi_1 thm
prf 23225:23229 PositiveMap map_2
R23259:23259 Coq.FSets.FMapPositive PositiveMap t def
R23261:23263 Coq.FSets.FMapPositive <> elt var
R23268:23270 Coq.FSets.FMapPositive PositiveMap key def
R23278:23279 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23280:23283 Coq.FSets.FMapPositive <> elt' var
R23275:23277 Coq.FSets.FMapPositive <> elt var
R23305:23308 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23309:23310 Coq.FSets.FMapPositive PositiveMap In def
R23314:23314 Coq.FSets.FMapPositive <> m var
R23312:23312 Coq.FSets.FMapPositive <> x var
R23291:23292 Coq.FSets.FMapPositive PositiveMap In def
R23297:23299 Coq.FSets.FMapPositive PositiveMap map def
R23303:23303 Coq.FSets.FMapPositive <> m var
R23301:23301 Coq.FSets.FMapPositive <> f var
R23294:23294 Coq.FSets.FMapPositive <> x var
R23343:23345 Coq.FSets.FMapPositive PositiveMap map def
R23360:23365 Coq.FSets.FMapPositive PositiveMap mapi_2 thm
R23360:23365 Coq.FSets.FMapPositive PositiveMap mapi_2 thm
sec 23393:23396 PositiveMap map2
var 23410:23410 PositiveMap.map2 A
var 23412:23412 PositiveMap.map2 B
var 23414:23414 PositiveMap.map2 C
var 23435:23435 PositiveMap.map2 f
R23447:23450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23459:23462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23463:23468 Coq.Init.Datatypes <> option ind
R23470:23470 Coq.FSets.FMapPositive <> PositiveMap.map2.C var
R23451:23456 Coq.Init.Datatypes <> option ind
R23458:23458 Coq.FSets.FMapPositive <> PositiveMap.map2.B var
R23439:23444 Coq.Init.Datatypes <> option ind
R23446:23446 Coq.FSets.FMapPositive <> PositiveMap.map2.A var
R23486:23489 Coq.FSets.FMapPositive PositiveMap Leaf constr
R23486:23489 Coq.FSets.FMapPositive PositiveMap Leaf constr
def 23508:23514 PositiveMap xmap2_l
R23521:23521 Coq.FSets.FMapPositive PositiveMap t def
R23523:23523 Coq.FSets.FMapPositive <> PositiveMap.map2.A var
R23528:23528 Coq.FSets.FMapPositive PositiveMap t def
R23530:23530 Coq.FSets.FMapPositive <> PositiveMap.map2.C var
R23547:23547 Coq.FSets.FMapPositive <> m var
R23562:23565 Coq.FSets.FMapPositive PositiveMap Leaf constr
R23570:23573 Coq.FSets.FMapPositive PositiveMap Leaf constr
R23583:23586 Coq.FSets.FMapPositive PositiveMap Node constr
R23597:23600 Coq.FSets.FMapPositive PositiveMap Node constr
R23626:23632 Coq.FSets.FMapPositive <> xmap2_l def
R23615:23615 Coq.FSets.FMapPositive <> PositiveMap.map2.f var
R23619:23622 Coq.Init.Datatypes <> None constr
R23603:23609 Coq.FSets.FMapPositive <> xmap2_l def
prf 23657:23664 PositiveMap xgmap2_l
R23680:23682 Coq.FSets.FMapPositive PositiveMap key def
R23690:23690 Coq.FSets.FMapPositive PositiveMap t def
R23692:23692 Coq.FSets.FMapPositive <> PositiveMap.map2.A var
R23724:23727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23746:23748 Coq.Init.Logic <> :type_scope:x_'='_x not
R23728:23731 Coq.FSets.FMapPositive PositiveMap find def
R23736:23742 Coq.FSets.FMapPositive PositiveMap xmap2_l def
R23744:23744 Coq.FSets.FMapPositive <> m var
R23733:23733 Coq.FSets.FMapPositive <> i var
R23749:23749 Coq.FSets.FMapPositive <> PositiveMap.map2.f var
R23762:23765 Coq.Init.Datatypes <> None constr
R23752:23755 Coq.FSets.FMapPositive PositiveMap find def
R23759:23759 Coq.FSets.FMapPositive <> m var
R23757:23757 Coq.FSets.FMapPositive <> i var
R23717:23719 Coq.Init.Logic <> :type_scope:x_'='_x not
R23706:23706 Coq.FSets.FMapPositive <> PositiveMap.map2.f var
R23713:23716 Coq.Init.Datatypes <> None constr
R23708:23711 Coq.Init.Datatypes <> None constr
R23720:23723 Coq.Init.Datatypes <> None constr
def 23852:23858 PositiveMap xmap2_r
R23865:23865 Coq.FSets.FMapPositive PositiveMap t def
R23867:23867 Coq.FSets.FMapPositive <> PositiveMap.map2.B var
R23872:23872 Coq.FSets.FMapPositive PositiveMap t def
R23874:23874 Coq.FSets.FMapPositive <> PositiveMap.map2.C var
R23891:23891 Coq.FSets.FMapPositive <> m var
R23906:23909 Coq.FSets.FMapPositive PositiveMap Leaf constr
R23914:23917 Coq.FSets.FMapPositive PositiveMap Leaf constr
R23927:23930 Coq.FSets.FMapPositive PositiveMap Node constr
R23941:23944 Coq.FSets.FMapPositive PositiveMap Node constr
R23970:23976 Coq.FSets.FMapPositive <> xmap2_r def
R23959:23959 Coq.FSets.FMapPositive <> PositiveMap.map2.f var
R23961:23964 Coq.Init.Datatypes <> None constr
R23947:23953 Coq.FSets.FMapPositive <> xmap2_r def
prf 24001:24008 PositiveMap xgmap2_r
R24024:24026 Coq.FSets.FMapPositive PositiveMap key def
R24034:24034 Coq.FSets.FMapPositive PositiveMap t def
R24036:24036 Coq.FSets.FMapPositive <> PositiveMap.map2.B var
R24068:24071 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24090:24092 Coq.Init.Logic <> :type_scope:x_'='_x not
R24072:24075 Coq.FSets.FMapPositive PositiveMap find def
R24080:24086 Coq.FSets.FMapPositive PositiveMap xmap2_r def
R24088:24088 Coq.FSets.FMapPositive <> m var
R24077:24077 Coq.FSets.FMapPositive <> i var
R24093:24093 Coq.FSets.FMapPositive <> PositiveMap.map2.f var
R24101:24104 Coq.FSets.FMapPositive PositiveMap find def
R24108:24108 Coq.FSets.FMapPositive <> m var
R24106:24106 Coq.FSets.FMapPositive <> i var
R24095:24098 Coq.Init.Datatypes <> None constr
R24061:24063 Coq.Init.Logic <> :type_scope:x_'='_x not
R24050:24050 Coq.FSets.FMapPositive <> PositiveMap.map2.f var
R24057:24060 Coq.Init.Datatypes <> None constr
R24052:24055 Coq.Init.Datatypes <> None constr
R24064:24067 Coq.Init.Datatypes <> None constr
def 24196:24200 PositiveMap _map2
R24208:24208 Coq.FSets.FMapPositive PositiveMap t def
R24210:24210 Coq.FSets.FMapPositive <> PositiveMap.map2.A var
R24218:24218 Coq.FSets.FMapPositive PositiveMap t def
R24220:24220 Coq.FSets.FMapPositive <> PositiveMap.map2.B var
R24225:24225 Coq.FSets.FMapPositive PositiveMap t def
R24227:24227 Coq.FSets.FMapPositive <> PositiveMap.map2.C var
R24242:24243 Coq.FSets.FMapPositive <> m1 var
R24256:24259 Coq.FSets.FMapPositive PositiveMap Leaf constr
R24264:24270 Coq.FSets.FMapPositive PositiveMap xmap2_r def
R24272:24273 Coq.FSets.FMapPositive <> m2 var
R24281:24284 Coq.FSets.FMapPositive PositiveMap Node constr
R24312:24313 Coq.FSets.FMapPositive <> m2 var
R24330:24333 Coq.FSets.FMapPositive PositiveMap Leaf constr
R24338:24344 Coq.FSets.FMapPositive PositiveMap xmap2_l def
R24346:24347 Coq.FSets.FMapPositive <> m1 var
R24359:24362 Coq.FSets.FMapPositive PositiveMap Node constr
R24376:24379 Coq.FSets.FMapPositive PositiveMap Node constr
R24406:24410 Coq.FSets.FMapPositive <> _map2 def
R24396:24396 Coq.FSets.FMapPositive <> PositiveMap.map2.f var
R24382:24386 Coq.FSets.FMapPositive <> _map2 def
prf 24451:24455 PositiveMap gmap2
R24469:24471 Coq.FSets.FMapPositive PositiveMap key def
R24477:24477 Coq.FSets.FMapPositive PositiveMap t def
R24479:24479 Coq.FSets.FMapPositive <> PositiveMap.map2.A var
R24486:24486 Coq.FSets.FMapPositive PositiveMap t def
R24488:24488 Coq.FSets.FMapPositive <> PositiveMap.map2.B var
R24516:24525 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24546:24548 Coq.Init.Logic <> :type_scope:x_'='_x not
R24526:24529 Coq.FSets.FMapPositive PositiveMap find def
R24534:24538 Coq.FSets.FMapPositive PositiveMap _map2 def
R24543:24544 Coq.FSets.FMapPositive <> m2 var
R24540:24541 Coq.FSets.FMapPositive <> m1 var
R24531:24531 Coq.FSets.FMapPositive <> i var
R24549:24549 Coq.FSets.FMapPositive <> PositiveMap.map2.f var
R24564:24567 Coq.FSets.FMapPositive PositiveMap find def
R24571:24572 Coq.FSets.FMapPositive <> m2 var
R24569:24569 Coq.FSets.FMapPositive <> i var
R24552:24555 Coq.FSets.FMapPositive PositiveMap find def
R24559:24560 Coq.FSets.FMapPositive <> m1 var
R24557:24557 Coq.FSets.FMapPositive <> i var
R24509:24511 Coq.Init.Logic <> :type_scope:x_'='_x not
R24498:24498 Coq.FSets.FMapPositive <> PositiveMap.map2.f var
R24505:24508 Coq.Init.Datatypes <> None constr
R24500:24503 Coq.Init.Datatypes <> None constr
R24512:24515 Coq.Init.Datatypes <> None constr
R24669:24676 Coq.FSets.FMapPositive PositiveMap xgmap2_r thm
R24689:24696 Coq.FSets.FMapPositive PositiveMap xgmap2_l thm
R24669:24676 Coq.FSets.FMapPositive PositiveMap xgmap2_r thm
R24669:24676 Coq.FSets.FMapPositive PositiveMap xgmap2_r thm
R24669:24676 Coq.FSets.FMapPositive PositiveMap xgmap2_r thm
R24669:24676 Coq.FSets.FMapPositive PositiveMap xgmap2_r thm
R24689:24696 Coq.FSets.FMapPositive PositiveMap xgmap2_l thm
R24689:24696 Coq.FSets.FMapPositive PositiveMap xgmap2_l thm
R24689:24696 Coq.FSets.FMapPositive PositiveMap xgmap2_l thm
R24689:24696 Coq.FSets.FMapPositive PositiveMap xgmap2_l thm
R24721:24724 Coq.FSets.FMapPositive PositiveMap.map2 <> sec
def 24741:24744 PositiveMap map2
R24780:24781 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24793:24794 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24795:24800 Coq.Init.Datatypes <> option ind
R24802:24806 Coq.FSets.FMapPositive <> elt'' var
R24782:24787 Coq.Init.Datatypes <> option ind
R24789:24792 Coq.FSets.FMapPositive <> elt' var
R24770:24775 Coq.Init.Datatypes <> option ind
R24777:24779 Coq.FSets.FMapPositive <> elt var
R24815:24819 Coq.FSets.FMapPositive PositiveMap _map2 def
R24844:24845 Coq.FSets.FMapPositive <> o2 var
R24841:24842 Coq.FSets.FMapPositive <> o1 var
R24852:24855 Coq.Init.Datatypes <> None constr
R24857:24860 Coq.Init.Datatypes <> None constr
R24865:24868 Coq.Init.Datatypes <> None constr
R24880:24880 Coq.FSets.FMapPositive <> f var
R24885:24886 Coq.FSets.FMapPositive <> o2 var
R24882:24883 Coq.FSets.FMapPositive <> o1 var
prf 24903:24908 PositiveMap map2_1
R24944:24944 Coq.FSets.FMapPositive PositiveMap t def
R24946:24948 Coq.FSets.FMapPositive <> elt var
R24955:24955 Coq.FSets.FMapPositive PositiveMap t def
R24957:24960 Coq.FSets.FMapPositive <> elt' var
R24970:24972 Coq.FSets.FMapPositive PositiveMap key def
R24987:24988 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25000:25001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25002:25007 Coq.Init.Datatypes <> option ind
R25009:25013 Coq.FSets.FMapPositive <> elt'' var
R24989:24994 Coq.Init.Datatypes <> option ind
R24996:24999 Coq.FSets.FMapPositive <> elt' var
R24977:24982 Coq.Init.Datatypes <> option ind
R24984:24986 Coq.FSets.FMapPositive <> elt var
R25038:25045 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25066:25068 Coq.Init.Logic <> :type_scope:x_'='_x not
R25046:25049 Coq.FSets.FMapPositive PositiveMap find def
R25054:25057 Coq.FSets.FMapPositive PositiveMap map2 def
R25063:25064 Coq.FSets.FMapPositive <> m' var
R25061:25061 Coq.FSets.FMapPositive <> m var
R25059:25059 Coq.FSets.FMapPositive <> f var
R25051:25051 Coq.FSets.FMapPositive <> x var
R25069:25069 Coq.FSets.FMapPositive <> f var
R25083:25086 Coq.FSets.FMapPositive PositiveMap find def
R25090:25091 Coq.FSets.FMapPositive <> m' var
R25088:25088 Coq.FSets.FMapPositive <> x var
R25072:25075 Coq.FSets.FMapPositive PositiveMap find def
R25079:25079 Coq.FSets.FMapPositive <> m var
R25077:25077 Coq.FSets.FMapPositive <> x var
R25027:25030 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25021:25022 Coq.FSets.FMapPositive PositiveMap In def
R25026:25026 Coq.FSets.FMapPositive <> m var
R25024:25024 Coq.FSets.FMapPositive <> x var
R25031:25032 Coq.FSets.FMapPositive PositiveMap In def
R25036:25037 Coq.FSets.FMapPositive <> m' var
R25034:25034 Coq.FSets.FMapPositive <> x var
R25123:25126 Coq.FSets.FMapPositive PositiveMap map2 def
R25139:25143 Coq.FSets.FMapPositive PositiveMap gmap2 thm
R25139:25143 Coq.FSets.FMapPositive PositiveMap gmap2 thm
R25139:25143 Coq.FSets.FMapPositive PositiveMap gmap2 thm
R25139:25143 Coq.FSets.FMapPositive PositiveMap gmap2 thm
R25167:25171 Coq.FSets.FMapPositive PositiveMap mem_1 thm
R25182:25186 Coq.FSets.FMapPositive PositiveMap mem_1 thm
R25167:25171 Coq.FSets.FMapPositive PositiveMap mem_1 thm
R25182:25186 Coq.FSets.FMapPositive PositiveMap mem_1 thm
R25212:25219 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25212:25219 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25212:25219 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25212:25219 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25212:25219 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25234:25237 Coq.FSets.FMapPositive PositiveMap find def
R25234:25237 Coq.FSets.FMapPositive PositiveMap find def
R25270:25273 Coq.FSets.FMapPositive PositiveMap find def
R25270:25273 Coq.FSets.FMapPositive PositiveMap find def
prf 25365:25370 PositiveMap map2_2
R25406:25406 Coq.FSets.FMapPositive PositiveMap t def
R25408:25410 Coq.FSets.FMapPositive <> elt var
R25417:25417 Coq.FSets.FMapPositive PositiveMap t def
R25419:25422 Coq.FSets.FMapPositive <> elt' var
R25432:25434 Coq.FSets.FMapPositive PositiveMap key def
R25449:25450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25462:25463 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25464:25469 Coq.Init.Datatypes <> option ind
R25471:25475 Coq.FSets.FMapPositive <> elt'' var
R25451:25456 Coq.Init.Datatypes <> option ind
R25458:25461 Coq.FSets.FMapPositive <> elt' var
R25439:25444 Coq.Init.Datatypes <> option ind
R25446:25448 Coq.FSets.FMapPositive <> elt var
R25501:25504 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25511:25514 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25505:25506 Coq.FSets.FMapPositive PositiveMap In def
R25510:25510 Coq.FSets.FMapPositive <> m var
R25508:25508 Coq.FSets.FMapPositive <> x var
R25515:25516 Coq.FSets.FMapPositive PositiveMap In def
R25520:25521 Coq.FSets.FMapPositive <> m' var
R25518:25518 Coq.FSets.FMapPositive <> x var
R25483:25484 Coq.FSets.FMapPositive PositiveMap In def
R25489:25492 Coq.FSets.FMapPositive PositiveMap map2 def
R25498:25499 Coq.FSets.FMapPositive <> m' var
R25496:25496 Coq.FSets.FMapPositive <> m var
R25494:25494 Coq.FSets.FMapPositive <> f var
R25486:25486 Coq.FSets.FMapPositive <> x var
R25557:25561 Coq.FSets.FMapPositive PositiveMap mem_1 thm
R25557:25561 Coq.FSets.FMapPositive PositiveMap mem_1 thm
R25594:25601 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25594:25601 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25594:25601 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25618:25621 Coq.FSets.FMapPositive PositiveMap map2 def
R25639:25643 Coq.FSets.FMapPositive PositiveMap gmap2 thm
R25639:25643 Coq.FSets.FMapPositive PositiveMap gmap2 thm
R25639:25643 Coq.FSets.FMapPositive PositiveMap gmap2 thm
R25639:25643 Coq.FSets.FMapPositive PositiveMap gmap2 thm
R25672:25676 Coq.FSets.FMapPositive PositiveMap mem_2 thm
R25687:25691 Coq.FSets.FMapPositive PositiveMap mem_2 thm
R25672:25676 Coq.FSets.FMapPositive PositiveMap mem_2 thm
R25687:25691 Coq.FSets.FMapPositive PositiveMap mem_2 thm
R25717:25724 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25717:25724 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25717:25724 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25717:25724 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25717:25724 Coq.FSets.FMapPositive PositiveMap mem_find thm
R25739:25742 Coq.FSets.FMapPositive PositiveMap find def
R25739:25742 Coq.FSets.FMapPositive PositiveMap find def
R25780:25783 Coq.FSets.FMapPositive PositiveMap find def
R25780:25783 Coq.FSets.FMapPositive PositiveMap find def
sec 25829:25832 PositiveMap Fold
var 25850:25850 PositiveMap.Fold A
var 25852:25852 PositiveMap.Fold B
var 25875:25875 PositiveMap.Fold f
R25882:25885 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25887:25890 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25892:25895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25896:25896 Coq.FSets.FMapPositive <> PositiveMap.Fold.B var
R25891:25891 Coq.FSets.FMapPositive <> PositiveMap.Fold.B var
R25886:25886 Coq.FSets.FMapPositive <> PositiveMap.Fold.A var
R25879:25881 Coq.FSets.FMapPositive PositiveMap key def
def 25913:25918 PositiveMap xfoldi
R25925:25925 Coq.FSets.FMapPositive PositiveMap t def
R25927:25927 Coq.FSets.FMapPositive <> PositiveMap.Fold.A var
R25935:25935 Coq.FSets.FMapPositive <> PositiveMap.Fold.B var
R25943:25945 Coq.FSets.FMapPositive PositiveMap key def
R25963:25963 Coq.FSets.FMapPositive <> m var
R25980:25983 Coq.FSets.FMapPositive PositiveMap Leaf constr
R25990:25990 Coq.FSets.FMapPositive <> v var
R26002:26005 Coq.FSets.FMapPositive PositiveMap Node constr
R26010:26013 Coq.Init.Datatypes <> Some constr
R26033:26038 Coq.FSets.FMapPositive <> xfoldi def
R26077:26082 Coq.FSets.FMapPositive <> append def
R26084:26084 Coq.FSets.FMapPositive <> i var
R26043:26043 Coq.FSets.FMapPositive <> PositiveMap.Fold.f var
R26050:26055 Coq.FSets.FMapPositive <> xfoldi def
R26062:26067 Coq.FSets.FMapPositive <> append def
R26069:26069 Coq.FSets.FMapPositive <> i var
R26059:26059 Coq.FSets.FMapPositive <> v var
R26045:26045 Coq.FSets.FMapPositive <> i var
R26099:26102 Coq.FSets.FMapPositive PositiveMap Node constr
R26106:26109 Coq.Init.Datatypes <> None constr
R26126:26131 Coq.FSets.FMapPositive <> xfoldi def
R26162:26167 Coq.FSets.FMapPositive <> append def
R26169:26169 Coq.FSets.FMapPositive <> i var
R26136:26141 Coq.FSets.FMapPositive <> xfoldi def
R26148:26153 Coq.FSets.FMapPositive <> append def
R26155:26155 Coq.FSets.FMapPositive <> i var
R26145:26145 Coq.FSets.FMapPositive <> v var
prf 26196:26203 PositiveMap xfoldi_1
R26245:26247 Coq.Init.Logic <> :type_scope:x_'='_x not
R26233:26238 Coq.FSets.FMapPositive PositiveMap xfoldi def
R26244:26244 Coq.FSets.FMapPositive <> i var
R26242:26242 Coq.FSets.FMapPositive <> v var
R26240:26240 Coq.FSets.FMapPositive <> m var
R26248:26256 Coq.Lists.List <> fold_left def
R26307:26307 Coq.FSets.FMapPositive <> v var
R26292:26300 Coq.FSets.FMapPositive PositiveMap xelements def
R26304:26304 Coq.FSets.FMapPositive <> i var
R26302:26302 Coq.FSets.FMapPositive <> m var
R26270:26270 Coq.FSets.FMapPositive <> PositiveMap.Fold.f var
R26288:26288 Coq.FSets.FMapPositive <> a var
R26281:26283 Coq.Init.Datatypes <> snd def
R26285:26285 Coq.FSets.FMapPositive <> p var
R26273:26275 Coq.Init.Datatypes <> fst def
R26277:26277 Coq.FSets.FMapPositive <> p var
R26348:26348 Coq.FSets.FMapPositive <> PositiveMap.Fold.f var
R26366:26366 Coq.FSets.FMapPositive <> a var
R26359:26361 Coq.Init.Datatypes <> snd def
R26363:26363 Coq.FSets.FMapPositive <> p var
R26351:26353 Coq.Init.Datatypes <> fst def
R26355:26355 Coq.FSets.FMapPositive <> p var
R26348:26348 Coq.FSets.FMapPositive <> PositiveMap.Fold.f var
R26366:26366 Coq.FSets.FMapPositive <> a var
R26359:26361 Coq.Init.Datatypes <> snd def
R26363:26363 Coq.FSets.FMapPositive <> p var
R26351:26353 Coq.Init.Datatypes <> fst def
R26355:26355 Coq.FSets.FMapPositive <> p var
R26442:26454 Coq.Lists.List <> fold_left_app thm
R26442:26454 Coq.Lists.List <> fold_left_app thm
R26442:26454 Coq.Lists.List <> fold_left_app thm
R26560:26572 Coq.Lists.List <> fold_left_app thm
R26560:26572 Coq.Lists.List <> fold_left_app thm
R26560:26572 Coq.Lists.List <> fold_left_app thm
def 26672:26675 PositiveMap fold
R26684:26689 Coq.FSets.FMapPositive PositiveMap xfoldi def
R26693:26693 Coq.FSets.FMapPositive <> i var
R26691:26691 Coq.FSets.FMapPositive <> m var
R26705:26708 Coq.FSets.FMapPositive PositiveMap.Fold <> sec
prf 26720:26725 PositiveMap fold_1
R26751:26751 Coq.FSets.FMapPositive PositiveMap t def
R26753:26753 Coq.FSets.FMapPositive <> A var
R26768:26768 Coq.FSets.FMapPositive <> B var
R26779:26782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26784:26787 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26789:26792 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26793:26793 Coq.FSets.FMapPositive <> B var
R26788:26788 Coq.FSets.FMapPositive <> B var
R26783:26783 Coq.FSets.FMapPositive <> A var
R26776:26778 Coq.FSets.FMapPositive PositiveMap key def
R26811:26813 Coq.Init.Logic <> :type_scope:x_'='_x not
R26801:26804 Coq.FSets.FMapPositive PositiveMap fold def
R26810:26810 Coq.FSets.FMapPositive <> i var
R26808:26808 Coq.FSets.FMapPositive <> m var
R26806:26806 Coq.FSets.FMapPositive <> f var
R26814:26822 Coq.Lists.List <> fold_left def
R26870:26870 Coq.FSets.FMapPositive <> i var
R26858:26865 Coq.FSets.FMapPositive PositiveMap elements def
R26867:26867 Coq.FSets.FMapPositive <> m var
R26836:26836 Coq.FSets.FMapPositive <> f var
R26854:26854 Coq.FSets.FMapPositive <> a var
R26847:26849 Coq.Init.Datatypes <> snd def
R26851:26851 Coq.FSets.FMapPositive <> p var
R26839:26841 Coq.Init.Datatypes <> fst def
R26843:26843 Coq.FSets.FMapPositive <> p var
R26901:26904 Coq.FSets.FMapPositive PositiveMap fold def
R26907:26914 Coq.FSets.FMapPositive PositiveMap elements def
R26929:26936 Coq.FSets.FMapPositive PositiveMap xfoldi_1 thm
R26929:26936 Coq.FSets.FMapPositive PositiveMap xfoldi_1 thm
R26929:26936 Coq.FSets.FMapPositive PositiveMap xfoldi_1 thm
def 26971:26975 PositiveMap equal
R26993:26996 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26998:27001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27002:27005 Coq.Init.Datatypes <> bool ind
R26997:26997 Coq.FSets.FMapPositive <> A var
R26992:26992 Coq.FSets.FMapPositive <> A var
R27016:27016 Coq.FSets.FMapPositive PositiveMap t def
R27018:27018 Coq.FSets.FMapPositive <> A var
R27023:27026 Coq.Init.Datatypes <> bool ind
R27045:27046 Coq.FSets.FMapPositive <> m2 var
R27041:27042 Coq.FSets.FMapPositive <> m1 var
R27061:27064 Coq.FSets.FMapPositive PositiveMap Leaf constr
R27074:27081 Coq.FSets.FMapPositive PositiveMap is_empty def
R27083:27084 Coq.FSets.FMapPositive <> m2 var
R27097:27100 Coq.FSets.FMapPositive PositiveMap Leaf constr
R27107:27114 Coq.FSets.FMapPositive PositiveMap is_empty def
R27116:27117 Coq.FSets.FMapPositive <> m1 var
R27127:27130 Coq.FSets.FMapPositive PositiveMap Node constr
R27142:27145 Coq.FSets.FMapPositive PositiveMap Node constr
R27343:27346 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R27170:27170 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R27312:27327 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R27204:27207 Coq.Init.Datatypes <> None constr
R27210:27213 Coq.Init.Datatypes <> None constr
R27218:27221 Coq.Init.Datatypes <> true constr
R27238:27241 Coq.Init.Datatypes <> Some constr
R27247:27250 Coq.Init.Datatypes <> Some constr
R27258:27260 Coq.FSets.FMapPositive <> cmp var
R27291:27295 Coq.Init.Datatypes <> false constr
R27328:27332 Coq.FSets.FMapPositive <> equal def
R27334:27336 Coq.FSets.FMapPositive <> cmp var
R27347:27351 Coq.FSets.FMapPositive <> equal def
R27353:27355 Coq.FSets.FMapPositive <> cmp var
def 27387:27391 PositiveMap Equal
R27407:27407 Coq.FSets.FMapPositive PositiveMap t def
R27409:27409 Coq.FSets.FMapPositive <> A var
R27437:27439 Coq.Init.Logic <> :type_scope:x_'='_x not
R27429:27432 Coq.FSets.FMapPositive PositiveMap find def
R27436:27436 Coq.FSets.FMapPositive <> m var
R27434:27434 Coq.FSets.FMapPositive <> y var
R27440:27443 Coq.FSets.FMapPositive PositiveMap find def
R27447:27448 Coq.FSets.FMapPositive <> m' var
R27445:27445 Coq.FSets.FMapPositive <> y var
def 27464:27468 PositiveMap Equiv
R27487:27488 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27490:27491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27489:27489 Coq.FSets.FMapPositive <> A var
R27486:27486 Coq.FSets.FMapPositive <> A var
R27510:27510 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27539:27548 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27609:27609 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27527:27531 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27521:27522 Coq.FSets.FMapPositive PositiveMap In def
R27526:27526 Coq.FSets.FMapPositive <> m var
R27524:27524 Coq.FSets.FMapPositive <> k var
R27532:27533 Coq.FSets.FMapPositive PositiveMap In def
R27537:27538 Coq.FSets.FMapPositive <> m' var
R27535:27535 Coq.FSets.FMapPositive <> k var
R27576:27579 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27594:27597 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27598:27603 Coq.FSets.FMapPositive <> eq_elt var
R27607:27608 Coq.FSets.FMapPositive <> e' var
R27605:27605 Coq.FSets.FMapPositive <> e var
R27580:27585 Coq.FSets.FMapPositive PositiveMap MapsTo def
R27592:27593 Coq.FSets.FMapPositive <> m' var
R27589:27590 Coq.FSets.FMapPositive <> e' var
R27587:27587 Coq.FSets.FMapPositive <> k var
R27564:27569 Coq.FSets.FMapPositive PositiveMap MapsTo def
R27575:27575 Coq.FSets.FMapPositive <> m var
R27573:27573 Coq.FSets.FMapPositive <> e var
R27571:27571 Coq.FSets.FMapPositive <> k var
def 27625:27630 PositiveMap Equivb
R27647:27648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27650:27651 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27652:27655 Coq.Init.Datatypes <> bool ind
R27649:27649 Coq.FSets.FMapPositive <> A var
R27646:27646 Coq.FSets.FMapPositive <> A var
R27661:27665 Coq.FSets.FMapPositive PositiveMap Equiv def
R27668:27670 Coq.FSets.FMapInterface <> Cmp def
R27672:27674 Coq.FSets.FMapPositive <> cmp var
prf 27687:27693 PositiveMap equal_1
R27718:27718 Coq.FSets.FMapPositive PositiveMap t def
R27720:27720 Coq.FSets.FMapPositive <> A var
R27728:27729 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27731:27732 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27733:27736 Coq.Init.Datatypes <> bool ind
R27730:27730 Coq.FSets.FMapPositive <> A var
R27727:27727 Coq.FSets.FMapPositive <> A var
R27759:27762 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27777:27779 Coq.Init.Logic <> :type_scope:x_'='_x not
R27763:27767 Coq.FSets.FMapPositive PositiveMap equal def
R27775:27776 Coq.FSets.FMapPositive <> m' var
R27773:27773 Coq.FSets.FMapPositive <> m var
R27769:27771 Coq.FSets.FMapPositive <> cmp var
R27780:27783 Coq.Init.Datatypes <> true constr
R27744:27749 Coq.FSets.FMapPositive PositiveMap Equivb def
R27757:27758 Coq.FSets.FMapPositive <> m' var
R27755:27755 Coq.FSets.FMapPositive <> m var
R27751:27753 Coq.FSets.FMapPositive <> cmp var
R27858:27867 Coq.FSets.FMapPositive PositiveMap is_empty_1 thm
R27858:27867 Coq.FSets.FMapPositive PositiveMap is_empty_1 thm
R27900:27901 Coq.FSets.FMapPositive PositiveMap In def
R27906:27909 Coq.FSets.FMapPositive PositiveMap Leaf constr
R27900:27901 Coq.FSets.FMapPositive PositiveMap In def
R27906:27909 Coq.FSets.FMapPositive PositiveMap Leaf constr
R28110:28111 Coq.FSets.FMapPositive PositiveMap In def
R28117:28120 Coq.FSets.FMapPositive PositiveMap Leaf constr
R28113:28114 Coq.Numbers.BinNums <> xH constr
R28110:28111 Coq.FSets.FMapPositive PositiveMap In def
R28117:28120 Coq.FSets.FMapPositive PositiveMap Leaf constr
R28113:28114 Coq.Numbers.BinNums <> xH constr
R28227:28241 Coq.Init.Datatypes <> andb_true_intro thm
R28257:28266 Coq.FSets.FMapPositive PositiveMap is_empty_1 thm
R28227:28241 Coq.Init.Datatypes <> andb_true_intro thm
R28257:28266 Coq.FSets.FMapPositive PositiveMap is_empty_1 thm
R28257:28266 Coq.FSets.FMapPositive PositiveMap is_empty_1 thm
R28297:28298 Coq.FSets.FMapPositive PositiveMap In def
R28308:28311 Coq.FSets.FMapPositive PositiveMap Leaf constr
R28301:28302 Coq.Numbers.BinNums <> xO constr
R28297:28298 Coq.FSets.FMapPositive PositiveMap In def
R28308:28311 Coq.FSets.FMapPositive PositiveMap Leaf constr
R28301:28302 Coq.Numbers.BinNums <> xO constr
R28415:28416 Coq.FSets.FMapPositive PositiveMap In def
R28426:28429 Coq.FSets.FMapPositive PositiveMap Leaf constr
R28419:28420 Coq.Numbers.BinNums <> xI constr
R28415:28416 Coq.FSets.FMapPositive PositiveMap In def
R28426:28429 Coq.FSets.FMapPositive PositiveMap Leaf constr
R28419:28420 Coq.Numbers.BinNums <> xI constr
R28565:28570 Coq.FSets.FMapPositive PositiveMap Equivb def
R28565:28570 Coq.FSets.FMapPositive PositiveMap Equivb def
R28625:28626 Coq.Numbers.BinNums <> xO constr
R28640:28641 Coq.FSets.FMapPositive PositiveMap In def
R28644:28649 Coq.FSets.FMapPositive PositiveMap MapsTo def
R28625:28626 Coq.Numbers.BinNums <> xO constr
R28700:28701 Coq.Numbers.BinNums <> xO constr
R28720:28721 Coq.FSets.FMapPositive PositiveMap In def
R28724:28729 Coq.FSets.FMapPositive PositiveMap MapsTo def
R28700:28701 Coq.Numbers.BinNums <> xO constr
R28755:28760 Coq.FSets.FMapPositive PositiveMap Equivb def
R28755:28760 Coq.FSets.FMapPositive PositiveMap Equivb def
R28815:28816 Coq.Numbers.BinNums <> xI constr
R28830:28831 Coq.FSets.FMapPositive PositiveMap In def
R28834:28839 Coq.FSets.FMapPositive PositiveMap MapsTo def
R28815:28816 Coq.Numbers.BinNums <> xI constr
R28890:28891 Coq.Numbers.BinNums <> xI constr
R28910:28911 Coq.FSets.FMapPositive PositiveMap In def
R28914:28919 Coq.FSets.FMapPositive PositiveMap MapsTo def
R28890:28891 Coq.Numbers.BinNums <> xI constr
R28994:29008 Coq.Init.Datatypes <> andb_true_intro thm
R28994:29008 Coq.Init.Datatypes <> andb_true_intro thm
R28994:29008 Coq.Init.Datatypes <> andb_true_intro thm
R28994:29008 Coq.Init.Datatypes <> andb_true_intro thm
R28994:29008 Coq.Init.Datatypes <> andb_true_intro thm
R28994:29008 Coq.Init.Datatypes <> andb_true_intro thm
R29037:29038 Coq.Numbers.BinNums <> xH constr
R29037:29038 Coq.Numbers.BinNums <> xH constr
R29069:29070 Coq.Numbers.BinNums <> xH constr
R29081:29082 Coq.FSets.FMapPositive PositiveMap In def
R29085:29090 Coq.FSets.FMapPositive PositiveMap MapsTo def
R29069:29070 Coq.Numbers.BinNums <> xH constr
R29167:29168 Coq.Numbers.BinNums <> xH constr
R29179:29180 Coq.FSets.FMapPositive PositiveMap In def
R29183:29188 Coq.FSets.FMapPositive PositiveMap MapsTo def
R29167:29168 Coq.Numbers.BinNums <> xH constr
R29257:29271 Coq.Init.Datatypes <> andb_true_intro thm
R29257:29271 Coq.Init.Datatypes <> andb_true_intro thm
prf 29303:29309 PositiveMap equal_2
R29334:29334 Coq.FSets.FMapPositive PositiveMap t def
R29336:29336 Coq.FSets.FMapPositive <> A var
R29344:29345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29347:29348 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29349:29352 Coq.Init.Datatypes <> bool ind
R29346:29346 Coq.FSets.FMapPositive <> A var
R29343:29343 Coq.FSets.FMapPositive <> A var
R29381:29384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29385:29390 Coq.FSets.FMapPositive PositiveMap Equivb def
R29398:29399 Coq.FSets.FMapPositive <> m' var
R29396:29396 Coq.FSets.FMapPositive <> m var
R29392:29394 Coq.FSets.FMapPositive <> cmp var
R29374:29376 Coq.Init.Logic <> :type_scope:x_'='_x not
R29360:29364 Coq.FSets.FMapPositive PositiveMap equal def
R29372:29373 Coq.FSets.FMapPositive <> m' var
R29370:29370 Coq.FSets.FMapPositive <> m var
R29366:29368 Coq.FSets.FMapPositive <> cmp var
R29377:29380 Coq.Init.Datatypes <> true constr
R29549:29558 Coq.FSets.FMapPositive PositiveMap is_empty_2 thm
R29549:29558 Coq.FSets.FMapPositive PositiveMap is_empty_2 thm
R29717:29725 Coq.Init.Datatypes <> andb_prop thm
R29717:29725 Coq.Init.Datatypes <> andb_prop thm
R29777:29778 Coq.FSets.FMapPositive PositiveMap In def
R29781:29786 Coq.FSets.FMapPositive PositiveMap MapsTo def
R29857:29866 Coq.FSets.FMapPositive PositiveMap is_empty_2 thm
R29872:29877 Coq.FSets.FMapPositive PositiveMap find_2 thm
R29857:29866 Coq.FSets.FMapPositive PositiveMap is_empty_2 thm
R29872:29877 Coq.FSets.FMapPositive PositiveMap find_2 thm
R29900:29909 Coq.FSets.FMapPositive PositiveMap is_empty_2 thm
R29915:29920 Coq.FSets.FMapPositive PositiveMap find_2 thm
R29900:29909 Coq.FSets.FMapPositive PositiveMap is_empty_2 thm
R29915:29920 Coq.FSets.FMapPositive PositiveMap find_2 thm
R29980:29981 Coq.FSets.FMapPositive PositiveMap In def
R29984:29989 Coq.FSets.FMapPositive PositiveMap MapsTo def
R30120:30128 Coq.Init.Datatypes <> andb_prop thm
R30120:30128 Coq.Init.Datatypes <> andb_prop thm
R30159:30167 Coq.Init.Datatypes <> andb_prop thm
R30159:30167 Coq.Init.Datatypes <> andb_prop thm
R30308:30309 Coq.FSets.FMapPositive PositiveMap In def
R30312:30317 Coq.FSets.FMapPositive PositiveMap MapsTo def
R30375:30376 Coq.FSets.FMapPositive PositiveMap In def
R30379:30384 Coq.FSets.FMapPositive PositiveMap MapsTo def
R30470:30478 Coq.Init.Datatypes <> andb_prop thm
R30470:30478 Coq.Init.Datatypes <> andb_prop thm
R30617:30618 Coq.FSets.FMapPositive PositiveMap In def
R30621:30626 Coq.FSets.FMapPositive PositiveMap MapsTo def
R30684:30685 Coq.FSets.FMapPositive PositiveMap In def
R30688:30693 Coq.FSets.FMapPositive PositiveMap MapsTo def
R30785:30795 Coq.FSets.FMapPositive PositiveMap <> mod
mod 30944:30969 <> PositiveMapAdditionalFacts
prf 31046:31051 PositiveMapAdditionalFacts gsspec
R31079:31081 Coq.FSets.FMapPositive PositiveMap key def
R31088:31088 Coq.FSets.FMapPositive <> A var
R31095:31095 Coq.FSets.FMapPositive PositiveMap t def
R31097:31097 Coq.FSets.FMapPositive <> A var
R31123:31125 Coq.Init.Logic <> :type_scope:x_'='_x not
R31105:31108 Coq.FSets.FMapPositive PositiveMap find def
R31113:31115 Coq.FSets.FMapPositive PositiveMap add def
R31121:31121 Coq.FSets.FMapPositive <> m var
R31119:31119 Coq.FSets.FMapPositive <> x var
R31117:31117 Coq.FSets.FMapPositive <> j var
R31110:31110 Coq.FSets.FMapPositive <> i var
R31129:31136 Coq.FSets.FMapPositive PositiveMap.E eq_dec thm
R31140:31140 Coq.FSets.FMapPositive <> j var
R31138:31138 Coq.FSets.FMapPositive <> i var
R31159:31162 Coq.FSets.FMapPositive PositiveMap find def
R31166:31166 Coq.FSets.FMapPositive <> m var
R31164:31164 Coq.FSets.FMapPositive <> i var
R31147:31150 Coq.Init.Datatypes <> Some constr
R31152:31152 Coq.FSets.FMapPositive <> x var
R31204:31211 Coq.FSets.FMapPositive PositiveMap.E eq_dec thm
R31237:31239 Coq.FSets.FMapPositive PositiveMap gss thm
R31249:31251 Coq.FSets.FMapPositive PositiveMap gso thm
R31204:31211 Coq.FSets.FMapPositive PositiveMap.E eq_dec thm
R31237:31239 Coq.FSets.FMapPositive PositiveMap gss thm
R31249:31251 Coq.FSets.FMapPositive PositiveMap gso thm
prf 31326:31332 PositiveMapAdditionalFacts gsident
R31358:31360 Coq.FSets.FMapPositive PositiveMap key def
R31367:31367 Coq.FSets.FMapPositive PositiveMap t def
R31369:31369 Coq.FSets.FMapPositive <> A var
R31376:31376 Coq.FSets.FMapPositive <> A var
R31401:31404 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31414:31416 Coq.Init.Logic <> :type_scope:x_'='_x not
R31405:31407 Coq.FSets.FMapPositive PositiveMap add def
R31413:31413 Coq.FSets.FMapPositive <> m var
R31411:31411 Coq.FSets.FMapPositive <> v var
R31409:31409 Coq.FSets.FMapPositive <> i var
R31417:31417 Coq.FSets.FMapPositive <> m var
R31392:31394 Coq.Init.Logic <> :type_scope:x_'='_x not
R31384:31387 Coq.FSets.FMapPositive PositiveMap find def
R31391:31391 Coq.FSets.FMapPositive <> m var
R31389:31389 Coq.FSets.FMapPositive <> i var
R31395:31398 Coq.Init.Datatypes <> Some constr
R31400:31400 Coq.FSets.FMapPositive <> v var
prf 31595:31602 PositiveMapAdditionalFacts xmap2_lr
R31645:31648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31657:31660 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31661:31666 Coq.Init.Datatypes <> option ind
R31668:31668 Coq.FSets.FMapPositive <> B var
R31649:31654 Coq.Init.Datatypes <> option ind
R31656:31656 Coq.FSets.FMapPositive <> A var
R31637:31642 Coq.Init.Datatypes <> option ind
R31644:31644 Coq.FSets.FMapPositive <> A var
R31675:31675 Coq.FSets.FMapPositive PositiveMap t def
R31677:31677 Coq.FSets.FMapPositive <> A var
R31687:31687 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31726:31736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31748:31750 Coq.Init.Logic <> :type_scope:x_'='_x not
R31737:31743 Coq.FSets.FMapPositive PositiveMap xmap2_l def
R31747:31747 Coq.FSets.FMapPositive <> m var
R31745:31745 Coq.FSets.FMapPositive <> f var
R31751:31757 Coq.FSets.FMapPositive PositiveMap xmap2_r def
R31761:31761 Coq.FSets.FMapPositive <> m var
R31759:31759 Coq.FSets.FMapPositive <> g var
R31702:31707 Coq.Init.Datatypes <> option ind
R31709:31709 Coq.FSets.FMapPositive <> A var
R31718:31720 Coq.Init.Logic <> :type_scope:x_'='_x not
R31713:31713 Coq.FSets.FMapPositive <> f var
R31717:31717 Coq.FSets.FMapPositive <> j var
R31715:31715 Coq.FSets.FMapPositive <> i var
R31721:31721 Coq.FSets.FMapPositive <> g var
R31725:31725 Coq.FSets.FMapPositive <> i var
R31723:31723 Coq.FSets.FMapPositive <> j var
prf 31910:31920 PositiveMapAdditionalFacts map2_commut
R31960:31963 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31972:31975 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31976:31981 Coq.Init.Datatypes <> option ind
R31983:31983 Coq.FSets.FMapPositive <> B var
R31964:31969 Coq.Init.Datatypes <> option ind
R31971:31971 Coq.FSets.FMapPositive <> A var
R31952:31957 Coq.Init.Datatypes <> option ind
R31959:31959 Coq.FSets.FMapPositive <> A var
R31991:31991 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32029:32037 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32053:32053 Coq.FSets.FMapPositive PositiveMap t def
R32055:32055 Coq.FSets.FMapPositive <> A var
R32076:32078 Coq.Init.Logic <> :type_scope:x_'='_x not
R32063:32067 Coq.FSets.FMapPositive PositiveMap _map2 def
R32074:32075 Coq.FSets.FMapPositive <> m2 var
R32071:32072 Coq.FSets.FMapPositive <> m1 var
R32069:32069 Coq.FSets.FMapPositive <> f var
R32079:32083 Coq.FSets.FMapPositive PositiveMap _map2 def
R32090:32091 Coq.FSets.FMapPositive <> m1 var
R32087:32088 Coq.FSets.FMapPositive <> m2 var
R32085:32085 Coq.FSets.FMapPositive <> g var
R32005:32010 Coq.Init.Datatypes <> option ind
R32012:32012 Coq.FSets.FMapPositive <> A var
R32021:32023 Coq.Init.Logic <> :type_scope:x_'='_x not
R32016:32016 Coq.FSets.FMapPositive <> f var
R32020:32020 Coq.FSets.FMapPositive <> j var
R32018:32018 Coq.FSets.FMapPositive <> i var
R32024:32024 Coq.FSets.FMapPositive <> g var
R32028:32028 Coq.FSets.FMapPositive <> i var
R32026:32026 Coq.FSets.FMapPositive <> j var
R32157:32162 Coq.Init.Datatypes <> option ind
R32173:32175 Coq.Init.Logic <> :type_scope:x_'='_x not
R32172:32172 Coq.FSets.FMapPositive <> j var
R32170:32170 Coq.FSets.FMapPositive <> i var
R32180:32180 Coq.FSets.FMapPositive <> i var
R32178:32178 Coq.FSets.FMapPositive <> j var
R32157:32162 Coq.Init.Datatypes <> option ind
R32173:32175 Coq.Init.Logic <> :type_scope:x_'='_x not
R32172:32172 Coq.FSets.FMapPositive <> j var
R32170:32170 Coq.FSets.FMapPositive <> i var
R32180:32180 Coq.FSets.FMapPositive <> i var
R32178:32178 Coq.FSets.FMapPositive <> j var
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32295:32302 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32332:32339 Coq.FSets.FMapPositive PositiveMapAdditionalFacts xmap2_lr thm
R32424:32449 Coq.FSets.FMapPositive PositiveMapAdditionalFacts <> mod

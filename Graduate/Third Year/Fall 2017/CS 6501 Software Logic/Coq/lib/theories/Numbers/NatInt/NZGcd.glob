DIGEST 75310c91923284e104b1b757c74d8ef1
FCoq.Numbers.NatInt.NZGcd
R573:580 Coq.Numbers.NatInt.NZAxioms <> <> lib
R582:591 Coq.Numbers.NatInt.NZMulOrder <> <> lib
R695:697 Coq.Structures.Equalities Typ <> mod
modtype 679:681 <> Gcd
ax 719:721 Gcd gcd
R726:729 Coq.Init.Logic <> :type_scope:x_'->'_x not
R731:734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R735:735 Coq.Numbers.NatInt.NZGcd A t defax
R730:730 Coq.Numbers.NatInt.NZGcd A t defax
R725:725 Coq.Numbers.NatInt.NZGcd A t defax
R742:744 Coq.Numbers.NatInt.NZGcd Gcd <> modtype
R775:789 Coq.Numbers.NatInt.NZAxioms NZOrdAxiomsSig' <> mod
R796:798 Coq.Numbers.NatInt.NZGcd Gcd <> mod
R800:800 Coq.Numbers.NatInt.NZGcd A <> modtype
modtype 760:768 <> NZGcdSpec
def 829:834 NZGcdSpec divide
R843:849 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R851:852 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R854:857 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R853:853 Coq.Numbers.NatInt.NZGcd <> m var
R859:859 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R858:858 Coq.Numbers.NatInt.NZGcd <> p var
R860:860 Coq.Numbers.NatInt.NZGcd <> n var
R895:900 Coq.Numbers.NatInt.NZGcd NZGcdSpec divide def
not 879:879 NZGcdSpec ::'('_x_'|'_x_')'
ax 928:939 NZGcdSpec gcd_divide_l
R955:955 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R963:965 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R967:967 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R956:958 Coq.Numbers.NatInt.NZGcd B gcd defax
R962:962 Coq.Numbers.NatInt.NZGcd <> m var
R960:960 Coq.Numbers.NatInt.NZGcd <> n var
R966:966 Coq.Numbers.NatInt.NZGcd <> n var
ax 977:988 NZGcdSpec gcd_divide_r
R1004:1004 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R1012:1014 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R1016:1016 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R1005:1007 Coq.Numbers.NatInt.NZGcd B gcd defax
R1011:1011 Coq.Numbers.NatInt.NZGcd <> m var
R1009:1009 Coq.Numbers.NatInt.NZGcd <> n var
R1015:1015 Coq.Numbers.NatInt.NZGcd <> m var
ax 1026:1037 NZGcdSpec gcd_greatest
R1062:1065 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1073:1076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1077:1077 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R1079:1081 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R1089:1089 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R1078:1078 Coq.Numbers.NatInt.NZGcd <> p var
R1082:1084 Coq.Numbers.NatInt.NZGcd B gcd defax
R1088:1088 Coq.Numbers.NatInt.NZGcd <> m var
R1086:1086 Coq.Numbers.NatInt.NZGcd <> n var
R1066:1066 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R1068:1070 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R1072:1072 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R1067:1067 Coq.Numbers.NatInt.NZGcd <> p var
R1071:1071 Coq.Numbers.NatInt.NZGcd <> m var
R1055:1055 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R1057:1059 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R1061:1061 Coq.Numbers.NatInt.NZGcd NZGcdSpec ::'('_x_'|'_x_')' not
R1056:1056 Coq.Numbers.NatInt.NZGcd <> p var
R1060:1060 Coq.Numbers.NatInt.NZGcd <> n var
ax 1099:1108 NZGcdSpec gcd_nonneg
R1125:1128 Coq.Structures.Orders LeNotation ::x_'<='_x not
R1129:1131 Coq.Numbers.NatInt.NZGcd B gcd defax
R1135:1135 Coq.Numbers.NatInt.NZGcd <> m var
R1133:1133 Coq.Numbers.NatInt.NZGcd <> n var
R1142:1150 Coq.Numbers.NatInt.NZGcd NZGcdSpec <> modtype
R1184:1198 Coq.Numbers.NatInt.NZAxioms NZOrdAxiomsSig' <> mod
R1203:1205 Coq.Numbers.NatInt.NZGcd Gcd <> mod
R1207:1207 Coq.Numbers.NatInt.NZGcd A <> modtype
R1212:1220 Coq.Numbers.NatInt.NZGcd NZGcdSpec <> mod
R1222:1222 Coq.Numbers.NatInt.NZGcd A <> modtype
R1224:1224 Coq.Numbers.NatInt.NZGcd B <> modtype
modtype 1166:1179 <> DivideNotation
R1269:1274 Coq.Numbers.NatInt.NZGcd C divide def
not 1253:1253 DivideNotation ::'('_x_'|'_x_')'
R1299:1312 Coq.Numbers.NatInt.NZGcd DivideNotation <> modtype
R1339:1352 Coq.Numbers.NatInt.NZAxioms NZOrdAxiomsSig <> mod
R1358:1360 Coq.Numbers.NatInt.NZGcd Gcd <> mod
R1362:1362 Coq.Numbers.NatInt.NZGcd A <> modtype
R1367:1375 Coq.Numbers.NatInt.NZGcd NZGcdSpec <> mod
R1377:1377 Coq.Numbers.NatInt.NZGcd A <> modtype
modtype 1328:1332 <> NZGcd
R1404:1417 Coq.Numbers.NatInt.NZAxioms NZOrdAxiomsSig <> mod
R1424:1426 Coq.Numbers.NatInt.NZGcd Gcd <> mod
R1428:1428 Coq.Numbers.NatInt.NZGcd A <> modtype
R1433:1441 Coq.Numbers.NatInt.NZGcd NZGcdSpec <> mod
R1443:1443 Coq.Numbers.NatInt.NZGcd A <> modtype
R1448:1461 Coq.Numbers.NatInt.NZGcd DivideNotation <> mod
R1463:1463 Coq.Numbers.NatInt.NZGcd A <> modtype
modtype 1392:1397 <> NZGcd'
R1531:1545 Coq.Numbers.NatInt.NZAxioms NZOrdAxiomsSig' <> mod
R1561:1566 Coq.Numbers.NatInt.NZGcd NZGcd' <> mod
R1568:1568 Coq.Numbers.NatInt.NZGcd A <> modtype
R1584:1597 Coq.Numbers.NatInt.NZMulOrder NZMulOrderProp <> mod
R1599:1599 Coq.Numbers.NatInt.NZGcd A <> modtype
mod 1508:1516 <> NZGcdProp
inst 1652:1660 NZGcdProp divide_wd
R1664:1669 Coq.Classes.Morphisms <> Proper class
R1687:1692 Coq.Numbers.NatInt.NZGcd B divide def
R1674:1676 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R1672:1673 Coq.Numbers.NatInt.NZGcd A eq defax
R1679:1681 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R1677:1678 Coq.Numbers.NatInt.NZGcd A eq defax
R1682:1684 Coq.Init.Logic <> iff def
R1710:1715 Coq.Numbers.NatInt.NZGcd B divide def
prf 1799:1808 NZGcdProp divide_1_l
R1822:1822 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R1824:1826 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R1828:1828 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R1827:1827 Coq.Numbers.NatInt.NZGcd <> n var
prf 1884:1893 NZGcdProp divide_0_r
R1907:1907 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R1909:1911 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R1913:1913 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R1908:1908 Coq.Numbers.NatInt.NZGcd <> n var
prf 1969:1978 NZGcdProp divide_0_l
R1999:2002 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2004:2005 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R2003:2003 Coq.Numbers.NatInt.NZGcd <> n var
R1992:1992 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R1994:1996 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R1998:1998 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R1997:1997 Coq.Numbers.NatInt.NZGcd <> n var
prf 2070:2084 NZGcdProp eq_mul_1_nonneg
R2105:2108 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2117:2120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2125:2128 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2122:2123 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R2121:2121 Coq.Numbers.NatInt.NZGcd <> n var
R2130:2131 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R2129:2129 Coq.Numbers.NatInt.NZGcd <> m var
R2112:2115 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R2110:2110 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R2109:2109 Coq.Numbers.NatInt.NZGcd <> n var
R2111:2111 Coq.Numbers.NatInt.NZGcd <> m var
R2102:2103 Coq.Structures.Orders LeNotation ::x_'<='_x not
R2104:2104 Coq.Numbers.NatInt.NZGcd <> n var
R2184:2194 Coq.Numbers.NatInt.NZGcd C lt_ge_cases thm
R2184:2194 Coq.Numbers.NatInt.NZGcd C lt_ge_cases thm
R2226:2236 Coq.Numbers.NatInt.NZGcd C mul_pos_neg thm
R2226:2236 Coq.Numbers.NatInt.NZGcd C mul_pos_neg thm
R2278:2286 Coq.Numbers.NatInt.NZGcd C le_succ_l thm
R2278:2286 Coq.Numbers.NatInt.NZGcd C le_succ_l thm
R2306:2313 Coq.Numbers.NatInt.NZGcd A one_succ prfax
R2306:2313 Coq.Numbers.NatInt.NZGcd A one_succ prfax
R2306:2313 Coq.Numbers.NatInt.NZGcd A one_succ prfax
R2348:2359 Coq.Numbers.NatInt.NZGcd C lt_1_mul_pos thm
R2348:2359 Coq.Numbers.NatInt.NZGcd C lt_1_mul_pos thm
R2396:2402 Coq.Numbers.NatInt.NZGcd C mul_1_l thm
R2396:2402 Coq.Numbers.NatInt.NZGcd C mul_1_l thm
R2396:2402 Coq.Numbers.NatInt.NZGcd C mul_1_l thm
R2437:2443 Coq.Numbers.NatInt.NZGcd C mul_0_r thm
R2437:2443 Coq.Numbers.NatInt.NZGcd C mul_0_r thm
R2437:2443 Coq.Numbers.NatInt.NZGcd C mul_0_r thm
R2475:2481 Coq.Numbers.NatInt.NZGcd A mul_0_l prfax
R2475:2481 Coq.Numbers.NatInt.NZGcd A mul_0_l prfax
R2475:2481 Coq.Numbers.NatInt.NZGcd A mul_0_l prfax
prf 2509:2524 NZGcdProp eq_mul_1_nonneg'
R2545:2548 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2557:2560 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2565:2568 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2562:2563 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R2561:2561 Coq.Numbers.NatInt.NZGcd <> n var
R2570:2571 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R2569:2569 Coq.Numbers.NatInt.NZGcd <> m var
R2552:2555 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R2550:2550 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R2549:2549 Coq.Numbers.NatInt.NZGcd <> n var
R2551:2551 Coq.Numbers.NatInt.NZGcd <> m var
R2542:2543 Coq.Structures.Orders LeNotation ::x_'<='_x not
R2544:2544 Coq.Numbers.NatInt.NZGcd <> m var
R2608:2615 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R2608:2615 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R2608:2615 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R2634:2641 Coq.Init.Logic <> and_comm thm
R2644:2658 Coq.Numbers.NatInt.NZGcd NZGcdProp eq_mul_1_nonneg thm
R2634:2641 Coq.Init.Logic <> and_comm thm
R2644:2658 Coq.Numbers.NatInt.NZGcd NZGcdProp eq_mul_1_nonneg thm
prf 2673:2689 NZGcdProp divide_1_r_nonneg
R2707:2710 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2718:2721 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2723:2724 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R2722:2722 Coq.Numbers.NatInt.NZGcd <> n var
R2711:2711 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2713:2715 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2717:2717 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2712:2712 Coq.Numbers.NatInt.NZGcd <> n var
R2704:2705 Coq.Structures.Orders LeNotation ::x_'<='_x not
R2706:2706 Coq.Numbers.NatInt.NZGcd <> n var
R2784:2799 Coq.Numbers.NatInt.NZGcd NZGcdProp eq_mul_1_nonneg' thm
R2784:2799 Coq.Numbers.NatInt.NZGcd NZGcdProp eq_mul_1_nonneg' thm
prf 2819:2829 NZGcdProp divide_refl
R2843:2843 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2845:2847 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2849:2849 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2844:2844 Coq.Numbers.NatInt.NZGcd <> n var
R2848:2848 Coq.Numbers.NatInt.NZGcd <> n var
prf 2905:2916 NZGcdProp divide_trans
R2941:2944 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2952:2955 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2956:2956 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2958:2960 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2962:2962 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2957:2957 Coq.Numbers.NatInt.NZGcd <> n var
R2961:2961 Coq.Numbers.NatInt.NZGcd <> p var
R2945:2945 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2947:2949 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2951:2951 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2946:2946 Coq.Numbers.NatInt.NZGcd <> m var
R2950:2950 Coq.Numbers.NatInt.NZGcd <> p var
R2934:2934 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2936:2938 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2940:2940 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R2935:2935 Coq.Numbers.NatInt.NZGcd <> n var
R2939:2939 Coq.Numbers.NatInt.NZGcd <> m var
R3010:3010 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R3010:3010 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R3036:3044 Coq.Numbers.NatInt.NZGcd C mul_assoc thm
R3036:3044 Coq.Numbers.NatInt.NZGcd C mul_assoc thm
R3036:3044 Coq.Numbers.NatInt.NZGcd C mul_assoc thm
inst 3062:3077 NZGcdProp divide_reflexive
R3081:3089 Coq.Classes.RelationClasses <> Reflexive class
R3091:3096 Coq.Numbers.NatInt.NZGcd B divide def
R3105:3115 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
inst 3127:3143 NZGcdProp divide_transitive
R3147:3156 Coq.Classes.RelationClasses <> Transitive class
R3158:3163 Coq.Numbers.NatInt.NZGcd B divide def
R3172:3183 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_trans thm
prf 3245:3265 NZGcdProp divide_antisym_nonneg
R3286:3289 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3294:3297 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3305:3308 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3316:3319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3321:3324 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R3320:3320 Coq.Numbers.NatInt.NZGcd <> n var
R3325:3325 Coq.Numbers.NatInt.NZGcd <> m var
R3309:3309 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3311:3313 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3315:3315 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3310:3310 Coq.Numbers.NatInt.NZGcd <> m var
R3314:3314 Coq.Numbers.NatInt.NZGcd <> n var
R3298:3298 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3300:3302 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3304:3304 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3299:3299 Coq.Numbers.NatInt.NZGcd <> n var
R3303:3303 Coq.Numbers.NatInt.NZGcd <> m var
R3291:3292 Coq.Structures.Orders LeNotation ::x_'<='_x not
R3293:3293 Coq.Numbers.NatInt.NZGcd <> m var
R3283:3284 Coq.Structures.Orders LeNotation ::x_'<='_x not
R3285:3285 Coq.Numbers.NatInt.NZGcd <> n var
R3392:3402 Coq.Numbers.NatInt.NZGcd C lt_ge_cases thm
R3392:3402 Coq.Numbers.NatInt.NZGcd C lt_ge_cases thm
R3436:3446 Coq.Numbers.NatInt.NZGcd C mul_neg_pos thm
R3436:3446 Coq.Numbers.NatInt.NZGcd C mul_neg_pos thm
R3481:3489 Coq.Numbers.NatInt.NZGcd C mul_assoc thm
R3481:3489 Coq.Numbers.NatInt.NZGcd C mul_assoc thm
R3481:3489 Coq.Numbers.NatInt.NZGcd C mul_assoc thm
R3521:3528 Coq.Numbers.NatInt.NZGcd C mul_id_l thm
R3521:3528 Coq.Numbers.NatInt.NZGcd C mul_id_l thm
R3558:3573 Coq.Numbers.NatInt.NZGcd NZGcdProp eq_mul_1_nonneg' thm
R3558:3573 Coq.Numbers.NatInt.NZGcd NZGcdProp eq_mul_1_nonneg' thm
R3615:3621 Coq.Numbers.NatInt.NZGcd C mul_1_l thm
R3615:3621 Coq.Numbers.NatInt.NZGcd C mul_1_l thm
R3615:3621 Coq.Numbers.NatInt.NZGcd C mul_1_l thm
R3646:3652 Coq.Numbers.NatInt.NZGcd C mul_0_r thm
R3646:3652 Coq.Numbers.NatInt.NZGcd C mul_0_r thm
R3646:3652 Coq.Numbers.NatInt.NZGcd C mul_0_r thm
prf 3692:3708 NZGcdProp mul_divide_mono_l
R3733:3736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3737:3737 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3743:3745 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3751:3751 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3739:3741 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R3738:3738 Coq.Numbers.NatInt.NZGcd <> p var
R3742:3742 Coq.Numbers.NatInt.NZGcd <> n var
R3747:3749 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R3746:3746 Coq.Numbers.NatInt.NZGcd <> p var
R3750:3750 Coq.Numbers.NatInt.NZGcd <> m var
R3726:3726 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3728:3730 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3732:3732 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3727:3727 Coq.Numbers.NatInt.NZGcd <> n var
R3731:3731 Coq.Numbers.NatInt.NZGcd <> m var
R3805:3816 Coq.Numbers.NatInt.NZGcd C mul_shuffle3 thm
R3805:3816 Coq.Numbers.NatInt.NZGcd C mul_shuffle3 thm
R3805:3816 Coq.Numbers.NatInt.NZGcd C mul_shuffle3 thm
prf 3835:3851 NZGcdProp mul_divide_mono_r
R3876:3879 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3880:3880 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3886:3888 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3894:3894 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3882:3884 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R3881:3881 Coq.Numbers.NatInt.NZGcd <> n var
R3885:3885 Coq.Numbers.NatInt.NZGcd <> p var
R3890:3892 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R3889:3889 Coq.Numbers.NatInt.NZGcd <> m var
R3893:3893 Coq.Numbers.NatInt.NZGcd <> p var
R3869:3869 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3871:3873 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3875:3875 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R3870:3870 Coq.Numbers.NatInt.NZGcd <> n var
R3874:3874 Coq.Numbers.NatInt.NZGcd <> m var
R3948:3956 Coq.Numbers.NatInt.NZGcd C mul_assoc thm
R3948:3956 Coq.Numbers.NatInt.NZGcd C mul_assoc thm
R3948:3956 Coq.Numbers.NatInt.NZGcd C mul_assoc thm
prf 3975:3993 NZGcdProp mul_divide_cancel_l
R4017:4022 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4050:4050 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4038:4042 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4023:4023 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4029:4031 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4037:4037 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4025:4027 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R4024:4024 Coq.Numbers.NatInt.NZGcd <> p var
R4028:4028 Coq.Numbers.NatInt.NZGcd <> n var
R4033:4035 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R4032:4032 Coq.Numbers.NatInt.NZGcd <> p var
R4036:4036 Coq.Numbers.NatInt.NZGcd <> m var
R4043:4043 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4045:4047 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4049:4049 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4044:4044 Coq.Numbers.NatInt.NZGcd <> n var
R4048:4048 Coq.Numbers.NatInt.NZGcd <> m var
R4012:4015 Coq.Structures.Equalities EqNotation ::x_'~='_x not
R4011:4011 Coq.Numbers.NatInt.NZGcd <> p var
R4123:4134 Coq.Numbers.NatInt.NZGcd C mul_shuffle3 thm
R4137:4148 Coq.Numbers.NatInt.NZGcd C mul_cancel_l thm
R4123:4134 Coq.Numbers.NatInt.NZGcd C mul_shuffle3 thm
R4123:4134 Coq.Numbers.NatInt.NZGcd C mul_shuffle3 thm
R4137:4148 Coq.Numbers.NatInt.NZGcd C mul_cancel_l thm
R4137:4148 Coq.Numbers.NatInt.NZGcd C mul_cancel_l thm
R4137:4148 Coq.Numbers.NatInt.NZGcd C mul_cancel_l thm
R4164:4180 Coq.Numbers.NatInt.NZGcd NZGcdProp mul_divide_mono_l thm
R4164:4180 Coq.Numbers.NatInt.NZGcd NZGcdProp mul_divide_mono_l thm
prf 4195:4213 NZGcdProp mul_divide_cancel_r
R4237:4242 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4270:4270 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4258:4262 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4243:4243 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4249:4251 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4257:4257 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4245:4247 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R4244:4244 Coq.Numbers.NatInt.NZGcd <> n var
R4248:4248 Coq.Numbers.NatInt.NZGcd <> p var
R4253:4255 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R4252:4252 Coq.Numbers.NatInt.NZGcd <> m var
R4256:4256 Coq.Numbers.NatInt.NZGcd <> p var
R4263:4263 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4265:4267 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4269:4269 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4264:4264 Coq.Numbers.NatInt.NZGcd <> n var
R4268:4268 Coq.Numbers.NatInt.NZGcd <> m var
R4232:4235 Coq.Structures.Equalities EqNotation ::x_'~='_x not
R4231:4231 Coq.Numbers.NatInt.NZGcd <> p var
R4300:4307 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R4300:4307 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R4300:4307 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R4300:4307 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R4325:4343 Coq.Numbers.NatInt.NZGcd NZGcdProp mul_divide_cancel_l thm
R4325:4343 Coq.Numbers.NatInt.NZGcd NZGcdProp mul_divide_cancel_l thm
prf 4358:4369 NZGcdProp divide_add_r
R4394:4397 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4405:4408 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4409:4409 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4411:4413 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4419:4419 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4410:4410 Coq.Numbers.NatInt.NZGcd <> n var
R4415:4417 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'+'_x not
R4414:4414 Coq.Numbers.NatInt.NZGcd <> m var
R4418:4418 Coq.Numbers.NatInt.NZGcd <> p var
R4398:4398 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4400:4402 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4404:4404 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4399:4399 Coq.Numbers.NatInt.NZGcd <> n var
R4403:4403 Coq.Numbers.NatInt.NZGcd <> p var
R4387:4387 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4389:4391 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4393:4393 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4388:4388 Coq.Numbers.NatInt.NZGcd <> n var
R4392:4392 Coq.Numbers.NatInt.NZGcd <> m var
R4467:4467 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'+'_x not
R4467:4467 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'+'_x not
R4485:4499 Coq.Numbers.NatInt.NZGcd C mul_add_distr_r thm
R4485:4499 Coq.Numbers.NatInt.NZGcd C mul_add_distr_r thm
R4485:4499 Coq.Numbers.NatInt.NZGcd C mul_add_distr_r thm
prf 4522:4533 NZGcdProp divide_mul_l
R4558:4561 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4562:4562 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4564:4566 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4572:4572 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4563:4563 Coq.Numbers.NatInt.NZGcd <> n var
R4568:4570 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R4567:4567 Coq.Numbers.NatInt.NZGcd <> m var
R4571:4571 Coq.Numbers.NatInt.NZGcd <> p var
R4551:4551 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4553:4555 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4557:4557 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4552:4552 Coq.Numbers.NatInt.NZGcd <> n var
R4556:4556 Coq.Numbers.NatInt.NZGcd <> m var
R4613:4613 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R4613:4613 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R4630:4641 Coq.Numbers.NatInt.NZGcd C mul_shuffle0 thm
R4630:4641 Coq.Numbers.NatInt.NZGcd C mul_shuffle0 thm
R4630:4641 Coq.Numbers.NatInt.NZGcd C mul_shuffle0 thm
prf 4660:4671 NZGcdProp divide_mul_r
R4696:4699 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4700:4700 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4702:4704 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4710:4710 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4701:4701 Coq.Numbers.NatInt.NZGcd <> n var
R4706:4708 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R4705:4705 Coq.Numbers.NatInt.NZGcd <> m var
R4709:4709 Coq.Numbers.NatInt.NZGcd <> p var
R4689:4689 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4691:4693 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4695:4695 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4690:4690 Coq.Numbers.NatInt.NZGcd <> n var
R4694:4694 Coq.Numbers.NatInt.NZGcd <> p var
R4743:4750 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R4743:4750 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R4743:4750 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R4759:4770 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_mul_l thm
R4759:4770 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_mul_l thm
prf 4785:4799 NZGcdProp divide_factor_l
R4815:4815 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4817:4819 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4825:4825 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4816:4816 Coq.Numbers.NatInt.NZGcd <> n var
R4821:4823 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R4820:4820 Coq.Numbers.NatInt.NZGcd <> n var
R4824:4824 Coq.Numbers.NatInt.NZGcd <> m var
R4850:4861 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_mul_l thm
R4864:4874 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
R4850:4861 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_mul_l thm
R4864:4874 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
prf 4889:4903 NZGcdProp divide_factor_r
R4919:4919 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4921:4923 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4929:4929 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R4920:4920 Coq.Numbers.NatInt.NZGcd <> n var
R4925:4927 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R4924:4924 Coq.Numbers.NatInt.NZGcd <> m var
R4928:4928 Coq.Numbers.NatInt.NZGcd <> n var
R4954:4965 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_mul_r thm
R4968:4978 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
R4954:4965 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_mul_r thm
R4968:4978 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
prf 4993:5005 NZGcdProp divide_pos_le
R5026:5029 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5037:5040 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5042:5045 Coq.Structures.Orders LeNotation ::x_'<='_x not
R5041:5041 Coq.Numbers.NatInt.NZGcd <> n var
R5046:5046 Coq.Numbers.NatInt.NZGcd <> m var
R5030:5030 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5032:5034 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5036:5036 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5031:5031 Coq.Numbers.NatInt.NZGcd <> n var
R5035:5035 Coq.Numbers.NatInt.NZGcd <> m var
R5022:5024 Coq.Structures.Orders LtNotation ::x_'<'_x not
R5025:5025 Coq.Numbers.NatInt.NZGcd <> m var
R5090:5100 Coq.Numbers.NatInt.NZGcd C le_gt_cases thm
R5090:5100 Coq.Numbers.NatInt.NZGcd C le_gt_cases thm
R5150:5160 Coq.Numbers.NatInt.NZGcd C lt_ge_cases thm
R5150:5160 Coq.Numbers.NatInt.NZGcd C lt_ge_cases thm
R5194:5204 Coq.Numbers.NatInt.NZGcd C mul_neg_pos thm
R5194:5204 Coq.Numbers.NatInt.NZGcd C mul_neg_pos thm
R5253:5259 Coq.Numbers.NatInt.NZGcd C mul_1_l thm
R5253:5259 Coq.Numbers.NatInt.NZGcd C mul_1_l thm
R5253:5259 Coq.Numbers.NatInt.NZGcd C mul_1_l thm
R5276:5292 Coq.Numbers.NatInt.NZGcd C mul_le_mono_pos_r thm
R5276:5292 Coq.Numbers.NatInt.NZGcd C mul_le_mono_pos_r thm
R5317:5324 Coq.Numbers.NatInt.NZGcd A one_succ prfax
R5327:5335 Coq.Numbers.NatInt.NZGcd C le_succ_l thm
R5317:5324 Coq.Numbers.NatInt.NZGcd A one_succ prfax
R5317:5324 Coq.Numbers.NatInt.NZGcd A one_succ prfax
R5327:5335 Coq.Numbers.NatInt.NZGcd C le_succ_l thm
R5327:5335 Coq.Numbers.NatInt.NZGcd C le_succ_l thm
R5355:5361 Coq.Numbers.NatInt.NZGcd A mul_0_l prfax
R5355:5361 Coq.Numbers.NatInt.NZGcd A mul_0_l prfax
R5355:5361 Coq.Numbers.NatInt.NZGcd A mul_0_l prfax
prf 5421:5430 NZGcdProp gcd_unique
R5453:5456 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5462:5465 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5471:5475 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5476:5476 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5510:5515 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5523:5526 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R5516:5518 Coq.Numbers.NatInt.NZGcd B gcd defax
R5522:5522 Coq.Numbers.NatInt.NZGcd <> m var
R5520:5520 Coq.Numbers.NatInt.NZGcd <> n var
R5527:5527 Coq.Numbers.NatInt.NZGcd <> p var
R5492:5495 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5501:5504 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5505:5505 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5507:5507 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5509:5509 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5506:5506 Coq.Numbers.NatInt.NZGcd <> q var
R5508:5508 Coq.Numbers.NatInt.NZGcd <> p var
R5496:5496 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5498:5498 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5500:5500 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5497:5497 Coq.Numbers.NatInt.NZGcd <> q var
R5499:5499 Coq.Numbers.NatInt.NZGcd <> m var
R5487:5487 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5489:5489 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5491:5491 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5488:5488 Coq.Numbers.NatInt.NZGcd <> q var
R5490:5490 Coq.Numbers.NatInt.NZGcd <> n var
R5466:5466 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5468:5468 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5470:5470 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5467:5467 Coq.Numbers.NatInt.NZGcd <> p var
R5469:5469 Coq.Numbers.NatInt.NZGcd <> m var
R5457:5457 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5459:5459 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5461:5461 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5458:5458 Coq.Numbers.NatInt.NZGcd <> p var
R5460:5460 Coq.Numbers.NatInt.NZGcd <> n var
R5450:5451 Coq.Structures.Orders LeNotation ::x_'<='_x not
R5452:5452 Coq.Numbers.NatInt.NZGcd <> p var
R5570:5590 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_antisym_nonneg thm
R5570:5590 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_antisym_nonneg thm
R5608:5617 Coq.Numbers.NatInt.NZGcd B gcd_nonneg prfax
R5608:5617 Coq.Numbers.NatInt.NZGcd B gcd_nonneg prfax
R5636:5647 Coq.Numbers.NatInt.NZGcd B gcd_divide_l prfax
R5636:5647 Coq.Numbers.NatInt.NZGcd B gcd_divide_l prfax
R5656:5667 Coq.Numbers.NatInt.NZGcd B gcd_divide_r prfax
R5656:5667 Coq.Numbers.NatInt.NZGcd B gcd_divide_r prfax
R5681:5692 Coq.Numbers.NatInt.NZGcd B gcd_greatest prfax
R5681:5692 Coq.Numbers.NatInt.NZGcd B gcd_greatest prfax
inst 5710:5715 NZGcdProp gcd_wd
R5719:5724 Coq.Classes.Morphisms <> Proper class
R5741:5743 Coq.Numbers.NatInt.NZGcd B gcd defax
R5729:5731 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R5727:5728 Coq.Numbers.NatInt.NZGcd A eq defax
R5734:5736 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R5732:5733 Coq.Numbers.NatInt.NZGcd A eq defax
R5737:5738 Coq.Numbers.NatInt.NZGcd A eq defax
R5785:5794 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique thm
R5785:5794 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique thm
R5804:5813 Coq.Numbers.NatInt.NZGcd B gcd_nonneg prfax
R5804:5813 Coq.Numbers.NatInt.NZGcd B gcd_nonneg prfax
R5835:5846 Coq.Numbers.NatInt.NZGcd B gcd_divide_l prfax
R5835:5846 Coq.Numbers.NatInt.NZGcd B gcd_divide_l prfax
R5868:5879 Coq.Numbers.NatInt.NZGcd B gcd_divide_r prfax
R5868:5879 Coq.Numbers.NatInt.NZGcd B gcd_divide_r prfax
R5912:5923 Coq.Numbers.NatInt.NZGcd B gcd_greatest prfax
R5912:5923 Coq.Numbers.NatInt.NZGcd B gcd_greatest prfax
prf 5938:5951 NZGcdProp gcd_divide_iff
R5984:5988 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5971:5971 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5973:5975 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5983:5983 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5972:5972 Coq.Numbers.NatInt.NZGcd <> p var
R5976:5978 Coq.Numbers.NatInt.NZGcd B gcd defax
R5982:5982 Coq.Numbers.NatInt.NZGcd <> m var
R5980:5980 Coq.Numbers.NatInt.NZGcd <> n var
R5996:5999 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5989:5989 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5991:5993 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5995:5995 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R5990:5990 Coq.Numbers.NatInt.NZGcd <> p var
R5994:5994 Coq.Numbers.NatInt.NZGcd <> n var
R6000:6000 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R6002:6004 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R6006:6006 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R6001:6001 Coq.Numbers.NatInt.NZGcd <> p var
R6005:6005 Coq.Numbers.NatInt.NZGcd <> m var
R6054:6056 Coq.Numbers.NatInt.NZGcd B gcd defax
R6078:6089 Coq.Numbers.NatInt.NZGcd B gcd_divide_l prfax
R6054:6056 Coq.Numbers.NatInt.NZGcd B gcd defax
R6078:6089 Coq.Numbers.NatInt.NZGcd B gcd_divide_l prfax
R6078:6089 Coq.Numbers.NatInt.NZGcd B gcd_divide_l prfax
R6107:6109 Coq.Numbers.NatInt.NZGcd B gcd defax
R6131:6142 Coq.Numbers.NatInt.NZGcd B gcd_divide_r prfax
R6107:6109 Coq.Numbers.NatInt.NZGcd B gcd defax
R6131:6142 Coq.Numbers.NatInt.NZGcd B gcd_divide_r prfax
R6131:6142 Coq.Numbers.NatInt.NZGcd B gcd_divide_r prfax
R6171:6182 Coq.Numbers.NatInt.NZGcd B gcd_greatest prfax
R6171:6182 Coq.Numbers.NatInt.NZGcd B gcd_greatest prfax
prf 6197:6210 NZGcdProp gcd_unique_alt
R6232:6236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6237:6237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6272:6277 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6285:6288 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R6278:6280 Coq.Numbers.NatInt.NZGcd B gcd defax
R6284:6284 Coq.Numbers.NatInt.NZGcd <> m var
R6282:6282 Coq.Numbers.NatInt.NZGcd <> n var
R6289:6289 Coq.Numbers.NatInt.NZGcd <> p var
R6253:6257 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6248:6248 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R6250:6250 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R6252:6252 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R6249:6249 Coq.Numbers.NatInt.NZGcd <> q var
R6251:6251 Coq.Numbers.NatInt.NZGcd <> p var
R6263:6266 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6258:6258 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R6260:6260 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R6262:6262 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R6259:6259 Coq.Numbers.NatInt.NZGcd <> q var
R6261:6261 Coq.Numbers.NatInt.NZGcd <> n var
R6267:6267 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R6269:6269 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R6271:6271 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R6268:6268 Coq.Numbers.NatInt.NZGcd <> q var
R6270:6270 Coq.Numbers.NatInt.NZGcd <> m var
R6229:6230 Coq.Structures.Orders LeNotation ::x_'<='_x not
R6231:6231 Coq.Numbers.NatInt.NZGcd <> p var
R6326:6335 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique thm
R6326:6335 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique thm
R6363:6373 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
R6363:6373 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
R6392:6402 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
R6392:6402 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
prf 6446:6453 NZGcdProp gcd_comm
R6476:6479 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R6469:6471 Coq.Numbers.NatInt.NZGcd B gcd defax
R6475:6475 Coq.Numbers.NatInt.NZGcd <> m var
R6473:6473 Coq.Numbers.NatInt.NZGcd <> n var
R6480:6482 Coq.Numbers.NatInt.NZGcd B gcd defax
R6486:6486 Coq.Numbers.NatInt.NZGcd <> n var
R6484:6484 Coq.Numbers.NatInt.NZGcd <> m var
R6511:6524 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique_alt thm
R6537:6546 Coq.Numbers.NatInt.NZGcd B gcd_nonneg prfax
R6511:6524 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique_alt thm
R6537:6546 Coq.Numbers.NatInt.NZGcd B gcd_nonneg prfax
R6537:6546 Coq.Numbers.NatInt.NZGcd B gcd_nonneg prfax
R6566:6573 Coq.Init.Logic <> and_comm thm
R6566:6573 Coq.Init.Logic <> and_comm thm
R6566:6573 Coq.Init.Logic <> and_comm thm
R6582:6595 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_divide_iff thm
R6582:6595 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_divide_iff thm
prf 6610:6618 NZGcdProp gcd_assoc
R6651:6654 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R6636:6638 Coq.Numbers.NatInt.NZGcd B gcd defax
R6643:6645 Coq.Numbers.NatInt.NZGcd B gcd defax
R6649:6649 Coq.Numbers.NatInt.NZGcd <> p var
R6647:6647 Coq.Numbers.NatInt.NZGcd <> m var
R6640:6640 Coq.Numbers.NatInt.NZGcd <> n var
R6655:6657 Coq.Numbers.NatInt.NZGcd B gcd defax
R6669:6669 Coq.Numbers.NatInt.NZGcd <> p var
R6660:6662 Coq.Numbers.NatInt.NZGcd B gcd defax
R6666:6666 Coq.Numbers.NatInt.NZGcd <> m var
R6664:6664 Coq.Numbers.NatInt.NZGcd <> n var
R6694:6707 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique_alt thm
R6720:6729 Coq.Numbers.NatInt.NZGcd B gcd_nonneg prfax
R6694:6707 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique_alt thm
R6720:6729 Coq.Numbers.NatInt.NZGcd B gcd_nonneg prfax
R6720:6729 Coq.Numbers.NatInt.NZGcd B gcd_nonneg prfax
R6754:6767 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_divide_iff thm
R6770:6778 Coq.Init.Logic <> and_assoc thm
R6754:6767 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_divide_iff thm
R6754:6767 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_divide_iff thm
R6754:6767 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_divide_iff thm
R6754:6767 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_divide_iff thm
R6754:6767 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_divide_iff thm
R6770:6778 Coq.Init.Logic <> and_assoc thm
R6770:6778 Coq.Init.Logic <> and_assoc thm
prf 6793:6806 NZGcdProp gcd_0_l_nonneg
R6824:6827 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6835:6838 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R6828:6830 Coq.Numbers.NatInt.NZGcd B gcd defax
R6834:6834 Coq.Numbers.NatInt.NZGcd <> n var
R6839:6839 Coq.Numbers.NatInt.NZGcd <> n var
R6821:6822 Coq.Structures.Orders LeNotation ::x_'<='_x not
R6823:6823 Coq.Numbers.NatInt.NZGcd <> n var
R6864:6873 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique thm
R6864:6873 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique thm
R6892:6901 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_0_r thm
R6892:6901 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_0_r thm
R6911:6921 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
R6911:6921 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
prf 6936:6949 NZGcdProp gcd_0_r_nonneg
R6967:6970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6978:6981 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R6971:6973 Coq.Numbers.NatInt.NZGcd B gcd defax
R6975:6975 Coq.Numbers.NatInt.NZGcd <> n var
R6982:6982 Coq.Numbers.NatInt.NZGcd <> n var
R6964:6965 Coq.Structures.Orders LeNotation ::x_'<='_x not
R6966:6966 Coq.Numbers.NatInt.NZGcd <> n var
R7013:7020 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_comm thm
R7023:7036 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_0_l_nonneg thm
R7013:7020 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_comm thm
R7013:7020 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_comm thm
R7023:7036 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_0_l_nonneg thm
R7023:7036 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_0_l_nonneg thm
R7023:7036 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_0_l_nonneg thm
prf 7051:7057 NZGcdProp gcd_1_l
R7078:7081 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R7071:7073 Coq.Numbers.NatInt.NZGcd B gcd defax
R7077:7077 Coq.Numbers.NatInt.NZGcd <> n var
R7107:7116 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique thm
R7133:7142 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_1_l thm
R7145:7150 Coq.Numbers.NatInt.NZGcd C le_0_1 thm
R7107:7116 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique thm
R7133:7142 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_1_l thm
R7133:7142 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_1_l thm
R7133:7142 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_1_l thm
R7133:7142 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_1_l thm
R7145:7150 Coq.Numbers.NatInt.NZGcd C le_0_1 thm
R7145:7150 Coq.Numbers.NatInt.NZGcd C le_0_1 thm
R7145:7150 Coq.Numbers.NatInt.NZGcd C le_0_1 thm
R7145:7150 Coq.Numbers.NatInt.NZGcd C le_0_1 thm
prf 7165:7171 NZGcdProp gcd_1_r
R7192:7195 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R7185:7187 Coq.Numbers.NatInt.NZGcd B gcd defax
R7189:7189 Coq.Numbers.NatInt.NZGcd <> n var
R7227:7234 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_comm thm
R7237:7243 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_1_l thm
R7227:7234 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_comm thm
R7227:7234 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_comm thm
R7237:7243 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_1_l thm
R7237:7243 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_1_l thm
prf 7258:7272 NZGcdProp gcd_diag_nonneg
R7290:7293 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7301:7304 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R7294:7296 Coq.Numbers.NatInt.NZGcd B gcd defax
R7300:7300 Coq.Numbers.NatInt.NZGcd <> n var
R7298:7298 Coq.Numbers.NatInt.NZGcd <> n var
R7305:7305 Coq.Numbers.NatInt.NZGcd <> n var
R7287:7288 Coq.Structures.Orders LeNotation ::x_'<='_x not
R7289:7289 Coq.Numbers.NatInt.NZGcd <> n var
R7330:7339 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique thm
R7356:7366 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
R7330:7339 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique thm
R7356:7366 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
R7356:7366 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
R7356:7366 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
R7356:7366 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_refl thm
prf 7381:7390 NZGcdProp gcd_eq_0_l
R7418:7421 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7423:7426 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R7422:7422 Coq.Numbers.NatInt.NZGcd <> n var
R7413:7416 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R7406:7408 Coq.Numbers.NatInt.NZGcd B gcd defax
R7412:7412 Coq.Numbers.NatInt.NZGcd <> m var
R7410:7410 Coq.Numbers.NatInt.NZGcd <> n var
R7459:7470 Coq.Numbers.NatInt.NZGcd B gcd_divide_l prfax
R7459:7470 Coq.Numbers.NatInt.NZGcd B gcd_divide_l prfax
R7495:7504 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_0_l thm
R7495:7504 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_0_l thm
prf 7519:7528 NZGcdProp gcd_eq_0_r
R7556:7559 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7561:7564 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R7560:7560 Coq.Numbers.NatInt.NZGcd <> m var
R7551:7554 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R7544:7546 Coq.Numbers.NatInt.NZGcd B gcd defax
R7550:7550 Coq.Numbers.NatInt.NZGcd <> m var
R7548:7548 Coq.Numbers.NatInt.NZGcd <> n var
R7590:7599 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_eq_0_l thm
R7590:7599 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_eq_0_l thm
R7621:7628 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_comm thm
R7621:7628 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_comm thm
R7621:7628 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_comm thm
prf 7643:7650 NZGcdProp gcd_eq_0
R7678:7682 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R7673:7676 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R7666:7668 Coq.Numbers.NatInt.NZGcd B gcd defax
R7672:7672 Coq.Numbers.NatInt.NZGcd <> m var
R7670:7670 Coq.Numbers.NatInt.NZGcd <> n var
R7689:7692 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7684:7687 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R7683:7683 Coq.Numbers.NatInt.NZGcd <> n var
R7694:7697 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R7693:7693 Coq.Numbers.NatInt.NZGcd <> m var
R7742:7751 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_eq_0_l thm
R7742:7751 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_eq_0_l thm
R7772:7781 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_eq_0_r thm
R7772:7781 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_eq_0_r thm
R7836:7849 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_0_r_nonneg thm
R7836:7849 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_0_r_nonneg thm
prf 7864:7877 NZGcdProp gcd_mul_diag_l
R7897:7900 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7912:7915 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R7901:7903 Coq.Numbers.NatInt.NZGcd B gcd defax
R7909:7909 Coq.Numbers.NatInt.NZAxioms AddSubMulNotation ::x_'*'_x not
R7908:7908 Coq.Numbers.NatInt.NZGcd <> n var
R7910:7910 Coq.Numbers.NatInt.NZGcd <> m var
R7905:7905 Coq.Numbers.NatInt.NZGcd <> n var
R7916:7916 Coq.Numbers.NatInt.NZGcd <> n var
R7894:7895 Coq.Structures.Orders LeNotation ::x_'<='_x not
R7896:7896 Coq.Numbers.NatInt.NZGcd <> n var
R7948:7961 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique_alt thm
R7948:7961 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_unique_alt thm
R8017:8028 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_mul_l thm
R8017:8028 Coq.Numbers.NatInt.NZGcd NZGcdProp divide_mul_l thm
prf 8060:8073 NZGcdProp divide_gcd_iff
R8093:8097 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8120:8120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8103:8107 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8098:8098 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R8100:8100 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R8102:8102 Coq.Numbers.NatInt.NZGcd DivideNotation ::'('_x_'|'_x_')' not
R8099:8099 Coq.Numbers.NatInt.NZGcd <> n var
R8101:8101 Coq.Numbers.NatInt.NZGcd <> m var
R8115:8118 Coq.Structures.Equalities EqNotation ::x_'=='_x not
R8108:8110 Coq.Numbers.NatInt.NZGcd B gcd defax
R8114:8114 Coq.Numbers.NatInt.NZGcd <> m var
R8112:8112 Coq.Numbers.NatInt.NZGcd <> n var
R8119:8119 Coq.Numbers.NatInt.NZGcd <> n var
R8090:8091 Coq.Structures.Orders LeNotation ::x_'<='_x not
R8092:8092 Coq.Numbers.NatInt.NZGcd <> n var
R8189:8196 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R8189:8196 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R8189:8196 Coq.Numbers.NatInt.NZGcd C mul_comm thm
R8209:8222 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_mul_diag_l thm
R8209:8222 Coq.Numbers.NatInt.NZGcd NZGcdProp gcd_mul_diag_l thm
R8258:8269 Coq.Numbers.NatInt.NZGcd B gcd_divide_r prfax
R8258:8269 Coq.Numbers.NatInt.NZGcd B gcd_divide_r prfax
R8282:8290 Coq.Numbers.NatInt.NZGcd NZGcdProp <> mod

DIGEST 9152917a8cbd0710ebf0e3208c023611
FCoq.ZArith.Zpower
R541:546 Coq.Arith.Wf_nat <> <> lib
R548:558 Coq.ZArith.ZArith_base <> <> lib
R560:564 Coq.omega.Omega <> <> lib
R566:577 Coq.ZArith.Zcomplements <> <> lib
R595:602 Coq.ZArith.Zpow_def <> <> lib
def 1231:1240 <> Zpower_nat
R1245:1245 Coq.Numbers.BinNums <> Z ind
R1251:1258 Coq.Init.Datatypes <> nat_rect scheme
R1274:1278 Coq.ZArith.BinInt Z mul def
R1280:1280 Coq.ZArith.Zpower <> z var
prf 1291:1304 <> Zpower_nat_0_r
R1324:1326 Coq.Init.Logic <> :type_scope:x_'='_x not
R1310:1319 Coq.ZArith.Zpower <> Zpower_nat def
R1321:1321 Coq.ZArith.Zpower <> z var
prf 1362:1378 <> Zpower_nat_succ_r
R1404:1406 Coq.Init.Logic <> :type_scope:x_'='_x not
R1386:1395 Coq.ZArith.Zpower <> Zpower_nat def
R1400:1400 Coq.Init.Datatypes <> S constr
R1402:1402 Coq.ZArith.Zpower <> n var
R1397:1397 Coq.ZArith.Zpower <> z var
R1408:1411 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R1426:1426 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R1407:1407 Coq.ZArith.Zpower <> z var
R1412:1421 Coq.ZArith.Zpower <> Zpower_nat def
R1425:1425 Coq.ZArith.Zpower <> n var
R1423:1423 Coq.ZArith.Zpower <> z var
prf 1574:1590 <> Zpower_nat_is_exp
R1608:1610 Coq.Init.Datatypes <> nat ind
R1616:1616 Coq.Numbers.BinNums <> Z ind
R1644:1646 Coq.Init.Logic <> :type_scope:x_'='_x not
R1624:1633 Coq.ZArith.Zpower <> Zpower_nat def
R1639:1641 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1638:1638 Coq.ZArith.Zpower <> n var
R1642:1642 Coq.ZArith.Zpower <> m var
R1635:1635 Coq.ZArith.Zpower <> z var
R1661:1663 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R1647:1656 Coq.ZArith.Zpower <> Zpower_nat def
R1660:1660 Coq.ZArith.Zpower <> n var
R1658:1658 Coq.ZArith.Zpower <> z var
R1664:1673 Coq.ZArith.Zpower <> Zpower_nat def
R1677:1677 Coq.ZArith.Zpower <> m var
R1675:1675 Coq.ZArith.Zpower <> z var
R1724:1737 Coq.ZArith.Zpower <> Zpower_nat_0_r thm
R1740:1748 Coq.ZArith.BinInt Z mul_1_l thm
R1724:1737 Coq.ZArith.Zpower <> Zpower_nat_0_r thm
R1724:1737 Coq.ZArith.Zpower <> Zpower_nat_0_r thm
R1740:1748 Coq.ZArith.BinInt Z mul_1_l thm
R1740:1748 Coq.ZArith.BinInt Z mul_1_l thm
R1786:1796 Coq.ZArith.BinInt Z mul_assoc thm
R1786:1796 Coq.ZArith.BinInt Z mul_assoc thm
R1786:1796 Coq.ZArith.BinInt Z mul_assoc thm
prf 1875:1888 <> Zpower_pos_nat
R1895:1895 Coq.Numbers.BinNums <> Z ind
R1903:1910 Coq.Numbers.BinNums <> positive ind
R1930:1932 Coq.Init.Logic <> :type_scope:x_'='_x not
R1917:1925 Coq.ZArith.BinInt Z pow_pos def
R1929:1929 Coq.ZArith.Zpower <> p var
R1927:1927 Coq.ZArith.Zpower <> z var
R1933:1942 Coq.ZArith.Zpower <> Zpower_nat def
R1947:1956 Coq.PArith.BinPos Pos to_nat def
R1958:1958 Coq.ZArith.Zpower <> p var
R1944:1944 Coq.ZArith.Zpower <> z var
R1977:1992 Coq.PArith.Pnat Pos2Nat inj_iter thm
R1977:1992 Coq.PArith.Pnat Pos2Nat inj_iter thm
prf 2007:2018 <> Zpower_nat_Z
R2025:2025 Coq.Numbers.BinNums <> Z ind
R2033:2035 Coq.Init.Datatypes <> nat ind
R2056:2058 Coq.Init.Logic <> :type_scope:x_'='_x not
R2042:2051 Coq.ZArith.Zpower <> Zpower_nat def
R2055:2055 Coq.ZArith.Zpower <> n var
R2053:2053 Coq.ZArith.Zpower <> z var
R2060:2063 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R2074:2074 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R2059:2059 Coq.ZArith.Zpower <> z var
R2064:2071 Coq.ZArith.BinInt Z of_nat def
R2073:2073 Coq.ZArith.Zpower <> n var
R2116:2132 Coq.ZArith.Zpower <> Zpower_nat_succ_r thm
R2135:2148 Coq.ZArith.Znat Nat2Z inj_succ thm
R2151:2162 Coq.ZArith.BinInt Z pow_succ_r thm
R2116:2132 Coq.ZArith.Zpower <> Zpower_nat_succ_r thm
R2116:2132 Coq.ZArith.Zpower <> Zpower_nat_succ_r thm
R2135:2148 Coq.ZArith.Znat Nat2Z inj_succ thm
R2135:2148 Coq.ZArith.Znat Nat2Z inj_succ thm
R2151:2162 Coq.ZArith.BinInt Z pow_succ_r thm
R2151:2162 Coq.ZArith.BinInt Z pow_succ_r thm
R2151:2162 Coq.ZArith.BinInt Z pow_succ_r thm
R2186:2200 Coq.ZArith.Znat Nat2Z is_nonneg thm
R2186:2200 Coq.ZArith.Znat Nat2Z is_nonneg thm
prf 2217:2233 <> Zpower_nat_Zpower
R2247:2251 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2255:2257 Coq.Init.Logic <> :type_scope:x_'='_x not
R2253:2253 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R2252:2252 Coq.ZArith.Zpower <> z var
R2254:2254 Coq.ZArith.Zpower <> n var
R2258:2267 Coq.ZArith.Zpower <> Zpower_nat def
R2272:2280 Coq.ZArith.BinInt Z abs_nat def
R2282:2282 Coq.ZArith.Zpower <> n var
R2269:2269 Coq.ZArith.Zpower <> z var
R2242:2245 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R2246:2246 Coq.ZArith.Zpower <> n var
R2314:2325 Coq.ZArith.Zpower <> Zpower_nat_Z thm
R2328:2342 Coq.ZArith.Znat Zabs2Nat id_abs thm
R2345:2352 Coq.ZArith.BinInt Z abs_eq thm
R2314:2325 Coq.ZArith.Zpower <> Zpower_nat_Z thm
R2314:2325 Coq.ZArith.Zpower <> Zpower_nat_Z thm
R2328:2342 Coq.ZArith.Znat Zabs2Nat id_abs thm
R2328:2342 Coq.ZArith.Znat Zabs2Nat id_abs thm
R2345:2352 Coq.ZArith.BinInt Z abs_eq thm
R2345:2352 Coq.ZArith.BinInt Z abs_eq thm
R2345:2352 Coq.ZArith.BinInt Z abs_eq thm
prf 2488:2504 <> Zpower_pos_is_exp
R2513:2520 Coq.Numbers.BinNums <> positive ind
R2525:2525 Coq.Numbers.BinNums <> Z ind
R2551:2553 Coq.Init.Logic <> :type_scope:x_'='_x not
R2532:2540 Coq.ZArith.BinInt Z pow_pos def
R2546:2548 Coq.PArith.BinPos <> :positive_scope:x_'+'_x not
R2545:2545 Coq.ZArith.Zpower <> n var
R2549:2549 Coq.ZArith.Zpower <> m var
R2542:2542 Coq.ZArith.Zpower <> z var
R2567:2569 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R2554:2562 Coq.ZArith.BinInt Z pow_pos def
R2566:2566 Coq.ZArith.Zpower <> n var
R2564:2564 Coq.ZArith.Zpower <> z var
R2570:2578 Coq.ZArith.BinInt Z pow_pos def
R2582:2582 Coq.ZArith.Zpower <> m var
R2580:2580 Coq.ZArith.Zpower <> z var
R2604:2614 Coq.ZArith.BinInt Z pow_add_r thm
R2628:2631 Coq.Numbers.BinNums <> Zpos constr
R2619:2622 Coq.Numbers.BinNums <> Zpos constr
R2604:2614 Coq.ZArith.BinInt Z pow_add_r thm
R2628:2631 Coq.Numbers.BinNums <> Zpos constr
R2619:2622 Coq.Numbers.BinNums <> Zpos constr
R2717:2725 Coq.ZArith.BinInt Z pow_pos def
R2727:2736 Coq.ZArith.Zpower <> Zpower_nat def
prf 2756:2765 <> Zpower_exp
R2783:2786 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2793:2796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2808:2810 Coq.Init.Logic <> :type_scope:x_'='_x not
R2798:2801 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R2807:2807 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R2797:2797 Coq.ZArith.Zpower <> x var
R2803:2805 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R2802:2802 Coq.ZArith.Zpower <> n var
R2806:2806 Coq.ZArith.Zpower <> m var
R2816:2818 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R2812:2814 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R2811:2811 Coq.ZArith.Zpower <> x var
R2815:2815 Coq.ZArith.Zpower <> n var
R2820:2822 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R2819:2819 Coq.ZArith.Zpower <> x var
R2823:2823 Coq.ZArith.Zpower <> m var
R2788:2791 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R2787:2787 Coq.ZArith.Zpower <> m var
R2778:2781 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R2777:2777 Coq.ZArith.Zpower <> n var
R2856:2866 Coq.ZArith.BinInt Z pow_add_r thm
R2856:2866 Coq.ZArith.BinInt Z pow_add_r thm
sec 2883:2893 <> Powers_of_2
def 3107:3115 <> shift_nat
R3120:3122 Coq.Init.Datatypes <> nat ind
R3128:3135 Coq.Numbers.BinNums <> positive ind
R3141:3148 Coq.Init.Datatypes <> nat_rect scheme
R3168:3168 Coq.ZArith.Zpower <> n var
R3164:3165 Coq.Numbers.BinNums <> xO constr
R3152:3152 Coq.ZArith.Zpower <> z var
def 3184:3192 <> shift_pos
R3199:3206 Coq.Numbers.BinNums <> positive ind
R3212:3219 Coq.PArith.BinPos Pos iter def
R3226:3226 Coq.ZArith.Zpower <> n var
R3224:3224 Coq.ZArith.Zpower <> z var
R3221:3222 Coq.Numbers.BinNums <> xO constr
def 3242:3246 <> shift
R3251:3251 Coq.Numbers.BinNums <> Z ind
R3257:3264 Coq.Numbers.BinNums <> positive ind
R3280:3280 Coq.ZArith.Zpower <> n var
R3295:3296 Coq.Numbers.BinNums <> Z0 constr
R3301:3301 Coq.ZArith.Zpower <> z var
R3311:3314 Coq.Numbers.BinNums <> Zpos constr
R3321:3328 Coq.PArith.BinPos Pos iter def
R3333:3333 Coq.ZArith.Zpower <> z var
R3330:3331 Coq.Numbers.BinNums <> xO constr
R3345:3348 Coq.Numbers.BinNums <> Zneg constr
R3355:3355 Coq.ZArith.Zpower <> z var
def 3380:3392 <> two_power_nat
R3397:3399 Coq.Init.Datatypes <> nat ind
R3405:3408 Coq.Numbers.BinNums <> Zpos constr
R3411:3419 Coq.ZArith.Zpower <> shift_nat def
R3421:3421 Coq.ZArith.Zpower <> n var
def 3440:3452 <> two_power_pos
R3457:3464 Coq.Numbers.BinNums <> positive ind
R3470:3473 Coq.Numbers.BinNums <> Zpos constr
R3476:3484 Coq.ZArith.Zpower <> shift_pos def
R3486:3486 Coq.ZArith.Zpower <> x var
def 3506:3510 <> two_p
R3515:3515 Coq.Numbers.BinNums <> Z ind
R3531:3531 Coq.ZArith.Zpower <> x var
R3546:3547 Coq.Numbers.BinNums <> Z0 constr
R3562:3565 Coq.Numbers.BinNums <> Zpos constr
R3572:3584 Coq.ZArith.Zpower <> two_power_pos def
R3596:3599 Coq.Numbers.BinNums <> Zneg constr
prf 3679:3693 <> shift_nat_equiv
R3714:3716 Coq.Init.Logic <> :type_scope:x_'='_x not
R3701:3709 Coq.ZArith.Zpower <> shift_nat def
R3713:3713 Coq.ZArith.Zpower <> p var
R3711:3711 Coq.ZArith.Zpower <> n var
R3717:3730 Coq.PArith.BinPos Pos shiftl_nat def
R3734:3734 Coq.ZArith.Zpower <> n var
R3732:3732 Coq.ZArith.Zpower <> p var
prf 3773:3787 <> shift_pos_equiv
R3808:3810 Coq.Init.Logic <> :type_scope:x_'='_x not
R3795:3803 Coq.ZArith.Zpower <> shift_pos def
R3807:3807 Coq.ZArith.Zpower <> p var
R3805:3805 Coq.ZArith.Zpower <> n var
R3811:3820 Coq.PArith.BinPos Pos shiftl def
R3825:3828 Coq.Numbers.BinNums <> Npos constr
R3830:3830 Coq.ZArith.Zpower <> n var
R3822:3822 Coq.ZArith.Zpower <> p var
prf 3870:3880 <> shift_equiv
R3892:3895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3912:3914 Coq.Init.Logic <> :type_scope:x_'='_x not
R3896:3899 Coq.Numbers.BinNums <> Zpos constr
R3902:3906 Coq.ZArith.Zpower <> shift def
R3910:3910 Coq.ZArith.Zpower <> p var
R3908:3908 Coq.ZArith.Zpower <> n var
R3915:3922 Coq.ZArith.BinInt Z shiftl def
R3933:3933 Coq.ZArith.Zpower <> n var
R3925:3928 Coq.Numbers.BinNums <> Zpos constr
R3930:3930 Coq.ZArith.Zpower <> p var
R3889:3890 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R3891:3891 Coq.ZArith.Zpower <> n var
R4004:4020 Coq.PArith.BinPos Pos iter_swap_gen thm
R4004:4020 Coq.PArith.BinPos Pos iter_swap_gen thm
prf 4060:4078 <> two_power_nat_equiv
R4099:4101 Coq.Init.Logic <> :type_scope:x_'='_x not
R4084:4096 Coq.ZArith.Zpower <> two_power_nat def
R4098:4098 Coq.ZArith.Zpower <> n var
R4103:4106 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R4117:4117 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R4107:4114 Coq.ZArith.BinInt Z of_nat def
R4116:4116 Coq.ZArith.Zpower <> n var
R4222:4236 Coq.ZArith.Znat Nat2Z is_nonneg thm
R4176:4189 Coq.ZArith.Znat Nat2Z inj_succ thm
R4192:4203 Coq.ZArith.BinInt Z pow_succ_r thm
R4176:4189 Coq.ZArith.Znat Nat2Z inj_succ thm
R4176:4189 Coq.ZArith.Znat Nat2Z inj_succ thm
R4192:4203 Coq.ZArith.BinInt Z pow_succ_r thm
R4222:4236 Coq.ZArith.Znat Nat2Z is_nonneg thm
R4192:4203 Coq.ZArith.BinInt Z pow_succ_r thm
prf 4255:4273 <> two_power_pos_equiv
R4294:4296 Coq.Init.Logic <> :type_scope:x_'='_x not
R4279:4291 Coq.ZArith.Zpower <> two_power_pos def
R4293:4293 Coq.ZArith.Zpower <> p var
R4298:4300 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R4301:4304 Coq.Numbers.BinNums <> Zpos constr
R4306:4306 Coq.ZArith.Zpower <> p var
R4331:4347 Coq.PArith.BinPos Pos iter_swap_gen thm
R4331:4347 Coq.PArith.BinPos Pos iter_swap_gen thm
prf 4366:4376 <> two_p_equiv
R4389:4391 Coq.Init.Logic <> :type_scope:x_'='_x not
R4382:4386 Coq.ZArith.Zpower <> two_p def
R4388:4388 Coq.ZArith.Zpower <> x var
R4393:4395 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R4396:4396 Coq.ZArith.Zpower <> x var
R4438:4456 Coq.ZArith.Zpower <> two_power_pos_equiv thm
R4438:4456 Coq.ZArith.Zpower <> two_power_pos_equiv thm
prf 4535:4549 <> two_power_nat_S
R4574:4576 Coq.Init.Logic <> :type_scope:x_'='_x not
R4555:4567 Coq.ZArith.Zpower <> two_power_nat def
R4570:4570 Coq.Init.Datatypes <> S constr
R4572:4572 Coq.ZArith.Zpower <> n var
R4578:4580 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4581:4593 Coq.ZArith.Zpower <> two_power_nat def
R4595:4595 Coq.ZArith.Zpower <> n var
prf 4634:4647 <> shift_nat_plus
R4680:4682 Coq.Init.Logic <> :type_scope:x_'='_x not
R4661:4669 Coq.ZArith.Zpower <> shift_nat def
R4679:4679 Coq.ZArith.Zpower <> x var
R4673:4675 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4672:4672 Coq.ZArith.Zpower <> n var
R4676:4676 Coq.ZArith.Zpower <> m var
R4683:4691 Coq.ZArith.Zpower <> shift_nat def
R4696:4704 Coq.ZArith.Zpower <> shift_nat def
R4708:4708 Coq.ZArith.Zpower <> x var
R4706:4706 Coq.ZArith.Zpower <> m var
R4693:4693 Coq.ZArith.Zpower <> n var
prf 4775:4791 <> shift_nat_correct
R4823:4825 Coq.Init.Logic <> :type_scope:x_'='_x not
R4803:4806 Coq.Numbers.BinNums <> Zpos constr
R4809:4817 Coq.ZArith.Zpower <> shift_nat def
R4821:4821 Coq.ZArith.Zpower <> x var
R4819:4819 Coq.ZArith.Zpower <> n var
R4840:4842 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4826:4835 Coq.ZArith.Zpower <> Zpower_nat def
R4839:4839 Coq.ZArith.Zpower <> n var
R4843:4846 Coq.Numbers.BinNums <> Zpos constr
R4848:4848 Coq.ZArith.Zpower <> x var
R4907:4923 Coq.ZArith.Zpower <> Zpower_nat_succ_r thm
R4929:4939 Coq.ZArith.BinInt Z mul_assoc thm
R4907:4923 Coq.ZArith.Zpower <> Zpower_nat_succ_r thm
R4907:4923 Coq.ZArith.Zpower <> Zpower_nat_succ_r thm
R4929:4939 Coq.ZArith.BinInt Z mul_assoc thm
R4929:4939 Coq.ZArith.BinInt Z mul_assoc thm
prf 4968:4988 <> two_power_nat_correct
R5009:5011 Coq.Init.Logic <> :type_scope:x_'='_x not
R4994:5006 Coq.ZArith.Zpower <> two_power_nat def
R5008:5008 Coq.ZArith.Zpower <> n var
R5012:5021 Coq.ZArith.Zpower <> Zpower_nat def
R5025:5025 Coq.ZArith.Zpower <> n var
R5052:5070 Coq.ZArith.Zpower <> two_power_nat_equiv thm
R5073:5084 Coq.ZArith.Zpower <> Zpower_nat_Z thm
R5052:5070 Coq.ZArith.Zpower <> two_power_nat_equiv thm
R5052:5070 Coq.ZArith.Zpower <> two_power_nat_equiv thm
R5073:5084 Coq.ZArith.Zpower <> Zpower_nat_Z thm
R5073:5084 Coq.ZArith.Zpower <> Zpower_nat_Z thm
prf 5103:5115 <> shift_pos_nat
R5136:5138 Coq.Init.Logic <> :type_scope:x_'='_x not
R5123:5131 Coq.ZArith.Zpower <> shift_pos def
R5135:5135 Coq.ZArith.Zpower <> x var
R5133:5133 Coq.ZArith.Zpower <> p var
R5139:5147 Coq.ZArith.Zpower <> shift_nat def
R5164:5164 Coq.ZArith.Zpower <> x var
R5150:5159 Coq.PArith.BinPos Pos to_nat def
R5161:5161 Coq.ZArith.Zpower <> p var
R5185:5200 Coq.PArith.Pnat Pos2Nat inj_iter thm
R5185:5200 Coq.PArith.Pnat Pos2Nat inj_iter thm
prf 5219:5235 <> two_power_pos_nat
R5256:5258 Coq.Init.Logic <> :type_scope:x_'='_x not
R5241:5253 Coq.ZArith.Zpower <> two_power_pos def
R5255:5255 Coq.ZArith.Zpower <> p var
R5259:5271 Coq.ZArith.Zpower <> two_power_nat def
R5274:5283 Coq.PArith.BinPos Pos to_nat def
R5285:5285 Coq.ZArith.Zpower <> p var
R5308:5320 Coq.ZArith.Zpower <> two_power_pos def
R5335:5347 Coq.ZArith.Zpower <> shift_pos_nat thm
R5335:5347 Coq.ZArith.Zpower <> shift_pos_nat thm
R5335:5347 Coq.ZArith.Zpower <> shift_pos_nat thm
prf 5368:5384 <> shift_pos_correct
R5416:5418 Coq.Init.Logic <> :type_scope:x_'='_x not
R5396:5399 Coq.Numbers.BinNums <> Zpos constr
R5402:5410 Coq.ZArith.Zpower <> shift_pos def
R5414:5414 Coq.ZArith.Zpower <> x var
R5412:5412 Coq.ZArith.Zpower <> p var
R5432:5434 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R5419:5427 Coq.ZArith.BinInt Z pow_pos def
R5431:5431 Coq.ZArith.Zpower <> p var
R5435:5438 Coq.Numbers.BinNums <> Zpos constr
R5440:5440 Coq.ZArith.Zpower <> x var
R5467:5479 Coq.ZArith.Zpower <> shift_pos_nat thm
R5482:5495 Coq.ZArith.Zpower <> Zpower_pos_nat thm
R5498:5514 Coq.ZArith.Zpower <> shift_nat_correct thm
R5467:5479 Coq.ZArith.Zpower <> shift_pos_nat thm
R5467:5479 Coq.ZArith.Zpower <> shift_pos_nat thm
R5482:5495 Coq.ZArith.Zpower <> Zpower_pos_nat thm
R5482:5495 Coq.ZArith.Zpower <> Zpower_pos_nat thm
R5498:5514 Coq.ZArith.Zpower <> shift_nat_correct thm
R5498:5514 Coq.ZArith.Zpower <> shift_nat_correct thm
prf 5535:5555 <> two_power_pos_correct
R5576:5578 Coq.Init.Logic <> :type_scope:x_'='_x not
R5561:5573 Coq.ZArith.Zpower <> two_power_pos def
R5575:5575 Coq.ZArith.Zpower <> x var
R5579:5587 Coq.ZArith.BinInt Z pow_pos def
R5591:5591 Coq.ZArith.Zpower <> x var
R5612:5630 Coq.ZArith.Zpower <> two_power_pos_equiv thm
R5612:5630 Coq.ZArith.Zpower <> two_power_pos_equiv thm
prf 5651:5670 <> two_power_pos_is_exp
R5702:5704 Coq.Init.Logic <> :type_scope:x_'='_x not
R5681:5693 Coq.ZArith.Zpower <> two_power_pos def
R5697:5699 Coq.PArith.BinPos <> :positive_scope:x_'+'_x not
R5696:5696 Coq.ZArith.Zpower <> x var
R5700:5700 Coq.ZArith.Zpower <> y var
R5720:5722 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R5705:5717 Coq.ZArith.Zpower <> two_power_pos def
R5719:5719 Coq.ZArith.Zpower <> x var
R5723:5735 Coq.ZArith.Zpower <> two_power_pos def
R5737:5737 Coq.ZArith.Zpower <> y var
R5763:5781 Coq.ZArith.Zpower <> two_power_pos_equiv thm
R5763:5781 Coq.ZArith.Zpower <> two_power_pos_equiv thm
R5763:5781 Coq.ZArith.Zpower <> two_power_pos_equiv thm
R5763:5781 Coq.ZArith.Zpower <> two_power_pos_equiv thm
R5763:5781 Coq.ZArith.Zpower <> two_power_pos_equiv thm
R5795:5805 Coq.ZArith.BinInt Z pow_add_r thm
R5819:5822 Coq.Numbers.BinNums <> Zpos constr
R5810:5813 Coq.Numbers.BinNums <> Zpos constr
R5795:5805 Coq.ZArith.BinInt Z pow_add_r thm
R5819:5822 Coq.Numbers.BinNums <> Zpos constr
R5810:5813 Coq.Numbers.BinNums <> Zpos constr
prf 5845:5857 <> two_p_correct
R5870:5872 Coq.Init.Logic <> :type_scope:x_'='_x not
R5863:5867 Coq.ZArith.Zpower <> two_p def
R5869:5869 Coq.ZArith.Zpower <> x var
R5874:5874 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R5875:5875 Coq.ZArith.Zpower <> x var
R5887:5897 Coq.ZArith.Zpower <> two_p_equiv thm
prf 5914:5925 <> two_p_is_exp
R5943:5946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5953:5956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5970:5972 Coq.Init.Logic <> :type_scope:x_'='_x not
R5957:5961 Coq.ZArith.Zpower <> two_p def
R5965:5967 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R5964:5964 Coq.ZArith.Zpower <> x var
R5968:5968 Coq.ZArith.Zpower <> y var
R5980:5982 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R5973:5977 Coq.ZArith.Zpower <> two_p def
R5979:5979 Coq.ZArith.Zpower <> x var
R5983:5987 Coq.ZArith.Zpower <> two_p def
R5989:5989 Coq.ZArith.Zpower <> y var
R5948:5951 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R5952:5952 Coq.ZArith.Zpower <> y var
R5938:5941 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R5942:5942 Coq.ZArith.Zpower <> x var
R6014:6024 Coq.ZArith.Zpower <> two_p_equiv thm
R6014:6024 Coq.ZArith.Zpower <> two_p_equiv thm
R6014:6024 Coq.ZArith.Zpower <> two_p_equiv thm
R6014:6024 Coq.ZArith.Zpower <> two_p_equiv thm
R6014:6024 Coq.ZArith.Zpower <> two_p_equiv thm
R6014:6024 Coq.ZArith.Zpower <> two_p_equiv thm
R6033:6043 Coq.ZArith.BinInt Z pow_add_r thm
R6033:6043 Coq.ZArith.BinInt Z pow_add_r thm
prf 6062:6074 <> two_p_gt_ZERO
R6086:6089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6097:6099 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R6090:6094 Coq.ZArith.Zpower <> two_p def
R6096:6096 Coq.ZArith.Zpower <> x var
R6081:6084 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R6085:6085 Coq.ZArith.Zpower <> x var
R6139:6149 Coq.ZArith.Zpower <> two_p_equiv thm
R6139:6149 Coq.ZArith.Zpower <> two_p_equiv thm
R6139:6149 Coq.ZArith.Zpower <> two_p_equiv thm
R6162:6177 Coq.ZArith.BinInt Z pow_pos_nonneg thm
R6162:6177 Coq.ZArith.BinInt Z pow_pos_nonneg thm
prf 6196:6202 <> two_p_S
R6214:6217 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6234:6236 Coq.Init.Logic <> :type_scope:x_'='_x not
R6218:6222 Coq.ZArith.Zpower <> two_p def
R6225:6230 Coq.ZArith.BinInt Z succ def
R6232:6232 Coq.ZArith.Zpower <> x var
R6238:6240 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R6241:6245 Coq.ZArith.Zpower <> two_p def
R6247:6247 Coq.ZArith.Zpower <> x var
R6209:6212 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R6213:6213 Coq.ZArith.Zpower <> x var
R6271:6281 Coq.ZArith.Zpower <> two_p_equiv thm
R6271:6281 Coq.ZArith.Zpower <> two_p_equiv thm
R6271:6281 Coq.ZArith.Zpower <> two_p_equiv thm
R6271:6281 Coq.ZArith.Zpower <> two_p_equiv thm
R6271:6281 Coq.ZArith.Zpower <> two_p_equiv thm
R6294:6305 Coq.ZArith.BinInt Z pow_succ_r thm
R6294:6305 Coq.ZArith.BinInt Z pow_succ_r thm
prf 6324:6333 <> two_p_pred
R6345:6348 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6365:6367 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6349:6353 Coq.ZArith.Zpower <> two_p def
R6356:6361 Coq.ZArith.BinInt Z pred def
R6363:6363 Coq.ZArith.Zpower <> x var
R6368:6372 Coq.ZArith.Zpower <> two_p def
R6374:6374 Coq.ZArith.Zpower <> x var
R6340:6343 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R6344:6344 Coq.ZArith.Zpower <> x var
R6398:6408 Coq.ZArith.Zpower <> two_p_equiv thm
R6398:6408 Coq.ZArith.Zpower <> two_p_equiv thm
R6398:6408 Coq.ZArith.Zpower <> two_p_equiv thm
R6398:6408 Coq.ZArith.Zpower <> two_p_equiv thm
R6398:6408 Coq.ZArith.Zpower <> two_p_equiv thm
R6425:6439 Coq.ZArith.BinInt Z pow_lt_mono_r thm
R6425:6439 Coq.ZArith.BinInt Z pow_lt_mono_r thm
R6472:6482 Coq.ZArith.Zpower Powers_of_2 <> sec
sec 6574:6592 <> power_div_with_rest
def 6835:6847 <> Zdiv_rest_aux
R6859:6861 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6855:6857 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6854:6854 Coq.Numbers.BinNums <> Z ind
R6858:6858 Coq.Numbers.BinNums <> Z ind
R6862:6862 Coq.Numbers.BinNums <> Z ind
R6888:6890 Coq.ZArith.Zpower <> qrd var
R6877:6877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6879:6879 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6881:6881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6883:6883 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6901:6901 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7131:7132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7138:7138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6919:6920 Coq.Numbers.BinNums <> Z0 constr
R6925:6925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6927:6928 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6930:6930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6936:6939 Coq.Numbers.BinNums <> Zpos constr
R6941:6942 Coq.Numbers.BinNums <> xH constr
R6947:6947 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6949:6950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6956:6956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6952:6954 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R6962:6965 Coq.Numbers.BinNums <> Zpos constr
R6968:6969 Coq.Numbers.BinNums <> xI constr
R6977:6977 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6984:6985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6991:6991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6978:6981 Coq.Numbers.BinNums <> Zpos constr
R6987:6989 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R6997:7000 Coq.Numbers.BinNums <> Zpos constr
R7003:7004 Coq.Numbers.BinNums <> xO constr
R7012:7012 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7019:7020 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7022:7022 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7013:7016 Coq.Numbers.BinNums <> Zpos constr
R7028:7031 Coq.Numbers.BinNums <> Zneg constr
R7033:7034 Coq.Numbers.BinNums <> xH constr
R7039:7039 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7042:7043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7049:7049 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7045:7047 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R7055:7058 Coq.Numbers.BinNums <> Zneg constr
R7061:7062 Coq.Numbers.BinNums <> xI constr
R7070:7070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7081:7082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7088:7088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7077:7079 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R7071:7074 Coq.Numbers.BinNums <> Zneg constr
R7084:7086 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R7094:7097 Coq.Numbers.BinNums <> Zneg constr
R7100:7101 Coq.Numbers.BinNums <> xO constr
R7109:7109 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7116:7117 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7119:7119 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7110:7113 Coq.Numbers.BinNums <> Zneg constr
R7134:7136 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
def 7155:7163 <> Zdiv_rest
R7168:7168 Coq.Numbers.BinNums <> Z ind
R7174:7181 Coq.Numbers.BinNums <> positive ind
R7206:7213 Coq.PArith.BinPos Pos iter def
R7239:7239 Coq.ZArith.Zpower <> p var
R7229:7229 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7231:7232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7234:7235 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7237:7237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7230:7230 Coq.ZArith.Zpower <> x var
R7215:7227 Coq.ZArith.Zpower <> Zdiv_rest_aux def
R7244:7245 Coq.ZArith.Zpower <> qr var
prf 7257:7274 <> Zdiv_rest_correct1
R7279:7279 Coq.Numbers.BinNums <> Z ind
R7285:7292 Coq.Numbers.BinNums <> positive ind
R7315:7322 Coq.PArith.BinPos Pos iter def
R7348:7348 Coq.ZArith.Zpower <> p var
R7338:7338 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7340:7341 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7343:7344 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7346:7346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7339:7339 Coq.ZArith.Zpower <> x var
R7324:7336 Coq.ZArith.Zpower <> Zdiv_rest_aux def
R7358:7360 Coq.Init.Logic <> :type_scope:x_'='_x not
R7357:7357 Coq.ZArith.Zpower <> d var
R7361:7373 Coq.ZArith.Zpower <> two_power_pos def
R7375:7375 Coq.ZArith.Zpower <> p var
R7398:7413 Coq.PArith.Pnat Pos2Nat inj_iter thm
R7416:7432 Coq.ZArith.Zpower <> two_power_pos_nat thm
R7398:7413 Coq.PArith.Pnat Pos2Nat inj_iter thm
R7398:7413 Coq.PArith.Pnat Pos2Nat inj_iter thm
R7416:7432 Coq.ZArith.Zpower <> two_power_pos_nat thm
R7416:7432 Coq.ZArith.Zpower <> two_power_pos_nat thm
R7449:7458 Coq.PArith.BinPos Pos to_nat def
R7449:7458 Coq.PArith.BinPos Pos to_nat def
R7493:7500 Coq.Init.Datatypes <> nat_rect scheme
R7493:7500 Coq.Init.Datatypes <> nat_rect scheme
R7535:7547 Coq.ZArith.Zpower <> Zdiv_rest_aux def
R7558:7572 Coq.ZArith.Zpower <> two_power_nat_S thm
R7558:7572 Coq.ZArith.Zpower <> two_power_nat_S thm
R7558:7572 Coq.ZArith.Zpower <> two_power_nat_S thm
prf 7604:7621 <> Zdiv_rest_correct2
R7626:7626 Coq.Numbers.BinNums <> Z ind
R7632:7639 Coq.Numbers.BinNums <> positive ind
R7664:7671 Coq.PArith.BinPos Pos iter def
R7697:7697 Coq.ZArith.Zpower <> p var
R7687:7687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7689:7690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7692:7693 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7695:7695 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7688:7688 Coq.ZArith.Zpower <> x var
R7673:7685 Coq.ZArith.Zpower <> Zdiv_rest_aux def
R7653:7653 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7655:7655 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7657:7657 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7659:7659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7719:7722 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7707:7709 Coq.Init.Logic <> :type_scope:x_'='_x not
R7706:7706 Coq.ZArith.Zpower <> x var
R7715:7717 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R7711:7713 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R7724:7727 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R7729:7731 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R7753:7770 Coq.PArith.BinPos Pos iter_invariant thm
R7753:7770 Coq.PArith.BinPos Pos iter_invariant thm
R7818:7830 Coq.ZArith.Zpower <> Zdiv_rest_aux def
R7895:7906 Coq.ZArith.BinInt Pos2Z inj_xI thm
R7909:7925 Coq.ZArith.BinInt Z mul_add_distr_r thm
R7895:7906 Coq.ZArith.BinInt Pos2Z inj_xI thm
R7895:7906 Coq.ZArith.BinInt Pos2Z inj_xI thm
R7909:7925 Coq.ZArith.BinInt Z mul_add_distr_r thm
R7909:7925 Coq.ZArith.BinInt Z mul_add_distr_r thm
R7946:7959 Coq.ZArith.BinInt Z mul_shuffle3 thm
R7962:7972 Coq.ZArith.BinInt Z mul_assoc thm
R7946:7959 Coq.ZArith.BinInt Z mul_shuffle3 thm
R7946:7959 Coq.ZArith.BinInt Z mul_shuffle3 thm
R7962:7972 Coq.ZArith.BinInt Z mul_assoc thm
R7962:7972 Coq.ZArith.BinInt Z mul_assoc thm
R7995:8006 Coq.ZArith.BinInt Pos2Z inj_xO thm
R7995:8006 Coq.ZArith.BinInt Pos2Z inj_xO thm
R7995:8006 Coq.ZArith.BinInt Pos2Z inj_xO thm
R8027:8040 Coq.ZArith.BinInt Z mul_shuffle3 thm
R8043:8053 Coq.ZArith.BinInt Z mul_assoc thm
R8027:8040 Coq.ZArith.BinInt Z mul_shuffle3 thm
R8027:8040 Coq.ZArith.BinInt Z mul_shuffle3 thm
R8043:8053 Coq.ZArith.BinInt Z mul_assoc thm
R8043:8053 Coq.ZArith.BinInt Z mul_assoc thm
R8076:8087 Coq.ZArith.BinInt Pos2Z neg_xI thm
R8090:8106 Coq.ZArith.BinInt Z mul_sub_distr_r thm
R8076:8087 Coq.ZArith.BinInt Pos2Z neg_xI thm
R8076:8087 Coq.ZArith.BinInt Pos2Z neg_xI thm
R8090:8106 Coq.ZArith.BinInt Z mul_sub_distr_r thm
R8090:8106 Coq.ZArith.BinInt Z mul_sub_distr_r thm
R8127:8143 Coq.ZArith.BinInt Z mul_sub_distr_r thm
R8146:8159 Coq.ZArith.BinInt Z mul_shuffle3 thm
R8162:8172 Coq.ZArith.BinInt Z mul_assoc thm
R8127:8143 Coq.ZArith.BinInt Z mul_sub_distr_r thm
R8127:8143 Coq.ZArith.BinInt Z mul_sub_distr_r thm
R8146:8159 Coq.ZArith.BinInt Z mul_shuffle3 thm
R8146:8159 Coq.ZArith.BinInt Z mul_shuffle3 thm
R8162:8172 Coq.ZArith.BinInt Z mul_assoc thm
R8162:8172 Coq.ZArith.BinInt Z mul_assoc thm
R8195:8206 Coq.ZArith.BinInt Pos2Z neg_xO thm
R8195:8206 Coq.ZArith.BinInt Pos2Z neg_xO thm
R8195:8206 Coq.ZArith.BinInt Pos2Z neg_xO thm
R8227:8240 Coq.ZArith.BinInt Z mul_shuffle3 thm
R8243:8253 Coq.ZArith.BinInt Z mul_assoc thm
R8227:8240 Coq.ZArith.BinInt Z mul_shuffle3 thm
R8227:8240 Coq.ZArith.BinInt Z mul_shuffle3 thm
R8243:8253 Coq.ZArith.BinInt Z mul_assoc thm
R8243:8253 Coq.ZArith.BinInt Z mul_assoc thm
ind 8344:8359 <> Zdiv_rest_proofs
constr 8393:8407 <> Zdiv_rest_proof
R8364:8364 Coq.Numbers.BinNums <> Z ind
R8370:8377 Coq.Numbers.BinNums <> positive ind
R8426:8426 Coq.Numbers.BinNums <> Z ind
R8462:8471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8478:8481 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8501:8504 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8505:8520 Coq.ZArith.Zpower <> Zdiv_rest_proofs ind
R8483:8485 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R8482:8482 Coq.ZArith.Zpower <> r var
R8486:8498 Coq.ZArith.Zpower <> two_power_pos def
R8473:8476 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R8477:8477 Coq.ZArith.Zpower <> r var
R8436:8438 Coq.Init.Logic <> :type_scope:x_'='_x not
R8458:8460 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R8440:8442 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R8439:8439 Coq.ZArith.Zpower <> q var
R8443:8455 Coq.ZArith.Zpower <> two_power_pos def
R8461:8461 Coq.ZArith.Zpower <> r var
prf 8536:8552 <> Zdiv_rest_correct
R8557:8557 Coq.Numbers.BinNums <> Z ind
R8563:8570 Coq.Numbers.BinNums <> positive ind
R8575:8590 Coq.ZArith.Zpower <> Zdiv_rest_proofs ind
R8594:8594 Coq.ZArith.Zpower <> p var
R8592:8592 Coq.ZArith.Zpower <> x var
R8622:8639 Coq.ZArith.Zpower <> Zdiv_rest_correct1 thm
R8659:8676 Coq.ZArith.Zpower <> Zdiv_rest_correct2 thm
R8622:8639 Coq.ZArith.Zpower <> Zdiv_rest_correct1 thm
R8659:8676 Coq.ZArith.Zpower <> Zdiv_rest_correct2 thm
R8698:8705 Coq.PArith.BinPos Pos iter def
R8721:8721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8723:8724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8726:8727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8729:8729 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8707:8719 Coq.ZArith.Zpower <> Zdiv_rest_aux def
R8698:8705 Coq.PArith.BinPos Pos iter def
R8721:8721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8723:8724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8726:8727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8729:8729 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8707:8719 Coq.ZArith.Zpower <> Zdiv_rest_aux def
prf 8852:8863 <> Zdiv_rest_ok
R8888:8896 Coq.ZArith.Zpower <> Zdiv_rest def
R8900:8900 Coq.ZArith.Zpower <> p var
R8898:8898 Coq.ZArith.Zpower <> x var
R8931:8934 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8910:8912 Coq.Init.Logic <> :type_scope:x_'='_x not
R8909:8909 Coq.ZArith.Zpower <> x var
R8927:8929 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R8914:8916 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R8913:8913 Coq.ZArith.Zpower <> q var
R8918:8919 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R8926:8926 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R8920:8923 Coq.Numbers.BinNums <> Zpos constr
R8925:8925 Coq.ZArith.Zpower <> p var
R8930:8930 Coq.ZArith.Zpower <> r var
R8936:8939 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R8941:8943 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R8940:8940 Coq.ZArith.Zpower <> r var
R8940:8940 Coq.ZArith.Zpower <> r var
R8945:8946 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R8953:8953 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R8947:8950 Coq.Numbers.BinNums <> Zpos constr
R8952:8952 Coq.ZArith.Zpower <> p var
R8975:8983 Coq.ZArith.Zpower <> Zdiv_rest def
R9001:9018 Coq.ZArith.Zpower <> Zdiv_rest_correct1 thm
R9038:9055 Coq.ZArith.Zpower <> Zdiv_rest_correct2 thm
R9001:9018 Coq.ZArith.Zpower <> Zdiv_rest_correct1 thm
R9038:9055 Coq.ZArith.Zpower <> Zdiv_rest_correct2 thm
R9076:9083 Coq.PArith.BinPos Pos iter def
R9099:9099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9101:9102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9104:9105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9107:9107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9085:9097 Coq.ZArith.Zpower <> Zdiv_rest_aux def
R9076:9083 Coq.PArith.BinPos Pos iter def
R9099:9099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9101:9102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9104:9105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9107:9107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9085:9097 Coq.ZArith.Zpower <> Zdiv_rest_aux def
R9154:9172 Coq.ZArith.Zpower <> two_power_pos_equiv thm
R9154:9172 Coq.ZArith.Zpower <> two_power_pos_equiv thm
R9154:9172 Coq.ZArith.Zpower <> two_power_pos_equiv thm
prf 9234:9249 <> Zdiv_rest_shiftr
R9279:9281 Coq.Init.Logic <> :type_scope:x_'='_x not
R9260:9262 Coq.Init.Datatypes <> fst def
R9265:9273 Coq.ZArith.Zpower <> Zdiv_rest def
R9277:9277 Coq.ZArith.Zpower <> p var
R9275:9275 Coq.ZArith.Zpower <> x var
R9282:9289 Coq.ZArith.BinInt Z shiftr def
R9294:9297 Coq.Numbers.BinNums <> Zpos constr
R9299:9299 Coq.ZArith.Zpower <> p var
R9291:9291 Coq.ZArith.Zpower <> x var
R9327:9338 Coq.ZArith.Zpower <> Zdiv_rest_ok thm
R9327:9338 Coq.ZArith.Zpower <> Zdiv_rest_ok thm
R9356:9364 Coq.ZArith.Zpower <> Zdiv_rest def
R9356:9364 Coq.ZArith.Zpower <> Zdiv_rest def
R9417:9433 Coq.ZArith.BinInt Z shiftr_div_pow2 thm
R9417:9433 Coq.ZArith.BinInt Z shiftr_div_pow2 thm
R9417:9433 Coq.ZArith.BinInt Z shiftr_div_pow2 thm
R9453:9468 Coq.ZArith.BinInt Z div_unique_pos thm
R9453:9468 Coq.ZArith.BinInt Z div_unique_pos thm
R9499:9508 Coq.ZArith.BinInt Z mul_comm thm
R9499:9508 Coq.ZArith.BinInt Z mul_comm thm
R9499:9508 Coq.ZArith.BinInt Z mul_comm thm
R9523:9541 Coq.ZArith.Zpower power_div_with_rest <> sec

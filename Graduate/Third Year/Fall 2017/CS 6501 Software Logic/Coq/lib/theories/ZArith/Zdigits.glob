DIGEST 419fb95dca853452b4796bf4748fdb82
FCoq.ZArith.Zdigits
R658:664 Coq.Bool.Bvector <> <> lib
R682:687 Coq.ZArith.ZArith <> <> lib
R705:710 Coq.ZArith.Zpower <> <> lib
R728:732 Coq.omega.Omega <> <> lib
sec 1019:1042 <> VALUE_OF_BOOLEAN_VECTORS
def 1403:1411 <> bit_value
R1416:1419 Coq.Init.Datatypes <> bool ind
R1424:1424 Coq.Numbers.BinNums <> Z ind
R1439:1439 Coq.ZArith.Zdigits <> b var
R1454:1457 Coq.Init.Datatypes <> true constr
R1474:1478 Coq.Init.Datatypes <> false constr
prf 1505:1516 <> binary_value
R1529:1531 Coq.Init.Datatypes <> nat ind
R1543:1546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1547:1547 Coq.Numbers.BinNums <> Z ind
R1534:1540 Coq.Bool.Bvector <> Bvector def
R1542:1542 Coq.ZArith.Zdigits <> n var
R1571:1578 Coq.Init.Datatypes <> nat_rect scheme
R1571:1578 Coq.Init.Datatypes <> nat_rect scheme
R1652:1654 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R1641:1649 Coq.ZArith.Zdigits <> bit_value def
R1656:1658 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R1652:1654 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R1641:1649 Coq.ZArith.Zdigits <> bit_value def
R1656:1658 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
prf 1688:1702 <> two_compl_value
R1715:1717 Coq.Init.Datatypes <> nat ind
R1733:1736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1737:1737 Coq.Numbers.BinNums <> Z ind
R1720:1726 Coq.Bool.Bvector <> Bvector def
R1729:1729 Coq.Init.Datatypes <> S constr
R1731:1731 Coq.ZArith.Zdigits <> n var
R1809:1810 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1811:1819 Coq.ZArith.Zdigits <> bit_value def
R1809:1810 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1811:1819 Coq.ZArith.Zdigits <> bit_value def
R1868:1870 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R1857:1865 Coq.ZArith.Zdigits <> bit_value def
R1872:1874 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R1868:1870 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R1857:1865 Coq.ZArith.Zdigits <> bit_value def
R1872:1874 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R1900:1923 Coq.ZArith.Zdigits VALUE_OF_BOOLEAN_VECTORS <> sec
sec 1935:1948 <> ENCODING_VALUE
def 2311:2315 <> Zmod2
R2320:2320 Coq.Numbers.BinNums <> Z ind
R2336:2336 Coq.ZArith.Zdigits <> z var
R2351:2352 Coq.Numbers.BinNums <> Z0 constr
R2369:2372 Coq.Numbers.BinNums <> Zpos constr
R2400:2401 Coq.Numbers.BinNums <> xI constr
R2408:2411 Coq.Numbers.BinNums <> Zpos constr
R2423:2424 Coq.Numbers.BinNums <> xO constr
R2431:2434 Coq.Numbers.BinNums <> Zpos constr
R2446:2447 Coq.Numbers.BinNums <> xH constr
R2472:2475 Coq.Numbers.BinNums <> Zneg constr
R2501:2502 Coq.Numbers.BinNums <> xI constr
R2516:2518 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R2510:2513 Coq.Numbers.BinNums <> Zneg constr
R2529:2530 Coq.Numbers.BinNums <> xO constr
R2537:2540 Coq.Numbers.BinNums <> Zneg constr
R2549:2550 Coq.Numbers.BinNums <> xH constr
prf 2586:2596 <> Zmod2_twice
R2613:2613 Coq.Numbers.BinNums <> Z ind
R2617:2619 Coq.Init.Logic <> :type_scope:x_'='_x not
R2616:2616 Coq.ZArith.Zdigits <> z var
R2632:2634 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R2622:2624 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R2625:2629 Coq.ZArith.Zdigits <> Zmod2 def
R2631:2631 Coq.ZArith.Zdigits <> z var
R2635:2643 Coq.ZArith.Zdigits <> bit_value def
R2646:2650 Coq.ZArith.BinInt Z odd def
R2652:2652 Coq.ZArith.Zdigits <> z var
R2812:2831 Coq.PArith.BinPos Pos pred_double_succ thm
R2812:2831 Coq.PArith.BinPos Pos pred_double_succ thm
R2812:2831 Coq.PArith.BinPos Pos pred_double_succ thm
prf 2918:2928 <> Z_to_binary
R2941:2943 Coq.Init.Datatypes <> nat ind
R2947:2950 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2951:2957 Coq.Bool.Bvector <> Bvector def
R2959:2959 Coq.ZArith.Zdigits <> n var
R2946:2946 Coq.Numbers.BinNums <> Z ind
R3013:3016 Coq.Bool.Bvector <> Bnil def
R3013:3016 Coq.Bool.Bvector <> Bnil def
R3031:3035 Coq.Bool.Bvector <> Bcons def
R3055:3060 Coq.ZArith.BinInt Z div2 def
R3038:3042 Coq.ZArith.BinInt Z odd def
R3031:3035 Coq.Bool.Bvector <> Bcons def
R3055:3060 Coq.ZArith.BinInt Z div2 def
R3038:3042 Coq.ZArith.BinInt Z odd def
prf 3089:3102 <> Z_to_two_compl
R3115:3117 Coq.Init.Datatypes <> nat ind
R3121:3124 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3125:3131 Coq.Bool.Bvector <> Bvector def
R3134:3134 Coq.Init.Datatypes <> S constr
R3136:3136 Coq.ZArith.Zdigits <> n var
R3120:3120 Coq.Numbers.BinNums <> Z ind
R3192:3196 Coq.Bool.Bvector <> Bcons def
R3210:3213 Coq.Bool.Bvector <> Bnil def
R3199:3203 Coq.ZArith.BinInt Z odd def
R3192:3196 Coq.Bool.Bvector <> Bcons def
R3210:3213 Coq.Bool.Bvector <> Bnil def
R3199:3203 Coq.ZArith.BinInt Z odd def
R3229:3233 Coq.Bool.Bvector <> Bcons def
R3257:3261 Coq.ZArith.Zdigits <> Zmod2 def
R3247:3247 Coq.Init.Datatypes <> S constr
R3236:3240 Coq.ZArith.BinInt Z odd def
R3229:3233 Coq.Bool.Bvector <> Bcons def
R3257:3261 Coq.ZArith.Zdigits <> Zmod2 def
R3247:3247 Coq.Init.Datatypes <> S constr
R3236:3240 Coq.ZArith.BinInt Z odd def
R3286:3299 Coq.ZArith.Zdigits ENCODING_VALUE <> sec
sec 3311:3323 <> Z_BRIC_A_BRAC
prf 3456:3470 <> binary_value_Sn
R3488:3490 Coq.Init.Datatypes <> nat ind
R3496:3499 Coq.Init.Datatypes <> bool ind
R3506:3512 Coq.Bool.Bvector <> Bvector def
R3514:3514 Coq.ZArith.Zdigits <> n var
R3553:3561 Coq.Init.Logic <> :type_scope:x_'='_x not
R3524:3535 Coq.ZArith.Zdigits <> binary_value thm
R3546:3549 Coq.Vectors.VectorDef VectorNotations :vector_scope:x_'::'_x not
R3545:3545 Coq.ZArith.Zdigits <> b var
R3550:3551 Coq.ZArith.Zdigits <> bv var
R3538:3538 Coq.Init.Datatypes <> S constr
R3540:3540 Coq.ZArith.Zdigits <> n var
R3574:3576 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R3563:3571 Coq.ZArith.Zdigits <> bit_value def
R3573:3573 Coq.ZArith.Zdigits <> b var
R3578:3580 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R3581:3592 Coq.ZArith.Zdigits <> binary_value thm
R3596:3597 Coq.ZArith.Zdigits <> bv var
R3594:3594 Coq.ZArith.Zdigits <> n var
prf 3646:3659 <> Z_to_binary_Sn
R3677:3679 Coq.Init.Datatypes <> nat ind
R3685:3688 Coq.Init.Datatypes <> bool ind
R3694:3694 Coq.Numbers.BinNums <> Z ind
R3714:3723 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3763:3765 Coq.Init.Logic <> :type_scope:x_'='_x not
R3724:3734 Coq.ZArith.Zdigits <> Z_to_binary thm
R3754:3756 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R3743:3751 Coq.ZArith.Zdigits <> bit_value def
R3753:3753 Coq.ZArith.Zdigits <> b var
R3758:3760 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R3761:3761 Coq.ZArith.Zdigits <> z var
R3737:3737 Coq.Init.Datatypes <> S constr
R3739:3739 Coq.ZArith.Zdigits <> n var
R3766:3770 Coq.Bool.Bvector <> Bcons def
R3777:3787 Coq.ZArith.Zdigits <> Z_to_binary thm
R3791:3791 Coq.ZArith.Zdigits <> z var
R3789:3789 Coq.ZArith.Zdigits <> n var
R3774:3774 Coq.ZArith.Zdigits <> n var
R3772:3772 Coq.ZArith.Zdigits <> b var
R3706:3709 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R3705:3705 Coq.ZArith.Zdigits <> z var
prf 3891:3906 <> binary_value_pos
R3924:3926 Coq.Init.Datatypes <> nat ind
R3933:3939 Coq.Bool.Bvector <> Bvector def
R3941:3941 Coq.ZArith.Zdigits <> n var
R3963:3966 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R3946:3957 Coq.ZArith.Zdigits <> binary_value thm
R3961:3962 Coq.ZArith.Zdigits <> bv var
R3959:3959 Coq.ZArith.Zdigits <> n var
R4061:4072 Coq.ZArith.Zdigits <> binary_value thm
R4061:4072 Coq.ZArith.Zdigits <> binary_value thm
R4061:4072 Coq.ZArith.Zdigits <> binary_value thm
prf 4131:4148 <> two_compl_value_Sn
R4166:4168 Coq.Init.Datatypes <> nat ind
R4175:4181 Coq.Bool.Bvector <> Bvector def
R4184:4184 Coq.Init.Datatypes <> S constr
R4186:4186 Coq.ZArith.Zdigits <> n var
R4193:4196 Coq.Init.Datatypes <> bool ind
R4246:4254 Coq.Init.Logic <> :type_scope:x_'='_x not
R4206:4220 Coq.ZArith.Zdigits <> two_compl_value thm
R4229:4233 Coq.Bool.Bvector <> Bcons def
R4243:4244 Coq.ZArith.Zdigits <> bv var
R4238:4238 Coq.Init.Datatypes <> S constr
R4240:4240 Coq.ZArith.Zdigits <> n var
R4235:4235 Coq.ZArith.Zdigits <> b var
R4223:4223 Coq.Init.Datatypes <> S constr
R4225:4225 Coq.ZArith.Zdigits <> n var
R4267:4269 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4256:4264 Coq.ZArith.Zdigits <> bit_value def
R4266:4266 Coq.ZArith.Zdigits <> b var
R4271:4273 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4274:4288 Coq.ZArith.Zdigits <> two_compl_value thm
R4292:4293 Coq.ZArith.Zdigits <> bv var
R4290:4290 Coq.ZArith.Zdigits <> n var
prf 4342:4358 <> Z_to_two_compl_Sn
R4376:4378 Coq.Init.Datatypes <> nat ind
R4384:4387 Coq.Init.Datatypes <> bool ind
R4393:4393 Coq.Numbers.BinNums <> Z ind
R4445:4453 Coq.Init.Logic <> :type_scope:x_'='_x not
R4403:4416 Coq.ZArith.Zdigits <> Z_to_two_compl thm
R4436:4438 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4425:4433 Coq.ZArith.Zdigits <> bit_value def
R4435:4435 Coq.ZArith.Zdigits <> b var
R4440:4442 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4443:4443 Coq.ZArith.Zdigits <> z var
R4419:4419 Coq.Init.Datatypes <> S constr
R4421:4421 Coq.ZArith.Zdigits <> n var
R4454:4458 Coq.Bool.Bvector <> Bcons def
R4469:4482 Coq.ZArith.Zdigits <> Z_to_two_compl thm
R4486:4486 Coq.ZArith.Zdigits <> z var
R4484:4484 Coq.ZArith.Zdigits <> n var
R4463:4463 Coq.Init.Datatypes <> S constr
R4465:4465 Coq.ZArith.Zdigits <> n var
R4460:4460 Coq.ZArith.Zdigits <> b var
R4641:4660 Coq.PArith.BinPos Pos succ_pred_double thm
R4641:4660 Coq.PArith.BinPos Pos succ_pred_double thm
R4641:4660 Coq.PArith.BinPos Pos succ_pred_double thm
prf 4691:4706 <> Z_to_binary_Sn_z
R4724:4726 Coq.Init.Datatypes <> nat ind
R4732:4732 Coq.Numbers.BinNums <> Z ind
R4761:4769 Coq.Init.Logic <> :type_scope:x_'='_x not
R4742:4752 Coq.ZArith.Zdigits <> Z_to_binary thm
R4760:4760 Coq.ZArith.Zdigits <> z var
R4755:4755 Coq.Init.Datatypes <> S constr
R4757:4757 Coq.ZArith.Zdigits <> n var
R4770:4774 Coq.Bool.Bvector <> Bcons def
R4789:4799 Coq.ZArith.Zdigits <> Z_to_binary thm
R4804:4809 Coq.ZArith.BinInt Z div2 def
R4811:4811 Coq.ZArith.Zdigits <> z var
R4801:4801 Coq.ZArith.Zdigits <> n var
R4786:4786 Coq.ZArith.Zdigits <> n var
R4777:4781 Coq.ZArith.BinInt Z odd def
R4783:4783 Coq.ZArith.Zdigits <> z var
prf 4859:4870 <> Z_div2_value
R4887:4887 Coq.Numbers.BinNums <> Z ind
R4906:4909 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4948:4950 Coq.Init.Logic <> :type_scope:x_'='_x not
R4930:4932 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4911:4919 Coq.ZArith.Zdigits <> bit_value def
R4922:4926 Coq.ZArith.BinInt Z odd def
R4928:4928 Coq.ZArith.Zdigits <> z var
R4934:4936 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4937:4942 Coq.ZArith.BinInt Z div2 def
R4944:4944 Coq.ZArith.Zdigits <> z var
R4951:4951 Coq.ZArith.Zdigits <> z var
R4898:4901 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R4897:4897 Coq.ZArith.Zdigits <> z var
prf 5065:5069 <> Pdiv2
R5082:5082 Coq.Numbers.BinNums <> Z ind
R5095:5098 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5108:5111 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R5100:5105 Coq.ZArith.BinInt Z div2 def
R5107:5107 Coq.ZArith.Zdigits <> z var
R5087:5090 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R5086:5086 Coq.ZArith.Zdigits <> z var
prf 5261:5279 <> Zdiv2_two_power_nat
R5297:5297 Coq.Numbers.BinNums <> Z ind
R5303:5305 Coq.Init.Datatypes <> nat ind
R5325:5334 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5362:5365 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5375:5377 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R5367:5372 Coq.ZArith.BinInt Z div2 def
R5374:5374 Coq.ZArith.Zdigits <> z var
R5378:5390 Coq.ZArith.Zpower <> two_power_nat def
R5392:5392 Coq.ZArith.Zdigits <> n var
R5337:5339 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R5336:5336 Coq.ZArith.Zdigits <> z var
R5340:5352 Coq.ZArith.Zpower <> two_power_nat def
R5355:5355 Coq.Init.Datatypes <> S constr
R5357:5357 Coq.ZArith.Zdigits <> n var
R5317:5320 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R5316:5316 Coq.ZArith.Zdigits <> z var
R5443:5445 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R5432:5434 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R5435:5440 Coq.ZArith.BinInt Z div2 def
R5447:5449 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R5450:5462 Coq.ZArith.Zpower <> two_power_nat def
R5443:5445 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R5432:5434 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R5435:5440 Coq.ZArith.BinInt Z div2 def
R5447:5449 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R5450:5462 Coq.ZArith.Zpower <> two_power_nat def
R5494:5508 Coq.ZArith.Zpower <> two_power_nat_S thm
R5494:5508 Coq.ZArith.Zpower <> two_power_nat_S thm
R5494:5508 Coq.ZArith.Zpower <> two_power_nat_S thm
R5525:5543 Coq.ZArith.Zeven <> Zeven_odd_dec def
R5525:5543 Coq.ZArith.Zeven <> Zeven_odd_dec def
R5588:5603 Coq.ZArith.Zeven <> Zeven_div2 thm
R5588:5603 Coq.ZArith.Zeven <> Zeven_div2 thm
R5588:5603 Coq.ZArith.Zeven <> Zeven_div2 thm
R5588:5603 Coq.ZArith.Zeven <> Zeven_div2 thm
R5628:5642 Coq.ZArith.Zeven <> Zodd_div2 thm
R5628:5642 Coq.ZArith.Zeven <> Zodd_div2 thm
prf 5676:5694 <> Z_to_two_compl_Sn_z
R5712:5714 Coq.Init.Datatypes <> nat ind
R5720:5720 Coq.Numbers.BinNums <> Z ind
R5752:5760 Coq.Init.Logic <> :type_scope:x_'='_x not
R5730:5743 Coq.ZArith.Zdigits <> Z_to_two_compl thm
R5751:5751 Coq.ZArith.Zdigits <> z var
R5746:5746 Coq.Init.Datatypes <> S constr
R5748:5748 Coq.ZArith.Zdigits <> n var
R5761:5765 Coq.Bool.Bvector <> Bcons def
R5784:5797 Coq.ZArith.Zdigits <> Z_to_two_compl thm
R5802:5806 Coq.ZArith.Zdigits <> Zmod2 def
R5808:5808 Coq.ZArith.Zdigits <> z var
R5799:5799 Coq.ZArith.Zdigits <> n var
R5778:5778 Coq.Init.Datatypes <> S constr
R5780:5780 Coq.ZArith.Zdigits <> n var
R5768:5772 Coq.ZArith.BinInt Z odd def
R5774:5774 Coq.ZArith.Zdigits <> z var
prf 5856:5870 <> Zeven_bit_value
R5887:5887 Coq.Numbers.BinNums <> Z ind
R5903:5906 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5926:5928 Coq.Init.Logic <> :type_scope:x_'='_x not
R5907:5915 Coq.ZArith.Zdigits <> bit_value def
R5918:5922 Coq.ZArith.BinInt Z odd def
R5924:5924 Coq.ZArith.Zdigits <> z var
R5890:5900 Coq.ZArith.Zeven <> Zeven def
R5902:5902 Coq.ZArith.Zdigits <> z var
R5966:5974 Coq.ZArith.Zdigits <> bit_value def
prf 6087:6100 <> Zodd_bit_value
R6117:6117 Coq.Numbers.BinNums <> Z ind
R6132:6135 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6155:6157 Coq.Init.Logic <> :type_scope:x_'='_x not
R6136:6144 Coq.ZArith.Zdigits <> bit_value def
R6147:6151 Coq.ZArith.BinInt Z odd def
R6153:6153 Coq.ZArith.Zdigits <> z var
R6120:6129 Coq.ZArith.Zeven <> Zodd def
R6131:6131 Coq.ZArith.Zdigits <> z var
R6195:6203 Coq.ZArith.Zdigits <> bit_value def
prf 6334:6358 <> Zge_minus_two_power_nat_S
R6376:6378 Coq.Init.Datatypes <> nat ind
R6384:6384 Coq.Numbers.BinNums <> Z ind
R6424:6427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6436:6439 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R6429:6433 Coq.ZArith.Zdigits <> Zmod2 def
R6435:6435 Coq.ZArith.Zdigits <> z var
R6440:6441 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R6442:6454 Coq.ZArith.Zpower <> two_power_nat def
R6456:6456 Coq.ZArith.Zdigits <> n var
R6396:6399 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R6395:6395 Coq.ZArith.Zdigits <> z var
R6400:6401 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R6402:6414 Coq.ZArith.Zpower <> two_power_nat def
R6417:6417 Coq.Init.Datatypes <> S constr
R6419:6419 Coq.ZArith.Zdigits <> n var
R6496:6510 Coq.ZArith.Zpower <> two_power_nat_S thm
R6496:6510 Coq.ZArith.Zpower <> two_power_nat_S thm
R6496:6510 Coq.ZArith.Zpower <> two_power_nat_S thm
R6532:6542 Coq.ZArith.Zdigits <> Zmod2_twice thm
R6532:6542 Coq.ZArith.Zdigits <> Zmod2_twice thm
R6562:6580 Coq.ZArith.Zeven <> Zeven_odd_dec def
R6562:6580 Coq.ZArith.Zeven <> Zeven_odd_dec def
R6609:6623 Coq.ZArith.Zdigits <> Zeven_bit_value thm
R6609:6623 Coq.ZArith.Zdigits <> Zeven_bit_value thm
R6609:6623 Coq.ZArith.Zdigits <> Zeven_bit_value thm
R6660:6673 Coq.ZArith.Zdigits <> Zodd_bit_value thm
R6660:6673 Coq.ZArith.Zdigits <> Zodd_bit_value thm
R6660:6673 Coq.ZArith.Zdigits <> Zodd_bit_value thm
prf 6712:6730 <> Zlt_two_power_nat_S
R6748:6750 Coq.Init.Datatypes <> nat ind
R6756:6756 Coq.Numbers.BinNums <> Z ind
R6793:6796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6805:6807 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6798:6802 Coq.ZArith.Zdigits <> Zmod2 def
R6804:6804 Coq.ZArith.Zdigits <> z var
R6808:6820 Coq.ZArith.Zpower <> two_power_nat def
R6822:6822 Coq.ZArith.Zdigits <> n var
R6768:6770 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6767:6767 Coq.ZArith.Zdigits <> z var
R6771:6783 Coq.ZArith.Zpower <> two_power_nat def
R6786:6786 Coq.Init.Datatypes <> S constr
R6788:6788 Coq.ZArith.Zdigits <> n var
R6862:6876 Coq.ZArith.Zpower <> two_power_nat_S thm
R6862:6876 Coq.ZArith.Zpower <> two_power_nat_S thm
R6862:6876 Coq.ZArith.Zpower <> two_power_nat_S thm
R6898:6908 Coq.ZArith.Zdigits <> Zmod2_twice thm
R6898:6908 Coq.ZArith.Zdigits <> Zmod2_twice thm
R6928:6946 Coq.ZArith.Zeven <> Zeven_odd_dec def
R6928:6946 Coq.ZArith.Zeven <> Zeven_odd_dec def
R6975:6989 Coq.ZArith.Zdigits <> Zeven_bit_value thm
R6975:6989 Coq.ZArith.Zdigits <> Zeven_bit_value thm
R6975:6989 Coq.ZArith.Zdigits <> Zeven_bit_value thm
R7026:7039 Coq.ZArith.Zdigits <> Zodd_bit_value thm
R7026:7039 Coq.ZArith.Zdigits <> Zodd_bit_value thm
R7026:7039 Coq.ZArith.Zdigits <> Zodd_bit_value thm
R7074:7086 Coq.ZArith.Zdigits Z_BRIC_A_BRAC <> sec
sec 7098:7111 <> COHERENT_VALUE
prf 7240:7260 <> binary_to_Z_to_binary
R7278:7280 Coq.Init.Datatypes <> nat ind
R7287:7293 Coq.Bool.Bvector <> Bvector def
R7295:7295 Coq.ZArith.Zdigits <> n var
R7332:7334 Coq.Init.Logic <> :type_scope:x_'='_x not
R7299:7309 Coq.ZArith.Zdigits <> Z_to_binary thm
R7314:7325 Coq.ZArith.Zdigits <> binary_value thm
R7329:7330 Coq.ZArith.Zdigits <> bv var
R7327:7327 Coq.ZArith.Zdigits <> n var
R7311:7311 Coq.ZArith.Zdigits <> n var
R7335:7336 Coq.ZArith.Zdigits <> bv var
R7408:7422 Coq.ZArith.Zdigits <> binary_value_Sn thm
R7408:7422 Coq.ZArith.Zdigits <> binary_value_Sn thm
R7408:7422 Coq.ZArith.Zdigits <> binary_value_Sn thm
R7437:7450 Coq.ZArith.Zdigits <> Z_to_binary_Sn thm
R7437:7450 Coq.ZArith.Zdigits <> Z_to_binary_Sn thm
R7437:7450 Coq.ZArith.Zdigits <> Z_to_binary_Sn thm
R7437:7450 Coq.ZArith.Zdigits <> Z_to_binary_Sn thm
R7491:7506 Coq.ZArith.Zdigits <> binary_value_pos thm
R7491:7506 Coq.ZArith.Zdigits <> binary_value_pos thm
prf 7525:7551 <> two_compl_to_Z_to_two_compl
R7569:7571 Coq.Init.Datatypes <> nat ind
R7578:7584 Coq.Bool.Bvector <> Bvector def
R7586:7586 Coq.ZArith.Zdigits <> n var
R7592:7595 Coq.Init.Datatypes <> bool ind
R7656:7658 Coq.Init.Logic <> :type_scope:x_'='_x not
R7605:7618 Coq.ZArith.Zdigits <> Z_to_two_compl thm
R7623:7637 Coq.ZArith.Zdigits <> two_compl_value thm
R7642:7646 Coq.Bool.Bvector <> Bcons def
R7652:7653 Coq.ZArith.Zdigits <> bv var
R7650:7650 Coq.ZArith.Zdigits <> n var
R7648:7648 Coq.ZArith.Zdigits <> b var
R7639:7639 Coq.ZArith.Zdigits <> n var
R7620:7620 Coq.ZArith.Zdigits <> n var
R7659:7663 Coq.Bool.Bvector <> Bcons def
R7669:7670 Coq.ZArith.Zdigits <> bv var
R7667:7667 Coq.ZArith.Zdigits <> n var
R7665:7665 Coq.ZArith.Zdigits <> b var
R7763:7780 Coq.ZArith.Zdigits <> two_compl_value_Sn thm
R7763:7780 Coq.ZArith.Zdigits <> two_compl_value_Sn thm
R7763:7780 Coq.ZArith.Zdigits <> two_compl_value_Sn thm
R7795:7811 Coq.ZArith.Zdigits <> Z_to_two_compl_Sn thm
R7795:7811 Coq.ZArith.Zdigits <> Z_to_two_compl_Sn thm
R7795:7811 Coq.ZArith.Zdigits <> Z_to_two_compl_Sn thm
prf 7857:7872 <> Z_to_binary_to_Z
R7890:7892 Coq.Init.Datatypes <> nat ind
R7898:7898 Coq.Numbers.BinNums <> Z ind
R7918:7927 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7951:7954 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7987:7989 Coq.Init.Logic <> :type_scope:x_'='_x not
R7955:7966 Coq.ZArith.Zdigits <> binary_value thm
R7971:7981 Coq.ZArith.Zdigits <> Z_to_binary thm
R7985:7985 Coq.ZArith.Zdigits <> z var
R7983:7983 Coq.ZArith.Zdigits <> n var
R7968:7968 Coq.ZArith.Zdigits <> n var
R7990:7990 Coq.ZArith.Zdigits <> z var
R7930:7932 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R7929:7929 Coq.ZArith.Zdigits <> z var
R7933:7945 Coq.ZArith.Zpower <> two_power_nat def
R7947:7947 Coq.ZArith.Zdigits <> n var
R7910:7913 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R7909:7909 Coq.ZArith.Zdigits <> z var
R8043:8055 Coq.ZArith.Zpower <> two_power_nat def
R8058:8066 Coq.ZArith.Zpower <> shift_nat def
R8112:8127 Coq.ZArith.Zdigits <> Z_to_binary_Sn_z thm
R8112:8127 Coq.ZArith.Zdigits <> Z_to_binary_Sn_z thm
R8112:8127 Coq.ZArith.Zdigits <> Z_to_binary_Sn_z thm
R8142:8156 Coq.ZArith.Zdigits <> binary_value_Sn thm
R8142:8156 Coq.ZArith.Zdigits <> binary_value_Sn thm
R8142:8156 Coq.ZArith.Zdigits <> binary_value_Sn thm
R8186:8197 Coq.ZArith.Zdigits <> Z_div2_value thm
R8186:8197 Coq.ZArith.Zdigits <> Z_div2_value thm
R8217:8221 Coq.ZArith.Zdigits <> Pdiv2 thm
R8217:8221 Coq.ZArith.Zdigits <> Pdiv2 thm
R8244:8262 Coq.ZArith.Zdigits <> Zdiv2_two_power_nat thm
R8244:8262 Coq.ZArith.Zdigits <> Zdiv2_two_power_nat thm
prf 8290:8308 <> Z_to_two_compl_to_Z
R8326:8328 Coq.Init.Datatypes <> nat ind
R8334:8334 Coq.Numbers.BinNums <> Z ind
R8370:8379 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8403:8406 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8445:8447 Coq.Init.Logic <> :type_scope:x_'='_x not
R8407:8421 Coq.ZArith.Zdigits <> two_compl_value thm
R8426:8439 Coq.ZArith.Zdigits <> Z_to_two_compl thm
R8443:8443 Coq.ZArith.Zdigits <> z var
R8441:8441 Coq.ZArith.Zdigits <> n var
R8423:8423 Coq.ZArith.Zdigits <> n var
R8448:8448 Coq.ZArith.Zdigits <> z var
R8382:8384 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R8381:8381 Coq.ZArith.Zdigits <> z var
R8385:8397 Coq.ZArith.Zpower <> two_power_nat def
R8399:8399 Coq.ZArith.Zdigits <> n var
R8346:8349 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R8345:8345 Coq.ZArith.Zdigits <> z var
R8350:8351 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R8352:8364 Coq.ZArith.Zpower <> two_power_nat def
R8366:8366 Coq.ZArith.Zdigits <> n var
R8501:8513 Coq.ZArith.Zpower <> two_power_nat def
R8516:8524 Coq.ZArith.Zpower <> shift_nat def
R8564:8567 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8555:8557 Coq.Init.Logic <> :type_scope:x_'='_x not
R8569:8571 Coq.Init.Logic <> :type_scope:x_'='_x not
R8564:8567 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8555:8557 Coq.Init.Logic <> :type_scope:x_'='_x not
R8569:8571 Coq.Init.Logic <> :type_scope:x_'='_x not
R8639:8657 Coq.ZArith.Zdigits <> Z_to_two_compl_Sn_z thm
R8639:8657 Coq.ZArith.Zdigits <> Z_to_two_compl_Sn_z thm
R8639:8657 Coq.ZArith.Zdigits <> Z_to_two_compl_Sn_z thm
R8672:8689 Coq.ZArith.Zdigits <> two_compl_value_Sn thm
R8672:8689 Coq.ZArith.Zdigits <> two_compl_value_Sn thm
R8672:8689 Coq.ZArith.Zdigits <> two_compl_value_Sn thm
R8725:8735 Coq.ZArith.Zdigits <> Zmod2_twice thm
R8725:8735 Coq.ZArith.Zdigits <> Zmod2_twice thm
R8759:8783 Coq.ZArith.Zdigits <> Zge_minus_two_power_nat_S thm
R8759:8783 Coq.ZArith.Zdigits <> Zge_minus_two_power_nat_S thm
R8803:8821 Coq.ZArith.Zdigits <> Zlt_two_power_nat_S thm
R8803:8821 Coq.ZArith.Zdigits <> Zlt_two_power_nat_S thm
R8842:8855 Coq.ZArith.Zdigits COHERENT_VALUE <> sec

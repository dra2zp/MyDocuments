DIGEST 2e7645838cbcf3a263995a7cc67c7af9
FCoq.Logic.WeakFan
R1048:1051 Coq.Lists.List <> <> lib
ind 1158:1175 <> inductively_barred
constr 1204:1206 <> now
constr 1244:1252 <> propagate
R1190:1193 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1181:1184 Coq.Init.Datatypes <> list ind
R1186:1189 Coq.Init.Datatypes <> bool ind
R1215:1218 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1219:1236 Coq.Logic.WeakFan <> inductively_barred ind
R1240:1240 Coq.Logic.WeakFan <> l var
R1214:1214 Coq.Logic.WeakFan <> l var
R1292:1299 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1331:1338 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1339:1356 Coq.Logic.WeakFan <> inductively_barred ind
R1360:1360 Coq.Logic.WeakFan <> l var
R1300:1317 Coq.Logic.WeakFan <> inductively_barred ind
R1327:1328 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1322:1326 Coq.Init.Datatypes <> false constr
R1329:1329 Coq.Logic.WeakFan <> l var
R1262:1279 Coq.Logic.WeakFan <> inductively_barred ind
R1288:1289 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1284:1287 Coq.Init.Datatypes <> true constr
R1290:1290 Coq.Logic.WeakFan <> l var
def 1455:1460 <> approx
R1467:1470 Coq.Init.Datatypes <> list ind
R1472:1475 Coq.Init.Datatypes <> bool ind
R1489:1489 Coq.Logic.WeakFan <> l var
R1500:1501 Coq.Lists.List ListNotations :list_scope:'['_']' not
R1506:1509 Coq.Init.Logic <> True ind
R1516:1517 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1533:1537 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1580:1580 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1523:1528 Coq.Logic.WeakFan <> approx def
R1532:1532 Coq.Logic.WeakFan <> l var
R1530:1530 Coq.Logic.WeakFan <> X var
R1566:1567 Coq.Init.Logic <> :type_scope:'~'_x not
R1568:1568 Coq.Logic.WeakFan <> X var
R1571:1576 Coq.Init.Datatypes <> length def
R1578:1578 Coq.Logic.WeakFan <> l var
R1548:1548 Coq.Logic.WeakFan <> X var
R1551:1556 Coq.Init.Datatypes <> length def
R1558:1558 Coq.Logic.WeakFan <> l var
def 1736:1741 <> barred
R1763:1766 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1760:1762 Coq.Init.Datatypes <> nat ind
R1774:1780 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1782:1783 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1794:1797 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1784:1789 Coq.Logic.WeakFan <> approx def
R1793:1793 Coq.Logic.WeakFan <> l var
R1791:1791 Coq.Logic.WeakFan <> X var
R1798:1798 Coq.Logic.WeakFan <> P var
R1800:1800 Coq.Logic.WeakFan <> l var
def 2063:2063 <> Y
R2070:2073 Coq.Init.Datatypes <> list ind
R2075:2078 Coq.Init.Datatypes <> bool ind
R2092:2092 Coq.Logic.WeakFan <> l var
R2103:2104 Coq.Lists.List ListNotations :list_scope:'['_']' not
R2109:2112 Coq.Init.Logic <> True ind
R2119:2120 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2137:2146 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2132:2132 Coq.Logic.WeakFan <> Y def
R2136:2136 Coq.Logic.WeakFan <> l var
R2134:2134 Coq.Logic.WeakFan <> P var
R2194:2195 Coq.Init.Logic <> :type_scope:'~'_x not
R2196:2213 Coq.Logic.WeakFan <> inductively_barred ind
R2223:2224 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2218:2222 Coq.Init.Datatypes <> false constr
R2225:2225 Coq.Logic.WeakFan <> l var
R2215:2215 Coq.Logic.WeakFan <> P var
R2157:2174 Coq.Logic.WeakFan <> inductively_barred ind
R2184:2185 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2179:2183 Coq.Init.Datatypes <> false constr
R2186:2186 Coq.Logic.WeakFan <> l var
R2176:2176 Coq.Logic.WeakFan <> P var
prf 2242:2249 <> Y_unique
R2290:2293 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2300:2303 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2310:2313 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2316:2318 Coq.Init.Logic <> :type_scope:x_'='_x not
R2314:2315 Coq.Logic.WeakFan <> l1 var
R2319:2320 Coq.Logic.WeakFan <> l2 var
R2304:2304 Coq.Logic.WeakFan <> Y def
R2308:2309 Coq.Logic.WeakFan <> l2 var
R2306:2306 Coq.Logic.WeakFan <> P var
R2294:2294 Coq.Logic.WeakFan <> Y def
R2298:2299 Coq.Logic.WeakFan <> l1 var
R2296:2296 Coq.Logic.WeakFan <> P var
R2278:2280 Coq.Init.Logic <> :type_scope:x_'='_x not
R2269:2274 Coq.Init.Datatypes <> length def
R2276:2277 Coq.Logic.WeakFan <> l1 var
R2281:2286 Coq.Init.Datatypes <> length def
R2288:2289 Coq.Logic.WeakFan <> l2 var
def 2619:2619 <> X
R2628:2634 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2636:2637 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2650:2653 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2646:2648 Coq.Init.Logic <> :type_scope:x_'='_x not
R2638:2643 Coq.Init.Datatypes <> length def
R2645:2645 Coq.Logic.WeakFan <> l var
R2649:2649 Coq.Logic.WeakFan <> n var
R2654:2654 Coq.Logic.WeakFan <> Y def
R2663:2664 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2659:2662 Coq.Init.Datatypes <> true constr
R2665:2665 Coq.Logic.WeakFan <> l var
R2656:2656 Coq.Logic.WeakFan <> P var
prf 2676:2683 <> Y_approx
R2713:2716 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2717:2717 Coq.Logic.WeakFan <> Y def
R2721:2721 Coq.Logic.WeakFan <> l var
R2719:2719 Coq.Logic.WeakFan <> P var
R2699:2704 Coq.Logic.WeakFan <> approx def
R2712:2712 Coq.Logic.WeakFan <> l var
R2707:2707 Coq.Logic.WeakFan <> X def
R2709:2709 Coq.Logic.WeakFan <> P var
R2800:2800 Coq.Logic.WeakFan <> X def
R2886:2893 Coq.Logic.WeakFan <> Y_unique thm
R2886:2893 Coq.Logic.WeakFan <> Y_unique thm
R2886:2893 Coq.Logic.WeakFan <> Y_unique thm
R2886:2893 Coq.Logic.WeakFan <> Y_unique thm
R2886:2893 Coq.Logic.WeakFan <> Y_unique thm
prf 2946:2959 <> WeakFanTheorem
R2981:2984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2985:3002 Coq.Logic.WeakFan <> inductively_barred ind
R3006:3007 Coq.Lists.List ListNotations :list_scope:'['_']' not
R3004:3004 Coq.Logic.WeakFan <> P var
R2973:2978 Coq.Logic.WeakFan <> barred def
R2980:2980 Coq.Logic.WeakFan <> P var
R3067:3074 Coq.Logic.WeakFan <> Y_approx thm
R3052:3052 Coq.Logic.WeakFan <> X def
R3052:3052 Coq.Logic.WeakFan <> X def
R3067:3074 Coq.Logic.WeakFan <> Y_approx thm
R3090:3107 Coq.Logic.WeakFan <> inductively_barred ind
R3125:3127 Coq.Logic.WeakFan <> now constr
R3090:3107 Coq.Logic.WeakFan <> inductively_barred ind
R3125:3127 Coq.Logic.WeakFan <> now constr
R3268:3268 Coq.Logic.WeakFan <> X def
R3300:3308 Coq.Logic.WeakFan <> propagate constr
R3300:3308 Coq.Logic.WeakFan <> propagate constr

DIGEST 8f65f7369b54833c88daddbc6547fd5c
FCoq.Logic.WKL
R1241:1247 Coq.Logic.WeakFan <> <> lib
R1249:1252 Coq.Lists.List <> <> lib
R1293:1297 Coq.omega.Omega <> <> lib
ind 1425:1436 <> is_path_from
constr 1492:1495 <> here
constr 1531:1539 <> next_left
constr 1611:1620 <> next_right
R1450:1453 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1441:1444 Coq.Init.Datatypes <> list ind
R1446:1449 Coq.Init.Datatypes <> bool ind
R1465:1468 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1478:1481 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1469:1472 Coq.Init.Datatypes <> list ind
R1474:1477 Coq.Init.Datatypes <> bool ind
R1462:1464 Coq.Init.Datatypes <> nat ind
R1506:1509 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1510:1521 Coq.Logic.WKL <> is_path_from ind
R1527:1527 Coq.Logic.WKL <> l var
R1501:1502 Coq.Init.Logic <> :type_scope:'~'_x not
R1505:1505 Coq.Logic.WKL <> l var
R1552:1555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1582:1585 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1586:1597 Coq.Logic.WKL <> is_path_from ind
R1607:1607 Coq.Logic.WKL <> l var
R1602:1602 Coq.Init.Datatypes <> S constr
R1604:1604 Coq.Logic.WKL <> n var
R1556:1567 Coq.Logic.WKL <> is_path_from ind
R1578:1579 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1574:1577 Coq.Init.Datatypes <> true constr
R1580:1580 Coq.Logic.WKL <> l var
R1571:1571 Coq.Logic.WKL <> n var
R1547:1548 Coq.Init.Logic <> :type_scope:'~'_x not
R1551:1551 Coq.Logic.WKL <> l var
R1633:1636 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1664:1667 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1668:1679 Coq.Logic.WKL <> is_path_from ind
R1689:1689 Coq.Logic.WKL <> l var
R1684:1684 Coq.Init.Datatypes <> S constr
R1686:1686 Coq.Logic.WKL <> n var
R1637:1648 Coq.Logic.WKL <> is_path_from ind
R1660:1661 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1655:1659 Coq.Init.Datatypes <> false constr
R1662:1662 Coq.Logic.WKL <> l var
R1652:1652 Coq.Logic.WKL <> n var
R1628:1629 Coq.Init.Logic <> :type_scope:'~'_x not
R1632:1632 Coq.Logic.WKL <> l var
prf 1805:1833 <> is_path_from_characterization
R1863:1867 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R1845:1856 Coq.Logic.WKL <> is_path_from ind
R1862:1862 Coq.Logic.WKL <> l var
R1860:1860 Coq.Logic.WKL <> n var
R1858:1858 Coq.Logic.WKL <> P var
R1868:1874 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1877:1878 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1892:1895 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1888:1890 Coq.Init.Logic <> :type_scope:x_'='_x not
R1879:1884 Coq.Init.Datatypes <> length def
R1886:1887 Coq.Logic.WKL <> l' var
R1891:1891 Coq.Logic.WKL <> n var
R1912:1915 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1916:1917 Coq.Init.Logic <> :type_scope:'~'_x not
R1918:1918 Coq.Logic.WKL <> P var
R1939:1942 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1921:1923 Coq.Lists.List <> rev def
R1926:1931 Coq.Lists.List <> firstn def
R1936:1937 Coq.Logic.WKL <> l' var
R1933:1934 Coq.Logic.WKL <> n' var
R1943:1943 Coq.Logic.WKL <> l var
R1909:1910 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R1907:1908 Coq.Logic.WKL <> n' var
R1911:1911 Coq.Logic.WKL <> n var
R2043:2044 Coq.Lists.List ListNotations :list_scope:'['_']' not
R2043:2044 Coq.Lists.List ListNotations :list_scope:'['_']' not
R2079:2087 Coq.Arith.Le <> le_n_0_eq thm
R2079:2087 Coq.Arith.Le <> le_n_0_eq thm
R2118:2121 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2114:2117 Coq.Init.Datatypes <> true constr
R2118:2121 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2114:2117 Coq.Init.Datatypes <> true constr
R2140:2143 Coq.Init.Peano <> eq_S def
R2140:2143 Coq.Init.Peano <> eq_S def
R2207:2215 Coq.Lists.List <> app_assoc thm
R2207:2215 Coq.Lists.List <> app_assoc thm
R2207:2215 Coq.Lists.List <> app_assoc thm
R2230:2235 Coq.Arith.Le <> le_S_n thm
R2230:2235 Coq.Arith.Le <> le_S_n thm
R2258:2261 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2253:2257 Coq.Init.Datatypes <> false constr
R2258:2261 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2253:2257 Coq.Init.Datatypes <> false constr
R2280:2283 Coq.Init.Peano <> eq_S def
R2280:2283 Coq.Init.Peano <> eq_S def
R2347:2355 Coq.Lists.List <> app_assoc thm
R2347:2355 Coq.Lists.List <> app_assoc thm
R2347:2355 Coq.Lists.List <> app_assoc thm
R2370:2375 Coq.Arith.Le <> le_S_n thm
R2370:2375 Coq.Arith.Le <> le_S_n thm
R2485:2490 Coq.Arith.Le <> le_0_n syndef
R2485:2490 Coq.Arith.Le <> le_0_n syndef
R2504:2512 Coq.Logic.WKL <> next_left constr
R2504:2512 Coq.Logic.WKL <> next_left constr
R2537:2542 Coq.Arith.Le <> le_0_n syndef
R2537:2542 Coq.Arith.Le <> le_0_n syndef
R2557:2562 Coq.Init.Datatypes <> length def
R2557:2562 Coq.Init.Datatypes <> length def
R2593:2598 Coq.Arith.Le <> le_n_S thm
R2593:2598 Coq.Arith.Le <> le_n_S thm
R2641:2649 Coq.Lists.List <> app_assoc thm
R2641:2649 Coq.Lists.List <> app_assoc thm
R2641:2649 Coq.Lists.List <> app_assoc thm
R2679:2688 Coq.Logic.WKL <> next_right constr
R2679:2688 Coq.Logic.WKL <> next_right constr
R2713:2718 Coq.Arith.Le <> le_0_n syndef
R2713:2718 Coq.Arith.Le <> le_0_n syndef
R2733:2738 Coq.Init.Datatypes <> length def
R2733:2738 Coq.Init.Datatypes <> length def
R2769:2774 Coq.Arith.Le <> le_n_S thm
R2769:2774 Coq.Arith.Le <> le_n_S thm
R2817:2825 Coq.Lists.List <> app_assoc thm
R2817:2825 Coq.Lists.List <> app_assoc thm
R2817:2825 Coq.Lists.List <> app_assoc thm
def 2978:2990 <> infinite_from
R3004:3007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2995:2998 Coq.Init.Datatypes <> list ind
R3000:3003 Coq.Init.Datatypes <> bool ind
R3029:3040 Coq.Logic.WKL <> is_path_from ind
R3046:3046 Coq.Logic.WKL <> l var
R3044:3044 Coq.Logic.WKL <> n var
R3042:3042 Coq.Logic.WKL <> P var
def 3198:3214 <> has_infinite_path
R3228:3231 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3219:3222 Coq.Init.Datatypes <> list ind
R3224:3227 Coq.Init.Datatypes <> bool ind
R3243:3250 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3264:3266 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3256:3259 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3253:3255 Coq.Init.Datatypes <> nat ind
R3287:3290 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3291:3292 Coq.Init.Logic <> :type_scope:'~'_x not
R3293:3293 Coq.Logic.WKL <> P var
R3295:3295 Coq.Logic.WKL <> l var
R3277:3282 Coq.Logic.WeakFan <> approx def
R3286:3286 Coq.Logic.WKL <> l var
R3284:3284 Coq.Logic.WKL <> X var
ind 3425:3445 <> inductively_barred_at
constr 3501:3506 <> now_at
constr 3551:3562 <> propagate_at
R3459:3462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3450:3453 Coq.Init.Datatypes <> list ind
R3455:3458 Coq.Init.Datatypes <> bool ind
R3474:3477 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3487:3490 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3478:3481 Coq.Init.Datatypes <> list ind
R3483:3486 Coq.Init.Datatypes <> bool ind
R3471:3473 Coq.Init.Datatypes <> nat ind
R3517:3520 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3521:3541 Coq.Logic.WKL <> inductively_barred_at ind
R3547:3547 Coq.Logic.WKL <> l var
R3545:3545 Coq.Logic.WKL <> n var
R3516:3516 Coq.Logic.WKL <> l var
R3609:3616 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3653:3660 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3661:3681 Coq.Logic.WKL <> inductively_barred_at ind
R3691:3691 Coq.Logic.WKL <> l var
R3686:3686 Coq.Init.Datatypes <> S constr
R3688:3688 Coq.Logic.WKL <> n var
R3617:3637 Coq.Logic.WKL <> inductively_barred_at ind
R3649:3650 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3644:3648 Coq.Init.Datatypes <> false constr
R3651:3651 Coq.Logic.WKL <> l var
R3641:3641 Coq.Logic.WKL <> n var
R3574:3594 Coq.Logic.WKL <> inductively_barred_at ind
R3605:3606 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3601:3604 Coq.Init.Datatypes <> true constr
R3607:3607 Coq.Logic.WKL <> l var
R3598:3598 Coq.Logic.WKL <> n var
def 3952:3952 <> Y
R3959:3962 Coq.Init.Datatypes <> list ind
R3964:3967 Coq.Init.Datatypes <> bool ind
R3981:3981 Coq.Logic.WKL <> l var
R3992:3993 Coq.Lists.List ListNotations :list_scope:'['_']' not
R3998:4001 Coq.Init.Logic <> True ind
R4008:4009 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R4026:4035 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4021:4021 Coq.Logic.WKL <> Y def
R4025:4025 Coq.Logic.WKL <> l var
R4023:4023 Coq.Logic.WKL <> P var
R4098:4110 Coq.Logic.WKL <> infinite_from def
R4120:4121 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R4115:4119 Coq.Init.Datatypes <> false constr
R4122:4122 Coq.Logic.WKL <> l var
R4112:4112 Coq.Logic.WKL <> P var
R4046:4052 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4054:4055 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4056:4076 Coq.Logic.WKL <> inductively_barred_at ind
R4088:4089 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R4083:4087 Coq.Init.Datatypes <> false constr
R4090:4090 Coq.Logic.WKL <> l var
R4080:4080 Coq.Logic.WKL <> n var
R4078:4078 Coq.Logic.WKL <> P var
R4148:4158 Coq.Arith.Compare_dec <> <> lib
R4160:4161 Coq.Arith.Le <> <> lib
R4163:4164 Coq.Arith.Lt <> <> lib
prf 4174:4194 <> is_path_from_restrict
R4222:4227 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4247:4250 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4251:4262 Coq.Logic.WKL <> is_path_from ind
R4268:4268 Coq.Logic.WKL <> l var
R4266:4266 Coq.Logic.WKL <> n var
R4264:4264 Coq.Logic.WKL <> P var
R4228:4239 Coq.Logic.WKL <> is_path_from ind
R4246:4246 Coq.Logic.WKL <> l var
R4243:4244 Coq.Logic.WKL <> n' var
R4241:4241 Coq.Logic.WKL <> P var
R4216:4219 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R4215:4215 Coq.Logic.WKL <> n var
R4220:4221 Coq.Logic.WKL <> n' var
R4342:4350 Coq.Arith.Le <> le_n_0_eq thm
R4342:4350 Coq.Arith.Le <> le_n_0_eq thm
R4372:4375 Coq.Logic.WKL <> here constr
R4372:4375 Coq.Logic.WKL <> here constr
R4414:4417 Coq.Logic.WKL <> here constr
R4414:4417 Coq.Logic.WKL <> here constr
R4442:4450 Coq.Logic.WKL <> next_left constr
R4464:4469 Coq.Arith.Le <> le_S_n thm
R4442:4450 Coq.Logic.WKL <> next_left constr
R4464:4469 Coq.Arith.Le <> le_S_n thm
R4464:4469 Coq.Arith.Le <> le_S_n thm
R4496:4499 Coq.Logic.WKL <> here constr
R4496:4499 Coq.Logic.WKL <> here constr
R4524:4533 Coq.Logic.WKL <> next_right constr
R4547:4552 Coq.Arith.Le <> le_S_n thm
R4524:4533 Coq.Logic.WKL <> next_right constr
R4547:4552 Coq.Arith.Le <> le_S_n thm
R4547:4552 Coq.Arith.Le <> le_S_n thm
prf 4567:4596 <> inductively_barred_at_monotone
R4624:4629 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4658:4661 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4662:4682 Coq.Logic.WKL <> inductively_barred_at ind
R4688:4688 Coq.Logic.WKL <> l var
R4686:4686 Coq.Logic.WKL <> n var
R4684:4684 Coq.Logic.WKL <> P var
R4630:4650 Coq.Logic.WKL <> inductively_barred_at ind
R4657:4657 Coq.Logic.WKL <> l var
R4654:4655 Coq.Logic.WKL <> n' var
R4652:4652 Coq.Logic.WKL <> P var
R4619:4622 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R4617:4618 Coq.Logic.WKL <> n' var
R4623:4623 Coq.Logic.WKL <> n var
R4765:4770 Coq.Logic.WKL <> now_at constr
R4765:4770 Coq.Logic.WKL <> now_at constr
R4800:4806 Coq.Arith.Le <> le_Sn_0 syndef
R4800:4806 Coq.Arith.Le <> le_Sn_0 syndef
R4841:4846 Coq.Arith.Le <> le_S_n thm
R4841:4846 Coq.Arith.Le <> le_S_n thm
R4864:4875 Coq.Logic.WKL <> propagate_at constr
R4864:4875 Coq.Logic.WKL <> propagate_at constr
def 4901:4911 <> demorgan_or
R4925:4928 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4916:4919 Coq.Init.Datatypes <> list ind
R4921:4924 Coq.Init.Datatypes <> bool ind
R4958:4961 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4967:4970 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4962:4963 Coq.Init.Logic <> :type_scope:'~'_x not
R4964:4964 Coq.Logic.WKL <> P var
R4966:4966 Coq.Logic.WKL <> l var
R4971:4972 Coq.Init.Logic <> :type_scope:'~'_x not
R4973:4973 Coq.Logic.WKL <> P var
R4975:4976 Coq.Logic.WKL <> l' var
R4943:4945 Coq.Init.Logic <> :type_scope:'~'_x not
R4957:4957 Coq.Init.Logic <> :type_scope:'~'_x not
R4949:4952 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4946:4946 Coq.Logic.WKL <> P var
R4948:4948 Coq.Logic.WKL <> l var
R4953:4953 Coq.Logic.WKL <> P var
R4955:4956 Coq.Logic.WKL <> l' var
def 4991:5020 <> demorgan_inductively_barred_at
R5041:5051 Coq.Logic.WKL <> demorgan_or def
R5097:5098 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5092:5096 Coq.Init.Datatypes <> false constr
R5099:5099 Coq.Logic.WKL <> l var
R5086:5087 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5082:5085 Coq.Init.Datatypes <> true constr
R5088:5088 Coq.Logic.WKL <> l var
R5054:5074 Coq.Logic.WKL <> inductively_barred_at ind
R5078:5078 Coq.Logic.WKL <> n var
R5076:5076 Coq.Logic.WKL <> P var
prf 5110:5147 <> inductively_barred_at_imp_is_path_from
R5195:5198 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5242:5245 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5246:5257 Coq.Logic.WKL <> is_path_from ind
R5263:5263 Coq.Logic.WKL <> l var
R5261:5261 Coq.Logic.WKL <> n var
R5259:5259 Coq.Logic.WKL <> P var
R5213:5214 Coq.Init.Logic <> :type_scope:'~'_x not
R5215:5235 Coq.Logic.WKL <> inductively_barred_at ind
R5241:5241 Coq.Logic.WKL <> l var
R5239:5239 Coq.Logic.WKL <> n var
R5237:5237 Coq.Logic.WKL <> P var
R5163:5192 Coq.Logic.WKL <> demorgan_inductively_barred_at def
R5194:5194 Coq.Logic.WKL <> P var
R5326:5329 Coq.Logic.WKL <> here constr
R5326:5329 Coq.Logic.WKL <> here constr
R5358:5363 Coq.Logic.WKL <> now_at constr
R5358:5363 Coq.Logic.WKL <> now_at constr
R5385:5387 Coq.Init.Logic <> :type_scope:'~'_x not
R5463:5463 Coq.Init.Logic <> :type_scope:'~'_x not
R5423:5426 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5388:5408 Coq.Logic.WKL <> inductively_barred_at ind
R5419:5420 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5415:5418 Coq.Init.Datatypes <> true constr
R5427:5447 Coq.Logic.WKL <> inductively_barred_at ind
R5459:5460 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5454:5458 Coq.Init.Datatypes <> false constr
R5385:5387 Coq.Init.Logic <> :type_scope:'~'_x not
R5463:5463 Coq.Init.Logic <> :type_scope:'~'_x not
R5423:5426 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5388:5408 Coq.Logic.WKL <> inductively_barred_at ind
R5419:5420 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5415:5418 Coq.Init.Datatypes <> true constr
R5427:5447 Coq.Logic.WKL <> inductively_barred_at ind
R5459:5460 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5454:5458 Coq.Init.Datatypes <> false constr
R5525:5526 Coq.Init.Logic <> :type_scope:'~'_x not
R5525:5526 Coq.Init.Logic <> :type_scope:'~'_x not
R5639:5650 Coq.Logic.WKL <> is_path_from ind
R5639:5650 Coq.Logic.WKL <> is_path_from ind
R5639:5650 Coq.Logic.WKL <> is_path_from ind
prf 5665:5702 <> is_path_from_imp_inductively_barred_at
R5741:5744 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5772:5775 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5776:5780 Coq.Init.Logic <> False ind
R5745:5765 Coq.Logic.WKL <> inductively_barred_at ind
R5771:5771 Coq.Logic.WKL <> l var
R5769:5769 Coq.Logic.WKL <> n var
R5767:5767 Coq.Logic.WKL <> P var
R5723:5734 Coq.Logic.WKL <> is_path_from ind
R5740:5740 Coq.Logic.WKL <> l var
R5738:5738 Coq.Logic.WKL <> n var
R5736:5736 Coq.Logic.WKL <> P var
R5961:5962 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5957:5960 Coq.Init.Datatypes <> true constr
R5961:5962 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5957:5960 Coq.Init.Datatypes <> true constr
R6036:6037 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6031:6035 Coq.Init.Datatypes <> false constr
R6036:6037 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6031:6035 Coq.Init.Datatypes <> false constr
prf 6060:6073 <> find_left_path
R6115:6118 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6157:6160 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6161:6172 Coq.Logic.WKL <> is_path_from ind
R6183:6186 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6179:6182 Coq.Init.Datatypes <> true constr
R6187:6187 Coq.Logic.WKL <> l var
R6176:6176 Coq.Logic.WKL <> n var
R6174:6174 Coq.Logic.WKL <> P var
R6119:6139 Coq.Logic.WKL <> inductively_barred_at ind
R6151:6154 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6146:6150 Coq.Init.Datatypes <> false constr
R6155:6155 Coq.Logic.WKL <> l var
R6143:6143 Coq.Logic.WKL <> n var
R6141:6141 Coq.Logic.WKL <> P var
R6093:6104 Coq.Logic.WKL <> is_path_from ind
R6114:6114 Coq.Logic.WKL <> l var
R6109:6109 Coq.Init.Datatypes <> S constr
R6111:6111 Coq.Logic.WKL <> n var
R6106:6106 Coq.Logic.WKL <> P var
R6257:6294 Coq.Logic.WKL <> is_path_from_imp_inductively_barred_at thm
R6257:6294 Coq.Logic.WKL <> is_path_from_imp_inductively_barred_at thm
prf 6309:6316 <> Y_unique
R6362:6367 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6403:6406 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6413:6416 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6423:6426 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6429:6431 Coq.Init.Logic <> :type_scope:x_'='_x not
R6427:6428 Coq.Logic.WKL <> l1 var
R6432:6433 Coq.Logic.WKL <> l2 var
R6417:6417 Coq.Logic.WKL <> Y def
R6421:6422 Coq.Logic.WKL <> l2 var
R6419:6419 Coq.Logic.WKL <> P var
R6407:6407 Coq.Logic.WKL <> Y def
R6411:6412 Coq.Logic.WKL <> l1 var
R6409:6409 Coq.Logic.WKL <> P var
R6391:6393 Coq.Init.Logic <> :type_scope:x_'='_x not
R6382:6387 Coq.Init.Datatypes <> length def
R6389:6390 Coq.Logic.WKL <> l1 var
R6394:6399 Coq.Init.Datatypes <> length def
R6401:6402 Coq.Logic.WKL <> l2 var
R6330:6359 Coq.Logic.WKL <> demorgan_inductively_barred_at def
R6361:6361 Coq.Logic.WKL <> P var
R6713:6750 Coq.Logic.WKL <> is_path_from_imp_inductively_barred_at thm
R6713:6750 Coq.Logic.WKL <> is_path_from_imp_inductively_barred_at thm
R6815:6852 Coq.Logic.WKL <> is_path_from_imp_inductively_barred_at thm
R6815:6852 Coq.Logic.WKL <> is_path_from_imp_inductively_barred_at thm
def 6944:6944 <> X
R6953:6959 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6961:6962 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6975:6978 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6971:6973 Coq.Init.Logic <> :type_scope:x_'='_x not
R6963:6968 Coq.Init.Datatypes <> length def
R6970:6970 Coq.Logic.WKL <> l var
R6974:6974 Coq.Logic.WKL <> n var
R6979:6979 Coq.Logic.WKL <> Y def
R6988:6989 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6984:6987 Coq.Init.Datatypes <> true constr
R6990:6990 Coq.Logic.WKL <> l var
R6981:6981 Coq.Logic.WKL <> P var
prf 7001:7008 <> Y_approx
R7054:7059 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7084:7087 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7088:7088 Coq.Logic.WKL <> Y def
R7092:7092 Coq.Logic.WKL <> l var
R7090:7090 Coq.Logic.WKL <> P var
R7070:7075 Coq.Logic.WeakFan <> approx def
R7083:7083 Coq.Logic.WKL <> l var
R7078:7078 Coq.Logic.WKL <> X def
R7080:7080 Coq.Logic.WKL <> P var
R7022:7051 Coq.Logic.WKL <> demorgan_inductively_barred_at def
R7053:7053 Coq.Logic.WKL <> P var
R7190:7190 Coq.Logic.WKL <> X def
R7276:7283 Coq.Logic.WKL <> Y_unique thm
R7276:7283 Coq.Logic.WKL <> Y_unique thm
R7276:7283 Coq.Logic.WKL <> Y_unique thm
R7276:7283 Coq.Logic.WKL <> Y_unique thm
R7276:7283 Coq.Logic.WKL <> Y_unique thm
R7334:7371 Coq.Logic.WKL <> inductively_barred_at_imp_is_path_from thm
R7334:7371 Coq.Logic.WKL <> inductively_barred_at_imp_is_path_from thm
prf 7439:7456 <> PreWeakKonigsLemma
R7504:7507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7526:7529 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7530:7546 Coq.Logic.WKL <> has_infinite_path def
R7548:7548 Coq.Logic.WKL <> P var
R7508:7520 Coq.Logic.WKL <> infinite_from def
R7524:7525 Coq.Lists.List ListNotations :list_scope:'['_']' not
R7522:7522 Coq.Logic.WKL <> P var
R7472:7501 Coq.Logic.WKL <> demorgan_inductively_barred_at def
R7503:7503 Coq.Logic.WKL <> P var
R7590:7590 Coq.Logic.WKL <> X def
R7590:7590 Coq.Logic.WKL <> X def
R7617:7629 Coq.Logic.WKL <> infinite_from def
R7617:7629 Coq.Logic.WKL <> infinite_from def
R7764:7771 Coq.Logic.WKL <> Y_approx thm
R7764:7771 Coq.Logic.WKL <> Y_approx thm
R7869:7876 Coq.Logic.WKL <> Y_unique thm
R7869:7876 Coq.Logic.WKL <> Y_unique thm
R7869:7876 Coq.Logic.WKL <> Y_unique thm
R7930:7938 Coq.Arith.Compare_dec <> le_lt_dec def
R7930:7938 Coq.Arith.Compare_dec <> le_lt_dec def
R7986:7986 Coq.Init.Datatypes <> S constr
R7986:7986 Coq.Init.Datatypes <> S constr
R8008:8028 Coq.Logic.WKL <> is_path_from_restrict thm
R8008:8028 Coq.Logic.WKL <> is_path_from_restrict thm
R8068:8081 Coq.Logic.WKL <> find_left_path thm
R8068:8081 Coq.Logic.WKL <> find_left_path thm
R8119:8119 Coq.Init.Datatypes <> S constr
R8119:8119 Coq.Init.Datatypes <> S constr
R8140:8169 Coq.Logic.WKL <> inductively_barred_at_monotone thm
R8200:8209 Coq.Arith.Lt <> lt_le_weak syndef
R8140:8169 Coq.Logic.WKL <> inductively_barred_at_monotone thm
R8200:8209 Coq.Arith.Lt <> lt_le_weak syndef
R8232:8245 Coq.Logic.WKL <> find_left_path thm
R8232:8245 Coq.Logic.WKL <> find_left_path thm
R8269:8306 Coq.Logic.WKL <> inductively_barred_at_imp_is_path_from thm
R8269:8306 Coq.Logic.WKL <> inductively_barred_at_imp_is_path_from thm
prf 8378:8408 <> inductively_barred_at_decidable
R8424:8424 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8447:8451 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8491:8494 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8464:8484 Coq.Logic.WKL <> inductively_barred_at ind
R8490:8490 Coq.Logic.WKL <> l var
R8488:8488 Coq.Logic.WKL <> n var
R8486:8486 Coq.Logic.WKL <> P var
R8495:8496 Coq.Init.Logic <> :type_scope:'~'_x not
R8497:8517 Coq.Logic.WKL <> inductively_barred_at ind
R8523:8523 Coq.Logic.WKL <> l var
R8521:8521 Coq.Logic.WKL <> n var
R8519:8519 Coq.Logic.WKL <> P var
R8438:8441 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8435:8435 Coq.Logic.WKL <> P var
R8437:8437 Coq.Logic.WKL <> l var
R8442:8443 Coq.Init.Logic <> :type_scope:'~'_x not
R8444:8444 Coq.Logic.WKL <> P var
R8446:8446 Coq.Logic.WKL <> l var
R8602:8607 Coq.Logic.WKL <> now_at constr
R8602:8607 Coq.Logic.WKL <> now_at constr
R8678:8683 Coq.Logic.WKL <> now_at constr
R8678:8683 Coq.Logic.WKL <> now_at constr
R8712:8713 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8708:8711 Coq.Init.Datatypes <> true constr
R8712:8713 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8708:8711 Coq.Init.Datatypes <> true constr
R8745:8746 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8740:8744 Coq.Init.Datatypes <> false constr
R8745:8746 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8740:8744 Coq.Init.Datatypes <> false constr
R8772:8783 Coq.Logic.WKL <> propagate_at constr
R8772:8783 Coq.Logic.WKL <> propagate_at constr
prf 8892:8935 <> inductively_barred_at_is_path_from_decidable
R8951:8951 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8974:8978 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8979:9008 Coq.Logic.WKL <> demorgan_inductively_barred_at def
R9010:9010 Coq.Logic.WKL <> P var
R8965:8968 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8962:8962 Coq.Logic.WKL <> P var
R8964:8964 Coq.Logic.WKL <> l var
R8969:8970 Coq.Init.Logic <> :type_scope:'~'_x not
R8971:8971 Coq.Logic.WKL <> P var
R8973:8973 Coq.Logic.WKL <> l var
R9051:9081 Coq.Logic.WKL <> inductively_barred_at_decidable thm
R9097:9098 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9093:9096 Coq.Init.Datatypes <> true constr
R9051:9081 Coq.Logic.WKL <> inductively_barred_at_decidable thm
R9097:9098 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9093:9096 Coq.Init.Datatypes <> true constr
R9116:9146 Coq.Logic.WKL <> inductively_barred_at_decidable thm
R9163:9164 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9158:9162 Coq.Init.Datatypes <> false constr
R9116:9146 Coq.Logic.WKL <> inductively_barred_at_decidable thm
R9163:9164 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9158:9162 Coq.Init.Datatypes <> false constr
prf 9237:9251 <> WeakKonigsLemma
R9265:9265 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9288:9294 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9313:9316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9317:9333 Coq.Logic.WKL <> has_infinite_path def
R9335:9335 Coq.Logic.WKL <> P var
R9295:9307 Coq.Logic.WKL <> infinite_from def
R9311:9312 Coq.Lists.List ListNotations :list_scope:'['_']' not
R9309:9309 Coq.Logic.WKL <> P var
R9279:9282 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9276:9276 Coq.Logic.WKL <> P var
R9278:9278 Coq.Logic.WKL <> l var
R9283:9284 Coq.Init.Logic <> :type_scope:'~'_x not
R9285:9285 Coq.Logic.WKL <> P var
R9287:9287 Coq.Logic.WKL <> l var
R9371:9414 Coq.Logic.WKL <> inductively_barred_at_is_path_from_decidable thm
R9371:9414 Coq.Logic.WKL <> inductively_barred_at_is_path_from_decidable thm
R9431:9448 Coq.Logic.WKL <> PreWeakKonigsLemma thm
R9431:9448 Coq.Logic.WKL <> PreWeakKonigsLemma thm
